/*******************************************************************************
 * Copyright 2019 FUJITSU LIMITED 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/
    void gen0()
    {
VRegDElem v7d_1 = v7.d2[1];
VRegDElem v0d_1 = v0.d2[1];
VRegDElem v1d_1 = v1.d2[1];
VRegDElem v2d_1 = v2.d2[1];
VRegDElem v4d_1 = v4.d2[1];
VRegDElem v8d_1 = v8.d2[1];
VRegDElem v16d_1 = v16.d2[1];
VRegDElem v31d_1 = v31.d2[1];
//DataProcFp_FloatingPointMoveRegister0
fmov(h7, h7); dump();
fmov(h0, h7); dump();
fmov(h1, h7); dump();
fmov(h2, h7); dump();
fmov(h4, h7); dump();
fmov(h8, h7); dump();
fmov(h16, h7); dump();
fmov(h31, h7); dump();
fmov(h7, h7); dump();
fmov(h7, h0); dump();
fmov(h7, h1); dump();
fmov(h7, h2); dump();
fmov(h7, h4); dump();
fmov(h7, h8); dump();
fmov(h7, h16); dump();
fmov(h7, h31); dump();
//DataProcFp_FloatingPointMoveRegister0
fmov(s7, s7); dump();
fmov(s0, s7); dump();
fmov(s1, s7); dump();
fmov(s2, s7); dump();
fmov(s4, s7); dump();
fmov(s8, s7); dump();
fmov(s16, s7); dump();
fmov(s31, s7); dump();
fmov(s7, s7); dump();
fmov(s7, s0); dump();
fmov(s7, s1); dump();
fmov(s7, s2); dump();
fmov(s7, s4); dump();
fmov(s7, s8); dump();
fmov(s7, s16); dump();
fmov(s7, s31); dump();
//DataProcFp_FloatingPointMoveRegister0
fmov(d7, d7); dump();
fmov(d0, d7); dump();
fmov(d1, d7); dump();
fmov(d2, d7); dump();
fmov(d4, d7); dump();
fmov(d8, d7); dump();
fmov(d16, d7); dump();
fmov(d31, d7); dump();
fmov(d7, d7); dump();
fmov(d7, d0); dump();
fmov(d7, d1); dump();
fmov(d7, d2); dump();
fmov(d7, d4); dump();
fmov(d7, d8); dump();
fmov(d7, d16); dump();
fmov(d7, d31); dump();
//DataProcFp_FloatingPointMoveRegister1
fmov(w0, h7); dump();
fmov(w1, h7); dump();
fmov(w2, h7); dump();
fmov(w4, h7); dump();
fmov(w8, h7); dump();
fmov(w16, h7); dump();
fmov(w30, h7); dump();
fmov(w0, h7); dump();
fmov(w0, h0); dump();
fmov(w0, h1); dump();
fmov(w0, h2); dump();
fmov(w0, h4); dump();
fmov(w0, h8); dump();
fmov(w0, h16); dump();
fmov(w0, h31); dump();
//DataProcFp_FloatingPointMoveRegister1
fmov(x0, h7); dump();
fmov(x1, h7); dump();
fmov(x2, h7); dump();
fmov(x4, h7); dump();
fmov(x8, h7); dump();
fmov(x16, h7); dump();
fmov(x30, h7); dump();
fmov(x0, h7); dump();
fmov(x0, h0); dump();
fmov(x0, h1); dump();
fmov(x0, h2); dump();
fmov(x0, h4); dump();
fmov(x0, h8); dump();
fmov(x0, h16); dump();
fmov(x0, h31); dump();
//DataProcFp_FloatingPointMoveRegister1
fmov(h7, w0); dump();
fmov(h0, w0); dump();
fmov(h1, w0); dump();
fmov(h2, w0); dump();
fmov(h4, w0); dump();
fmov(h8, w0); dump();
fmov(h16, w0); dump();
fmov(h31, w0); dump();
fmov(h7, w0); dump();
fmov(h7, w1); dump();
fmov(h7, w2); dump();
fmov(h7, w4); dump();
fmov(h7, w8); dump();
fmov(h7, w16); dump();
fmov(h7, w30); dump();
//DataProcFp_FloatingPointMoveRegister1
fmov(s7, w0); dump();
fmov(s0, w0); dump();
fmov(s1, w0); dump();
fmov(s2, w0); dump();
fmov(s4, w0); dump();
fmov(s8, w0); dump();
fmov(s16, w0); dump();
fmov(s31, w0); dump();
fmov(s7, w0); dump();
fmov(s7, w1); dump();
fmov(s7, w2); dump();
fmov(s7, w4); dump();
fmov(s7, w8); dump();
fmov(s7, w16); dump();
fmov(s7, w30); dump();
//DataProcFp_FloatingPointMoveRegister1
fmov(w0, s7); dump();
fmov(w1, s7); dump();
fmov(w2, s7); dump();
fmov(w4, s7); dump();
fmov(w8, s7); dump();
fmov(w16, s7); dump();
fmov(w30, s7); dump();
fmov(w0, s7); dump();
fmov(w0, s0); dump();
fmov(w0, s1); dump();
fmov(w0, s2); dump();
fmov(w0, s4); dump();
fmov(w0, s8); dump();
fmov(w0, s16); dump();
fmov(w0, s31); dump();
//DataProcFp_FloatingPointMoveRegister1
fmov(h7, x0); dump();
fmov(h0, x0); dump();
fmov(h1, x0); dump();
fmov(h2, x0); dump();
fmov(h4, x0); dump();
fmov(h8, x0); dump();
fmov(h16, x0); dump();
fmov(h31, x0); dump();
fmov(h7, x0); dump();
fmov(h7, x1); dump();
fmov(h7, x2); dump();
fmov(h7, x4); dump();
fmov(h7, x8); dump();
fmov(h7, x16); dump();
fmov(h7, x30); dump();
//DataProcFp_FloatingPointMoveRegister1
fmov(d7, x0); dump();
fmov(d0, x0); dump();
fmov(d1, x0); dump();
fmov(d2, x0); dump();
fmov(d4, x0); dump();
fmov(d8, x0); dump();
fmov(d16, x0); dump();
fmov(d31, x0); dump();
fmov(d7, x0); dump();
fmov(d7, x1); dump();
fmov(d7, x2); dump();
fmov(d7, x4); dump();
fmov(d7, x8); dump();
fmov(d7, x16); dump();
fmov(d7, x30); dump();
//DataProcFp_FloatingPointMoveRegister1
fmov(v7.d2[1], x0); dump();
fmov(v0.d2[1], x0); dump();
fmov(v1.d2[1], x0); dump();
fmov(v2.d2[1], x0); dump();
fmov(v4.d2[1], x0); dump();
fmov(v8.d2[1], x0); dump();
fmov(v16.d2[1], x0); dump();
fmov(v31.d2[1], x0); dump();
fmov(v7d_1, x0); dump();
fmov(v0d_1, x0); dump();
fmov(v1d_1, x0); dump();
fmov(v2d_1, x0); dump();
fmov(v4d_1, x0); dump();
fmov(v8d_1, x0); dump();
fmov(v16d_1, x0); dump();
fmov(v31d_1, x0); dump();
fmov(v7.d2[1], x0); dump();
fmov(v7.d2[1], x1); dump();
fmov(v7.d2[1], x2); dump();
fmov(v7.d2[1], x4); dump();
fmov(v7.d2[1], x8); dump();
fmov(v7.d2[1], x16); dump();
fmov(v7.d2[1], x30); dump();
//DataProcFp_FloatingPointMoveRegister2
fmov(x0, d7); dump();
fmov(x1, d7); dump();
fmov(x2, d7); dump();
fmov(x4, d7); dump();
fmov(x8, d7); dump();
fmov(x16, d7); dump();
fmov(x30, d7); dump();
fmov(x0, d7); dump();
fmov(x0, d0); dump();
fmov(x0, d1); dump();
fmov(x0, d2); dump();
fmov(x0, d4); dump();
fmov(x0, d8); dump();
fmov(x0, d16); dump();
fmov(x0, d31); dump();
//DataProcFp_FloatingPointMoveRegister2
fmov(x0, v7.d2[1]); dump();
fmov(x1, v7.d2[1]); dump();
fmov(x2, v7.d2[1]); dump();
fmov(x4, v7.d2[1]); dump();
fmov(x8, v7.d2[1]); dump();
fmov(x16, v7.d2[1]); dump();
fmov(x30, v7.d2[1]); dump();
fmov(x0, v7.d2[1]); dump();
fmov(x0, v0.d2[1]); dump();
fmov(x0, v1.d2[1]); dump();
fmov(x0, v2.d2[1]); dump();
fmov(x0, v4.d2[1]); dump();
fmov(x0, v8.d2[1]); dump();
fmov(x0, v16.d2[1]); dump();
fmov(x0, v31.d2[1]); dump();
fmov(x0, v7d_1); dump();
fmov(x0, v0d_1); dump();
fmov(x0, v1d_1); dump();
fmov(x0, v2d_1); dump();
fmov(x0, v4d_1); dump();
fmov(x0, v8d_1); dump();
fmov(x0, v16d_1); dump();
fmov(x0, v31d_1); dump();
//DataProcFp_FloatingPointMoveImmediate0
fmov(h7, 2.0); dump();
fmov(h0, 2.0); dump();
fmov(h1, 2.0); dump();
fmov(h2, 2.0); dump();
fmov(h4, 2.0); dump();
fmov(h8, 2.0); dump();
fmov(h16, 2.0); dump();
fmov(h31, 2.0); dump();
fmov(h7, 2.0); dump();
fmov(h7, 4.0); dump();
fmov(h7, 8.0); dump();
fmov(h7, 16.0); dump();
fmov(h7, 0.125); dump();
fmov(h7, 0.25); dump();
fmov(h7, 0.5); dump();
fmov(h7, 1.0); dump();
fmov(h7, 2.125); dump();
fmov(h7, 4.5); dump();
fmov(h7, 9.5); dump();
fmov(h7, 20.0); dump();
fmov(h7, 0.1640625); dump();
fmov(h7, 0.34375); dump();
fmov(h7, 0.71875); dump();
fmov(h7, 1.5); dump();
fmov(h7, 0.78125); dump();
fmov(h7, 0.40625); dump();
fmov(h7, 0.2109375); dump();
fmov(h7, 28.0); dump();
fmov(h7, 14.5); dump();
fmov(h7, 7.5); dump();
fmov(h7, 3.875); dump();
fmov(h7, 1.9375); dump();
//DataProcFp_FloatingPointMoveImmediate0
fmov(s7, 2.0); dump();
fmov(s0, 2.0); dump();
fmov(s1, 2.0); dump();
fmov(s2, 2.0); dump();
fmov(s4, 2.0); dump();
fmov(s8, 2.0); dump();
fmov(s16, 2.0); dump();
fmov(s31, 2.0); dump();
fmov(s7, 2.0); dump();
fmov(s7, 4.0); dump();
fmov(s7, 8.0); dump();
fmov(s7, 16.0); dump();
fmov(s7, 0.125); dump();
fmov(s7, 0.25); dump();
fmov(s7, 0.5); dump();
fmov(s7, 1.0); dump();
fmov(s7, 2.125); dump();
fmov(s7, 4.5); dump();
fmov(s7, 9.5); dump();
fmov(s7, 20.0); dump();
fmov(s7, 0.1640625); dump();
fmov(s7, 0.34375); dump();
fmov(s7, 0.71875); dump();
fmov(s7, 1.5); dump();
fmov(s7, 0.78125); dump();
fmov(s7, 0.40625); dump();
fmov(s7, 0.2109375); dump();
fmov(s7, 28.0); dump();
fmov(s7, 14.5); dump();
fmov(s7, 7.5); dump();
fmov(s7, 3.875); dump();
fmov(s7, 1.9375); dump();
//DataProcFp_FloatingPointMoveImmediate0
fmov(d7, 2.0); dump();
fmov(d0, 2.0); dump();
fmov(d1, 2.0); dump();
fmov(d2, 2.0); dump();
fmov(d4, 2.0); dump();
fmov(d8, 2.0); dump();
fmov(d16, 2.0); dump();
fmov(d31, 2.0); dump();
fmov(d7, 2.0); dump();
fmov(d7, 4.0); dump();
fmov(d7, 8.0); dump();
fmov(d7, 16.0); dump();
fmov(d7, 0.125); dump();
fmov(d7, 0.25); dump();
fmov(d7, 0.5); dump();
fmov(d7, 1.0); dump();
fmov(d7, 2.125); dump();
fmov(d7, 4.5); dump();
fmov(d7, 9.5); dump();
fmov(d7, 20.0); dump();
fmov(d7, 0.1640625); dump();
fmov(d7, 0.34375); dump();
fmov(d7, 0.71875); dump();
fmov(d7, 1.5); dump();
fmov(d7, 0.78125); dump();
fmov(d7, 0.40625); dump();
fmov(d7, 0.2109375); dump();
fmov(d7, 28.0); dump();
fmov(d7, 14.5); dump();
fmov(d7, 7.5); dump();
fmov(d7, 3.875); dump();
fmov(d7, 1.9375); dump();
//DataProcFp_FloatingPointConversion0
fcvt(s7, h7); dump();
fcvt(s0, h7); dump();
fcvt(s1, h7); dump();
fcvt(s2, h7); dump();
fcvt(s4, h7); dump();
fcvt(s8, h7); dump();
fcvt(s16, h7); dump();
fcvt(s31, h7); dump();
fcvt(s7, h7); dump();
fcvt(s7, h0); dump();
fcvt(s7, h1); dump();
fcvt(s7, h2); dump();
fcvt(s7, h4); dump();
fcvt(s7, h8); dump();
fcvt(s7, h16); dump();
fcvt(s7, h31); dump();
//DataProcFp_FloatingPointConversion0
fcvt(d7, h7); dump();
fcvt(d0, h7); dump();
fcvt(d1, h7); dump();
fcvt(d2, h7); dump();
fcvt(d4, h7); dump();
fcvt(d8, h7); dump();
fcvt(d16, h7); dump();
fcvt(d31, h7); dump();
fcvt(d7, h7); dump();
fcvt(d7, h0); dump();
fcvt(d7, h1); dump();
fcvt(d7, h2); dump();
fcvt(d7, h4); dump();
fcvt(d7, h8); dump();
fcvt(d7, h16); dump();
fcvt(d7, h31); dump();
//DataProcFp_FloatingPointConversion0
fcvt(h7, s7); dump();
fcvt(h0, s7); dump();
fcvt(h1, s7); dump();
fcvt(h2, s7); dump();
fcvt(h4, s7); dump();
fcvt(h8, s7); dump();
fcvt(h16, s7); dump();
fcvt(h31, s7); dump();
fcvt(h7, s7); dump();
fcvt(h7, s0); dump();
fcvt(h7, s1); dump();
fcvt(h7, s2); dump();
fcvt(h7, s4); dump();
fcvt(h7, s8); dump();
fcvt(h7, s16); dump();
fcvt(h7, s31); dump();
//DataProcFp_FloatingPointConversion0
fcvt(d7, s7); dump();
fcvt(d0, s7); dump();
fcvt(d1, s7); dump();
fcvt(d2, s7); dump();
fcvt(d4, s7); dump();
fcvt(d8, s7); dump();
fcvt(d16, s7); dump();
fcvt(d31, s7); dump();
fcvt(d7, s7); dump();
fcvt(d7, s0); dump();
fcvt(d7, s1); dump();
fcvt(d7, s2); dump();
fcvt(d7, s4); dump();
fcvt(d7, s8); dump();
fcvt(d7, s16); dump();
fcvt(d7, s31); dump();
//DataProcFp_FloatingPointConversion0
fcvt(h7, d7); dump();
fcvt(h0, d7); dump();
fcvt(h1, d7); dump();
fcvt(h2, d7); dump();
fcvt(h4, d7); dump();
fcvt(h8, d7); dump();
fcvt(h16, d7); dump();
fcvt(h31, d7); dump();
fcvt(h7, d7); dump();
fcvt(h7, d0); dump();
fcvt(h7, d1); dump();
fcvt(h7, d2); dump();
fcvt(h7, d4); dump();
fcvt(h7, d8); dump();
fcvt(h7, d16); dump();
fcvt(h7, d31); dump();
//DataProcFp_FloatingPointConversion0
fcvt(s7, d7); dump();
fcvt(s0, d7); dump();
fcvt(s1, d7); dump();
fcvt(s2, d7); dump();
fcvt(s4, d7); dump();
fcvt(s8, d7); dump();
fcvt(s16, d7); dump();
fcvt(s31, d7); dump();
fcvt(s7, d7); dump();
fcvt(s7, d0); dump();
fcvt(s7, d1); dump();
fcvt(s7, d2); dump();
fcvt(s7, d4); dump();
fcvt(s7, d8); dump();
fcvt(s7, d16); dump();
fcvt(s7, d31); dump();
//DataProcFp_FloatingPointConversion1
fcvtas(w0, h7); dump();
fcvtas(w1, h7); dump();
fcvtas(w2, h7); dump();
fcvtas(w4, h7); dump();
fcvtas(w8, h7); dump();
fcvtas(w16, h7); dump();
fcvtas(w30, h7); dump();
fcvtas(w0, h7); dump();
fcvtas(w0, h0); dump();
fcvtas(w0, h1); dump();
fcvtas(w0, h2); dump();
fcvtas(w0, h4); dump();
fcvtas(w0, h8); dump();
fcvtas(w0, h16); dump();
fcvtas(w0, h31); dump();
fcvtau(w0, h7); dump();
fcvtau(w1, h7); dump();
fcvtau(w2, h7); dump();
fcvtau(w4, h7); dump();
fcvtau(w8, h7); dump();
fcvtau(w16, h7); dump();
fcvtau(w30, h7); dump();
fcvtau(w0, h7); dump();
fcvtau(w0, h0); dump();
fcvtau(w0, h1); dump();
fcvtau(w0, h2); dump();
fcvtau(w0, h4); dump();
fcvtau(w0, h8); dump();
fcvtau(w0, h16); dump();
fcvtau(w0, h31); dump();
fcvtms(w0, h7); dump();
fcvtms(w1, h7); dump();
fcvtms(w2, h7); dump();
fcvtms(w4, h7); dump();
fcvtms(w8, h7); dump();
fcvtms(w16, h7); dump();
fcvtms(w30, h7); dump();
fcvtms(w0, h7); dump();
fcvtms(w0, h0); dump();
fcvtms(w0, h1); dump();
fcvtms(w0, h2); dump();
fcvtms(w0, h4); dump();
fcvtms(w0, h8); dump();
fcvtms(w0, h16); dump();
fcvtms(w0, h31); dump();
fcvtmu(w0, h7); dump();
fcvtmu(w1, h7); dump();
fcvtmu(w2, h7); dump();
fcvtmu(w4, h7); dump();
fcvtmu(w8, h7); dump();
fcvtmu(w16, h7); dump();
fcvtmu(w30, h7); dump();
fcvtmu(w0, h7); dump();
fcvtmu(w0, h0); dump();
fcvtmu(w0, h1); dump();
fcvtmu(w0, h2); dump();
fcvtmu(w0, h4); dump();
fcvtmu(w0, h8); dump();
fcvtmu(w0, h16); dump();
fcvtmu(w0, h31); dump();
fcvtns(w0, h7); dump();
fcvtns(w1, h7); dump();
fcvtns(w2, h7); dump();
fcvtns(w4, h7); dump();
fcvtns(w8, h7); dump();
fcvtns(w16, h7); dump();
fcvtns(w30, h7); dump();
fcvtns(w0, h7); dump();
fcvtns(w0, h0); dump();
fcvtns(w0, h1); dump();
fcvtns(w0, h2); dump();
fcvtns(w0, h4); dump();
fcvtns(w0, h8); dump();
fcvtns(w0, h16); dump();
fcvtns(w0, h31); dump();
fcvtnu(w0, h7); dump();
fcvtnu(w1, h7); dump();
fcvtnu(w2, h7); dump();
fcvtnu(w4, h7); dump();
fcvtnu(w8, h7); dump();
fcvtnu(w16, h7); dump();
fcvtnu(w30, h7); dump();
fcvtnu(w0, h7); dump();
fcvtnu(w0, h0); dump();
fcvtnu(w0, h1); dump();
fcvtnu(w0, h2); dump();
fcvtnu(w0, h4); dump();
fcvtnu(w0, h8); dump();
fcvtnu(w0, h16); dump();
fcvtnu(w0, h31); dump();
fcvtps(w0, h7); dump();
fcvtps(w1, h7); dump();
fcvtps(w2, h7); dump();
fcvtps(w4, h7); dump();
fcvtps(w8, h7); dump();
fcvtps(w16, h7); dump();
fcvtps(w30, h7); dump();
fcvtps(w0, h7); dump();
fcvtps(w0, h0); dump();
fcvtps(w0, h1); dump();
fcvtps(w0, h2); dump();
fcvtps(w0, h4); dump();
fcvtps(w0, h8); dump();
fcvtps(w0, h16); dump();
fcvtps(w0, h31); dump();
fcvtpu(w0, h7); dump();
fcvtpu(w1, h7); dump();
fcvtpu(w2, h7); dump();
fcvtpu(w4, h7); dump();
fcvtpu(w8, h7); dump();
fcvtpu(w16, h7); dump();
fcvtpu(w30, h7); dump();
fcvtpu(w0, h7); dump();
fcvtpu(w0, h0); dump();
fcvtpu(w0, h1); dump();
fcvtpu(w0, h2); dump();
fcvtpu(w0, h4); dump();
fcvtpu(w0, h8); dump();
fcvtpu(w0, h16); dump();
fcvtpu(w0, h31); dump();
fcvtzs(w0, h7); dump();
fcvtzs(w1, h7); dump();
fcvtzs(w2, h7); dump();
fcvtzs(w4, h7); dump();
fcvtzs(w8, h7); dump();
fcvtzs(w16, h7); dump();
fcvtzs(w30, h7); dump();
fcvtzs(w0, h7); dump();
fcvtzs(w0, h0); dump();
fcvtzs(w0, h1); dump();
fcvtzs(w0, h2); dump();
fcvtzs(w0, h4); dump();
fcvtzs(w0, h8); dump();
fcvtzs(w0, h16); dump();
fcvtzs(w0, h31); dump();
fcvtzu(w0, h7); dump();
fcvtzu(w1, h7); dump();
fcvtzu(w2, h7); dump();
fcvtzu(w4, h7); dump();
fcvtzu(w8, h7); dump();
fcvtzu(w16, h7); dump();
fcvtzu(w30, h7); dump();
fcvtzu(w0, h7); dump();
fcvtzu(w0, h0); dump();
fcvtzu(w0, h1); dump();
fcvtzu(w0, h2); dump();
fcvtzu(w0, h4); dump();
fcvtzu(w0, h8); dump();
fcvtzu(w0, h16); dump();
fcvtzu(w0, h31); dump();
//DataProcFp_FloatingPointConversion1
fcvtas(x0, h7); dump();
fcvtas(x1, h7); dump();
fcvtas(x2, h7); dump();
fcvtas(x4, h7); dump();
fcvtas(x8, h7); dump();
fcvtas(x16, h7); dump();
fcvtas(x30, h7); dump();
fcvtas(x0, h7); dump();
fcvtas(x0, h0); dump();
fcvtas(x0, h1); dump();
fcvtas(x0, h2); dump();
fcvtas(x0, h4); dump();
fcvtas(x0, h8); dump();
fcvtas(x0, h16); dump();
fcvtas(x0, h31); dump();
fcvtau(x0, h7); dump();
fcvtau(x1, h7); dump();
fcvtau(x2, h7); dump();
fcvtau(x4, h7); dump();
fcvtau(x8, h7); dump();
fcvtau(x16, h7); dump();
fcvtau(x30, h7); dump();
fcvtau(x0, h7); dump();
fcvtau(x0, h0); dump();
fcvtau(x0, h1); dump();
fcvtau(x0, h2); dump();
fcvtau(x0, h4); dump();
fcvtau(x0, h8); dump();
fcvtau(x0, h16); dump();
fcvtau(x0, h31); dump();
fcvtms(x0, h7); dump();
fcvtms(x1, h7); dump();
fcvtms(x2, h7); dump();
fcvtms(x4, h7); dump();
fcvtms(x8, h7); dump();
fcvtms(x16, h7); dump();
fcvtms(x30, h7); dump();
fcvtms(x0, h7); dump();
fcvtms(x0, h0); dump();
fcvtms(x0, h1); dump();
fcvtms(x0, h2); dump();
fcvtms(x0, h4); dump();
fcvtms(x0, h8); dump();
fcvtms(x0, h16); dump();
fcvtms(x0, h31); dump();
fcvtmu(x0, h7); dump();
fcvtmu(x1, h7); dump();
fcvtmu(x2, h7); dump();
fcvtmu(x4, h7); dump();
fcvtmu(x8, h7); dump();
fcvtmu(x16, h7); dump();
fcvtmu(x30, h7); dump();
fcvtmu(x0, h7); dump();
fcvtmu(x0, h0); dump();
fcvtmu(x0, h1); dump();
fcvtmu(x0, h2); dump();
fcvtmu(x0, h4); dump();
fcvtmu(x0, h8); dump();
fcvtmu(x0, h16); dump();
fcvtmu(x0, h31); dump();
fcvtns(x0, h7); dump();
fcvtns(x1, h7); dump();
fcvtns(x2, h7); dump();
fcvtns(x4, h7); dump();
fcvtns(x8, h7); dump();
fcvtns(x16, h7); dump();
fcvtns(x30, h7); dump();
fcvtns(x0, h7); dump();
fcvtns(x0, h0); dump();
fcvtns(x0, h1); dump();
fcvtns(x0, h2); dump();
fcvtns(x0, h4); dump();
fcvtns(x0, h8); dump();
fcvtns(x0, h16); dump();
fcvtns(x0, h31); dump();
fcvtnu(x0, h7); dump();
fcvtnu(x1, h7); dump();
fcvtnu(x2, h7); dump();
fcvtnu(x4, h7); dump();
fcvtnu(x8, h7); dump();
fcvtnu(x16, h7); dump();
fcvtnu(x30, h7); dump();
fcvtnu(x0, h7); dump();
fcvtnu(x0, h0); dump();
fcvtnu(x0, h1); dump();
fcvtnu(x0, h2); dump();
fcvtnu(x0, h4); dump();
fcvtnu(x0, h8); dump();
fcvtnu(x0, h16); dump();
fcvtnu(x0, h31); dump();
fcvtps(x0, h7); dump();
fcvtps(x1, h7); dump();
fcvtps(x2, h7); dump();
fcvtps(x4, h7); dump();
fcvtps(x8, h7); dump();
fcvtps(x16, h7); dump();
fcvtps(x30, h7); dump();
fcvtps(x0, h7); dump();
fcvtps(x0, h0); dump();
fcvtps(x0, h1); dump();
fcvtps(x0, h2); dump();
fcvtps(x0, h4); dump();
fcvtps(x0, h8); dump();
fcvtps(x0, h16); dump();
fcvtps(x0, h31); dump();
fcvtpu(x0, h7); dump();
fcvtpu(x1, h7); dump();
fcvtpu(x2, h7); dump();
fcvtpu(x4, h7); dump();
fcvtpu(x8, h7); dump();
fcvtpu(x16, h7); dump();
fcvtpu(x30, h7); dump();
fcvtpu(x0, h7); dump();
fcvtpu(x0, h0); dump();
fcvtpu(x0, h1); dump();
fcvtpu(x0, h2); dump();
fcvtpu(x0, h4); dump();
fcvtpu(x0, h8); dump();
fcvtpu(x0, h16); dump();
fcvtpu(x0, h31); dump();
fcvtzs(x0, h7); dump();
fcvtzs(x1, h7); dump();
fcvtzs(x2, h7); dump();
fcvtzs(x4, h7); dump();
fcvtzs(x8, h7); dump();
fcvtzs(x16, h7); dump();
fcvtzs(x30, h7); dump();
fcvtzs(x0, h7); dump();
fcvtzs(x0, h0); dump();
fcvtzs(x0, h1); dump();
fcvtzs(x0, h2); dump();
fcvtzs(x0, h4); dump();
fcvtzs(x0, h8); dump();
fcvtzs(x0, h16); dump();
fcvtzs(x0, h31); dump();
fcvtzu(x0, h7); dump();
fcvtzu(x1, h7); dump();
fcvtzu(x2, h7); dump();
fcvtzu(x4, h7); dump();
fcvtzu(x8, h7); dump();
fcvtzu(x16, h7); dump();
fcvtzu(x30, h7); dump();
fcvtzu(x0, h7); dump();
fcvtzu(x0, h0); dump();
fcvtzu(x0, h1); dump();
fcvtzu(x0, h2); dump();
fcvtzu(x0, h4); dump();
fcvtzu(x0, h8); dump();
fcvtzu(x0, h16); dump();
fcvtzu(x0, h31); dump();
//DataProcFp_FloatingPointConversion1
fcvtas(w0, s7); dump();
fcvtas(w1, s7); dump();
fcvtas(w2, s7); dump();
fcvtas(w4, s7); dump();
fcvtas(w8, s7); dump();
fcvtas(w16, s7); dump();
fcvtas(w30, s7); dump();
fcvtas(w0, s7); dump();
fcvtas(w0, s0); dump();
fcvtas(w0, s1); dump();
fcvtas(w0, s2); dump();
fcvtas(w0, s4); dump();
fcvtas(w0, s8); dump();
fcvtas(w0, s16); dump();
fcvtas(w0, s31); dump();
fcvtau(w0, s7); dump();
fcvtau(w1, s7); dump();
fcvtau(w2, s7); dump();
fcvtau(w4, s7); dump();
fcvtau(w8, s7); dump();
fcvtau(w16, s7); dump();
fcvtau(w30, s7); dump();
fcvtau(w0, s7); dump();
fcvtau(w0, s0); dump();
fcvtau(w0, s1); dump();
fcvtau(w0, s2); dump();
fcvtau(w0, s4); dump();
fcvtau(w0, s8); dump();
fcvtau(w0, s16); dump();
fcvtau(w0, s31); dump();
fcvtms(w0, s7); dump();
fcvtms(w1, s7); dump();
fcvtms(w2, s7); dump();
fcvtms(w4, s7); dump();
fcvtms(w8, s7); dump();
fcvtms(w16, s7); dump();
fcvtms(w30, s7); dump();
fcvtms(w0, s7); dump();
fcvtms(w0, s0); dump();
fcvtms(w0, s1); dump();
fcvtms(w0, s2); dump();
fcvtms(w0, s4); dump();
fcvtms(w0, s8); dump();
fcvtms(w0, s16); dump();
fcvtms(w0, s31); dump();
fcvtmu(w0, s7); dump();
fcvtmu(w1, s7); dump();
fcvtmu(w2, s7); dump();
fcvtmu(w4, s7); dump();
fcvtmu(w8, s7); dump();
fcvtmu(w16, s7); dump();
fcvtmu(w30, s7); dump();
fcvtmu(w0, s7); dump();
fcvtmu(w0, s0); dump();
fcvtmu(w0, s1); dump();
fcvtmu(w0, s2); dump();
fcvtmu(w0, s4); dump();
fcvtmu(w0, s8); dump();
fcvtmu(w0, s16); dump();
fcvtmu(w0, s31); dump();
fcvtns(w0, s7); dump();
fcvtns(w1, s7); dump();
fcvtns(w2, s7); dump();
fcvtns(w4, s7); dump();
fcvtns(w8, s7); dump();
fcvtns(w16, s7); dump();
fcvtns(w30, s7); dump();
fcvtns(w0, s7); dump();
fcvtns(w0, s0); dump();
fcvtns(w0, s1); dump();
fcvtns(w0, s2); dump();
fcvtns(w0, s4); dump();
fcvtns(w0, s8); dump();
fcvtns(w0, s16); dump();
fcvtns(w0, s31); dump();
fcvtnu(w0, s7); dump();
fcvtnu(w1, s7); dump();
fcvtnu(w2, s7); dump();
fcvtnu(w4, s7); dump();
fcvtnu(w8, s7); dump();
fcvtnu(w16, s7); dump();
fcvtnu(w30, s7); dump();
fcvtnu(w0, s7); dump();
fcvtnu(w0, s0); dump();
fcvtnu(w0, s1); dump();
fcvtnu(w0, s2); dump();
fcvtnu(w0, s4); dump();
fcvtnu(w0, s8); dump();
fcvtnu(w0, s16); dump();
fcvtnu(w0, s31); dump();
fcvtps(w0, s7); dump();
fcvtps(w1, s7); dump();
fcvtps(w2, s7); dump();
fcvtps(w4, s7); dump();
fcvtps(w8, s7); dump();
fcvtps(w16, s7); dump();
fcvtps(w30, s7); dump();
fcvtps(w0, s7); dump();
fcvtps(w0, s0); dump();
fcvtps(w0, s1); dump();
fcvtps(w0, s2); dump();
fcvtps(w0, s4); dump();
fcvtps(w0, s8); dump();
fcvtps(w0, s16); dump();
fcvtps(w0, s31); dump();
fcvtpu(w0, s7); dump();
fcvtpu(w1, s7); dump();
fcvtpu(w2, s7); dump();
fcvtpu(w4, s7); dump();
fcvtpu(w8, s7); dump();
fcvtpu(w16, s7); dump();
fcvtpu(w30, s7); dump();
fcvtpu(w0, s7); dump();
fcvtpu(w0, s0); dump();
fcvtpu(w0, s1); dump();
fcvtpu(w0, s2); dump();
fcvtpu(w0, s4); dump();
fcvtpu(w0, s8); dump();
fcvtpu(w0, s16); dump();
fcvtpu(w0, s31); dump();
fcvtzs(w0, s7); dump();
fcvtzs(w1, s7); dump();
fcvtzs(w2, s7); dump();
fcvtzs(w4, s7); dump();
fcvtzs(w8, s7); dump();
fcvtzs(w16, s7); dump();
fcvtzs(w30, s7); dump();
fcvtzs(w0, s7); dump();
fcvtzs(w0, s0); dump();
fcvtzs(w0, s1); dump();
fcvtzs(w0, s2); dump();
fcvtzs(w0, s4); dump();
fcvtzs(w0, s8); dump();
fcvtzs(w0, s16); dump();
fcvtzs(w0, s31); dump();
fcvtzu(w0, s7); dump();
fcvtzu(w1, s7); dump();
fcvtzu(w2, s7); dump();
fcvtzu(w4, s7); dump();
fcvtzu(w8, s7); dump();
fcvtzu(w16, s7); dump();
fcvtzu(w30, s7); dump();
fcvtzu(w0, s7); dump();
fcvtzu(w0, s0); dump();
fcvtzu(w0, s1); dump();
fcvtzu(w0, s2); dump();
fcvtzu(w0, s4); dump();
fcvtzu(w0, s8); dump();
fcvtzu(w0, s16); dump();
fcvtzu(w0, s31); dump();
//DataProcFp_FloatingPointConversion1
fcvtas(x0, s7); dump();
fcvtas(x1, s7); dump();
fcvtas(x2, s7); dump();
fcvtas(x4, s7); dump();
fcvtas(x8, s7); dump();
fcvtas(x16, s7); dump();
fcvtas(x30, s7); dump();
fcvtas(x0, s7); dump();
fcvtas(x0, s0); dump();
fcvtas(x0, s1); dump();
fcvtas(x0, s2); dump();
fcvtas(x0, s4); dump();
fcvtas(x0, s8); dump();
fcvtas(x0, s16); dump();
fcvtas(x0, s31); dump();
fcvtau(x0, s7); dump();
fcvtau(x1, s7); dump();
fcvtau(x2, s7); dump();
fcvtau(x4, s7); dump();
fcvtau(x8, s7); dump();
fcvtau(x16, s7); dump();
fcvtau(x30, s7); dump();
fcvtau(x0, s7); dump();
fcvtau(x0, s0); dump();
fcvtau(x0, s1); dump();
fcvtau(x0, s2); dump();
fcvtau(x0, s4); dump();
fcvtau(x0, s8); dump();
fcvtau(x0, s16); dump();
fcvtau(x0, s31); dump();
fcvtms(x0, s7); dump();
fcvtms(x1, s7); dump();
fcvtms(x2, s7); dump();
fcvtms(x4, s7); dump();
fcvtms(x8, s7); dump();
fcvtms(x16, s7); dump();
fcvtms(x30, s7); dump();
fcvtms(x0, s7); dump();
fcvtms(x0, s0); dump();
fcvtms(x0, s1); dump();
fcvtms(x0, s2); dump();
fcvtms(x0, s4); dump();
fcvtms(x0, s8); dump();
fcvtms(x0, s16); dump();
fcvtms(x0, s31); dump();
fcvtmu(x0, s7); dump();
fcvtmu(x1, s7); dump();
fcvtmu(x2, s7); dump();
fcvtmu(x4, s7); dump();
fcvtmu(x8, s7); dump();
fcvtmu(x16, s7); dump();
fcvtmu(x30, s7); dump();
fcvtmu(x0, s7); dump();
fcvtmu(x0, s0); dump();
fcvtmu(x0, s1); dump();
fcvtmu(x0, s2); dump();
fcvtmu(x0, s4); dump();
fcvtmu(x0, s8); dump();
fcvtmu(x0, s16); dump();
fcvtmu(x0, s31); dump();
fcvtns(x0, s7); dump();
fcvtns(x1, s7); dump();
fcvtns(x2, s7); dump();
fcvtns(x4, s7); dump();
fcvtns(x8, s7); dump();
fcvtns(x16, s7); dump();
fcvtns(x30, s7); dump();
fcvtns(x0, s7); dump();
fcvtns(x0, s0); dump();
fcvtns(x0, s1); dump();
fcvtns(x0, s2); dump();
fcvtns(x0, s4); dump();
fcvtns(x0, s8); dump();
fcvtns(x0, s16); dump();
fcvtns(x0, s31); dump();
fcvtnu(x0, s7); dump();
fcvtnu(x1, s7); dump();
fcvtnu(x2, s7); dump();
fcvtnu(x4, s7); dump();
fcvtnu(x8, s7); dump();
fcvtnu(x16, s7); dump();
fcvtnu(x30, s7); dump();
fcvtnu(x0, s7); dump();
fcvtnu(x0, s0); dump();
fcvtnu(x0, s1); dump();
fcvtnu(x0, s2); dump();
fcvtnu(x0, s4); dump();
fcvtnu(x0, s8); dump();
fcvtnu(x0, s16); dump();
fcvtnu(x0, s31); dump();
fcvtps(x0, s7); dump();
fcvtps(x1, s7); dump();
fcvtps(x2, s7); dump();
fcvtps(x4, s7); dump();
fcvtps(x8, s7); dump();
fcvtps(x16, s7); dump();
fcvtps(x30, s7); dump();
fcvtps(x0, s7); dump();
fcvtps(x0, s0); dump();
fcvtps(x0, s1); dump();
fcvtps(x0, s2); dump();
fcvtps(x0, s4); dump();
fcvtps(x0, s8); dump();
fcvtps(x0, s16); dump();
fcvtps(x0, s31); dump();
fcvtpu(x0, s7); dump();
fcvtpu(x1, s7); dump();
fcvtpu(x2, s7); dump();
fcvtpu(x4, s7); dump();
fcvtpu(x8, s7); dump();
fcvtpu(x16, s7); dump();
fcvtpu(x30, s7); dump();
fcvtpu(x0, s7); dump();
fcvtpu(x0, s0); dump();
fcvtpu(x0, s1); dump();
fcvtpu(x0, s2); dump();
fcvtpu(x0, s4); dump();
fcvtpu(x0, s8); dump();
fcvtpu(x0, s16); dump();
fcvtpu(x0, s31); dump();
fcvtzs(x0, s7); dump();
fcvtzs(x1, s7); dump();
fcvtzs(x2, s7); dump();
fcvtzs(x4, s7); dump();
fcvtzs(x8, s7); dump();
fcvtzs(x16, s7); dump();
fcvtzs(x30, s7); dump();
fcvtzs(x0, s7); dump();
fcvtzs(x0, s0); dump();
fcvtzs(x0, s1); dump();
fcvtzs(x0, s2); dump();
fcvtzs(x0, s4); dump();
fcvtzs(x0, s8); dump();
fcvtzs(x0, s16); dump();
fcvtzs(x0, s31); dump();
fcvtzu(x0, s7); dump();
fcvtzu(x1, s7); dump();
fcvtzu(x2, s7); dump();
fcvtzu(x4, s7); dump();
fcvtzu(x8, s7); dump();
fcvtzu(x16, s7); dump();
fcvtzu(x30, s7); dump();
fcvtzu(x0, s7); dump();
fcvtzu(x0, s0); dump();
fcvtzu(x0, s1); dump();
fcvtzu(x0, s2); dump();
fcvtzu(x0, s4); dump();
fcvtzu(x0, s8); dump();
fcvtzu(x0, s16); dump();
fcvtzu(x0, s31); dump();
//DataProcFp_FloatingPointConversion1
fcvtas(w0, d7); dump();
fcvtas(w1, d7); dump();
fcvtas(w2, d7); dump();
fcvtas(w4, d7); dump();
fcvtas(w8, d7); dump();
fcvtas(w16, d7); dump();
fcvtas(w30, d7); dump();
fcvtas(w0, d7); dump();
fcvtas(w0, d0); dump();
fcvtas(w0, d1); dump();
fcvtas(w0, d2); dump();
fcvtas(w0, d4); dump();
fcvtas(w0, d8); dump();
fcvtas(w0, d16); dump();
fcvtas(w0, d31); dump();
fcvtau(w0, d7); dump();
fcvtau(w1, d7); dump();
fcvtau(w2, d7); dump();
fcvtau(w4, d7); dump();
fcvtau(w8, d7); dump();
fcvtau(w16, d7); dump();
fcvtau(w30, d7); dump();
fcvtau(w0, d7); dump();
fcvtau(w0, d0); dump();
fcvtau(w0, d1); dump();
fcvtau(w0, d2); dump();
fcvtau(w0, d4); dump();
fcvtau(w0, d8); dump();
fcvtau(w0, d16); dump();
fcvtau(w0, d31); dump();
fcvtms(w0, d7); dump();
fcvtms(w1, d7); dump();
fcvtms(w2, d7); dump();
fcvtms(w4, d7); dump();
fcvtms(w8, d7); dump();
fcvtms(w16, d7); dump();
fcvtms(w30, d7); dump();
fcvtms(w0, d7); dump();
fcvtms(w0, d0); dump();
fcvtms(w0, d1); dump();
fcvtms(w0, d2); dump();
fcvtms(w0, d4); dump();
fcvtms(w0, d8); dump();
fcvtms(w0, d16); dump();
fcvtms(w0, d31); dump();
fcvtmu(w0, d7); dump();
fcvtmu(w1, d7); dump();
fcvtmu(w2, d7); dump();
fcvtmu(w4, d7); dump();
fcvtmu(w8, d7); dump();
fcvtmu(w16, d7); dump();
fcvtmu(w30, d7); dump();
fcvtmu(w0, d7); dump();
fcvtmu(w0, d0); dump();
fcvtmu(w0, d1); dump();
fcvtmu(w0, d2); dump();
fcvtmu(w0, d4); dump();
fcvtmu(w0, d8); dump();
fcvtmu(w0, d16); dump();
fcvtmu(w0, d31); dump();
fcvtns(w0, d7); dump();
fcvtns(w1, d7); dump();
fcvtns(w2, d7); dump();
fcvtns(w4, d7); dump();
fcvtns(w8, d7); dump();
fcvtns(w16, d7); dump();
fcvtns(w30, d7); dump();
fcvtns(w0, d7); dump();
fcvtns(w0, d0); dump();
fcvtns(w0, d1); dump();
fcvtns(w0, d2); dump();
fcvtns(w0, d4); dump();
fcvtns(w0, d8); dump();
fcvtns(w0, d16); dump();
fcvtns(w0, d31); dump();
fcvtnu(w0, d7); dump();
fcvtnu(w1, d7); dump();
fcvtnu(w2, d7); dump();
fcvtnu(w4, d7); dump();
fcvtnu(w8, d7); dump();
fcvtnu(w16, d7); dump();
fcvtnu(w30, d7); dump();
fcvtnu(w0, d7); dump();
fcvtnu(w0, d0); dump();
fcvtnu(w0, d1); dump();
fcvtnu(w0, d2); dump();
fcvtnu(w0, d4); dump();
fcvtnu(w0, d8); dump();
fcvtnu(w0, d16); dump();
fcvtnu(w0, d31); dump();
fcvtps(w0, d7); dump();
fcvtps(w1, d7); dump();
fcvtps(w2, d7); dump();
fcvtps(w4, d7); dump();
fcvtps(w8, d7); dump();
fcvtps(w16, d7); dump();
fcvtps(w30, d7); dump();
fcvtps(w0, d7); dump();
fcvtps(w0, d0); dump();
fcvtps(w0, d1); dump();
fcvtps(w0, d2); dump();
fcvtps(w0, d4); dump();
fcvtps(w0, d8); dump();
fcvtps(w0, d16); dump();
fcvtps(w0, d31); dump();
fcvtpu(w0, d7); dump();
fcvtpu(w1, d7); dump();
fcvtpu(w2, d7); dump();
fcvtpu(w4, d7); dump();
fcvtpu(w8, d7); dump();
fcvtpu(w16, d7); dump();
fcvtpu(w30, d7); dump();
fcvtpu(w0, d7); dump();
fcvtpu(w0, d0); dump();
fcvtpu(w0, d1); dump();
fcvtpu(w0, d2); dump();
fcvtpu(w0, d4); dump();
fcvtpu(w0, d8); dump();
fcvtpu(w0, d16); dump();
fcvtpu(w0, d31); dump();
fcvtzs(w0, d7); dump();
fcvtzs(w1, d7); dump();
fcvtzs(w2, d7); dump();
fcvtzs(w4, d7); dump();
fcvtzs(w8, d7); dump();
fcvtzs(w16, d7); dump();
fcvtzs(w30, d7); dump();
fcvtzs(w0, d7); dump();
fcvtzs(w0, d0); dump();
fcvtzs(w0, d1); dump();
fcvtzs(w0, d2); dump();
fcvtzs(w0, d4); dump();
fcvtzs(w0, d8); dump();
fcvtzs(w0, d16); dump();
fcvtzs(w0, d31); dump();
fcvtzu(w0, d7); dump();
fcvtzu(w1, d7); dump();
fcvtzu(w2, d7); dump();
fcvtzu(w4, d7); dump();
fcvtzu(w8, d7); dump();
fcvtzu(w16, d7); dump();
fcvtzu(w30, d7); dump();
fcvtzu(w0, d7); dump();
fcvtzu(w0, d0); dump();
fcvtzu(w0, d1); dump();
fcvtzu(w0, d2); dump();
fcvtzu(w0, d4); dump();
fcvtzu(w0, d8); dump();
fcvtzu(w0, d16); dump();
fcvtzu(w0, d31); dump();
//DataProcFp_FloatingPointConversion1
fcvtas(x0, d7); dump();
fcvtas(x1, d7); dump();
fcvtas(x2, d7); dump();
fcvtas(x4, d7); dump();
fcvtas(x8, d7); dump();
fcvtas(x16, d7); dump();
fcvtas(x30, d7); dump();
fcvtas(x0, d7); dump();
fcvtas(x0, d0); dump();
fcvtas(x0, d1); dump();
fcvtas(x0, d2); dump();
fcvtas(x0, d4); dump();
fcvtas(x0, d8); dump();
fcvtas(x0, d16); dump();
fcvtas(x0, d31); dump();
fcvtau(x0, d7); dump();
fcvtau(x1, d7); dump();
fcvtau(x2, d7); dump();
fcvtau(x4, d7); dump();
fcvtau(x8, d7); dump();
fcvtau(x16, d7); dump();
fcvtau(x30, d7); dump();
fcvtau(x0, d7); dump();
fcvtau(x0, d0); dump();
fcvtau(x0, d1); dump();
fcvtau(x0, d2); dump();
fcvtau(x0, d4); dump();
fcvtau(x0, d8); dump();
fcvtau(x0, d16); dump();
fcvtau(x0, d31); dump();
fcvtms(x0, d7); dump();
fcvtms(x1, d7); dump();
fcvtms(x2, d7); dump();
fcvtms(x4, d7); dump();
fcvtms(x8, d7); dump();
fcvtms(x16, d7); dump();
fcvtms(x30, d7); dump();
fcvtms(x0, d7); dump();
fcvtms(x0, d0); dump();
fcvtms(x0, d1); dump();
fcvtms(x0, d2); dump();
fcvtms(x0, d4); dump();
fcvtms(x0, d8); dump();
fcvtms(x0, d16); dump();
fcvtms(x0, d31); dump();
fcvtmu(x0, d7); dump();
fcvtmu(x1, d7); dump();
fcvtmu(x2, d7); dump();
fcvtmu(x4, d7); dump();
fcvtmu(x8, d7); dump();
fcvtmu(x16, d7); dump();
fcvtmu(x30, d7); dump();
fcvtmu(x0, d7); dump();
fcvtmu(x0, d0); dump();
fcvtmu(x0, d1); dump();
fcvtmu(x0, d2); dump();
fcvtmu(x0, d4); dump();
fcvtmu(x0, d8); dump();
fcvtmu(x0, d16); dump();
fcvtmu(x0, d31); dump();
fcvtns(x0, d7); dump();
fcvtns(x1, d7); dump();
fcvtns(x2, d7); dump();
fcvtns(x4, d7); dump();
fcvtns(x8, d7); dump();
fcvtns(x16, d7); dump();
fcvtns(x30, d7); dump();
fcvtns(x0, d7); dump();
fcvtns(x0, d0); dump();
fcvtns(x0, d1); dump();
fcvtns(x0, d2); dump();
fcvtns(x0, d4); dump();
fcvtns(x0, d8); dump();
fcvtns(x0, d16); dump();
fcvtns(x0, d31); dump();
fcvtnu(x0, d7); dump();
fcvtnu(x1, d7); dump();
fcvtnu(x2, d7); dump();
fcvtnu(x4, d7); dump();
fcvtnu(x8, d7); dump();
fcvtnu(x16, d7); dump();
fcvtnu(x30, d7); dump();
fcvtnu(x0, d7); dump();
fcvtnu(x0, d0); dump();
fcvtnu(x0, d1); dump();
fcvtnu(x0, d2); dump();
fcvtnu(x0, d4); dump();
fcvtnu(x0, d8); dump();
fcvtnu(x0, d16); dump();
fcvtnu(x0, d31); dump();
fcvtps(x0, d7); dump();
fcvtps(x1, d7); dump();
fcvtps(x2, d7); dump();
fcvtps(x4, d7); dump();
fcvtps(x8, d7); dump();
fcvtps(x16, d7); dump();
fcvtps(x30, d7); dump();
fcvtps(x0, d7); dump();
fcvtps(x0, d0); dump();
fcvtps(x0, d1); dump();
fcvtps(x0, d2); dump();
fcvtps(x0, d4); dump();
fcvtps(x0, d8); dump();
fcvtps(x0, d16); dump();
fcvtps(x0, d31); dump();
fcvtpu(x0, d7); dump();
fcvtpu(x1, d7); dump();
fcvtpu(x2, d7); dump();
fcvtpu(x4, d7); dump();
fcvtpu(x8, d7); dump();
fcvtpu(x16, d7); dump();
fcvtpu(x30, d7); dump();
fcvtpu(x0, d7); dump();
fcvtpu(x0, d0); dump();
fcvtpu(x0, d1); dump();
fcvtpu(x0, d2); dump();
fcvtpu(x0, d4); dump();
fcvtpu(x0, d8); dump();
fcvtpu(x0, d16); dump();
fcvtpu(x0, d31); dump();
fcvtzs(x0, d7); dump();
fcvtzs(x1, d7); dump();
fcvtzs(x2, d7); dump();
fcvtzs(x4, d7); dump();
fcvtzs(x8, d7); dump();
fcvtzs(x16, d7); dump();
fcvtzs(x30, d7); dump();
fcvtzs(x0, d7); dump();
fcvtzs(x0, d0); dump();
fcvtzs(x0, d1); dump();
fcvtzs(x0, d2); dump();
fcvtzs(x0, d4); dump();
fcvtzs(x0, d8); dump();
fcvtzs(x0, d16); dump();
fcvtzs(x0, d31); dump();
fcvtzu(x0, d7); dump();
fcvtzu(x1, d7); dump();
fcvtzu(x2, d7); dump();
fcvtzu(x4, d7); dump();
fcvtzu(x8, d7); dump();
fcvtzu(x16, d7); dump();
fcvtzu(x30, d7); dump();
fcvtzu(x0, d7); dump();
fcvtzu(x0, d0); dump();
fcvtzu(x0, d1); dump();
fcvtzu(x0, d2); dump();
fcvtzu(x0, d4); dump();
fcvtzu(x0, d8); dump();
fcvtzu(x0, d16); dump();
fcvtzu(x0, d31); dump();
//DataProcFp_FloatingPointConversion2
fcvtzs(w0, h7, 1); dump();
fcvtzs(w1, h7, 1); dump();
fcvtzs(w2, h7, 1); dump();
fcvtzs(w4, h7, 1); dump();
fcvtzs(w8, h7, 1); dump();
fcvtzs(w16, h7, 1); dump();
fcvtzs(w30, h7, 1); dump();
fcvtzs(w0, h7, 1); dump();
fcvtzs(w0, h0, 1); dump();
fcvtzs(w0, h1, 1); dump();
fcvtzs(w0, h2, 1); dump();
fcvtzs(w0, h4, 1); dump();
fcvtzs(w0, h8, 1); dump();
fcvtzs(w0, h16, 1); dump();
fcvtzs(w0, h31, 1); dump();
fcvtzs(w0, h7, 1); dump();
fcvtzs(w0, h7, 2); dump();
fcvtzs(w0, h7, 4); dump();
fcvtzs(w0, h7, 8); dump();
fcvtzs(w0, h7, 16); dump();
fcvtzs(w0, h7, 32); dump();
fcvtzu(w0, h7, 1); dump();
fcvtzu(w1, h7, 1); dump();
fcvtzu(w2, h7, 1); dump();
fcvtzu(w4, h7, 1); dump();
fcvtzu(w8, h7, 1); dump();
fcvtzu(w16, h7, 1); dump();
fcvtzu(w30, h7, 1); dump();
fcvtzu(w0, h7, 1); dump();
fcvtzu(w0, h0, 1); dump();
fcvtzu(w0, h1, 1); dump();
fcvtzu(w0, h2, 1); dump();
fcvtzu(w0, h4, 1); dump();
fcvtzu(w0, h8, 1); dump();
fcvtzu(w0, h16, 1); dump();
fcvtzu(w0, h31, 1); dump();
fcvtzu(w0, h7, 1); dump();
fcvtzu(w0, h7, 2); dump();
fcvtzu(w0, h7, 4); dump();
fcvtzu(w0, h7, 8); dump();
fcvtzu(w0, h7, 16); dump();
fcvtzu(w0, h7, 32); dump();
//DataProcFp_FloatingPointConversion2
fcvtzs(x0, h7, 1); dump();
fcvtzs(x1, h7, 1); dump();
fcvtzs(x2, h7, 1); dump();
fcvtzs(x4, h7, 1); dump();
fcvtzs(x8, h7, 1); dump();
fcvtzs(x16, h7, 1); dump();
fcvtzs(x30, h7, 1); dump();
fcvtzs(x0, h7, 1); dump();
fcvtzs(x0, h0, 1); dump();
fcvtzs(x0, h1, 1); dump();
fcvtzs(x0, h2, 1); dump();
fcvtzs(x0, h4, 1); dump();
fcvtzs(x0, h8, 1); dump();
fcvtzs(x0, h16, 1); dump();
fcvtzs(x0, h31, 1); dump();
fcvtzs(x0, h7, 1); dump();
fcvtzs(x0, h7, 2); dump();
fcvtzs(x0, h7, 4); dump();
fcvtzs(x0, h7, 8); dump();
fcvtzs(x0, h7, 16); dump();
fcvtzs(x0, h7, 32); dump();
fcvtzs(x0, h7, 64); dump();
fcvtzu(x0, h7, 1); dump();
fcvtzu(x1, h7, 1); dump();
fcvtzu(x2, h7, 1); dump();
fcvtzu(x4, h7, 1); dump();
fcvtzu(x8, h7, 1); dump();
fcvtzu(x16, h7, 1); dump();
fcvtzu(x30, h7, 1); dump();
fcvtzu(x0, h7, 1); dump();
fcvtzu(x0, h0, 1); dump();
fcvtzu(x0, h1, 1); dump();
fcvtzu(x0, h2, 1); dump();
fcvtzu(x0, h4, 1); dump();
fcvtzu(x0, h8, 1); dump();
fcvtzu(x0, h16, 1); dump();
fcvtzu(x0, h31, 1); dump();
fcvtzu(x0, h7, 1); dump();
fcvtzu(x0, h7, 2); dump();
fcvtzu(x0, h7, 4); dump();
fcvtzu(x0, h7, 8); dump();
fcvtzu(x0, h7, 16); dump();
fcvtzu(x0, h7, 32); dump();
fcvtzu(x0, h7, 64); dump();
//DataProcFp_FloatingPointConversion2
fcvtzs(w0, s7, 1); dump();
fcvtzs(w1, s7, 1); dump();
fcvtzs(w2, s7, 1); dump();
fcvtzs(w4, s7, 1); dump();
fcvtzs(w8, s7, 1); dump();
fcvtzs(w16, s7, 1); dump();
fcvtzs(w30, s7, 1); dump();
fcvtzs(w0, s7, 1); dump();
fcvtzs(w0, s0, 1); dump();
fcvtzs(w0, s1, 1); dump();
fcvtzs(w0, s2, 1); dump();
fcvtzs(w0, s4, 1); dump();
fcvtzs(w0, s8, 1); dump();
fcvtzs(w0, s16, 1); dump();
fcvtzs(w0, s31, 1); dump();
fcvtzs(w0, s7, 1); dump();
fcvtzs(w0, s7, 2); dump();
fcvtzs(w0, s7, 4); dump();
fcvtzs(w0, s7, 8); dump();
fcvtzs(w0, s7, 16); dump();
fcvtzs(w0, s7, 32); dump();
fcvtzu(w0, s7, 1); dump();
fcvtzu(w1, s7, 1); dump();
fcvtzu(w2, s7, 1); dump();
fcvtzu(w4, s7, 1); dump();
fcvtzu(w8, s7, 1); dump();
fcvtzu(w16, s7, 1); dump();
fcvtzu(w30, s7, 1); dump();
fcvtzu(w0, s7, 1); dump();
fcvtzu(w0, s0, 1); dump();
fcvtzu(w0, s1, 1); dump();
fcvtzu(w0, s2, 1); dump();
fcvtzu(w0, s4, 1); dump();
fcvtzu(w0, s8, 1); dump();
fcvtzu(w0, s16, 1); dump();
fcvtzu(w0, s31, 1); dump();
fcvtzu(w0, s7, 1); dump();
fcvtzu(w0, s7, 2); dump();
fcvtzu(w0, s7, 4); dump();
fcvtzu(w0, s7, 8); dump();
fcvtzu(w0, s7, 16); dump();
fcvtzu(w0, s7, 32); dump();
//DataProcFp_FloatingPointConversion2
fcvtzs(x0, s7, 1); dump();
fcvtzs(x1, s7, 1); dump();
fcvtzs(x2, s7, 1); dump();
fcvtzs(x4, s7, 1); dump();
fcvtzs(x8, s7, 1); dump();
fcvtzs(x16, s7, 1); dump();
fcvtzs(x30, s7, 1); dump();
fcvtzs(x0, s7, 1); dump();
fcvtzs(x0, s0, 1); dump();
fcvtzs(x0, s1, 1); dump();
fcvtzs(x0, s2, 1); dump();
fcvtzs(x0, s4, 1); dump();
fcvtzs(x0, s8, 1); dump();
fcvtzs(x0, s16, 1); dump();
fcvtzs(x0, s31, 1); dump();
fcvtzs(x0, s7, 1); dump();
fcvtzs(x0, s7, 2); dump();
fcvtzs(x0, s7, 4); dump();
fcvtzs(x0, s7, 8); dump();
fcvtzs(x0, s7, 16); dump();
fcvtzs(x0, s7, 32); dump();
fcvtzs(x0, s7, 64); dump();
fcvtzu(x0, s7, 1); dump();
fcvtzu(x1, s7, 1); dump();
fcvtzu(x2, s7, 1); dump();
fcvtzu(x4, s7, 1); dump();
fcvtzu(x8, s7, 1); dump();
fcvtzu(x16, s7, 1); dump();
fcvtzu(x30, s7, 1); dump();
fcvtzu(x0, s7, 1); dump();
fcvtzu(x0, s0, 1); dump();
fcvtzu(x0, s1, 1); dump();
fcvtzu(x0, s2, 1); dump();
fcvtzu(x0, s4, 1); dump();
fcvtzu(x0, s8, 1); dump();
fcvtzu(x0, s16, 1); dump();
fcvtzu(x0, s31, 1); dump();
fcvtzu(x0, s7, 1); dump();
fcvtzu(x0, s7, 2); dump();
fcvtzu(x0, s7, 4); dump();
fcvtzu(x0, s7, 8); dump();
fcvtzu(x0, s7, 16); dump();
fcvtzu(x0, s7, 32); dump();
fcvtzu(x0, s7, 64); dump();
//DataProcFp_FloatingPointConversion2
fcvtzs(w0, d7, 1); dump();
fcvtzs(w1, d7, 1); dump();
fcvtzs(w2, d7, 1); dump();
fcvtzs(w4, d7, 1); dump();
fcvtzs(w8, d7, 1); dump();
fcvtzs(w16, d7, 1); dump();
fcvtzs(w30, d7, 1); dump();
fcvtzs(w0, d7, 1); dump();
fcvtzs(w0, d0, 1); dump();
fcvtzs(w0, d1, 1); dump();
fcvtzs(w0, d2, 1); dump();
fcvtzs(w0, d4, 1); dump();
fcvtzs(w0, d8, 1); dump();
fcvtzs(w0, d16, 1); dump();
fcvtzs(w0, d31, 1); dump();
fcvtzs(w0, d7, 1); dump();
fcvtzs(w0, d7, 2); dump();
fcvtzs(w0, d7, 4); dump();
fcvtzs(w0, d7, 8); dump();
fcvtzs(w0, d7, 16); dump();
fcvtzs(w0, d7, 32); dump();
fcvtzu(w0, d7, 1); dump();
fcvtzu(w1, d7, 1); dump();
fcvtzu(w2, d7, 1); dump();
fcvtzu(w4, d7, 1); dump();
fcvtzu(w8, d7, 1); dump();
fcvtzu(w16, d7, 1); dump();
fcvtzu(w30, d7, 1); dump();
fcvtzu(w0, d7, 1); dump();
fcvtzu(w0, d0, 1); dump();
fcvtzu(w0, d1, 1); dump();
fcvtzu(w0, d2, 1); dump();
fcvtzu(w0, d4, 1); dump();
fcvtzu(w0, d8, 1); dump();
fcvtzu(w0, d16, 1); dump();
fcvtzu(w0, d31, 1); dump();
fcvtzu(w0, d7, 1); dump();
fcvtzu(w0, d7, 2); dump();
fcvtzu(w0, d7, 4); dump();
fcvtzu(w0, d7, 8); dump();
fcvtzu(w0, d7, 16); dump();
fcvtzu(w0, d7, 32); dump();
//DataProcFp_FloatingPointConversion2
fcvtzs(x0, d7, 1); dump();
fcvtzs(x1, d7, 1); dump();
fcvtzs(x2, d7, 1); dump();
fcvtzs(x4, d7, 1); dump();
fcvtzs(x8, d7, 1); dump();
fcvtzs(x16, d7, 1); dump();
fcvtzs(x30, d7, 1); dump();
fcvtzs(x0, d7, 1); dump();
fcvtzs(x0, d0, 1); dump();
fcvtzs(x0, d1, 1); dump();
fcvtzs(x0, d2, 1); dump();
fcvtzs(x0, d4, 1); dump();
fcvtzs(x0, d8, 1); dump();
fcvtzs(x0, d16, 1); dump();
fcvtzs(x0, d31, 1); dump();
fcvtzs(x0, d7, 1); dump();
fcvtzs(x0, d7, 2); dump();
fcvtzs(x0, d7, 4); dump();
fcvtzs(x0, d7, 8); dump();
fcvtzs(x0, d7, 16); dump();
fcvtzs(x0, d7, 32); dump();
fcvtzs(x0, d7, 64); dump();
fcvtzu(x0, d7, 1); dump();
fcvtzu(x1, d7, 1); dump();
fcvtzu(x2, d7, 1); dump();
fcvtzu(x4, d7, 1); dump();
fcvtzu(x8, d7, 1); dump();
fcvtzu(x16, d7, 1); dump();
fcvtzu(x30, d7, 1); dump();
fcvtzu(x0, d7, 1); dump();
fcvtzu(x0, d0, 1); dump();
fcvtzu(x0, d1, 1); dump();
fcvtzu(x0, d2, 1); dump();
fcvtzu(x0, d4, 1); dump();
fcvtzu(x0, d8, 1); dump();
fcvtzu(x0, d16, 1); dump();
fcvtzu(x0, d31, 1); dump();
fcvtzu(x0, d7, 1); dump();
fcvtzu(x0, d7, 2); dump();
fcvtzu(x0, d7, 4); dump();
fcvtzu(x0, d7, 8); dump();
fcvtzu(x0, d7, 16); dump();
fcvtzu(x0, d7, 32); dump();
fcvtzu(x0, d7, 64); dump();
//DataProcFp_FloatingPointConversion3
fjcvtzs(w0, d7); dump();
fjcvtzs(w1, d7); dump();
fjcvtzs(w2, d7); dump();
fjcvtzs(w4, d7); dump();
fjcvtzs(w8, d7); dump();
fjcvtzs(w16, d7); dump();
fjcvtzs(w30, d7); dump();
fjcvtzs(w0, d7); dump();
fjcvtzs(w0, d0); dump();
fjcvtzs(w0, d1); dump();
fjcvtzs(w0, d2); dump();
fjcvtzs(w0, d4); dump();
fjcvtzs(w0, d8); dump();
fjcvtzs(w0, d16); dump();
fjcvtzs(w0, d31); dump();
//DataProcFp_FloatingPointConversion4
scvtf(h7, w0); dump();
scvtf(h0, w0); dump();
scvtf(h1, w0); dump();
scvtf(h2, w0); dump();
scvtf(h4, w0); dump();
scvtf(h8, w0); dump();
scvtf(h16, w0); dump();
scvtf(h31, w0); dump();
scvtf(h7, w0); dump();
scvtf(h7, w1); dump();
scvtf(h7, w2); dump();
scvtf(h7, w4); dump();
scvtf(h7, w8); dump();
scvtf(h7, w16); dump();
scvtf(h7, w30); dump();
ucvtf(h7, w0); dump();
ucvtf(h0, w0); dump();
ucvtf(h1, w0); dump();
ucvtf(h2, w0); dump();
ucvtf(h4, w0); dump();
ucvtf(h8, w0); dump();
ucvtf(h16, w0); dump();
ucvtf(h31, w0); dump();
ucvtf(h7, w0); dump();
ucvtf(h7, w1); dump();
ucvtf(h7, w2); dump();
ucvtf(h7, w4); dump();
ucvtf(h7, w8); dump();
ucvtf(h7, w16); dump();
ucvtf(h7, w30); dump();
//DataProcFp_FloatingPointConversion4
scvtf(s7, w0); dump();
scvtf(s0, w0); dump();
scvtf(s1, w0); dump();
scvtf(s2, w0); dump();
scvtf(s4, w0); dump();
scvtf(s8, w0); dump();
scvtf(s16, w0); dump();
scvtf(s31, w0); dump();
scvtf(s7, w0); dump();
scvtf(s7, w1); dump();
scvtf(s7, w2); dump();
scvtf(s7, w4); dump();
scvtf(s7, w8); dump();
scvtf(s7, w16); dump();
scvtf(s7, w30); dump();
ucvtf(s7, w0); dump();
ucvtf(s0, w0); dump();
ucvtf(s1, w0); dump();
ucvtf(s2, w0); dump();
ucvtf(s4, w0); dump();
ucvtf(s8, w0); dump();
ucvtf(s16, w0); dump();
ucvtf(s31, w0); dump();
ucvtf(s7, w0); dump();
ucvtf(s7, w1); dump();
ucvtf(s7, w2); dump();
ucvtf(s7, w4); dump();
ucvtf(s7, w8); dump();
ucvtf(s7, w16); dump();
ucvtf(s7, w30); dump();
//DataProcFp_FloatingPointConversion4
scvtf(d7, w0); dump();
scvtf(d0, w0); dump();
scvtf(d1, w0); dump();
scvtf(d2, w0); dump();
scvtf(d4, w0); dump();
scvtf(d8, w0); dump();
scvtf(d16, w0); dump();
scvtf(d31, w0); dump();
scvtf(d7, w0); dump();
scvtf(d7, w1); dump();
scvtf(d7, w2); dump();
scvtf(d7, w4); dump();
scvtf(d7, w8); dump();
scvtf(d7, w16); dump();
scvtf(d7, w30); dump();
ucvtf(d7, w0); dump();
ucvtf(d0, w0); dump();
ucvtf(d1, w0); dump();
ucvtf(d2, w0); dump();
ucvtf(d4, w0); dump();
ucvtf(d8, w0); dump();
ucvtf(d16, w0); dump();
ucvtf(d31, w0); dump();
ucvtf(d7, w0); dump();
ucvtf(d7, w1); dump();
ucvtf(d7, w2); dump();
ucvtf(d7, w4); dump();
ucvtf(d7, w8); dump();
ucvtf(d7, w16); dump();
ucvtf(d7, w30); dump();
//DataProcFp_FloatingPointConversion4
scvtf(h7, x0); dump();
scvtf(h0, x0); dump();
scvtf(h1, x0); dump();
scvtf(h2, x0); dump();
scvtf(h4, x0); dump();
scvtf(h8, x0); dump();
scvtf(h16, x0); dump();
scvtf(h31, x0); dump();
scvtf(h7, x0); dump();
scvtf(h7, x1); dump();
scvtf(h7, x2); dump();
scvtf(h7, x4); dump();
scvtf(h7, x8); dump();
scvtf(h7, x16); dump();
scvtf(h7, x30); dump();
ucvtf(h7, x0); dump();
ucvtf(h0, x0); dump();
ucvtf(h1, x0); dump();
ucvtf(h2, x0); dump();
ucvtf(h4, x0); dump();
ucvtf(h8, x0); dump();
ucvtf(h16, x0); dump();
ucvtf(h31, x0); dump();
ucvtf(h7, x0); dump();
ucvtf(h7, x1); dump();
ucvtf(h7, x2); dump();
ucvtf(h7, x4); dump();
ucvtf(h7, x8); dump();
ucvtf(h7, x16); dump();
ucvtf(h7, x30); dump();
//DataProcFp_FloatingPointConversion4
scvtf(s7, x0); dump();
scvtf(s0, x0); dump();
scvtf(s1, x0); dump();
scvtf(s2, x0); dump();
scvtf(s4, x0); dump();
scvtf(s8, x0); dump();
scvtf(s16, x0); dump();
scvtf(s31, x0); dump();
scvtf(s7, x0); dump();
scvtf(s7, x1); dump();
scvtf(s7, x2); dump();
scvtf(s7, x4); dump();
scvtf(s7, x8); dump();
scvtf(s7, x16); dump();
scvtf(s7, x30); dump();
ucvtf(s7, x0); dump();
ucvtf(s0, x0); dump();
ucvtf(s1, x0); dump();
ucvtf(s2, x0); dump();
ucvtf(s4, x0); dump();
ucvtf(s8, x0); dump();
ucvtf(s16, x0); dump();
ucvtf(s31, x0); dump();
ucvtf(s7, x0); dump();
ucvtf(s7, x1); dump();
ucvtf(s7, x2); dump();
ucvtf(s7, x4); dump();
ucvtf(s7, x8); dump();
ucvtf(s7, x16); dump();
ucvtf(s7, x30); dump();
//DataProcFp_FloatingPointConversion4
scvtf(d7, x0); dump();
scvtf(d0, x0); dump();
scvtf(d1, x0); dump();
scvtf(d2, x0); dump();
scvtf(d4, x0); dump();
scvtf(d8, x0); dump();
scvtf(d16, x0); dump();
scvtf(d31, x0); dump();
scvtf(d7, x0); dump();
scvtf(d7, x1); dump();
scvtf(d7, x2); dump();
scvtf(d7, x4); dump();
scvtf(d7, x8); dump();
scvtf(d7, x16); dump();
scvtf(d7, x30); dump();
ucvtf(d7, x0); dump();
ucvtf(d0, x0); dump();
ucvtf(d1, x0); dump();
ucvtf(d2, x0); dump();
ucvtf(d4, x0); dump();
ucvtf(d8, x0); dump();
ucvtf(d16, x0); dump();
ucvtf(d31, x0); dump();
ucvtf(d7, x0); dump();
ucvtf(d7, x1); dump();
ucvtf(d7, x2); dump();
ucvtf(d7, x4); dump();
ucvtf(d7, x8); dump();
ucvtf(d7, x16); dump();
ucvtf(d7, x30); dump();
//DataProcFp_FloatingPointConversion5
scvtf(h7, w0, 1); dump();
scvtf(h0, w0, 1); dump();
scvtf(h1, w0, 1); dump();
scvtf(h2, w0, 1); dump();
scvtf(h4, w0, 1); dump();
scvtf(h8, w0, 1); dump();
scvtf(h16, w0, 1); dump();
scvtf(h31, w0, 1); dump();
scvtf(h7, w0, 1); dump();
scvtf(h7, w1, 1); dump();
scvtf(h7, w2, 1); dump();
scvtf(h7, w4, 1); dump();
scvtf(h7, w8, 1); dump();
scvtf(h7, w16, 1); dump();
scvtf(h7, w30, 1); dump();
scvtf(h7, w0, 1); dump();
scvtf(h7, w0, 2); dump();
scvtf(h7, w0, 4); dump();
scvtf(h7, w0, 8); dump();
scvtf(h7, w0, 16); dump();
scvtf(h7, w0, 32); dump();
ucvtf(h7, w0, 1); dump();
ucvtf(h0, w0, 1); dump();
ucvtf(h1, w0, 1); dump();
ucvtf(h2, w0, 1); dump();
ucvtf(h4, w0, 1); dump();
ucvtf(h8, w0, 1); dump();
ucvtf(h16, w0, 1); dump();
ucvtf(h31, w0, 1); dump();
ucvtf(h7, w0, 1); dump();
ucvtf(h7, w1, 1); dump();
ucvtf(h7, w2, 1); dump();
ucvtf(h7, w4, 1); dump();
ucvtf(h7, w8, 1); dump();
ucvtf(h7, w16, 1); dump();
ucvtf(h7, w30, 1); dump();
ucvtf(h7, w0, 1); dump();
ucvtf(h7, w0, 2); dump();
ucvtf(h7, w0, 4); dump();
ucvtf(h7, w0, 8); dump();
ucvtf(h7, w0, 16); dump();
ucvtf(h7, w0, 32); dump();
//DataProcFp_FloatingPointConversion5
scvtf(s7, w0, 1); dump();
scvtf(s0, w0, 1); dump();
scvtf(s1, w0, 1); dump();
scvtf(s2, w0, 1); dump();
scvtf(s4, w0, 1); dump();
scvtf(s8, w0, 1); dump();
scvtf(s16, w0, 1); dump();
scvtf(s31, w0, 1); dump();
scvtf(s7, w0, 1); dump();
scvtf(s7, w1, 1); dump();
scvtf(s7, w2, 1); dump();
scvtf(s7, w4, 1); dump();
scvtf(s7, w8, 1); dump();
scvtf(s7, w16, 1); dump();
scvtf(s7, w30, 1); dump();
scvtf(s7, w0, 1); dump();
scvtf(s7, w0, 2); dump();
scvtf(s7, w0, 4); dump();
scvtf(s7, w0, 8); dump();
scvtf(s7, w0, 16); dump();
scvtf(s7, w0, 32); dump();
ucvtf(s7, w0, 1); dump();
ucvtf(s0, w0, 1); dump();
ucvtf(s1, w0, 1); dump();
ucvtf(s2, w0, 1); dump();
ucvtf(s4, w0, 1); dump();
ucvtf(s8, w0, 1); dump();
ucvtf(s16, w0, 1); dump();
ucvtf(s31, w0, 1); dump();
ucvtf(s7, w0, 1); dump();
ucvtf(s7, w1, 1); dump();
ucvtf(s7, w2, 1); dump();
ucvtf(s7, w4, 1); dump();
ucvtf(s7, w8, 1); dump();
ucvtf(s7, w16, 1); dump();
ucvtf(s7, w30, 1); dump();
ucvtf(s7, w0, 1); dump();
ucvtf(s7, w0, 2); dump();
ucvtf(s7, w0, 4); dump();
ucvtf(s7, w0, 8); dump();
ucvtf(s7, w0, 16); dump();
ucvtf(s7, w0, 32); dump();
//DataProcFp_FloatingPointConversion5
scvtf(d7, w0, 1); dump();
scvtf(d0, w0, 1); dump();
scvtf(d1, w0, 1); dump();
scvtf(d2, w0, 1); dump();
scvtf(d4, w0, 1); dump();
scvtf(d8, w0, 1); dump();
scvtf(d16, w0, 1); dump();
scvtf(d31, w0, 1); dump();
scvtf(d7, w0, 1); dump();
scvtf(d7, w1, 1); dump();
scvtf(d7, w2, 1); dump();
scvtf(d7, w4, 1); dump();
scvtf(d7, w8, 1); dump();
scvtf(d7, w16, 1); dump();
scvtf(d7, w30, 1); dump();
scvtf(d7, w0, 1); dump();
scvtf(d7, w0, 2); dump();
scvtf(d7, w0, 4); dump();
scvtf(d7, w0, 8); dump();
scvtf(d7, w0, 16); dump();
scvtf(d7, w0, 32); dump();
ucvtf(d7, w0, 1); dump();
ucvtf(d0, w0, 1); dump();
ucvtf(d1, w0, 1); dump();
ucvtf(d2, w0, 1); dump();
ucvtf(d4, w0, 1); dump();
ucvtf(d8, w0, 1); dump();
ucvtf(d16, w0, 1); dump();
ucvtf(d31, w0, 1); dump();
ucvtf(d7, w0, 1); dump();
ucvtf(d7, w1, 1); dump();
ucvtf(d7, w2, 1); dump();
ucvtf(d7, w4, 1); dump();
ucvtf(d7, w8, 1); dump();
ucvtf(d7, w16, 1); dump();
ucvtf(d7, w30, 1); dump();
ucvtf(d7, w0, 1); dump();
ucvtf(d7, w0, 2); dump();
ucvtf(d7, w0, 4); dump();
ucvtf(d7, w0, 8); dump();
ucvtf(d7, w0, 16); dump();
ucvtf(d7, w0, 32); dump();
//DataProcFp_FloatingPointConversion5
scvtf(h7, x0, 1); dump();
scvtf(h0, x0, 1); dump();
scvtf(h1, x0, 1); dump();
scvtf(h2, x0, 1); dump();
scvtf(h4, x0, 1); dump();
scvtf(h8, x0, 1); dump();
scvtf(h16, x0, 1); dump();
scvtf(h31, x0, 1); dump();
scvtf(h7, x0, 1); dump();
scvtf(h7, x1, 1); dump();
scvtf(h7, x2, 1); dump();
scvtf(h7, x4, 1); dump();
scvtf(h7, x8, 1); dump();
scvtf(h7, x16, 1); dump();
scvtf(h7, x30, 1); dump();
scvtf(h7, x0, 1); dump();
scvtf(h7, x0, 2); dump();
scvtf(h7, x0, 4); dump();
scvtf(h7, x0, 8); dump();
scvtf(h7, x0, 16); dump();
scvtf(h7, x0, 32); dump();
scvtf(h7, x0, 64); dump();
ucvtf(h7, x0, 1); dump();
ucvtf(h0, x0, 1); dump();
ucvtf(h1, x0, 1); dump();
ucvtf(h2, x0, 1); dump();
ucvtf(h4, x0, 1); dump();
ucvtf(h8, x0, 1); dump();
ucvtf(h16, x0, 1); dump();
ucvtf(h31, x0, 1); dump();
ucvtf(h7, x0, 1); dump();
ucvtf(h7, x1, 1); dump();
ucvtf(h7, x2, 1); dump();
ucvtf(h7, x4, 1); dump();
ucvtf(h7, x8, 1); dump();
ucvtf(h7, x16, 1); dump();
ucvtf(h7, x30, 1); dump();
ucvtf(h7, x0, 1); dump();
ucvtf(h7, x0, 2); dump();
ucvtf(h7, x0, 4); dump();
ucvtf(h7, x0, 8); dump();
ucvtf(h7, x0, 16); dump();
ucvtf(h7, x0, 32); dump();
ucvtf(h7, x0, 64); dump();
//DataProcFp_FloatingPointConversion5
scvtf(s7, x0, 1); dump();
scvtf(s0, x0, 1); dump();
scvtf(s1, x0, 1); dump();
scvtf(s2, x0, 1); dump();
scvtf(s4, x0, 1); dump();
scvtf(s8, x0, 1); dump();
scvtf(s16, x0, 1); dump();
scvtf(s31, x0, 1); dump();
scvtf(s7, x0, 1); dump();
scvtf(s7, x1, 1); dump();
scvtf(s7, x2, 1); dump();
scvtf(s7, x4, 1); dump();
scvtf(s7, x8, 1); dump();
scvtf(s7, x16, 1); dump();
scvtf(s7, x30, 1); dump();
scvtf(s7, x0, 1); dump();
scvtf(s7, x0, 2); dump();
scvtf(s7, x0, 4); dump();
scvtf(s7, x0, 8); dump();
scvtf(s7, x0, 16); dump();
scvtf(s7, x0, 32); dump();
scvtf(s7, x0, 64); dump();
ucvtf(s7, x0, 1); dump();
ucvtf(s0, x0, 1); dump();
ucvtf(s1, x0, 1); dump();
ucvtf(s2, x0, 1); dump();
ucvtf(s4, x0, 1); dump();
ucvtf(s8, x0, 1); dump();
ucvtf(s16, x0, 1); dump();
ucvtf(s31, x0, 1); dump();
ucvtf(s7, x0, 1); dump();
ucvtf(s7, x1, 1); dump();
ucvtf(s7, x2, 1); dump();
ucvtf(s7, x4, 1); dump();
ucvtf(s7, x8, 1); dump();
ucvtf(s7, x16, 1); dump();
ucvtf(s7, x30, 1); dump();
ucvtf(s7, x0, 1); dump();
ucvtf(s7, x0, 2); dump();
ucvtf(s7, x0, 4); dump();
ucvtf(s7, x0, 8); dump();
ucvtf(s7, x0, 16); dump();
ucvtf(s7, x0, 32); dump();
ucvtf(s7, x0, 64); dump();
//DataProcFp_FloatingPointConversion5
scvtf(d7, x0, 1); dump();
scvtf(d0, x0, 1); dump();
scvtf(d1, x0, 1); dump();
scvtf(d2, x0, 1); dump();
scvtf(d4, x0, 1); dump();
scvtf(d8, x0, 1); dump();
scvtf(d16, x0, 1); dump();
scvtf(d31, x0, 1); dump();
scvtf(d7, x0, 1); dump();
scvtf(d7, x1, 1); dump();
scvtf(d7, x2, 1); dump();
scvtf(d7, x4, 1); dump();
scvtf(d7, x8, 1); dump();
scvtf(d7, x16, 1); dump();
scvtf(d7, x30, 1); dump();
scvtf(d7, x0, 1); dump();
scvtf(d7, x0, 2); dump();
scvtf(d7, x0, 4); dump();
scvtf(d7, x0, 8); dump();
scvtf(d7, x0, 16); dump();
scvtf(d7, x0, 32); dump();
scvtf(d7, x0, 64); dump();
ucvtf(d7, x0, 1); dump();
ucvtf(d0, x0, 1); dump();
ucvtf(d1, x0, 1); dump();
ucvtf(d2, x0, 1); dump();
ucvtf(d4, x0, 1); dump();
ucvtf(d8, x0, 1); dump();
ucvtf(d16, x0, 1); dump();
ucvtf(d31, x0, 1); dump();
ucvtf(d7, x0, 1); dump();
ucvtf(d7, x1, 1); dump();
ucvtf(d7, x2, 1); dump();
ucvtf(d7, x4, 1); dump();
ucvtf(d7, x8, 1); dump();
ucvtf(d7, x16, 1); dump();
ucvtf(d7, x30, 1); dump();
ucvtf(d7, x0, 1); dump();
ucvtf(d7, x0, 2); dump();
ucvtf(d7, x0, 4); dump();
ucvtf(d7, x0, 8); dump();
ucvtf(d7, x0, 16); dump();
ucvtf(d7, x0, 32); dump();
ucvtf(d7, x0, 64); dump();
//DataProcFp_FloatingPointRoundToInteger0
frinta(h7, h7); dump();
frinta(h0, h7); dump();
frinta(h1, h7); dump();
frinta(h2, h7); dump();
frinta(h4, h7); dump();
frinta(h8, h7); dump();
frinta(h16, h7); dump();
frinta(h31, h7); dump();
frinta(h7, h7); dump();
frinta(h7, h0); dump();
frinta(h7, h1); dump();
frinta(h7, h2); dump();
frinta(h7, h4); dump();
frinta(h7, h8); dump();
frinta(h7, h16); dump();
frinta(h7, h31); dump();
frinti(h7, h7); dump();
frinti(h0, h7); dump();
frinti(h1, h7); dump();
frinti(h2, h7); dump();
frinti(h4, h7); dump();
frinti(h8, h7); dump();
frinti(h16, h7); dump();
frinti(h31, h7); dump();
frinti(h7, h7); dump();
frinti(h7, h0); dump();
frinti(h7, h1); dump();
frinti(h7, h2); dump();
frinti(h7, h4); dump();
frinti(h7, h8); dump();
frinti(h7, h16); dump();
frinti(h7, h31); dump();
frintm(h7, h7); dump();
frintm(h0, h7); dump();
frintm(h1, h7); dump();
frintm(h2, h7); dump();
frintm(h4, h7); dump();
frintm(h8, h7); dump();
frintm(h16, h7); dump();
frintm(h31, h7); dump();
frintm(h7, h7); dump();
frintm(h7, h0); dump();
frintm(h7, h1); dump();
frintm(h7, h2); dump();
frintm(h7, h4); dump();
frintm(h7, h8); dump();
frintm(h7, h16); dump();
frintm(h7, h31); dump();
frintn(h7, h7); dump();
frintn(h0, h7); dump();
frintn(h1, h7); dump();
frintn(h2, h7); dump();
frintn(h4, h7); dump();
frintn(h8, h7); dump();
frintn(h16, h7); dump();
frintn(h31, h7); dump();
frintn(h7, h7); dump();
frintn(h7, h0); dump();
frintn(h7, h1); dump();
frintn(h7, h2); dump();
frintn(h7, h4); dump();
frintn(h7, h8); dump();
frintn(h7, h16); dump();
frintn(h7, h31); dump();
frintp(h7, h7); dump();
frintp(h0, h7); dump();
frintp(h1, h7); dump();
frintp(h2, h7); dump();
frintp(h4, h7); dump();
frintp(h8, h7); dump();
frintp(h16, h7); dump();
frintp(h31, h7); dump();
frintp(h7, h7); dump();
frintp(h7, h0); dump();
frintp(h7, h1); dump();
frintp(h7, h2); dump();
frintp(h7, h4); dump();
frintp(h7, h8); dump();
frintp(h7, h16); dump();
frintp(h7, h31); dump();
frintx(h7, h7); dump();
frintx(h0, h7); dump();
frintx(h1, h7); dump();
frintx(h2, h7); dump();
frintx(h4, h7); dump();
frintx(h8, h7); dump();
frintx(h16, h7); dump();
frintx(h31, h7); dump();
frintx(h7, h7); dump();
frintx(h7, h0); dump();
frintx(h7, h1); dump();
frintx(h7, h2); dump();
frintx(h7, h4); dump();
frintx(h7, h8); dump();
frintx(h7, h16); dump();
frintx(h7, h31); dump();
frintz(h7, h7); dump();
frintz(h0, h7); dump();
frintz(h1, h7); dump();
frintz(h2, h7); dump();
frintz(h4, h7); dump();
frintz(h8, h7); dump();
frintz(h16, h7); dump();
frintz(h31, h7); dump();
frintz(h7, h7); dump();
frintz(h7, h0); dump();
frintz(h7, h1); dump();
frintz(h7, h2); dump();
frintz(h7, h4); dump();
frintz(h7, h8); dump();
frintz(h7, h16); dump();
frintz(h7, h31); dump();
//DataProcFp_FloatingPointRoundToInteger0
frinta(s7, s7); dump();
frinta(s0, s7); dump();
frinta(s1, s7); dump();
frinta(s2, s7); dump();
frinta(s4, s7); dump();
frinta(s8, s7); dump();
frinta(s16, s7); dump();
frinta(s31, s7); dump();
frinta(s7, s7); dump();
frinta(s7, s0); dump();
frinta(s7, s1); dump();
frinta(s7, s2); dump();
frinta(s7, s4); dump();
frinta(s7, s8); dump();
frinta(s7, s16); dump();
frinta(s7, s31); dump();
frinti(s7, s7); dump();
frinti(s0, s7); dump();
frinti(s1, s7); dump();
frinti(s2, s7); dump();
frinti(s4, s7); dump();
frinti(s8, s7); dump();
frinti(s16, s7); dump();
frinti(s31, s7); dump();
frinti(s7, s7); dump();
frinti(s7, s0); dump();
frinti(s7, s1); dump();
frinti(s7, s2); dump();
frinti(s7, s4); dump();
frinti(s7, s8); dump();
frinti(s7, s16); dump();
frinti(s7, s31); dump();
frintm(s7, s7); dump();
frintm(s0, s7); dump();
frintm(s1, s7); dump();
frintm(s2, s7); dump();
frintm(s4, s7); dump();
frintm(s8, s7); dump();
frintm(s16, s7); dump();
frintm(s31, s7); dump();
frintm(s7, s7); dump();
frintm(s7, s0); dump();
frintm(s7, s1); dump();
frintm(s7, s2); dump();
frintm(s7, s4); dump();
frintm(s7, s8); dump();
frintm(s7, s16); dump();
frintm(s7, s31); dump();
frintn(s7, s7); dump();
frintn(s0, s7); dump();
frintn(s1, s7); dump();
frintn(s2, s7); dump();
frintn(s4, s7); dump();
frintn(s8, s7); dump();
frintn(s16, s7); dump();
frintn(s31, s7); dump();
frintn(s7, s7); dump();
frintn(s7, s0); dump();
frintn(s7, s1); dump();
frintn(s7, s2); dump();
frintn(s7, s4); dump();
frintn(s7, s8); dump();
frintn(s7, s16); dump();
frintn(s7, s31); dump();
frintp(s7, s7); dump();
frintp(s0, s7); dump();
frintp(s1, s7); dump();
frintp(s2, s7); dump();
frintp(s4, s7); dump();
frintp(s8, s7); dump();
frintp(s16, s7); dump();
frintp(s31, s7); dump();
frintp(s7, s7); dump();
frintp(s7, s0); dump();
frintp(s7, s1); dump();
frintp(s7, s2); dump();
frintp(s7, s4); dump();
frintp(s7, s8); dump();
frintp(s7, s16); dump();
frintp(s7, s31); dump();
frintx(s7, s7); dump();
frintx(s0, s7); dump();
frintx(s1, s7); dump();
frintx(s2, s7); dump();
frintx(s4, s7); dump();
frintx(s8, s7); dump();
frintx(s16, s7); dump();
frintx(s31, s7); dump();
frintx(s7, s7); dump();
frintx(s7, s0); dump();
frintx(s7, s1); dump();
frintx(s7, s2); dump();
frintx(s7, s4); dump();
frintx(s7, s8); dump();
frintx(s7, s16); dump();
frintx(s7, s31); dump();
frintz(s7, s7); dump();
frintz(s0, s7); dump();
frintz(s1, s7); dump();
frintz(s2, s7); dump();
frintz(s4, s7); dump();
frintz(s8, s7); dump();
frintz(s16, s7); dump();
frintz(s31, s7); dump();
frintz(s7, s7); dump();
frintz(s7, s0); dump();
frintz(s7, s1); dump();
frintz(s7, s2); dump();
frintz(s7, s4); dump();
frintz(s7, s8); dump();
frintz(s7, s16); dump();
frintz(s7, s31); dump();
//DataProcFp_FloatingPointRoundToInteger0
frinta(d7, d7); dump();
frinta(d0, d7); dump();
frinta(d1, d7); dump();
frinta(d2, d7); dump();
frinta(d4, d7); dump();
frinta(d8, d7); dump();
frinta(d16, d7); dump();
frinta(d31, d7); dump();
frinta(d7, d7); dump();
frinta(d7, d0); dump();
frinta(d7, d1); dump();
frinta(d7, d2); dump();
frinta(d7, d4); dump();
frinta(d7, d8); dump();
frinta(d7, d16); dump();
frinta(d7, d31); dump();
frinti(d7, d7); dump();
frinti(d0, d7); dump();
frinti(d1, d7); dump();
frinti(d2, d7); dump();
frinti(d4, d7); dump();
frinti(d8, d7); dump();
frinti(d16, d7); dump();
frinti(d31, d7); dump();
frinti(d7, d7); dump();
frinti(d7, d0); dump();
frinti(d7, d1); dump();
frinti(d7, d2); dump();
frinti(d7, d4); dump();
frinti(d7, d8); dump();
frinti(d7, d16); dump();
frinti(d7, d31); dump();
frintm(d7, d7); dump();
frintm(d0, d7); dump();
frintm(d1, d7); dump();
frintm(d2, d7); dump();
frintm(d4, d7); dump();
frintm(d8, d7); dump();
frintm(d16, d7); dump();
frintm(d31, d7); dump();
frintm(d7, d7); dump();
frintm(d7, d0); dump();
frintm(d7, d1); dump();
frintm(d7, d2); dump();
frintm(d7, d4); dump();
frintm(d7, d8); dump();
frintm(d7, d16); dump();
frintm(d7, d31); dump();
frintn(d7, d7); dump();
frintn(d0, d7); dump();
frintn(d1, d7); dump();
frintn(d2, d7); dump();
frintn(d4, d7); dump();
frintn(d8, d7); dump();
frintn(d16, d7); dump();
frintn(d31, d7); dump();
frintn(d7, d7); dump();
frintn(d7, d0); dump();
frintn(d7, d1); dump();
frintn(d7, d2); dump();
frintn(d7, d4); dump();
frintn(d7, d8); dump();
frintn(d7, d16); dump();
frintn(d7, d31); dump();
frintp(d7, d7); dump();
frintp(d0, d7); dump();
frintp(d1, d7); dump();
frintp(d2, d7); dump();
frintp(d4, d7); dump();
frintp(d8, d7); dump();
frintp(d16, d7); dump();
frintp(d31, d7); dump();
frintp(d7, d7); dump();
frintp(d7, d0); dump();
frintp(d7, d1); dump();
frintp(d7, d2); dump();
frintp(d7, d4); dump();
frintp(d7, d8); dump();
frintp(d7, d16); dump();
frintp(d7, d31); dump();
frintx(d7, d7); dump();
frintx(d0, d7); dump();
frintx(d1, d7); dump();
frintx(d2, d7); dump();
frintx(d4, d7); dump();
frintx(d8, d7); dump();
frintx(d16, d7); dump();
frintx(d31, d7); dump();
frintx(d7, d7); dump();
frintx(d7, d0); dump();
frintx(d7, d1); dump();
frintx(d7, d2); dump();
frintx(d7, d4); dump();
frintx(d7, d8); dump();
frintx(d7, d16); dump();
frintx(d7, d31); dump();
frintz(d7, d7); dump();
frintz(d0, d7); dump();
frintz(d1, d7); dump();
frintz(d2, d7); dump();
frintz(d4, d7); dump();
frintz(d8, d7); dump();
frintz(d16, d7); dump();
frintz(d31, d7); dump();
frintz(d7, d7); dump();
frintz(d7, d0); dump();
frintz(d7, d1); dump();
frintz(d7, d2); dump();
frintz(d7, d4); dump();
frintz(d7, d8); dump();
frintz(d7, d16); dump();
frintz(d7, d31); dump();
//DataProcFp_FloatingPointMultiplyAdd0
fmadd(h7, h7, h7, h7); dump();
fmadd(h0, h7, h7, h7); dump();
fmadd(h1, h7, h7, h7); dump();
fmadd(h2, h7, h7, h7); dump();
fmadd(h4, h7, h7, h7); dump();
fmadd(h8, h7, h7, h7); dump();
fmadd(h16, h7, h7, h7); dump();
fmadd(h31, h7, h7, h7); dump();
fmadd(h7, h7, h7, h7); dump();
fmadd(h7, h0, h7, h7); dump();
fmadd(h7, h1, h7, h7); dump();
fmadd(h7, h2, h7, h7); dump();
fmadd(h7, h4, h7, h7); dump();
fmadd(h7, h8, h7, h7); dump();
fmadd(h7, h16, h7, h7); dump();
fmadd(h7, h31, h7, h7); dump();
fmadd(h7, h7, h7, h7); dump();
fmadd(h7, h7, h0, h7); dump();
fmadd(h7, h7, h1, h7); dump();
fmadd(h7, h7, h2, h7); dump();
fmadd(h7, h7, h4, h7); dump();
fmadd(h7, h7, h8, h7); dump();
fmadd(h7, h7, h16, h7); dump();
fmadd(h7, h7, h31, h7); dump();
fmadd(h7, h7, h7, h7); dump();
fmadd(h7, h7, h7, h0); dump();
fmadd(h7, h7, h7, h1); dump();
fmadd(h7, h7, h7, h2); dump();
fmadd(h7, h7, h7, h4); dump();
fmadd(h7, h7, h7, h8); dump();
fmadd(h7, h7, h7, h16); dump();
fmadd(h7, h7, h7, h31); dump();
fmsub(h7, h7, h7, h7); dump();
fmsub(h0, h7, h7, h7); dump();
fmsub(h1, h7, h7, h7); dump();
fmsub(h2, h7, h7, h7); dump();
fmsub(h4, h7, h7, h7); dump();
fmsub(h8, h7, h7, h7); dump();
fmsub(h16, h7, h7, h7); dump();
fmsub(h31, h7, h7, h7); dump();
fmsub(h7, h7, h7, h7); dump();
fmsub(h7, h0, h7, h7); dump();
fmsub(h7, h1, h7, h7); dump();
fmsub(h7, h2, h7, h7); dump();
fmsub(h7, h4, h7, h7); dump();
fmsub(h7, h8, h7, h7); dump();
fmsub(h7, h16, h7, h7); dump();
fmsub(h7, h31, h7, h7); dump();
fmsub(h7, h7, h7, h7); dump();
fmsub(h7, h7, h0, h7); dump();
fmsub(h7, h7, h1, h7); dump();
fmsub(h7, h7, h2, h7); dump();
fmsub(h7, h7, h4, h7); dump();
fmsub(h7, h7, h8, h7); dump();
fmsub(h7, h7, h16, h7); dump();
fmsub(h7, h7, h31, h7); dump();
fmsub(h7, h7, h7, h7); dump();
fmsub(h7, h7, h7, h0); dump();
fmsub(h7, h7, h7, h1); dump();
fmsub(h7, h7, h7, h2); dump();
fmsub(h7, h7, h7, h4); dump();
fmsub(h7, h7, h7, h8); dump();
fmsub(h7, h7, h7, h16); dump();
fmsub(h7, h7, h7, h31); dump();
fnmadd(h7, h7, h7, h7); dump();
fnmadd(h0, h7, h7, h7); dump();
fnmadd(h1, h7, h7, h7); dump();
fnmadd(h2, h7, h7, h7); dump();
fnmadd(h4, h7, h7, h7); dump();
fnmadd(h8, h7, h7, h7); dump();
fnmadd(h16, h7, h7, h7); dump();
fnmadd(h31, h7, h7, h7); dump();
fnmadd(h7, h7, h7, h7); dump();
fnmadd(h7, h0, h7, h7); dump();
fnmadd(h7, h1, h7, h7); dump();
fnmadd(h7, h2, h7, h7); dump();
fnmadd(h7, h4, h7, h7); dump();
fnmadd(h7, h8, h7, h7); dump();
fnmadd(h7, h16, h7, h7); dump();
fnmadd(h7, h31, h7, h7); dump();
fnmadd(h7, h7, h7, h7); dump();
fnmadd(h7, h7, h0, h7); dump();
fnmadd(h7, h7, h1, h7); dump();
fnmadd(h7, h7, h2, h7); dump();
fnmadd(h7, h7, h4, h7); dump();
fnmadd(h7, h7, h8, h7); dump();
fnmadd(h7, h7, h16, h7); dump();
fnmadd(h7, h7, h31, h7); dump();
fnmadd(h7, h7, h7, h7); dump();
fnmadd(h7, h7, h7, h0); dump();
fnmadd(h7, h7, h7, h1); dump();
fnmadd(h7, h7, h7, h2); dump();
fnmadd(h7, h7, h7, h4); dump();
fnmadd(h7, h7, h7, h8); dump();
fnmadd(h7, h7, h7, h16); dump();
fnmadd(h7, h7, h7, h31); dump();
fnmsub(h7, h7, h7, h7); dump();
fnmsub(h0, h7, h7, h7); dump();
fnmsub(h1, h7, h7, h7); dump();
fnmsub(h2, h7, h7, h7); dump();
fnmsub(h4, h7, h7, h7); dump();
fnmsub(h8, h7, h7, h7); dump();
fnmsub(h16, h7, h7, h7); dump();
fnmsub(h31, h7, h7, h7); dump();
fnmsub(h7, h7, h7, h7); dump();
fnmsub(h7, h0, h7, h7); dump();
fnmsub(h7, h1, h7, h7); dump();
fnmsub(h7, h2, h7, h7); dump();
fnmsub(h7, h4, h7, h7); dump();
fnmsub(h7, h8, h7, h7); dump();
fnmsub(h7, h16, h7, h7); dump();
fnmsub(h7, h31, h7, h7); dump();
fnmsub(h7, h7, h7, h7); dump();
fnmsub(h7, h7, h0, h7); dump();
fnmsub(h7, h7, h1, h7); dump();
fnmsub(h7, h7, h2, h7); dump();
fnmsub(h7, h7, h4, h7); dump();
fnmsub(h7, h7, h8, h7); dump();
fnmsub(h7, h7, h16, h7); dump();
fnmsub(h7, h7, h31, h7); dump();
fnmsub(h7, h7, h7, h7); dump();
fnmsub(h7, h7, h7, h0); dump();
fnmsub(h7, h7, h7, h1); dump();
fnmsub(h7, h7, h7, h2); dump();
fnmsub(h7, h7, h7, h4); dump();
fnmsub(h7, h7, h7, h8); dump();
fnmsub(h7, h7, h7, h16); dump();
fnmsub(h7, h7, h7, h31); dump();
//DataProcFp_FloatingPointMultiplyAdd0
fmadd(s7, s7, s7, s7); dump();
fmadd(s0, s7, s7, s7); dump();
fmadd(s1, s7, s7, s7); dump();
fmadd(s2, s7, s7, s7); dump();
fmadd(s4, s7, s7, s7); dump();
fmadd(s8, s7, s7, s7); dump();
fmadd(s16, s7, s7, s7); dump();
fmadd(s31, s7, s7, s7); dump();
fmadd(s7, s7, s7, s7); dump();
fmadd(s7, s0, s7, s7); dump();
fmadd(s7, s1, s7, s7); dump();
fmadd(s7, s2, s7, s7); dump();
fmadd(s7, s4, s7, s7); dump();
fmadd(s7, s8, s7, s7); dump();
fmadd(s7, s16, s7, s7); dump();
fmadd(s7, s31, s7, s7); dump();
fmadd(s7, s7, s7, s7); dump();
fmadd(s7, s7, s0, s7); dump();
fmadd(s7, s7, s1, s7); dump();
fmadd(s7, s7, s2, s7); dump();
fmadd(s7, s7, s4, s7); dump();
fmadd(s7, s7, s8, s7); dump();
fmadd(s7, s7, s16, s7); dump();
fmadd(s7, s7, s31, s7); dump();
fmadd(s7, s7, s7, s7); dump();
fmadd(s7, s7, s7, s0); dump();
fmadd(s7, s7, s7, s1); dump();
fmadd(s7, s7, s7, s2); dump();
fmadd(s7, s7, s7, s4); dump();
fmadd(s7, s7, s7, s8); dump();
fmadd(s7, s7, s7, s16); dump();
fmadd(s7, s7, s7, s31); dump();
fmsub(s7, s7, s7, s7); dump();
fmsub(s0, s7, s7, s7); dump();
fmsub(s1, s7, s7, s7); dump();
fmsub(s2, s7, s7, s7); dump();
fmsub(s4, s7, s7, s7); dump();
fmsub(s8, s7, s7, s7); dump();
fmsub(s16, s7, s7, s7); dump();
fmsub(s31, s7, s7, s7); dump();
fmsub(s7, s7, s7, s7); dump();
fmsub(s7, s0, s7, s7); dump();
fmsub(s7, s1, s7, s7); dump();
fmsub(s7, s2, s7, s7); dump();
fmsub(s7, s4, s7, s7); dump();
fmsub(s7, s8, s7, s7); dump();
fmsub(s7, s16, s7, s7); dump();
fmsub(s7, s31, s7, s7); dump();
fmsub(s7, s7, s7, s7); dump();
fmsub(s7, s7, s0, s7); dump();
fmsub(s7, s7, s1, s7); dump();
fmsub(s7, s7, s2, s7); dump();
fmsub(s7, s7, s4, s7); dump();
fmsub(s7, s7, s8, s7); dump();
fmsub(s7, s7, s16, s7); dump();
fmsub(s7, s7, s31, s7); dump();
fmsub(s7, s7, s7, s7); dump();
fmsub(s7, s7, s7, s0); dump();
fmsub(s7, s7, s7, s1); dump();
fmsub(s7, s7, s7, s2); dump();
fmsub(s7, s7, s7, s4); dump();
fmsub(s7, s7, s7, s8); dump();
fmsub(s7, s7, s7, s16); dump();
fmsub(s7, s7, s7, s31); dump();
fnmadd(s7, s7, s7, s7); dump();
fnmadd(s0, s7, s7, s7); dump();
fnmadd(s1, s7, s7, s7); dump();
fnmadd(s2, s7, s7, s7); dump();
fnmadd(s4, s7, s7, s7); dump();
fnmadd(s8, s7, s7, s7); dump();
fnmadd(s16, s7, s7, s7); dump();
fnmadd(s31, s7, s7, s7); dump();
fnmadd(s7, s7, s7, s7); dump();
fnmadd(s7, s0, s7, s7); dump();
fnmadd(s7, s1, s7, s7); dump();
fnmadd(s7, s2, s7, s7); dump();
fnmadd(s7, s4, s7, s7); dump();
fnmadd(s7, s8, s7, s7); dump();
fnmadd(s7, s16, s7, s7); dump();
fnmadd(s7, s31, s7, s7); dump();
fnmadd(s7, s7, s7, s7); dump();
fnmadd(s7, s7, s0, s7); dump();
fnmadd(s7, s7, s1, s7); dump();
fnmadd(s7, s7, s2, s7); dump();
fnmadd(s7, s7, s4, s7); dump();
fnmadd(s7, s7, s8, s7); dump();
fnmadd(s7, s7, s16, s7); dump();
fnmadd(s7, s7, s31, s7); dump();
fnmadd(s7, s7, s7, s7); dump();
fnmadd(s7, s7, s7, s0); dump();
fnmadd(s7, s7, s7, s1); dump();
fnmadd(s7, s7, s7, s2); dump();
fnmadd(s7, s7, s7, s4); dump();
fnmadd(s7, s7, s7, s8); dump();
fnmadd(s7, s7, s7, s16); dump();
fnmadd(s7, s7, s7, s31); dump();
fnmsub(s7, s7, s7, s7); dump();
fnmsub(s0, s7, s7, s7); dump();
fnmsub(s1, s7, s7, s7); dump();
fnmsub(s2, s7, s7, s7); dump();
fnmsub(s4, s7, s7, s7); dump();
fnmsub(s8, s7, s7, s7); dump();
fnmsub(s16, s7, s7, s7); dump();
fnmsub(s31, s7, s7, s7); dump();
fnmsub(s7, s7, s7, s7); dump();
fnmsub(s7, s0, s7, s7); dump();
fnmsub(s7, s1, s7, s7); dump();
fnmsub(s7, s2, s7, s7); dump();
fnmsub(s7, s4, s7, s7); dump();
fnmsub(s7, s8, s7, s7); dump();
fnmsub(s7, s16, s7, s7); dump();
fnmsub(s7, s31, s7, s7); dump();
fnmsub(s7, s7, s7, s7); dump();
fnmsub(s7, s7, s0, s7); dump();
fnmsub(s7, s7, s1, s7); dump();
fnmsub(s7, s7, s2, s7); dump();
fnmsub(s7, s7, s4, s7); dump();
fnmsub(s7, s7, s8, s7); dump();
fnmsub(s7, s7, s16, s7); dump();
fnmsub(s7, s7, s31, s7); dump();
fnmsub(s7, s7, s7, s7); dump();
fnmsub(s7, s7, s7, s0); dump();
fnmsub(s7, s7, s7, s1); dump();
fnmsub(s7, s7, s7, s2); dump();
fnmsub(s7, s7, s7, s4); dump();
fnmsub(s7, s7, s7, s8); dump();
fnmsub(s7, s7, s7, s16); dump();
fnmsub(s7, s7, s7, s31); dump();
//DataProcFp_FloatingPointMultiplyAdd0
fmadd(d7, d7, d7, d7); dump();
fmadd(d0, d7, d7, d7); dump();
fmadd(d1, d7, d7, d7); dump();
fmadd(d2, d7, d7, d7); dump();
fmadd(d4, d7, d7, d7); dump();
fmadd(d8, d7, d7, d7); dump();
fmadd(d16, d7, d7, d7); dump();
fmadd(d31, d7, d7, d7); dump();
fmadd(d7, d7, d7, d7); dump();
fmadd(d7, d0, d7, d7); dump();
fmadd(d7, d1, d7, d7); dump();
fmadd(d7, d2, d7, d7); dump();
fmadd(d7, d4, d7, d7); dump();
fmadd(d7, d8, d7, d7); dump();
fmadd(d7, d16, d7, d7); dump();
fmadd(d7, d31, d7, d7); dump();
fmadd(d7, d7, d7, d7); dump();
fmadd(d7, d7, d0, d7); dump();
fmadd(d7, d7, d1, d7); dump();
fmadd(d7, d7, d2, d7); dump();
fmadd(d7, d7, d4, d7); dump();
fmadd(d7, d7, d8, d7); dump();
fmadd(d7, d7, d16, d7); dump();
fmadd(d7, d7, d31, d7); dump();
fmadd(d7, d7, d7, d7); dump();
fmadd(d7, d7, d7, d0); dump();
fmadd(d7, d7, d7, d1); dump();
fmadd(d7, d7, d7, d2); dump();
fmadd(d7, d7, d7, d4); dump();
fmadd(d7, d7, d7, d8); dump();
fmadd(d7, d7, d7, d16); dump();
fmadd(d7, d7, d7, d31); dump();
fmsub(d7, d7, d7, d7); dump();
fmsub(d0, d7, d7, d7); dump();
fmsub(d1, d7, d7, d7); dump();
fmsub(d2, d7, d7, d7); dump();
fmsub(d4, d7, d7, d7); dump();
fmsub(d8, d7, d7, d7); dump();
fmsub(d16, d7, d7, d7); dump();
fmsub(d31, d7, d7, d7); dump();
fmsub(d7, d7, d7, d7); dump();
fmsub(d7, d0, d7, d7); dump();
fmsub(d7, d1, d7, d7); dump();
fmsub(d7, d2, d7, d7); dump();
fmsub(d7, d4, d7, d7); dump();
fmsub(d7, d8, d7, d7); dump();
fmsub(d7, d16, d7, d7); dump();
fmsub(d7, d31, d7, d7); dump();
fmsub(d7, d7, d7, d7); dump();
fmsub(d7, d7, d0, d7); dump();
fmsub(d7, d7, d1, d7); dump();
fmsub(d7, d7, d2, d7); dump();
fmsub(d7, d7, d4, d7); dump();
fmsub(d7, d7, d8, d7); dump();
fmsub(d7, d7, d16, d7); dump();
fmsub(d7, d7, d31, d7); dump();
fmsub(d7, d7, d7, d7); dump();
fmsub(d7, d7, d7, d0); dump();
fmsub(d7, d7, d7, d1); dump();
fmsub(d7, d7, d7, d2); dump();
fmsub(d7, d7, d7, d4); dump();
fmsub(d7, d7, d7, d8); dump();
fmsub(d7, d7, d7, d16); dump();
fmsub(d7, d7, d7, d31); dump();
fnmadd(d7, d7, d7, d7); dump();
fnmadd(d0, d7, d7, d7); dump();
fnmadd(d1, d7, d7, d7); dump();
fnmadd(d2, d7, d7, d7); dump();
fnmadd(d4, d7, d7, d7); dump();
fnmadd(d8, d7, d7, d7); dump();
fnmadd(d16, d7, d7, d7); dump();
fnmadd(d31, d7, d7, d7); dump();
fnmadd(d7, d7, d7, d7); dump();
fnmadd(d7, d0, d7, d7); dump();
fnmadd(d7, d1, d7, d7); dump();
fnmadd(d7, d2, d7, d7); dump();
fnmadd(d7, d4, d7, d7); dump();
fnmadd(d7, d8, d7, d7); dump();
fnmadd(d7, d16, d7, d7); dump();
fnmadd(d7, d31, d7, d7); dump();
fnmadd(d7, d7, d7, d7); dump();
fnmadd(d7, d7, d0, d7); dump();
fnmadd(d7, d7, d1, d7); dump();
fnmadd(d7, d7, d2, d7); dump();
fnmadd(d7, d7, d4, d7); dump();
fnmadd(d7, d7, d8, d7); dump();
fnmadd(d7, d7, d16, d7); dump();
fnmadd(d7, d7, d31, d7); dump();
fnmadd(d7, d7, d7, d7); dump();
fnmadd(d7, d7, d7, d0); dump();
fnmadd(d7, d7, d7, d1); dump();
fnmadd(d7, d7, d7, d2); dump();
fnmadd(d7, d7, d7, d4); dump();
fnmadd(d7, d7, d7, d8); dump();
fnmadd(d7, d7, d7, d16); dump();
fnmadd(d7, d7, d7, d31); dump();
fnmsub(d7, d7, d7, d7); dump();
fnmsub(d0, d7, d7, d7); dump();
fnmsub(d1, d7, d7, d7); dump();
fnmsub(d2, d7, d7, d7); dump();
fnmsub(d4, d7, d7, d7); dump();
fnmsub(d8, d7, d7, d7); dump();
fnmsub(d16, d7, d7, d7); dump();
fnmsub(d31, d7, d7, d7); dump();
fnmsub(d7, d7, d7, d7); dump();
fnmsub(d7, d0, d7, d7); dump();
fnmsub(d7, d1, d7, d7); dump();
fnmsub(d7, d2, d7, d7); dump();
fnmsub(d7, d4, d7, d7); dump();
fnmsub(d7, d8, d7, d7); dump();
fnmsub(d7, d16, d7, d7); dump();
fnmsub(d7, d31, d7, d7); dump();
fnmsub(d7, d7, d7, d7); dump();
fnmsub(d7, d7, d0, d7); dump();
fnmsub(d7, d7, d1, d7); dump();
fnmsub(d7, d7, d2, d7); dump();
fnmsub(d7, d7, d4, d7); dump();
fnmsub(d7, d7, d8, d7); dump();
fnmsub(d7, d7, d16, d7); dump();
fnmsub(d7, d7, d31, d7); dump();
fnmsub(d7, d7, d7, d7); dump();
fnmsub(d7, d7, d7, d0); dump();
fnmsub(d7, d7, d7, d1); dump();
fnmsub(d7, d7, d7, d2); dump();
fnmsub(d7, d7, d7, d4); dump();
fnmsub(d7, d7, d7, d8); dump();
fnmsub(d7, d7, d7, d16); dump();
fnmsub(d7, d7, d7, d31); dump();
//DataProcFp_FloatingPointArithmeticOneSource0
fabs(h7, h7); dump();
fabs(h0, h7); dump();
fabs(h1, h7); dump();
fabs(h2, h7); dump();
fabs(h4, h7); dump();
fabs(h8, h7); dump();
fabs(h16, h7); dump();
fabs(h31, h7); dump();
fabs(h7, h7); dump();
fabs(h7, h0); dump();
fabs(h7, h1); dump();
fabs(h7, h2); dump();
fabs(h7, h4); dump();
fabs(h7, h8); dump();
fabs(h7, h16); dump();
fabs(h7, h31); dump();
fneg(h7, h7); dump();
fneg(h0, h7); dump();
fneg(h1, h7); dump();
fneg(h2, h7); dump();
fneg(h4, h7); dump();
fneg(h8, h7); dump();
fneg(h16, h7); dump();
fneg(h31, h7); dump();
fneg(h7, h7); dump();
fneg(h7, h0); dump();
fneg(h7, h1); dump();
fneg(h7, h2); dump();
fneg(h7, h4); dump();
fneg(h7, h8); dump();
fneg(h7, h16); dump();
fneg(h7, h31); dump();
fsqrt(h7, h7); dump();
fsqrt(h0, h7); dump();
fsqrt(h1, h7); dump();
fsqrt(h2, h7); dump();
fsqrt(h4, h7); dump();
fsqrt(h8, h7); dump();
fsqrt(h16, h7); dump();
fsqrt(h31, h7); dump();
fsqrt(h7, h7); dump();
fsqrt(h7, h0); dump();
fsqrt(h7, h1); dump();
fsqrt(h7, h2); dump();
fsqrt(h7, h4); dump();
fsqrt(h7, h8); dump();
fsqrt(h7, h16); dump();
fsqrt(h7, h31); dump();
//DataProcFp_FloatingPointArithmeticOneSource0
fabs(s7, s7); dump();
fabs(s0, s7); dump();
fabs(s1, s7); dump();
fabs(s2, s7); dump();
fabs(s4, s7); dump();
fabs(s8, s7); dump();
fabs(s16, s7); dump();
fabs(s31, s7); dump();
fabs(s7, s7); dump();
fabs(s7, s0); dump();
fabs(s7, s1); dump();
fabs(s7, s2); dump();
fabs(s7, s4); dump();
fabs(s7, s8); dump();
fabs(s7, s16); dump();
fabs(s7, s31); dump();
fneg(s7, s7); dump();
fneg(s0, s7); dump();
fneg(s1, s7); dump();
fneg(s2, s7); dump();
fneg(s4, s7); dump();
fneg(s8, s7); dump();
fneg(s16, s7); dump();
fneg(s31, s7); dump();
fneg(s7, s7); dump();
fneg(s7, s0); dump();
fneg(s7, s1); dump();
fneg(s7, s2); dump();
fneg(s7, s4); dump();
fneg(s7, s8); dump();
fneg(s7, s16); dump();
fneg(s7, s31); dump();
fsqrt(s7, s7); dump();
fsqrt(s0, s7); dump();
fsqrt(s1, s7); dump();
fsqrt(s2, s7); dump();
fsqrt(s4, s7); dump();
fsqrt(s8, s7); dump();
fsqrt(s16, s7); dump();
fsqrt(s31, s7); dump();
fsqrt(s7, s7); dump();
fsqrt(s7, s0); dump();
fsqrt(s7, s1); dump();
fsqrt(s7, s2); dump();
fsqrt(s7, s4); dump();
fsqrt(s7, s8); dump();
fsqrt(s7, s16); dump();
fsqrt(s7, s31); dump();
//DataProcFp_FloatingPointArithmeticOneSource0
fabs(d7, d7); dump();
fabs(d0, d7); dump();
fabs(d1, d7); dump();
fabs(d2, d7); dump();
fabs(d4, d7); dump();
fabs(d8, d7); dump();
fabs(d16, d7); dump();
fabs(d31, d7); dump();
fabs(d7, d7); dump();
fabs(d7, d0); dump();
fabs(d7, d1); dump();
fabs(d7, d2); dump();
fabs(d7, d4); dump();
fabs(d7, d8); dump();
fabs(d7, d16); dump();
fabs(d7, d31); dump();
fneg(d7, d7); dump();
fneg(d0, d7); dump();
fneg(d1, d7); dump();
fneg(d2, d7); dump();
fneg(d4, d7); dump();
fneg(d8, d7); dump();
fneg(d16, d7); dump();
fneg(d31, d7); dump();
fneg(d7, d7); dump();
fneg(d7, d0); dump();
fneg(d7, d1); dump();
fneg(d7, d2); dump();
fneg(d7, d4); dump();
fneg(d7, d8); dump();
fneg(d7, d16); dump();
fneg(d7, d31); dump();
fsqrt(d7, d7); dump();
fsqrt(d0, d7); dump();
fsqrt(d1, d7); dump();
fsqrt(d2, d7); dump();
fsqrt(d4, d7); dump();
fsqrt(d8, d7); dump();
fsqrt(d16, d7); dump();
fsqrt(d31, d7); dump();
fsqrt(d7, d7); dump();
fsqrt(d7, d0); dump();
fsqrt(d7, d1); dump();
fsqrt(d7, d2); dump();
fsqrt(d7, d4); dump();
fsqrt(d7, d8); dump();
fsqrt(d7, d16); dump();
fsqrt(d7, d31); dump();
//DataProcFp_FloatingPointArithmeticTwoSources0
fadd(h7, h7, h7); dump();
fadd(h0, h7, h7); dump();
fadd(h1, h7, h7); dump();
fadd(h2, h7, h7); dump();
fadd(h4, h7, h7); dump();
fadd(h8, h7, h7); dump();
fadd(h16, h7, h7); dump();
fadd(h31, h7, h7); dump();
fadd(h7, h7, h7); dump();
fadd(h7, h0, h7); dump();
fadd(h7, h1, h7); dump();
fadd(h7, h2, h7); dump();
fadd(h7, h4, h7); dump();
fadd(h7, h8, h7); dump();
fadd(h7, h16, h7); dump();
fadd(h7, h31, h7); dump();
fadd(h7, h7, h7); dump();
fadd(h7, h7, h0); dump();
fadd(h7, h7, h1); dump();
fadd(h7, h7, h2); dump();
fadd(h7, h7, h4); dump();
fadd(h7, h7, h8); dump();
fadd(h7, h7, h16); dump();
fadd(h7, h7, h31); dump();
fdiv(h7, h7, h7); dump();
fdiv(h0, h7, h7); dump();
fdiv(h1, h7, h7); dump();
fdiv(h2, h7, h7); dump();
fdiv(h4, h7, h7); dump();
fdiv(h8, h7, h7); dump();
fdiv(h16, h7, h7); dump();
fdiv(h31, h7, h7); dump();
fdiv(h7, h7, h7); dump();
fdiv(h7, h0, h7); dump();
fdiv(h7, h1, h7); dump();
fdiv(h7, h2, h7); dump();
fdiv(h7, h4, h7); dump();
fdiv(h7, h8, h7); dump();
fdiv(h7, h16, h7); dump();
fdiv(h7, h31, h7); dump();
fdiv(h7, h7, h7); dump();
fdiv(h7, h7, h0); dump();
fdiv(h7, h7, h1); dump();
fdiv(h7, h7, h2); dump();
fdiv(h7, h7, h4); dump();
fdiv(h7, h7, h8); dump();
fdiv(h7, h7, h16); dump();
fdiv(h7, h7, h31); dump();
fmul(h7, h7, h7); dump();
fmul(h0, h7, h7); dump();
fmul(h1, h7, h7); dump();
fmul(h2, h7, h7); dump();
fmul(h4, h7, h7); dump();
fmul(h8, h7, h7); dump();
fmul(h16, h7, h7); dump();
fmul(h31, h7, h7); dump();
fmul(h7, h7, h7); dump();
fmul(h7, h0, h7); dump();
fmul(h7, h1, h7); dump();
fmul(h7, h2, h7); dump();
fmul(h7, h4, h7); dump();
fmul(h7, h8, h7); dump();
fmul(h7, h16, h7); dump();
fmul(h7, h31, h7); dump();
fmul(h7, h7, h7); dump();
fmul(h7, h7, h0); dump();
fmul(h7, h7, h1); dump();
fmul(h7, h7, h2); dump();
fmul(h7, h7, h4); dump();
fmul(h7, h7, h8); dump();
fmul(h7, h7, h16); dump();
fmul(h7, h7, h31); dump();
fnmul(h7, h7, h7); dump();
fnmul(h0, h7, h7); dump();
fnmul(h1, h7, h7); dump();
fnmul(h2, h7, h7); dump();
fnmul(h4, h7, h7); dump();
fnmul(h8, h7, h7); dump();
fnmul(h16, h7, h7); dump();
fnmul(h31, h7, h7); dump();
fnmul(h7, h7, h7); dump();
fnmul(h7, h0, h7); dump();
fnmul(h7, h1, h7); dump();
fnmul(h7, h2, h7); dump();
fnmul(h7, h4, h7); dump();
fnmul(h7, h8, h7); dump();
fnmul(h7, h16, h7); dump();
fnmul(h7, h31, h7); dump();
fnmul(h7, h7, h7); dump();
fnmul(h7, h7, h0); dump();
fnmul(h7, h7, h1); dump();
fnmul(h7, h7, h2); dump();
fnmul(h7, h7, h4); dump();
fnmul(h7, h7, h8); dump();
fnmul(h7, h7, h16); dump();
fnmul(h7, h7, h31); dump();
fsub(h7, h7, h7); dump();
fsub(h0, h7, h7); dump();
fsub(h1, h7, h7); dump();
fsub(h2, h7, h7); dump();
fsub(h4, h7, h7); dump();
fsub(h8, h7, h7); dump();
fsub(h16, h7, h7); dump();
fsub(h31, h7, h7); dump();
fsub(h7, h7, h7); dump();
fsub(h7, h0, h7); dump();
fsub(h7, h1, h7); dump();
fsub(h7, h2, h7); dump();
fsub(h7, h4, h7); dump();
fsub(h7, h8, h7); dump();
fsub(h7, h16, h7); dump();
fsub(h7, h31, h7); dump();
fsub(h7, h7, h7); dump();
fsub(h7, h7, h0); dump();
fsub(h7, h7, h1); dump();
fsub(h7, h7, h2); dump();
fsub(h7, h7, h4); dump();
fsub(h7, h7, h8); dump();
fsub(h7, h7, h16); dump();
fsub(h7, h7, h31); dump();
//DataProcFp_FloatingPointArithmeticTwoSources0
fadd(s7, s7, s7); dump();
fadd(s0, s7, s7); dump();
fadd(s1, s7, s7); dump();
fadd(s2, s7, s7); dump();
fadd(s4, s7, s7); dump();
fadd(s8, s7, s7); dump();
fadd(s16, s7, s7); dump();
fadd(s31, s7, s7); dump();
fadd(s7, s7, s7); dump();
fadd(s7, s0, s7); dump();
fadd(s7, s1, s7); dump();
fadd(s7, s2, s7); dump();
fadd(s7, s4, s7); dump();
fadd(s7, s8, s7); dump();
fadd(s7, s16, s7); dump();
fadd(s7, s31, s7); dump();
fadd(s7, s7, s7); dump();
fadd(s7, s7, s0); dump();
fadd(s7, s7, s1); dump();
fadd(s7, s7, s2); dump();
fadd(s7, s7, s4); dump();
fadd(s7, s7, s8); dump();
fadd(s7, s7, s16); dump();
fadd(s7, s7, s31); dump();
fdiv(s7, s7, s7); dump();
fdiv(s0, s7, s7); dump();
fdiv(s1, s7, s7); dump();
fdiv(s2, s7, s7); dump();
fdiv(s4, s7, s7); dump();
fdiv(s8, s7, s7); dump();
fdiv(s16, s7, s7); dump();
fdiv(s31, s7, s7); dump();
fdiv(s7, s7, s7); dump();
fdiv(s7, s0, s7); dump();
fdiv(s7, s1, s7); dump();
fdiv(s7, s2, s7); dump();
fdiv(s7, s4, s7); dump();
fdiv(s7, s8, s7); dump();
fdiv(s7, s16, s7); dump();
fdiv(s7, s31, s7); dump();
fdiv(s7, s7, s7); dump();
fdiv(s7, s7, s0); dump();
fdiv(s7, s7, s1); dump();
fdiv(s7, s7, s2); dump();
fdiv(s7, s7, s4); dump();
fdiv(s7, s7, s8); dump();
fdiv(s7, s7, s16); dump();
fdiv(s7, s7, s31); dump();
fmul(s7, s7, s7); dump();
fmul(s0, s7, s7); dump();
fmul(s1, s7, s7); dump();
fmul(s2, s7, s7); dump();
fmul(s4, s7, s7); dump();
fmul(s8, s7, s7); dump();
fmul(s16, s7, s7); dump();
fmul(s31, s7, s7); dump();
fmul(s7, s7, s7); dump();
fmul(s7, s0, s7); dump();
fmul(s7, s1, s7); dump();
fmul(s7, s2, s7); dump();
fmul(s7, s4, s7); dump();
fmul(s7, s8, s7); dump();
fmul(s7, s16, s7); dump();
fmul(s7, s31, s7); dump();
fmul(s7, s7, s7); dump();
fmul(s7, s7, s0); dump();
fmul(s7, s7, s1); dump();
fmul(s7, s7, s2); dump();
fmul(s7, s7, s4); dump();
fmul(s7, s7, s8); dump();
fmul(s7, s7, s16); dump();
fmul(s7, s7, s31); dump();
fnmul(s7, s7, s7); dump();
fnmul(s0, s7, s7); dump();
fnmul(s1, s7, s7); dump();
fnmul(s2, s7, s7); dump();
fnmul(s4, s7, s7); dump();
fnmul(s8, s7, s7); dump();
fnmul(s16, s7, s7); dump();
fnmul(s31, s7, s7); dump();
fnmul(s7, s7, s7); dump();
fnmul(s7, s0, s7); dump();
fnmul(s7, s1, s7); dump();
fnmul(s7, s2, s7); dump();
fnmul(s7, s4, s7); dump();
fnmul(s7, s8, s7); dump();
fnmul(s7, s16, s7); dump();
fnmul(s7, s31, s7); dump();
fnmul(s7, s7, s7); dump();
fnmul(s7, s7, s0); dump();
fnmul(s7, s7, s1); dump();
fnmul(s7, s7, s2); dump();
fnmul(s7, s7, s4); dump();
fnmul(s7, s7, s8); dump();
fnmul(s7, s7, s16); dump();
fnmul(s7, s7, s31); dump();
fsub(s7, s7, s7); dump();
fsub(s0, s7, s7); dump();
fsub(s1, s7, s7); dump();
fsub(s2, s7, s7); dump();
fsub(s4, s7, s7); dump();
fsub(s8, s7, s7); dump();
fsub(s16, s7, s7); dump();
fsub(s31, s7, s7); dump();
fsub(s7, s7, s7); dump();
fsub(s7, s0, s7); dump();
fsub(s7, s1, s7); dump();
fsub(s7, s2, s7); dump();
fsub(s7, s4, s7); dump();
fsub(s7, s8, s7); dump();
fsub(s7, s16, s7); dump();
fsub(s7, s31, s7); dump();
fsub(s7, s7, s7); dump();
fsub(s7, s7, s0); dump();
fsub(s7, s7, s1); dump();
fsub(s7, s7, s2); dump();
fsub(s7, s7, s4); dump();
fsub(s7, s7, s8); dump();
fsub(s7, s7, s16); dump();
fsub(s7, s7, s31); dump();
//DataProcFp_FloatingPointArithmeticTwoSources0
fadd(d7, d7, d7); dump();
fadd(d0, d7, d7); dump();
fadd(d1, d7, d7); dump();
fadd(d2, d7, d7); dump();
fadd(d4, d7, d7); dump();
fadd(d8, d7, d7); dump();
fadd(d16, d7, d7); dump();
fadd(d31, d7, d7); dump();
fadd(d7, d7, d7); dump();
fadd(d7, d0, d7); dump();
fadd(d7, d1, d7); dump();
fadd(d7, d2, d7); dump();
fadd(d7, d4, d7); dump();
fadd(d7, d8, d7); dump();
fadd(d7, d16, d7); dump();
fadd(d7, d31, d7); dump();
fadd(d7, d7, d7); dump();
fadd(d7, d7, d0); dump();
fadd(d7, d7, d1); dump();
fadd(d7, d7, d2); dump();
fadd(d7, d7, d4); dump();
fadd(d7, d7, d8); dump();
fadd(d7, d7, d16); dump();
fadd(d7, d7, d31); dump();
fdiv(d7, d7, d7); dump();
fdiv(d0, d7, d7); dump();
fdiv(d1, d7, d7); dump();
fdiv(d2, d7, d7); dump();
fdiv(d4, d7, d7); dump();
fdiv(d8, d7, d7); dump();
fdiv(d16, d7, d7); dump();
fdiv(d31, d7, d7); dump();
fdiv(d7, d7, d7); dump();
fdiv(d7, d0, d7); dump();
fdiv(d7, d1, d7); dump();
fdiv(d7, d2, d7); dump();
fdiv(d7, d4, d7); dump();
fdiv(d7, d8, d7); dump();
fdiv(d7, d16, d7); dump();
fdiv(d7, d31, d7); dump();
fdiv(d7, d7, d7); dump();
fdiv(d7, d7, d0); dump();
fdiv(d7, d7, d1); dump();
fdiv(d7, d7, d2); dump();
fdiv(d7, d7, d4); dump();
fdiv(d7, d7, d8); dump();
fdiv(d7, d7, d16); dump();
fdiv(d7, d7, d31); dump();
fmul(d7, d7, d7); dump();
fmul(d0, d7, d7); dump();
fmul(d1, d7, d7); dump();
fmul(d2, d7, d7); dump();
fmul(d4, d7, d7); dump();
fmul(d8, d7, d7); dump();
fmul(d16, d7, d7); dump();
fmul(d31, d7, d7); dump();
fmul(d7, d7, d7); dump();
fmul(d7, d0, d7); dump();
fmul(d7, d1, d7); dump();
fmul(d7, d2, d7); dump();
fmul(d7, d4, d7); dump();
fmul(d7, d8, d7); dump();
fmul(d7, d16, d7); dump();
fmul(d7, d31, d7); dump();
fmul(d7, d7, d7); dump();
fmul(d7, d7, d0); dump();
fmul(d7, d7, d1); dump();
fmul(d7, d7, d2); dump();
fmul(d7, d7, d4); dump();
fmul(d7, d7, d8); dump();
fmul(d7, d7, d16); dump();
fmul(d7, d7, d31); dump();
fnmul(d7, d7, d7); dump();
fnmul(d0, d7, d7); dump();
fnmul(d1, d7, d7); dump();
fnmul(d2, d7, d7); dump();
fnmul(d4, d7, d7); dump();
fnmul(d8, d7, d7); dump();
fnmul(d16, d7, d7); dump();
fnmul(d31, d7, d7); dump();
fnmul(d7, d7, d7); dump();
fnmul(d7, d0, d7); dump();
fnmul(d7, d1, d7); dump();
fnmul(d7, d2, d7); dump();
fnmul(d7, d4, d7); dump();
fnmul(d7, d8, d7); dump();
fnmul(d7, d16, d7); dump();
fnmul(d7, d31, d7); dump();
fnmul(d7, d7, d7); dump();
fnmul(d7, d7, d0); dump();
fnmul(d7, d7, d1); dump();
fnmul(d7, d7, d2); dump();
fnmul(d7, d7, d4); dump();
fnmul(d7, d7, d8); dump();
fnmul(d7, d7, d16); dump();
fnmul(d7, d7, d31); dump();
fsub(d7, d7, d7); dump();
fsub(d0, d7, d7); dump();
fsub(d1, d7, d7); dump();
fsub(d2, d7, d7); dump();
fsub(d4, d7, d7); dump();
fsub(d8, d7, d7); dump();
fsub(d16, d7, d7); dump();
fsub(d31, d7, d7); dump();
fsub(d7, d7, d7); dump();
fsub(d7, d0, d7); dump();
fsub(d7, d1, d7); dump();
fsub(d7, d2, d7); dump();
fsub(d7, d4, d7); dump();
fsub(d7, d8, d7); dump();
fsub(d7, d16, d7); dump();
fsub(d7, d31, d7); dump();
fsub(d7, d7, d7); dump();
fsub(d7, d7, d0); dump();
fsub(d7, d7, d1); dump();
fsub(d7, d7, d2); dump();
fsub(d7, d7, d4); dump();
fsub(d7, d7, d8); dump();
fsub(d7, d7, d16); dump();
fsub(d7, d7, d31); dump();
//DataProcFp_FloatingPointMinimumAndMaximum0
fmax(h7, h7, h7); dump();
fmax(h0, h7, h7); dump();
fmax(h1, h7, h7); dump();
fmax(h2, h7, h7); dump();
fmax(h4, h7, h7); dump();
fmax(h8, h7, h7); dump();
fmax(h16, h7, h7); dump();
fmax(h31, h7, h7); dump();
fmax(h7, h7, h7); dump();
fmax(h7, h0, h7); dump();
fmax(h7, h1, h7); dump();
fmax(h7, h2, h7); dump();
fmax(h7, h4, h7); dump();
fmax(h7, h8, h7); dump();
fmax(h7, h16, h7); dump();
fmax(h7, h31, h7); dump();
fmax(h7, h7, h7); dump();
fmax(h7, h7, h0); dump();
fmax(h7, h7, h1); dump();
fmax(h7, h7, h2); dump();
fmax(h7, h7, h4); dump();
fmax(h7, h7, h8); dump();
fmax(h7, h7, h16); dump();
fmax(h7, h7, h31); dump();
fmaxnm(h7, h7, h7); dump();
fmaxnm(h0, h7, h7); dump();
fmaxnm(h1, h7, h7); dump();
fmaxnm(h2, h7, h7); dump();
fmaxnm(h4, h7, h7); dump();
fmaxnm(h8, h7, h7); dump();
fmaxnm(h16, h7, h7); dump();
fmaxnm(h31, h7, h7); dump();
fmaxnm(h7, h7, h7); dump();
fmaxnm(h7, h0, h7); dump();
fmaxnm(h7, h1, h7); dump();
fmaxnm(h7, h2, h7); dump();
fmaxnm(h7, h4, h7); dump();
fmaxnm(h7, h8, h7); dump();
fmaxnm(h7, h16, h7); dump();
fmaxnm(h7, h31, h7); dump();
fmaxnm(h7, h7, h7); dump();
fmaxnm(h7, h7, h0); dump();
fmaxnm(h7, h7, h1); dump();
fmaxnm(h7, h7, h2); dump();
fmaxnm(h7, h7, h4); dump();
fmaxnm(h7, h7, h8); dump();
fmaxnm(h7, h7, h16); dump();
fmaxnm(h7, h7, h31); dump();
fmin(h7, h7, h7); dump();
fmin(h0, h7, h7); dump();
fmin(h1, h7, h7); dump();
fmin(h2, h7, h7); dump();
fmin(h4, h7, h7); dump();
fmin(h8, h7, h7); dump();
fmin(h16, h7, h7); dump();
fmin(h31, h7, h7); dump();
fmin(h7, h7, h7); dump();
fmin(h7, h0, h7); dump();
fmin(h7, h1, h7); dump();
fmin(h7, h2, h7); dump();
fmin(h7, h4, h7); dump();
fmin(h7, h8, h7); dump();
fmin(h7, h16, h7); dump();
fmin(h7, h31, h7); dump();
fmin(h7, h7, h7); dump();
fmin(h7, h7, h0); dump();
fmin(h7, h7, h1); dump();
fmin(h7, h7, h2); dump();
fmin(h7, h7, h4); dump();
fmin(h7, h7, h8); dump();
fmin(h7, h7, h16); dump();
fmin(h7, h7, h31); dump();
fminnm(h7, h7, h7); dump();
fminnm(h0, h7, h7); dump();
fminnm(h1, h7, h7); dump();
fminnm(h2, h7, h7); dump();
fminnm(h4, h7, h7); dump();
fminnm(h8, h7, h7); dump();
fminnm(h16, h7, h7); dump();
fminnm(h31, h7, h7); dump();
fminnm(h7, h7, h7); dump();
fminnm(h7, h0, h7); dump();
fminnm(h7, h1, h7); dump();
fminnm(h7, h2, h7); dump();
fminnm(h7, h4, h7); dump();
fminnm(h7, h8, h7); dump();
fminnm(h7, h16, h7); dump();
fminnm(h7, h31, h7); dump();
fminnm(h7, h7, h7); dump();
fminnm(h7, h7, h0); dump();
fminnm(h7, h7, h1); dump();
fminnm(h7, h7, h2); dump();
fminnm(h7, h7, h4); dump();
fminnm(h7, h7, h8); dump();
fminnm(h7, h7, h16); dump();
fminnm(h7, h7, h31); dump();
//DataProcFp_FloatingPointMinimumAndMaximum0
fmax(s7, s7, s7); dump();
fmax(s0, s7, s7); dump();
fmax(s1, s7, s7); dump();
fmax(s2, s7, s7); dump();
fmax(s4, s7, s7); dump();
fmax(s8, s7, s7); dump();
fmax(s16, s7, s7); dump();
fmax(s31, s7, s7); dump();
fmax(s7, s7, s7); dump();
fmax(s7, s0, s7); dump();
fmax(s7, s1, s7); dump();
fmax(s7, s2, s7); dump();
fmax(s7, s4, s7); dump();
fmax(s7, s8, s7); dump();
fmax(s7, s16, s7); dump();
fmax(s7, s31, s7); dump();
fmax(s7, s7, s7); dump();
fmax(s7, s7, s0); dump();
fmax(s7, s7, s1); dump();
fmax(s7, s7, s2); dump();
fmax(s7, s7, s4); dump();
fmax(s7, s7, s8); dump();
fmax(s7, s7, s16); dump();
fmax(s7, s7, s31); dump();
fmaxnm(s7, s7, s7); dump();
fmaxnm(s0, s7, s7); dump();
fmaxnm(s1, s7, s7); dump();
fmaxnm(s2, s7, s7); dump();
fmaxnm(s4, s7, s7); dump();
fmaxnm(s8, s7, s7); dump();
fmaxnm(s16, s7, s7); dump();
fmaxnm(s31, s7, s7); dump();
fmaxnm(s7, s7, s7); dump();
fmaxnm(s7, s0, s7); dump();
fmaxnm(s7, s1, s7); dump();
fmaxnm(s7, s2, s7); dump();
fmaxnm(s7, s4, s7); dump();
fmaxnm(s7, s8, s7); dump();
fmaxnm(s7, s16, s7); dump();
fmaxnm(s7, s31, s7); dump();
fmaxnm(s7, s7, s7); dump();
fmaxnm(s7, s7, s0); dump();
fmaxnm(s7, s7, s1); dump();
fmaxnm(s7, s7, s2); dump();
fmaxnm(s7, s7, s4); dump();
fmaxnm(s7, s7, s8); dump();
fmaxnm(s7, s7, s16); dump();
fmaxnm(s7, s7, s31); dump();
fmin(s7, s7, s7); dump();
fmin(s0, s7, s7); dump();
fmin(s1, s7, s7); dump();
fmin(s2, s7, s7); dump();
fmin(s4, s7, s7); dump();
fmin(s8, s7, s7); dump();
fmin(s16, s7, s7); dump();
fmin(s31, s7, s7); dump();
fmin(s7, s7, s7); dump();
fmin(s7, s0, s7); dump();
fmin(s7, s1, s7); dump();
fmin(s7, s2, s7); dump();
fmin(s7, s4, s7); dump();
fmin(s7, s8, s7); dump();
fmin(s7, s16, s7); dump();
fmin(s7, s31, s7); dump();
fmin(s7, s7, s7); dump();
fmin(s7, s7, s0); dump();
fmin(s7, s7, s1); dump();
fmin(s7, s7, s2); dump();
fmin(s7, s7, s4); dump();
fmin(s7, s7, s8); dump();
fmin(s7, s7, s16); dump();
fmin(s7, s7, s31); dump();
fminnm(s7, s7, s7); dump();
fminnm(s0, s7, s7); dump();
fminnm(s1, s7, s7); dump();
fminnm(s2, s7, s7); dump();
fminnm(s4, s7, s7); dump();
fminnm(s8, s7, s7); dump();
fminnm(s16, s7, s7); dump();
fminnm(s31, s7, s7); dump();
fminnm(s7, s7, s7); dump();
fminnm(s7, s0, s7); dump();
fminnm(s7, s1, s7); dump();
fminnm(s7, s2, s7); dump();
fminnm(s7, s4, s7); dump();
fminnm(s7, s8, s7); dump();
fminnm(s7, s16, s7); dump();
fminnm(s7, s31, s7); dump();
fminnm(s7, s7, s7); dump();
fminnm(s7, s7, s0); dump();
fminnm(s7, s7, s1); dump();
fminnm(s7, s7, s2); dump();
fminnm(s7, s7, s4); dump();
fminnm(s7, s7, s8); dump();
fminnm(s7, s7, s16); dump();
fminnm(s7, s7, s31); dump();
//DataProcFp_FloatingPointMinimumAndMaximum0
fmax(d7, d7, d7); dump();
fmax(d0, d7, d7); dump();
fmax(d1, d7, d7); dump();
fmax(d2, d7, d7); dump();
fmax(d4, d7, d7); dump();
fmax(d8, d7, d7); dump();
fmax(d16, d7, d7); dump();
fmax(d31, d7, d7); dump();
fmax(d7, d7, d7); dump();
fmax(d7, d0, d7); dump();
fmax(d7, d1, d7); dump();
fmax(d7, d2, d7); dump();
fmax(d7, d4, d7); dump();
fmax(d7, d8, d7); dump();
fmax(d7, d16, d7); dump();
fmax(d7, d31, d7); dump();
fmax(d7, d7, d7); dump();
fmax(d7, d7, d0); dump();
fmax(d7, d7, d1); dump();
fmax(d7, d7, d2); dump();
fmax(d7, d7, d4); dump();
fmax(d7, d7, d8); dump();
fmax(d7, d7, d16); dump();
fmax(d7, d7, d31); dump();
fmaxnm(d7, d7, d7); dump();
fmaxnm(d0, d7, d7); dump();
fmaxnm(d1, d7, d7); dump();
fmaxnm(d2, d7, d7); dump();
fmaxnm(d4, d7, d7); dump();
fmaxnm(d8, d7, d7); dump();
fmaxnm(d16, d7, d7); dump();
fmaxnm(d31, d7, d7); dump();
fmaxnm(d7, d7, d7); dump();
fmaxnm(d7, d0, d7); dump();
fmaxnm(d7, d1, d7); dump();
fmaxnm(d7, d2, d7); dump();
fmaxnm(d7, d4, d7); dump();
fmaxnm(d7, d8, d7); dump();
fmaxnm(d7, d16, d7); dump();
fmaxnm(d7, d31, d7); dump();
fmaxnm(d7, d7, d7); dump();
fmaxnm(d7, d7, d0); dump();
fmaxnm(d7, d7, d1); dump();
fmaxnm(d7, d7, d2); dump();
fmaxnm(d7, d7, d4); dump();
fmaxnm(d7, d7, d8); dump();
fmaxnm(d7, d7, d16); dump();
fmaxnm(d7, d7, d31); dump();
fmin(d7, d7, d7); dump();
fmin(d0, d7, d7); dump();
fmin(d1, d7, d7); dump();
fmin(d2, d7, d7); dump();
fmin(d4, d7, d7); dump();
fmin(d8, d7, d7); dump();
fmin(d16, d7, d7); dump();
fmin(d31, d7, d7); dump();
fmin(d7, d7, d7); dump();
fmin(d7, d0, d7); dump();
fmin(d7, d1, d7); dump();
fmin(d7, d2, d7); dump();
fmin(d7, d4, d7); dump();
fmin(d7, d8, d7); dump();
fmin(d7, d16, d7); dump();
fmin(d7, d31, d7); dump();
fmin(d7, d7, d7); dump();
fmin(d7, d7, d0); dump();
fmin(d7, d7, d1); dump();
fmin(d7, d7, d2); dump();
fmin(d7, d7, d4); dump();
fmin(d7, d7, d8); dump();
fmin(d7, d7, d16); dump();
fmin(d7, d7, d31); dump();
fminnm(d7, d7, d7); dump();
fminnm(d0, d7, d7); dump();
fminnm(d1, d7, d7); dump();
fminnm(d2, d7, d7); dump();
fminnm(d4, d7, d7); dump();
fminnm(d8, d7, d7); dump();
fminnm(d16, d7, d7); dump();
fminnm(d31, d7, d7); dump();
fminnm(d7, d7, d7); dump();
fminnm(d7, d0, d7); dump();
fminnm(d7, d1, d7); dump();
fminnm(d7, d2, d7); dump();
fminnm(d7, d4, d7); dump();
fminnm(d7, d8, d7); dump();
fminnm(d7, d16, d7); dump();
fminnm(d7, d31, d7); dump();
fminnm(d7, d7, d7); dump();
fminnm(d7, d7, d0); dump();
fminnm(d7, d7, d1); dump();
fminnm(d7, d7, d2); dump();
fminnm(d7, d7, d4); dump();
fminnm(d7, d7, d8); dump();
fminnm(d7, d7, d16); dump();
fminnm(d7, d7, d31); dump();
//DataProcFp_FloatingPointComparison0
fcmp(h7, h7); dump();
fcmp(h0, h7); dump();
fcmp(h1, h7); dump();
fcmp(h2, h7); dump();
fcmp(h4, h7); dump();
fcmp(h8, h7); dump();
fcmp(h16, h7); dump();
fcmp(h31, h7); dump();
fcmp(h7, h7); dump();
fcmp(h7, h0); dump();
fcmp(h7, h1); dump();
fcmp(h7, h2); dump();
fcmp(h7, h4); dump();
fcmp(h7, h8); dump();
fcmp(h7, h16); dump();
fcmp(h7, h31); dump();
fcmpe(h7, h7); dump();
fcmpe(h0, h7); dump();
fcmpe(h1, h7); dump();
fcmpe(h2, h7); dump();
fcmpe(h4, h7); dump();
fcmpe(h8, h7); dump();
fcmpe(h16, h7); dump();
fcmpe(h31, h7); dump();
fcmpe(h7, h7); dump();
fcmpe(h7, h0); dump();
fcmpe(h7, h1); dump();
fcmpe(h7, h2); dump();
fcmpe(h7, h4); dump();
fcmpe(h7, h8); dump();
fcmpe(h7, h16); dump();
fcmpe(h7, h31); dump();
//DataProcFp_FloatingPointComparison0
fcmp(h7, 0.0); dump();
fcmp(h0, 0.0); dump();
fcmp(h1, 0.0); dump();
fcmp(h2, 0.0); dump();
fcmp(h4, 0.0); dump();
fcmp(h8, 0.0); dump();
fcmp(h16, 0.0); dump();
fcmp(h31, 0.0); dump();
fcmp(h7, 0.0); dump();
fcmpe(h7, 0.0); dump();
fcmpe(h0, 0.0); dump();
fcmpe(h1, 0.0); dump();
fcmpe(h2, 0.0); dump();
fcmpe(h4, 0.0); dump();
fcmpe(h8, 0.0); dump();
fcmpe(h16, 0.0); dump();
fcmpe(h31, 0.0); dump();
fcmpe(h7, 0.0); dump();
//DataProcFp_FloatingPointComparison0
fcmp(s7, s7); dump();
fcmp(s0, s7); dump();
fcmp(s1, s7); dump();
fcmp(s2, s7); dump();
fcmp(s4, s7); dump();
fcmp(s8, s7); dump();
fcmp(s16, s7); dump();
fcmp(s31, s7); dump();
fcmp(s7, s7); dump();
fcmp(s7, s0); dump();
fcmp(s7, s1); dump();
fcmp(s7, s2); dump();
fcmp(s7, s4); dump();
fcmp(s7, s8); dump();
fcmp(s7, s16); dump();
fcmp(s7, s31); dump();
fcmpe(s7, s7); dump();
fcmpe(s0, s7); dump();
fcmpe(s1, s7); dump();
fcmpe(s2, s7); dump();
fcmpe(s4, s7); dump();
fcmpe(s8, s7); dump();
fcmpe(s16, s7); dump();
fcmpe(s31, s7); dump();
fcmpe(s7, s7); dump();
fcmpe(s7, s0); dump();
fcmpe(s7, s1); dump();
fcmpe(s7, s2); dump();
fcmpe(s7, s4); dump();
fcmpe(s7, s8); dump();
fcmpe(s7, s16); dump();
fcmpe(s7, s31); dump();
//DataProcFp_FloatingPointComparison0
fcmp(s7, 0.0); dump();
fcmp(s0, 0.0); dump();
fcmp(s1, 0.0); dump();
fcmp(s2, 0.0); dump();
fcmp(s4, 0.0); dump();
fcmp(s8, 0.0); dump();
fcmp(s16, 0.0); dump();
fcmp(s31, 0.0); dump();
fcmp(s7, 0.0); dump();
fcmpe(s7, 0.0); dump();
fcmpe(s0, 0.0); dump();
fcmpe(s1, 0.0); dump();
fcmpe(s2, 0.0); dump();
fcmpe(s4, 0.0); dump();
fcmpe(s8, 0.0); dump();
fcmpe(s16, 0.0); dump();
fcmpe(s31, 0.0); dump();
fcmpe(s7, 0.0); dump();
//DataProcFp_FloatingPointComparison0
fcmp(d7, d7); dump();
fcmp(d0, d7); dump();
fcmp(d1, d7); dump();
fcmp(d2, d7); dump();
fcmp(d4, d7); dump();
fcmp(d8, d7); dump();
fcmp(d16, d7); dump();
fcmp(d31, d7); dump();
fcmp(d7, d7); dump();
fcmp(d7, d0); dump();
fcmp(d7, d1); dump();
fcmp(d7, d2); dump();
fcmp(d7, d4); dump();
fcmp(d7, d8); dump();
fcmp(d7, d16); dump();
fcmp(d7, d31); dump();
fcmpe(d7, d7); dump();
fcmpe(d0, d7); dump();
fcmpe(d1, d7); dump();
fcmpe(d2, d7); dump();
fcmpe(d4, d7); dump();
fcmpe(d8, d7); dump();
fcmpe(d16, d7); dump();
fcmpe(d31, d7); dump();
fcmpe(d7, d7); dump();
fcmpe(d7, d0); dump();
fcmpe(d7, d1); dump();
fcmpe(d7, d2); dump();
fcmpe(d7, d4); dump();
fcmpe(d7, d8); dump();
fcmpe(d7, d16); dump();
fcmpe(d7, d31); dump();
//DataProcFp_FloatingPointComparison0
fcmp(d7, 0.0); dump();
fcmp(d0, 0.0); dump();
fcmp(d1, 0.0); dump();
fcmp(d2, 0.0); dump();
fcmp(d4, 0.0); dump();
fcmp(d8, 0.0); dump();
fcmp(d16, 0.0); dump();
fcmp(d31, 0.0); dump();
fcmp(d7, 0.0); dump();
fcmpe(d7, 0.0); dump();
fcmpe(d0, 0.0); dump();
fcmpe(d1, 0.0); dump();
fcmpe(d2, 0.0); dump();
fcmpe(d4, 0.0); dump();
fcmpe(d8, 0.0); dump();
fcmpe(d16, 0.0); dump();
fcmpe(d31, 0.0); dump();
fcmpe(d7, 0.0); dump();
//DataProcFp_FloatingPointComparison1
fccmp(h7, h7, 15, EQ); dump();
fccmp(h0, h7, 15, EQ); dump();
fccmp(h1, h7, 15, EQ); dump();
fccmp(h2, h7, 15, EQ); dump();
fccmp(h4, h7, 15, EQ); dump();
fccmp(h8, h7, 15, EQ); dump();
fccmp(h16, h7, 15, EQ); dump();
fccmp(h31, h7, 15, EQ); dump();
fccmp(h7, h7, 15, EQ); dump();
fccmp(h7, h0, 15, EQ); dump();
fccmp(h7, h1, 15, EQ); dump();
fccmp(h7, h2, 15, EQ); dump();
fccmp(h7, h4, 15, EQ); dump();
fccmp(h7, h8, 15, EQ); dump();
fccmp(h7, h16, 15, EQ); dump();
fccmp(h7, h31, 15, EQ); dump();
fccmp(h7, h7, 15, EQ); dump();
fccmp(h7, h7, 0, EQ); dump();
fccmp(h7, h7, 1, EQ); dump();
fccmp(h7, h7, 2, EQ); dump();
fccmp(h7, h7, 3, EQ); dump();
fccmp(h7, h7, 4, EQ); dump();
fccmp(h7, h7, 5, EQ); dump();
fccmp(h7, h7, 6, EQ); dump();
fccmp(h7, h7, 7, EQ); dump();
fccmp(h7, h7, 8, EQ); dump();
fccmp(h7, h7, 9, EQ); dump();
fccmp(h7, h7, 10, EQ); dump();
fccmp(h7, h7, 11, EQ); dump();
fccmp(h7, h7, 12, EQ); dump();
fccmp(h7, h7, 13, EQ); dump();
fccmp(h7, h7, 14, EQ); dump();
fccmp(h7, h7, 15, EQ); dump();
fccmp(h7, h7, 15, NE); dump();
fccmp(h7, h7, 15, CS); dump();
fccmp(h7, h7, 15, CC); dump();
fccmp(h7, h7, 15, MI); dump();
fccmp(h7, h7, 15, PL); dump();
fccmp(h7, h7, 15, VS); dump();
fccmp(h7, h7, 15, VC); dump();
fccmp(h7, h7, 15, HI); dump();
fccmp(h7, h7, 15, LS); dump();
fccmp(h7, h7, 15, GE); dump();
fccmp(h7, h7, 15, LT); dump();
fccmp(h7, h7, 15, GT); dump();
fccmp(h7, h7, 15, LE); dump();
fccmp(h7, h7, 15, AL); dump();
fccmpe(h7, h7, 15, EQ); dump();
fccmpe(h0, h7, 15, EQ); dump();
fccmpe(h1, h7, 15, EQ); dump();
fccmpe(h2, h7, 15, EQ); dump();
fccmpe(h4, h7, 15, EQ); dump();
fccmpe(h8, h7, 15, EQ); dump();
fccmpe(h16, h7, 15, EQ); dump();
fccmpe(h31, h7, 15, EQ); dump();
fccmpe(h7, h7, 15, EQ); dump();
fccmpe(h7, h0, 15, EQ); dump();
fccmpe(h7, h1, 15, EQ); dump();
fccmpe(h7, h2, 15, EQ); dump();
fccmpe(h7, h4, 15, EQ); dump();
fccmpe(h7, h8, 15, EQ); dump();
fccmpe(h7, h16, 15, EQ); dump();
fccmpe(h7, h31, 15, EQ); dump();
fccmpe(h7, h7, 15, EQ); dump();
fccmpe(h7, h7, 0, EQ); dump();
fccmpe(h7, h7, 1, EQ); dump();
fccmpe(h7, h7, 2, EQ); dump();
fccmpe(h7, h7, 3, EQ); dump();
fccmpe(h7, h7, 4, EQ); dump();
fccmpe(h7, h7, 5, EQ); dump();
fccmpe(h7, h7, 6, EQ); dump();
fccmpe(h7, h7, 7, EQ); dump();
fccmpe(h7, h7, 8, EQ); dump();
fccmpe(h7, h7, 9, EQ); dump();
fccmpe(h7, h7, 10, EQ); dump();
fccmpe(h7, h7, 11, EQ); dump();
fccmpe(h7, h7, 12, EQ); dump();
fccmpe(h7, h7, 13, EQ); dump();
fccmpe(h7, h7, 14, EQ); dump();
fccmpe(h7, h7, 15, EQ); dump();
fccmpe(h7, h7, 15, NE); dump();
fccmpe(h7, h7, 15, CS); dump();
fccmpe(h7, h7, 15, CC); dump();
fccmpe(h7, h7, 15, MI); dump();
fccmpe(h7, h7, 15, PL); dump();
fccmpe(h7, h7, 15, VS); dump();
fccmpe(h7, h7, 15, VC); dump();
fccmpe(h7, h7, 15, HI); dump();
fccmpe(h7, h7, 15, LS); dump();
fccmpe(h7, h7, 15, GE); dump();
fccmpe(h7, h7, 15, LT); dump();
fccmpe(h7, h7, 15, GT); dump();
fccmpe(h7, h7, 15, LE); dump();
fccmpe(h7, h7, 15, AL); dump();
//DataProcFp_FloatingPointComparison1
fccmp(s7, s7, 15, EQ); dump();
fccmp(s0, s7, 15, EQ); dump();
fccmp(s1, s7, 15, EQ); dump();
fccmp(s2, s7, 15, EQ); dump();
fccmp(s4, s7, 15, EQ); dump();
fccmp(s8, s7, 15, EQ); dump();
fccmp(s16, s7, 15, EQ); dump();
fccmp(s31, s7, 15, EQ); dump();
fccmp(s7, s7, 15, EQ); dump();
fccmp(s7, s0, 15, EQ); dump();
fccmp(s7, s1, 15, EQ); dump();
fccmp(s7, s2, 15, EQ); dump();
fccmp(s7, s4, 15, EQ); dump();
fccmp(s7, s8, 15, EQ); dump();
fccmp(s7, s16, 15, EQ); dump();
fccmp(s7, s31, 15, EQ); dump();
fccmp(s7, s7, 15, EQ); dump();
fccmp(s7, s7, 0, EQ); dump();
fccmp(s7, s7, 1, EQ); dump();
fccmp(s7, s7, 2, EQ); dump();
fccmp(s7, s7, 3, EQ); dump();
fccmp(s7, s7, 4, EQ); dump();
fccmp(s7, s7, 5, EQ); dump();
fccmp(s7, s7, 6, EQ); dump();
fccmp(s7, s7, 7, EQ); dump();
fccmp(s7, s7, 8, EQ); dump();
fccmp(s7, s7, 9, EQ); dump();
fccmp(s7, s7, 10, EQ); dump();
fccmp(s7, s7, 11, EQ); dump();
fccmp(s7, s7, 12, EQ); dump();
fccmp(s7, s7, 13, EQ); dump();
fccmp(s7, s7, 14, EQ); dump();
fccmp(s7, s7, 15, EQ); dump();
fccmp(s7, s7, 15, NE); dump();
fccmp(s7, s7, 15, CS); dump();
fccmp(s7, s7, 15, CC); dump();
fccmp(s7, s7, 15, MI); dump();
fccmp(s7, s7, 15, PL); dump();
fccmp(s7, s7, 15, VS); dump();
fccmp(s7, s7, 15, VC); dump();
fccmp(s7, s7, 15, HI); dump();
fccmp(s7, s7, 15, LS); dump();
fccmp(s7, s7, 15, GE); dump();
fccmp(s7, s7, 15, LT); dump();
fccmp(s7, s7, 15, GT); dump();
fccmp(s7, s7, 15, LE); dump();
fccmp(s7, s7, 15, AL); dump();
fccmpe(s7, s7, 15, EQ); dump();
fccmpe(s0, s7, 15, EQ); dump();
fccmpe(s1, s7, 15, EQ); dump();
fccmpe(s2, s7, 15, EQ); dump();
fccmpe(s4, s7, 15, EQ); dump();
fccmpe(s8, s7, 15, EQ); dump();
fccmpe(s16, s7, 15, EQ); dump();
fccmpe(s31, s7, 15, EQ); dump();
fccmpe(s7, s7, 15, EQ); dump();
fccmpe(s7, s0, 15, EQ); dump();
fccmpe(s7, s1, 15, EQ); dump();
fccmpe(s7, s2, 15, EQ); dump();
fccmpe(s7, s4, 15, EQ); dump();
fccmpe(s7, s8, 15, EQ); dump();
fccmpe(s7, s16, 15, EQ); dump();
fccmpe(s7, s31, 15, EQ); dump();
fccmpe(s7, s7, 15, EQ); dump();
fccmpe(s7, s7, 0, EQ); dump();
fccmpe(s7, s7, 1, EQ); dump();
fccmpe(s7, s7, 2, EQ); dump();
fccmpe(s7, s7, 3, EQ); dump();
fccmpe(s7, s7, 4, EQ); dump();
fccmpe(s7, s7, 5, EQ); dump();
fccmpe(s7, s7, 6, EQ); dump();
fccmpe(s7, s7, 7, EQ); dump();
fccmpe(s7, s7, 8, EQ); dump();
fccmpe(s7, s7, 9, EQ); dump();
fccmpe(s7, s7, 10, EQ); dump();
fccmpe(s7, s7, 11, EQ); dump();
fccmpe(s7, s7, 12, EQ); dump();
fccmpe(s7, s7, 13, EQ); dump();
fccmpe(s7, s7, 14, EQ); dump();
fccmpe(s7, s7, 15, EQ); dump();
fccmpe(s7, s7, 15, NE); dump();
fccmpe(s7, s7, 15, CS); dump();
fccmpe(s7, s7, 15, CC); dump();
fccmpe(s7, s7, 15, MI); dump();
fccmpe(s7, s7, 15, PL); dump();
fccmpe(s7, s7, 15, VS); dump();
fccmpe(s7, s7, 15, VC); dump();
fccmpe(s7, s7, 15, HI); dump();
fccmpe(s7, s7, 15, LS); dump();
fccmpe(s7, s7, 15, GE); dump();
fccmpe(s7, s7, 15, LT); dump();
fccmpe(s7, s7, 15, GT); dump();
fccmpe(s7, s7, 15, LE); dump();
fccmpe(s7, s7, 15, AL); dump();
//DataProcFp_FloatingPointComparison1
fccmp(d7, d7, 15, EQ); dump();
fccmp(d0, d7, 15, EQ); dump();
fccmp(d1, d7, 15, EQ); dump();
fccmp(d2, d7, 15, EQ); dump();
fccmp(d4, d7, 15, EQ); dump();
fccmp(d8, d7, 15, EQ); dump();
fccmp(d16, d7, 15, EQ); dump();
fccmp(d31, d7, 15, EQ); dump();
fccmp(d7, d7, 15, EQ); dump();
fccmp(d7, d0, 15, EQ); dump();
fccmp(d7, d1, 15, EQ); dump();
fccmp(d7, d2, 15, EQ); dump();
fccmp(d7, d4, 15, EQ); dump();
fccmp(d7, d8, 15, EQ); dump();
fccmp(d7, d16, 15, EQ); dump();
fccmp(d7, d31, 15, EQ); dump();
fccmp(d7, d7, 15, EQ); dump();
fccmp(d7, d7, 0, EQ); dump();
fccmp(d7, d7, 1, EQ); dump();
fccmp(d7, d7, 2, EQ); dump();
fccmp(d7, d7, 3, EQ); dump();
fccmp(d7, d7, 4, EQ); dump();
fccmp(d7, d7, 5, EQ); dump();
fccmp(d7, d7, 6, EQ); dump();
fccmp(d7, d7, 7, EQ); dump();
fccmp(d7, d7, 8, EQ); dump();
fccmp(d7, d7, 9, EQ); dump();
fccmp(d7, d7, 10, EQ); dump();
fccmp(d7, d7, 11, EQ); dump();
fccmp(d7, d7, 12, EQ); dump();
fccmp(d7, d7, 13, EQ); dump();
fccmp(d7, d7, 14, EQ); dump();
fccmp(d7, d7, 15, EQ); dump();
fccmp(d7, d7, 15, NE); dump();
fccmp(d7, d7, 15, CS); dump();
fccmp(d7, d7, 15, CC); dump();
fccmp(d7, d7, 15, MI); dump();
fccmp(d7, d7, 15, PL); dump();
fccmp(d7, d7, 15, VS); dump();
fccmp(d7, d7, 15, VC); dump();
fccmp(d7, d7, 15, HI); dump();
fccmp(d7, d7, 15, LS); dump();
fccmp(d7, d7, 15, GE); dump();
fccmp(d7, d7, 15, LT); dump();
fccmp(d7, d7, 15, GT); dump();
fccmp(d7, d7, 15, LE); dump();
fccmp(d7, d7, 15, AL); dump();
fccmpe(d7, d7, 15, EQ); dump();
fccmpe(d0, d7, 15, EQ); dump();
fccmpe(d1, d7, 15, EQ); dump();
fccmpe(d2, d7, 15, EQ); dump();
fccmpe(d4, d7, 15, EQ); dump();
fccmpe(d8, d7, 15, EQ); dump();
fccmpe(d16, d7, 15, EQ); dump();
fccmpe(d31, d7, 15, EQ); dump();
fccmpe(d7, d7, 15, EQ); dump();
fccmpe(d7, d0, 15, EQ); dump();
fccmpe(d7, d1, 15, EQ); dump();
fccmpe(d7, d2, 15, EQ); dump();
fccmpe(d7, d4, 15, EQ); dump();
fccmpe(d7, d8, 15, EQ); dump();
fccmpe(d7, d16, 15, EQ); dump();
fccmpe(d7, d31, 15, EQ); dump();
fccmpe(d7, d7, 15, EQ); dump();
fccmpe(d7, d7, 0, EQ); dump();
fccmpe(d7, d7, 1, EQ); dump();
fccmpe(d7, d7, 2, EQ); dump();
fccmpe(d7, d7, 3, EQ); dump();
fccmpe(d7, d7, 4, EQ); dump();
fccmpe(d7, d7, 5, EQ); dump();
fccmpe(d7, d7, 6, EQ); dump();
fccmpe(d7, d7, 7, EQ); dump();
fccmpe(d7, d7, 8, EQ); dump();
fccmpe(d7, d7, 9, EQ); dump();
fccmpe(d7, d7, 10, EQ); dump();
fccmpe(d7, d7, 11, EQ); dump();
fccmpe(d7, d7, 12, EQ); dump();
fccmpe(d7, d7, 13, EQ); dump();
fccmpe(d7, d7, 14, EQ); dump();
fccmpe(d7, d7, 15, EQ); dump();
fccmpe(d7, d7, 15, NE); dump();
fccmpe(d7, d7, 15, CS); dump();
fccmpe(d7, d7, 15, CC); dump();
fccmpe(d7, d7, 15, MI); dump();
fccmpe(d7, d7, 15, PL); dump();
fccmpe(d7, d7, 15, VS); dump();
fccmpe(d7, d7, 15, VC); dump();
fccmpe(d7, d7, 15, HI); dump();
fccmpe(d7, d7, 15, LS); dump();
fccmpe(d7, d7, 15, GE); dump();
fccmpe(d7, d7, 15, LT); dump();
fccmpe(d7, d7, 15, GT); dump();
fccmpe(d7, d7, 15, LE); dump();
fccmpe(d7, d7, 15, AL); dump();
//DataProcFp_FloatingPointConditionalSelect0
fcsel(h7, h7, h7, EQ); dump();
fcsel(h0, h7, h7, EQ); dump();
fcsel(h1, h7, h7, EQ); dump();
fcsel(h2, h7, h7, EQ); dump();
fcsel(h4, h7, h7, EQ); dump();
fcsel(h8, h7, h7, EQ); dump();
fcsel(h16, h7, h7, EQ); dump();
fcsel(h31, h7, h7, EQ); dump();
fcsel(h7, h7, h7, EQ); dump();
fcsel(h7, h0, h7, EQ); dump();
fcsel(h7, h1, h7, EQ); dump();
fcsel(h7, h2, h7, EQ); dump();
fcsel(h7, h4, h7, EQ); dump();
fcsel(h7, h8, h7, EQ); dump();
fcsel(h7, h16, h7, EQ); dump();
fcsel(h7, h31, h7, EQ); dump();
fcsel(h7, h7, h7, EQ); dump();
fcsel(h7, h7, h0, EQ); dump();
fcsel(h7, h7, h1, EQ); dump();
fcsel(h7, h7, h2, EQ); dump();
fcsel(h7, h7, h4, EQ); dump();
fcsel(h7, h7, h8, EQ); dump();
fcsel(h7, h7, h16, EQ); dump();
fcsel(h7, h7, h31, EQ); dump();
fcsel(h7, h7, h7, EQ); dump();
fcsel(h7, h7, h7, NE); dump();
fcsel(h7, h7, h7, CS); dump();
fcsel(h7, h7, h7, CC); dump();
fcsel(h7, h7, h7, MI); dump();
fcsel(h7, h7, h7, PL); dump();
fcsel(h7, h7, h7, VS); dump();
fcsel(h7, h7, h7, VC); dump();
fcsel(h7, h7, h7, HI); dump();
fcsel(h7, h7, h7, LS); dump();
fcsel(h7, h7, h7, GE); dump();
fcsel(h7, h7, h7, LT); dump();
fcsel(h7, h7, h7, GT); dump();
fcsel(h7, h7, h7, LE); dump();
fcsel(h7, h7, h7, AL); dump();
//DataProcFp_FloatingPointConditionalSelect0
fcsel(s7, s7, s7, EQ); dump();
fcsel(s0, s7, s7, EQ); dump();
fcsel(s1, s7, s7, EQ); dump();
fcsel(s2, s7, s7, EQ); dump();
fcsel(s4, s7, s7, EQ); dump();
fcsel(s8, s7, s7, EQ); dump();
fcsel(s16, s7, s7, EQ); dump();
fcsel(s31, s7, s7, EQ); dump();
fcsel(s7, s7, s7, EQ); dump();
fcsel(s7, s0, s7, EQ); dump();
fcsel(s7, s1, s7, EQ); dump();
fcsel(s7, s2, s7, EQ); dump();
fcsel(s7, s4, s7, EQ); dump();
fcsel(s7, s8, s7, EQ); dump();
fcsel(s7, s16, s7, EQ); dump();
fcsel(s7, s31, s7, EQ); dump();
fcsel(s7, s7, s7, EQ); dump();
fcsel(s7, s7, s0, EQ); dump();
fcsel(s7, s7, s1, EQ); dump();
fcsel(s7, s7, s2, EQ); dump();
fcsel(s7, s7, s4, EQ); dump();
fcsel(s7, s7, s8, EQ); dump();
fcsel(s7, s7, s16, EQ); dump();
fcsel(s7, s7, s31, EQ); dump();
fcsel(s7, s7, s7, EQ); dump();
fcsel(s7, s7, s7, NE); dump();
fcsel(s7, s7, s7, CS); dump();
fcsel(s7, s7, s7, CC); dump();
fcsel(s7, s7, s7, MI); dump();
fcsel(s7, s7, s7, PL); dump();
fcsel(s7, s7, s7, VS); dump();
fcsel(s7, s7, s7, VC); dump();
fcsel(s7, s7, s7, HI); dump();
fcsel(s7, s7, s7, LS); dump();
fcsel(s7, s7, s7, GE); dump();
fcsel(s7, s7, s7, LT); dump();
fcsel(s7, s7, s7, GT); dump();
fcsel(s7, s7, s7, LE); dump();
fcsel(s7, s7, s7, AL); dump();
//DataProcFp_FloatingPointConditionalSelect0
fcsel(d7, d7, d7, EQ); dump();
fcsel(d0, d7, d7, EQ); dump();
fcsel(d1, d7, d7, EQ); dump();
fcsel(d2, d7, d7, EQ); dump();
fcsel(d4, d7, d7, EQ); dump();
fcsel(d8, d7, d7, EQ); dump();
fcsel(d16, d7, d7, EQ); dump();
fcsel(d31, d7, d7, EQ); dump();
fcsel(d7, d7, d7, EQ); dump();
fcsel(d7, d0, d7, EQ); dump();
fcsel(d7, d1, d7, EQ); dump();
fcsel(d7, d2, d7, EQ); dump();
fcsel(d7, d4, d7, EQ); dump();
fcsel(d7, d8, d7, EQ); dump();
fcsel(d7, d16, d7, EQ); dump();
fcsel(d7, d31, d7, EQ); dump();
fcsel(d7, d7, d7, EQ); dump();
fcsel(d7, d7, d0, EQ); dump();
fcsel(d7, d7, d1, EQ); dump();
fcsel(d7, d7, d2, EQ); dump();
fcsel(d7, d7, d4, EQ); dump();
fcsel(d7, d7, d8, EQ); dump();
fcsel(d7, d7, d16, EQ); dump();
fcsel(d7, d7, d31, EQ); dump();
fcsel(d7, d7, d7, EQ); dump();
fcsel(d7, d7, d7, NE); dump();
fcsel(d7, d7, d7, CS); dump();
fcsel(d7, d7, d7, CC); dump();
fcsel(d7, d7, d7, MI); dump();
fcsel(d7, d7, d7, PL); dump();
fcsel(d7, d7, d7, VS); dump();
fcsel(d7, d7, d7, VC); dump();
fcsel(d7, d7, d7, HI); dump();
fcsel(d7, d7, d7, LS); dump();
fcsel(d7, d7, d7, GE); dump();
fcsel(d7, d7, d7, LT); dump();
fcsel(d7, d7, d7, GT); dump();
fcsel(d7, d7, d7, LE); dump();
fcsel(d7, d7, d7, AL); dump();
    }
    void gen()
    {
        gen0();
    }
