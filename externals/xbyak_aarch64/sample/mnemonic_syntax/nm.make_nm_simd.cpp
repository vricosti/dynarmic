/*******************************************************************************
 * Copyright 2019 FUJITSU LIMITED 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/
    void gen0()
    {
VRegBElem v7b8_7= v7.b8[7];
VRegBElem v0b8_7= v0.b8[7];
VRegBElem v1b8_7= v1.b8[7];
VRegBElem v2b8_7= v2.b8[7];
VRegBElem v4b8_7= v4.b8[7];
VRegBElem v8b8_7= v8.b8[7];
VRegBElem v16b8_7= v16.b8[7];
VRegBElem v31b8_7= v31.b8[7];
VRegBElem v7b8_0= v7.b8[0];
VRegBElem v7b8_1= v7.b8[1];
VRegBElem v7b8_2= v7.b8[2];
VRegBElem v7b8_4= v7.b8[4];
VRegBElem v7b16_7= v7.b16[7];
VRegBElem v0b16_7= v0.b16[7];
VRegBElem v1b16_7= v1.b16[7];
VRegBElem v2b16_7= v2.b16[7];
VRegBElem v4b16_7= v4.b16[7];
VRegBElem v8b16_7= v8.b16[7];
VRegBElem v16b16_7= v16.b16[7];
VRegBElem v31b16_7= v31.b16[7];
VRegBElem v7b16_0= v7.b16[0];
VRegBElem v7b16_1= v7.b16[1];
VRegBElem v7b16_2= v7.b16[2];
VRegBElem v7b16_4= v7.b16[4];
VRegBElem v7b16_8= v7.b16[8];
VRegBElem v7b16_15= v7.b16[15];
VRegHElem v7h4_3= v7.h4[3];
VRegHElem v0h4_3= v0.h4[3];
VRegHElem v1h4_3= v1.h4[3];
VRegHElem v2h4_3= v2.h4[3];
VRegHElem v4h4_3= v4.h4[3];
VRegHElem v8h4_3= v8.h4[3];
VRegHElem v16h4_3= v16.h4[3];
VRegHElem v31h4_3= v31.h4[3];
VRegHElem v7h4_0= v7.h4[0];
VRegHElem v7h4_1= v7.h4[1];
VRegHElem v7h4_2= v7.h4[2];
VRegHElem v7h8_7= v7.h8[7];
VRegHElem v0h8_7= v0.h8[7];
VRegHElem v1h8_7= v1.h8[7];
VRegHElem v2h8_7= v2.h8[7];
VRegHElem v4h8_7= v4.h8[7];
VRegHElem v8h8_7= v8.h8[7];
VRegHElem v16h8_7= v16.h8[7];
VRegHElem v31h8_7= v31.h8[7];
VRegHElem v7h8_0= v7.h8[0];
VRegHElem v7h8_1= v7.h8[1];
VRegHElem v7h8_2= v7.h8[2];
VRegHElem v7h8_4= v7.h8[4];
VRegSElem v7s2_1= v7.s2[1];
VRegSElem v0s2_1= v0.s2[1];
VRegSElem v1s2_1= v1.s2[1];
VRegSElem v2s2_1= v2.s2[1];
VRegSElem v4s2_1= v4.s2[1];
VRegSElem v8s2_1= v8.s2[1];
VRegSElem v16s2_1= v16.s2[1];
VRegSElem v31s2_1= v31.s2[1];
VRegSElem v7s2_0= v7.s2[0];
VRegSElem v7s4_3= v7.s4[3];
VRegSElem v0s4_3= v0.s4[3];
VRegSElem v1s4_3= v1.s4[3];
VRegSElem v2s4_3= v2.s4[3];
VRegSElem v4s4_3= v4.s4[3];
VRegSElem v8s4_3= v8.s4[3];
VRegSElem v16s4_3= v16.s4[3];
VRegSElem v31s4_3= v31.s4[3];
VRegSElem v7s4_0= v7.s4[0];
VRegSElem v7s4_1= v7.s4[1];
VRegSElem v7s4_2= v7.s4[2];
VRegDElem v7d1_0= v7.d1[0];
VRegDElem v0d1_0= v0.d1[0];
VRegDElem v1d1_0= v1.d1[0];
VRegDElem v2d1_0= v2.d1[0];
VRegDElem v4d1_0= v4.d1[0];
VRegDElem v8d1_0= v8.d1[0];
VRegDElem v16d1_0= v16.d1[0];
VRegDElem v31d1_0= v31.d1[0];
VRegDElem v7d2_1= v7.d2[1];
VRegDElem v0d2_1= v0.d2[1];
VRegDElem v1d2_1= v1.d2[1];
VRegDElem v2d2_1= v2.d2[1];
VRegDElem v4d2_1= v4.d2[1];
VRegDElem v8d2_1= v8.d2[1];
VRegDElem v16d2_1= v16.d2[1];
VRegDElem v31d2_1= v31.d2[1];
VRegDElem v7d2_0= v7.d2[0];
//DataProcSimd_Move0:0
dup(b7, v7.b16[7]); dump();
dup(b0, v7.b16[7]); dump();
dup(b1, v7.b16[7]); dump();
dup(b2, v7.b16[7]); dump();
dup(b4, v7.b16[7]); dump();
dup(b8, v7.b16[7]); dump();
dup(b16, v7.b16[7]); dump();
dup(b31, v7.b16[7]); dump();
dup(b7, v7.b16[7]); dump();
dup(b7, v7b16_7); dump();
dup(b7, v0.b16[7]); dump();
dup(b7, v0b16_7); dump();
dup(b7, v1.b16[7]); dump();
dup(b7, v1b16_7); dump();
dup(b7, v2.b16[7]); dump();
dup(b7, v2b16_7); dump();
dup(b7, v4.b16[7]); dump();
dup(b7, v4b16_7); dump();
dup(b7, v8.b16[7]); dump();
dup(b7, v8b16_7); dump();
dup(b7, v16.b16[7]); dump();
dup(b7, v16b16_7); dump();
dup(b7, v31.b16[7]); dump();
dup(b7, v31b16_7); dump();
dup(b7, v7.b16[0]); dump();
dup(b7, v7b16_0); dump();
dup(b7, v7.b16[1]); dump();
dup(b7, v7b16_1); dump();
dup(b7, v7.b16[2]); dump();
dup(b7, v7b16_2); dump();
dup(b7, v7.b16[4]); dump();
dup(b7, v7b16_4); dump();
dup(b7, v7.b16[8]); dump();
dup(b7, v7b16_8); dump();
dup(b7, v7.b16[15]); dump();
dup(b7, v7b16_15); dump();
mov(b7, v7.b16[7]); dump();
mov(b0, v7.b16[7]); dump();
mov(b1, v7.b16[7]); dump();
mov(b2, v7.b16[7]); dump();
mov(b4, v7.b16[7]); dump();
mov(b8, v7.b16[7]); dump();
mov(b16, v7.b16[7]); dump();
mov(b31, v7.b16[7]); dump();
mov(b7, v7.b16[7]); dump();
mov(b7, v7b16_7); dump();
mov(b7, v0.b16[7]); dump();
mov(b7, v0b16_7); dump();
mov(b7, v1.b16[7]); dump();
mov(b7, v1b16_7); dump();
mov(b7, v2.b16[7]); dump();
mov(b7, v2b16_7); dump();
mov(b7, v4.b16[7]); dump();
mov(b7, v4b16_7); dump();
mov(b7, v8.b16[7]); dump();
mov(b7, v8b16_7); dump();
mov(b7, v16.b16[7]); dump();
mov(b7, v16b16_7); dump();
mov(b7, v31.b16[7]); dump();
mov(b7, v31b16_7); dump();
mov(b7, v7.b16[0]); dump();
mov(b7, v7b16_0); dump();
mov(b7, v7.b16[1]); dump();
mov(b7, v7b16_1); dump();
mov(b7, v7.b16[2]); dump();
mov(b7, v7b16_2); dump();
mov(b7, v7.b16[4]); dump();
mov(b7, v7b16_4); dump();
mov(b7, v7.b16[8]); dump();
mov(b7, v7b16_8); dump();
mov(b7, v7.b16[15]); dump();
mov(b7, v7b16_15); dump();
//DataProcSimd_Move0:1
dup(h7, v7.h8[7]); dump();
dup(h0, v7.h8[7]); dump();
dup(h1, v7.h8[7]); dump();
dup(h2, v7.h8[7]); dump();
dup(h4, v7.h8[7]); dump();
dup(h8, v7.h8[7]); dump();
dup(h16, v7.h8[7]); dump();
dup(h31, v7.h8[7]); dump();
dup(h7, v7.h8[7]); dump();
dup(h7, v7h8_7); dump();
dup(h7, v0.h8[7]); dump();
dup(h7, v0h8_7); dump();
dup(h7, v1.h8[7]); dump();
dup(h7, v1h8_7); dump();
dup(h7, v2.h8[7]); dump();
dup(h7, v2h8_7); dump();
dup(h7, v4.h8[7]); dump();
dup(h7, v4h8_7); dump();
dup(h7, v8.h8[7]); dump();
dup(h7, v8h8_7); dump();
dup(h7, v16.h8[7]); dump();
dup(h7, v16h8_7); dump();
dup(h7, v31.h8[7]); dump();
dup(h7, v31h8_7); dump();
dup(h7, v7.h8[0]); dump();
dup(h7, v7h8_0); dump();
dup(h7, v7.h8[1]); dump();
dup(h7, v7h8_1); dump();
dup(h7, v7.h8[2]); dump();
dup(h7, v7h8_2); dump();
dup(h7, v7.h8[4]); dump();
dup(h7, v7h8_4); dump();
mov(h7, v7.h8[7]); dump();
mov(h0, v7.h8[7]); dump();
mov(h1, v7.h8[7]); dump();
mov(h2, v7.h8[7]); dump();
mov(h4, v7.h8[7]); dump();
mov(h8, v7.h8[7]); dump();
mov(h16, v7.h8[7]); dump();
mov(h31, v7.h8[7]); dump();
mov(h7, v7.h8[7]); dump();
mov(h7, v7h8_7); dump();
mov(h7, v0.h8[7]); dump();
mov(h7, v0h8_7); dump();
mov(h7, v1.h8[7]); dump();
mov(h7, v1h8_7); dump();
mov(h7, v2.h8[7]); dump();
mov(h7, v2h8_7); dump();
mov(h7, v4.h8[7]); dump();
mov(h7, v4h8_7); dump();
mov(h7, v8.h8[7]); dump();
mov(h7, v8h8_7); dump();
mov(h7, v16.h8[7]); dump();
mov(h7, v16h8_7); dump();
mov(h7, v31.h8[7]); dump();
mov(h7, v31h8_7); dump();
mov(h7, v7.h8[0]); dump();
mov(h7, v7h8_0); dump();
mov(h7, v7.h8[1]); dump();
mov(h7, v7h8_1); dump();
mov(h7, v7.h8[2]); dump();
mov(h7, v7h8_2); dump();
mov(h7, v7.h8[4]); dump();
mov(h7, v7h8_4); dump();
//DataProcSimd_Move0:2
dup(s7, v7.s4[3]); dump();
dup(s0, v7.s4[3]); dump();
dup(s1, v7.s4[3]); dump();
dup(s2, v7.s4[3]); dump();
dup(s4, v7.s4[3]); dump();
dup(s8, v7.s4[3]); dump();
dup(s16, v7.s4[3]); dump();
dup(s31, v7.s4[3]); dump();
dup(s7, v7.s4[3]); dump();
dup(s7, v7s4_3); dump();
dup(s7, v0.s4[3]); dump();
dup(s7, v0s4_3); dump();
dup(s7, v1.s4[3]); dump();
dup(s7, v1s4_3); dump();
dup(s7, v2.s4[3]); dump();
dup(s7, v2s4_3); dump();
dup(s7, v4.s4[3]); dump();
dup(s7, v4s4_3); dump();
dup(s7, v8.s4[3]); dump();
dup(s7, v8s4_3); dump();
dup(s7, v16.s4[3]); dump();
dup(s7, v16s4_3); dump();
dup(s7, v31.s4[3]); dump();
dup(s7, v31s4_3); dump();
dup(s7, v7.s4[0]); dump();
dup(s7, v7s4_0); dump();
dup(s7, v7.s4[1]); dump();
dup(s7, v7s4_1); dump();
dup(s7, v7.s4[2]); dump();
dup(s7, v7s4_2); dump();
mov(s7, v7.s4[3]); dump();
mov(s0, v7.s4[3]); dump();
mov(s1, v7.s4[3]); dump();
mov(s2, v7.s4[3]); dump();
mov(s4, v7.s4[3]); dump();
mov(s8, v7.s4[3]); dump();
mov(s16, v7.s4[3]); dump();
mov(s31, v7.s4[3]); dump();
mov(s7, v7.s4[3]); dump();
mov(s7, v7s4_3); dump();
mov(s7, v0.s4[3]); dump();
mov(s7, v0s4_3); dump();
mov(s7, v1.s4[3]); dump();
mov(s7, v1s4_3); dump();
mov(s7, v2.s4[3]); dump();
mov(s7, v2s4_3); dump();
mov(s7, v4.s4[3]); dump();
mov(s7, v4s4_3); dump();
mov(s7, v8.s4[3]); dump();
mov(s7, v8s4_3); dump();
mov(s7, v16.s4[3]); dump();
mov(s7, v16s4_3); dump();
mov(s7, v31.s4[3]); dump();
mov(s7, v31s4_3); dump();
mov(s7, v7.s4[0]); dump();
mov(s7, v7s4_0); dump();
mov(s7, v7.s4[1]); dump();
mov(s7, v7s4_1); dump();
mov(s7, v7.s4[2]); dump();
mov(s7, v7s4_2); dump();
//DataProcSimd_Move0:3
dup(d7, v7.d2[1]); dump();
dup(d0, v7.d2[1]); dump();
dup(d1, v7.d2[1]); dump();
dup(d2, v7.d2[1]); dump();
dup(d4, v7.d2[1]); dump();
dup(d8, v7.d2[1]); dump();
dup(d16, v7.d2[1]); dump();
dup(d31, v7.d2[1]); dump();
dup(d7, v7.d2[1]); dump();
dup(d7, v7d2_1); dump();
dup(d7, v0.d2[1]); dump();
dup(d7, v0d2_1); dump();
dup(d7, v1.d2[1]); dump();
dup(d7, v1d2_1); dump();
dup(d7, v2.d2[1]); dump();
dup(d7, v2d2_1); dump();
dup(d7, v4.d2[1]); dump();
dup(d7, v4d2_1); dump();
dup(d7, v8.d2[1]); dump();
dup(d7, v8d2_1); dump();
dup(d7, v16.d2[1]); dump();
dup(d7, v16d2_1); dump();
dup(d7, v31.d2[1]); dump();
dup(d7, v31d2_1); dump();
dup(d7, v7.d2[0]); dump();
dup(d7, v7d2_0); dump();
mov(d7, v7.d2[1]); dump();
mov(d0, v7.d2[1]); dump();
mov(d1, v7.d2[1]); dump();
mov(d2, v7.d2[1]); dump();
mov(d4, v7.d2[1]); dump();
mov(d8, v7.d2[1]); dump();
mov(d16, v7.d2[1]); dump();
mov(d31, v7.d2[1]); dump();
mov(d7, v7.d2[1]); dump();
mov(d7, v7d2_1); dump();
mov(d7, v0.d2[1]); dump();
mov(d7, v0d2_1); dump();
mov(d7, v1.d2[1]); dump();
mov(d7, v1d2_1); dump();
mov(d7, v2.d2[1]); dump();
mov(d7, v2d2_1); dump();
mov(d7, v4.d2[1]); dump();
mov(d7, v4d2_1); dump();
mov(d7, v8.d2[1]); dump();
mov(d7, v8d2_1); dump();
mov(d7, v16.d2[1]); dump();
mov(d7, v16d2_1); dump();
mov(d7, v31.d2[1]); dump();
mov(d7, v31d2_1); dump();
mov(d7, v7.d2[0]); dump();
mov(d7, v7d2_0); dump();
//DataProcSimd_Move1:0
dup(v7.b8, v7.b16[7]); dump();
dup(v0.b8, v7.b16[7]); dump();
dup(v1.b8, v7.b16[7]); dump();
dup(v2.b8, v7.b16[7]); dump();
dup(v4.b8, v7.b16[7]); dump();
dup(v8.b8, v7.b16[7]); dump();
dup(v16.b8, v7.b16[7]); dump();
dup(v31.b8, v7.b16[7]); dump();
dup(v7.b8, v7.b16[7]); dump();
dup(v7.b8, v7b16_7); dump();
dup(v7.b8, v0.b16[7]); dump();
dup(v7.b8, v0b16_7); dump();
dup(v7.b8, v1.b16[7]); dump();
dup(v7.b8, v1b16_7); dump();
dup(v7.b8, v2.b16[7]); dump();
dup(v7.b8, v2b16_7); dump();
dup(v7.b8, v4.b16[7]); dump();
dup(v7.b8, v4b16_7); dump();
dup(v7.b8, v8.b16[7]); dump();
dup(v7.b8, v8b16_7); dump();
dup(v7.b8, v16.b16[7]); dump();
dup(v7.b8, v16b16_7); dump();
dup(v7.b8, v31.b16[7]); dump();
dup(v7.b8, v31b16_7); dump();
dup(v7.b8, v7.b16[0]); dump();
dup(v7.b8, v7b16_0); dump();
dup(v7.b8, v7.b16[1]); dump();
dup(v7.b8, v7b16_1); dump();
dup(v7.b8, v7.b16[2]); dump();
dup(v7.b8, v7b16_2); dump();
dup(v7.b8, v7.b16[4]); dump();
dup(v7.b8, v7b16_4); dump();
dup(v7.b8, v7.b16[8]); dump();
dup(v7.b8, v7b16_8); dump();
dup(v7.b8, v7.b16[15]); dump();
dup(v7.b8, v7b16_15); dump();
//DataProcSimd_Move1:1
dup(v7.b16, v7.b16[7]); dump();
dup(v0.b16, v7.b16[7]); dump();
dup(v1.b16, v7.b16[7]); dump();
dup(v2.b16, v7.b16[7]); dump();
dup(v4.b16, v7.b16[7]); dump();
dup(v8.b16, v7.b16[7]); dump();
dup(v16.b16, v7.b16[7]); dump();
dup(v31.b16, v7.b16[7]); dump();
dup(v7.b16, v7.b16[7]); dump();
dup(v7.b16, v7b16_7); dump();
dup(v7.b16, v0.b16[7]); dump();
dup(v7.b16, v0b16_7); dump();
dup(v7.b16, v1.b16[7]); dump();
dup(v7.b16, v1b16_7); dump();
dup(v7.b16, v2.b16[7]); dump();
dup(v7.b16, v2b16_7); dump();
dup(v7.b16, v4.b16[7]); dump();
dup(v7.b16, v4b16_7); dump();
dup(v7.b16, v8.b16[7]); dump();
dup(v7.b16, v8b16_7); dump();
dup(v7.b16, v16.b16[7]); dump();
dup(v7.b16, v16b16_7); dump();
dup(v7.b16, v31.b16[7]); dump();
dup(v7.b16, v31b16_7); dump();
dup(v7.b16, v7.b16[0]); dump();
dup(v7.b16, v7b16_0); dump();
dup(v7.b16, v7.b16[1]); dump();
dup(v7.b16, v7b16_1); dump();
dup(v7.b16, v7.b16[2]); dump();
dup(v7.b16, v7b16_2); dump();
dup(v7.b16, v7.b16[4]); dump();
dup(v7.b16, v7b16_4); dump();
dup(v7.b16, v7.b16[8]); dump();
dup(v7.b16, v7b16_8); dump();
dup(v7.b16, v7.b16[15]); dump();
dup(v7.b16, v7b16_15); dump();
//DataProcSimd_Move1:2
dup(v7.h4, v7.h8[7]); dump();
dup(v0.h4, v7.h8[7]); dump();
dup(v1.h4, v7.h8[7]); dump();
dup(v2.h4, v7.h8[7]); dump();
dup(v4.h4, v7.h8[7]); dump();
dup(v8.h4, v7.h8[7]); dump();
dup(v16.h4, v7.h8[7]); dump();
dup(v31.h4, v7.h8[7]); dump();
dup(v7.h4, v7.h8[7]); dump();
dup(v7.h4, v7h8_7); dump();
dup(v7.h4, v0.h8[7]); dump();
dup(v7.h4, v0h8_7); dump();
dup(v7.h4, v1.h8[7]); dump();
dup(v7.h4, v1h8_7); dump();
dup(v7.h4, v2.h8[7]); dump();
dup(v7.h4, v2h8_7); dump();
dup(v7.h4, v4.h8[7]); dump();
dup(v7.h4, v4h8_7); dump();
dup(v7.h4, v8.h8[7]); dump();
dup(v7.h4, v8h8_7); dump();
dup(v7.h4, v16.h8[7]); dump();
dup(v7.h4, v16h8_7); dump();
dup(v7.h4, v31.h8[7]); dump();
dup(v7.h4, v31h8_7); dump();
dup(v7.h4, v7.h8[0]); dump();
dup(v7.h4, v7h8_0); dump();
dup(v7.h4, v7.h8[1]); dump();
dup(v7.h4, v7h8_1); dump();
dup(v7.h4, v7.h8[2]); dump();
dup(v7.h4, v7h8_2); dump();
dup(v7.h4, v7.h8[4]); dump();
dup(v7.h4, v7h8_4); dump();
//DataProcSimd_Move1:3
dup(v7.h8, v7.h8[7]); dump();
dup(v0.h8, v7.h8[7]); dump();
dup(v1.h8, v7.h8[7]); dump();
dup(v2.h8, v7.h8[7]); dump();
dup(v4.h8, v7.h8[7]); dump();
dup(v8.h8, v7.h8[7]); dump();
dup(v16.h8, v7.h8[7]); dump();
dup(v31.h8, v7.h8[7]); dump();
dup(v7.h8, v7.h8[7]); dump();
dup(v7.h8, v7h8_7); dump();
dup(v7.h8, v0.h8[7]); dump();
dup(v7.h8, v0h8_7); dump();
dup(v7.h8, v1.h8[7]); dump();
dup(v7.h8, v1h8_7); dump();
dup(v7.h8, v2.h8[7]); dump();
dup(v7.h8, v2h8_7); dump();
dup(v7.h8, v4.h8[7]); dump();
dup(v7.h8, v4h8_7); dump();
dup(v7.h8, v8.h8[7]); dump();
dup(v7.h8, v8h8_7); dump();
dup(v7.h8, v16.h8[7]); dump();
dup(v7.h8, v16h8_7); dump();
dup(v7.h8, v31.h8[7]); dump();
dup(v7.h8, v31h8_7); dump();
dup(v7.h8, v7.h8[0]); dump();
dup(v7.h8, v7h8_0); dump();
dup(v7.h8, v7.h8[1]); dump();
dup(v7.h8, v7h8_1); dump();
dup(v7.h8, v7.h8[2]); dump();
dup(v7.h8, v7h8_2); dump();
dup(v7.h8, v7.h8[4]); dump();
dup(v7.h8, v7h8_4); dump();
//DataProcSimd_Move1:4
dup(v7.s2, v7.s4[3]); dump();
dup(v0.s2, v7.s4[3]); dump();
dup(v1.s2, v7.s4[3]); dump();
dup(v2.s2, v7.s4[3]); dump();
dup(v4.s2, v7.s4[3]); dump();
dup(v8.s2, v7.s4[3]); dump();
dup(v16.s2, v7.s4[3]); dump();
dup(v31.s2, v7.s4[3]); dump();
dup(v7.s2, v7.s4[3]); dump();
dup(v7.s2, v7s4_3); dump();
dup(v7.s2, v0.s4[3]); dump();
dup(v7.s2, v0s4_3); dump();
dup(v7.s2, v1.s4[3]); dump();
dup(v7.s2, v1s4_3); dump();
dup(v7.s2, v2.s4[3]); dump();
dup(v7.s2, v2s4_3); dump();
dup(v7.s2, v4.s4[3]); dump();
dup(v7.s2, v4s4_3); dump();
dup(v7.s2, v8.s4[3]); dump();
dup(v7.s2, v8s4_3); dump();
dup(v7.s2, v16.s4[3]); dump();
dup(v7.s2, v16s4_3); dump();
dup(v7.s2, v31.s4[3]); dump();
dup(v7.s2, v31s4_3); dump();
dup(v7.s2, v7.s4[0]); dump();
dup(v7.s2, v7s4_0); dump();
dup(v7.s2, v7.s4[1]); dump();
dup(v7.s2, v7s4_1); dump();
dup(v7.s2, v7.s4[2]); dump();
dup(v7.s2, v7s4_2); dump();
//DataProcSimd_Move1:5
dup(v7.s4, v7.s4[3]); dump();
dup(v0.s4, v7.s4[3]); dump();
dup(v1.s4, v7.s4[3]); dump();
dup(v2.s4, v7.s4[3]); dump();
dup(v4.s4, v7.s4[3]); dump();
dup(v8.s4, v7.s4[3]); dump();
dup(v16.s4, v7.s4[3]); dump();
dup(v31.s4, v7.s4[3]); dump();
dup(v7.s4, v7.s4[3]); dump();
dup(v7.s4, v7s4_3); dump();
dup(v7.s4, v0.s4[3]); dump();
dup(v7.s4, v0s4_3); dump();
dup(v7.s4, v1.s4[3]); dump();
dup(v7.s4, v1s4_3); dump();
dup(v7.s4, v2.s4[3]); dump();
dup(v7.s4, v2s4_3); dump();
dup(v7.s4, v4.s4[3]); dump();
dup(v7.s4, v4s4_3); dump();
dup(v7.s4, v8.s4[3]); dump();
dup(v7.s4, v8s4_3); dump();
dup(v7.s4, v16.s4[3]); dump();
dup(v7.s4, v16s4_3); dump();
dup(v7.s4, v31.s4[3]); dump();
dup(v7.s4, v31s4_3); dump();
dup(v7.s4, v7.s4[0]); dump();
dup(v7.s4, v7s4_0); dump();
dup(v7.s4, v7.s4[1]); dump();
dup(v7.s4, v7s4_1); dump();
dup(v7.s4, v7.s4[2]); dump();
dup(v7.s4, v7s4_2); dump();
//DataProcSimd_Move1:6
dup(v7.d2, v7.d2[1]); dump();
dup(v0.d2, v7.d2[1]); dump();
dup(v1.d2, v7.d2[1]); dump();
dup(v2.d2, v7.d2[1]); dump();
dup(v4.d2, v7.d2[1]); dump();
dup(v8.d2, v7.d2[1]); dump();
dup(v16.d2, v7.d2[1]); dump();
dup(v31.d2, v7.d2[1]); dump();
dup(v7.d2, v7.d2[1]); dump();
dup(v7.d2, v7d2_1); dump();
dup(v7.d2, v0.d2[1]); dump();
dup(v7.d2, v0d2_1); dump();
dup(v7.d2, v1.d2[1]); dump();
dup(v7.d2, v1d2_1); dump();
dup(v7.d2, v2.d2[1]); dump();
dup(v7.d2, v2d2_1); dump();
dup(v7.d2, v4.d2[1]); dump();
dup(v7.d2, v4d2_1); dump();
dup(v7.d2, v8.d2[1]); dump();
dup(v7.d2, v8d2_1); dump();
dup(v7.d2, v16.d2[1]); dump();
dup(v7.d2, v16d2_1); dump();
dup(v7.d2, v31.d2[1]); dump();
dup(v7.d2, v31d2_1); dump();
dup(v7.d2, v7.d2[0]); dump();
dup(v7.d2, v7d2_0); dump();
//DataProcSimd_Move2:0
dup(v7.b8, w0); dump();
dup(v0.b8, w0); dump();
dup(v1.b8, w0); dump();
dup(v2.b8, w0); dump();
dup(v4.b8, w0); dump();
dup(v8.b8, w0); dump();
dup(v16.b8, w0); dump();
dup(v31.b8, w0); dump();
dup(v7.b8, w0); dump();
dup(v7.b8, w1); dump();
dup(v7.b8, w2); dump();
dup(v7.b8, w4); dump();
dup(v7.b8, w8); dump();
dup(v7.b8, w16); dump();
dup(v7.b8, w30); dump();
//DataProcSimd_Move2:1
dup(v7.b16, w0); dump();
dup(v0.b16, w0); dump();
dup(v1.b16, w0); dump();
dup(v2.b16, w0); dump();
dup(v4.b16, w0); dump();
dup(v8.b16, w0); dump();
dup(v16.b16, w0); dump();
dup(v31.b16, w0); dump();
dup(v7.b16, w0); dump();
dup(v7.b16, w1); dump();
dup(v7.b16, w2); dump();
dup(v7.b16, w4); dump();
dup(v7.b16, w8); dump();
dup(v7.b16, w16); dump();
dup(v7.b16, w30); dump();
//DataProcSimd_Move2:2
dup(v7.h4, w0); dump();
dup(v0.h4, w0); dump();
dup(v1.h4, w0); dump();
dup(v2.h4, w0); dump();
dup(v4.h4, w0); dump();
dup(v8.h4, w0); dump();
dup(v16.h4, w0); dump();
dup(v31.h4, w0); dump();
dup(v7.h4, w0); dump();
dup(v7.h4, w1); dump();
dup(v7.h4, w2); dump();
dup(v7.h4, w4); dump();
dup(v7.h4, w8); dump();
dup(v7.h4, w16); dump();
dup(v7.h4, w30); dump();
//DataProcSimd_Move2:3
dup(v7.h8, w0); dump();
dup(v0.h8, w0); dump();
dup(v1.h8, w0); dump();
dup(v2.h8, w0); dump();
dup(v4.h8, w0); dump();
dup(v8.h8, w0); dump();
dup(v16.h8, w0); dump();
dup(v31.h8, w0); dump();
dup(v7.h8, w0); dump();
dup(v7.h8, w1); dump();
dup(v7.h8, w2); dump();
dup(v7.h8, w4); dump();
dup(v7.h8, w8); dump();
dup(v7.h8, w16); dump();
dup(v7.h8, w30); dump();
//DataProcSimd_Move2:4
dup(v7.s2, w0); dump();
dup(v0.s2, w0); dump();
dup(v1.s2, w0); dump();
dup(v2.s2, w0); dump();
dup(v4.s2, w0); dump();
dup(v8.s2, w0); dump();
dup(v16.s2, w0); dump();
dup(v31.s2, w0); dump();
dup(v7.s2, w0); dump();
dup(v7.s2, w1); dump();
dup(v7.s2, w2); dump();
dup(v7.s2, w4); dump();
dup(v7.s2, w8); dump();
dup(v7.s2, w16); dump();
dup(v7.s2, w30); dump();
//DataProcSimd_Move2:5
dup(v7.s4, w0); dump();
dup(v0.s4, w0); dump();
dup(v1.s4, w0); dump();
dup(v2.s4, w0); dump();
dup(v4.s4, w0); dump();
dup(v8.s4, w0); dump();
dup(v16.s4, w0); dump();
dup(v31.s4, w0); dump();
dup(v7.s4, w0); dump();
dup(v7.s4, w1); dump();
dup(v7.s4, w2); dump();
dup(v7.s4, w4); dump();
dup(v7.s4, w8); dump();
dup(v7.s4, w16); dump();
dup(v7.s4, w30); dump();
//DataProcSimd_Move2:6
dup(v7.d2, x0); dump();
dup(v0.d2, x0); dump();
dup(v1.d2, x0); dump();
dup(v2.d2, x0); dump();
dup(v4.d2, x0); dump();
dup(v8.d2, x0); dump();
dup(v16.d2, x0); dump();
dup(v31.d2, x0); dump();
dup(v7.d2, x0); dump();
dup(v7.d2, x1); dump();
dup(v7.d2, x2); dump();
dup(v7.d2, x4); dump();
dup(v7.d2, x8); dump();
dup(v7.d2, x16); dump();
dup(v7.d2, x30); dump();
//DataProcSimd_Move3:0
ins(v7.b16[7], v7.b16[7]); dump();
ins(v7b16_7, v7.b16[7]); dump();
ins(v0.b16[7], v7.b16[7]); dump();
ins(v0b16_7, v7.b16[7]); dump();
ins(v1.b16[7], v7.b16[7]); dump();
ins(v1b16_7, v7.b16[7]); dump();
ins(v2.b16[7], v7.b16[7]); dump();
ins(v2b16_7, v7.b16[7]); dump();
ins(v4.b16[7], v7.b16[7]); dump();
ins(v4b16_7, v7.b16[7]); dump();
ins(v8.b16[7], v7.b16[7]); dump();
ins(v8b16_7, v7.b16[7]); dump();
ins(v16.b16[7], v7.b16[7]); dump();
ins(v16b16_7, v7.b16[7]); dump();
ins(v31.b16[7], v7.b16[7]); dump();
ins(v31b16_7, v7.b16[7]); dump();
ins(v7.b16[0], v7.b16[7]); dump();
ins(v7b16_0, v7.b16[7]); dump();
ins(v7.b16[1], v7.b16[7]); dump();
ins(v7b16_1, v7.b16[7]); dump();
ins(v7.b16[2], v7.b16[7]); dump();
ins(v7b16_2, v7.b16[7]); dump();
ins(v7.b16[4], v7.b16[7]); dump();
ins(v7b16_4, v7.b16[7]); dump();
ins(v7.b16[8], v7.b16[7]); dump();
ins(v7b16_8, v7.b16[7]); dump();
ins(v7.b16[15], v7.b16[7]); dump();
ins(v7b16_15, v7.b16[7]); dump();
ins(v7.b16[7], v7.b16[7]); dump();
ins(v7.b16[7], v7b16_7); dump();
ins(v7.b16[7], v0.b16[7]); dump();
ins(v7.b16[7], v0b16_7); dump();
ins(v7.b16[7], v1.b16[7]); dump();
ins(v7.b16[7], v1b16_7); dump();
ins(v7.b16[7], v2.b16[7]); dump();
ins(v7.b16[7], v2b16_7); dump();
ins(v7.b16[7], v4.b16[7]); dump();
ins(v7.b16[7], v4b16_7); dump();
ins(v7.b16[7], v8.b16[7]); dump();
ins(v7.b16[7], v8b16_7); dump();
ins(v7.b16[7], v16.b16[7]); dump();
ins(v7.b16[7], v16b16_7); dump();
ins(v7.b16[7], v31.b16[7]); dump();
ins(v7.b16[7], v31b16_7); dump();
ins(v7.b16[7], v7.b16[0]); dump();
ins(v7.b16[7], v7b16_0); dump();
ins(v7.b16[7], v7.b16[1]); dump();
ins(v7.b16[7], v7b16_1); dump();
ins(v7.b16[7], v7.b16[2]); dump();
ins(v7.b16[7], v7b16_2); dump();
ins(v7.b16[7], v7.b16[4]); dump();
ins(v7.b16[7], v7b16_4); dump();
ins(v7.b16[7], v7.b16[8]); dump();
ins(v7.b16[7], v7b16_8); dump();
ins(v7.b16[7], v7.b16[15]); dump();
ins(v7.b16[7], v7b16_15); dump();
mov(v7.b16[7], v7.b16[7]); dump();
mov(v7b16_7, v7.b16[7]); dump();
mov(v0.b16[7], v7.b16[7]); dump();
mov(v0b16_7, v7.b16[7]); dump();
mov(v1.b16[7], v7.b16[7]); dump();
mov(v1b16_7, v7.b16[7]); dump();
mov(v2.b16[7], v7.b16[7]); dump();
mov(v2b16_7, v7.b16[7]); dump();
mov(v4.b16[7], v7.b16[7]); dump();
mov(v4b16_7, v7.b16[7]); dump();
mov(v8.b16[7], v7.b16[7]); dump();
mov(v8b16_7, v7.b16[7]); dump();
mov(v16.b16[7], v7.b16[7]); dump();
mov(v16b16_7, v7.b16[7]); dump();
mov(v31.b16[7], v7.b16[7]); dump();
mov(v31b16_7, v7.b16[7]); dump();
mov(v7.b16[0], v7.b16[7]); dump();
mov(v7b16_0, v7.b16[7]); dump();
mov(v7.b16[1], v7.b16[7]); dump();
mov(v7b16_1, v7.b16[7]); dump();
mov(v7.b16[2], v7.b16[7]); dump();
mov(v7b16_2, v7.b16[7]); dump();
mov(v7.b16[4], v7.b16[7]); dump();
mov(v7b16_4, v7.b16[7]); dump();
mov(v7.b16[8], v7.b16[7]); dump();
mov(v7b16_8, v7.b16[7]); dump();
mov(v7.b16[15], v7.b16[7]); dump();
mov(v7b16_15, v7.b16[7]); dump();
mov(v7.b16[7], v7.b16[7]); dump();
mov(v7.b16[7], v7b16_7); dump();
mov(v7.b16[7], v0.b16[7]); dump();
mov(v7.b16[7], v0b16_7); dump();
mov(v7.b16[7], v1.b16[7]); dump();
mov(v7.b16[7], v1b16_7); dump();
mov(v7.b16[7], v2.b16[7]); dump();
mov(v7.b16[7], v2b16_7); dump();
mov(v7.b16[7], v4.b16[7]); dump();
mov(v7.b16[7], v4b16_7); dump();
mov(v7.b16[7], v8.b16[7]); dump();
mov(v7.b16[7], v8b16_7); dump();
mov(v7.b16[7], v16.b16[7]); dump();
mov(v7.b16[7], v16b16_7); dump();
mov(v7.b16[7], v31.b16[7]); dump();
mov(v7.b16[7], v31b16_7); dump();
mov(v7.b16[7], v7.b16[0]); dump();
mov(v7.b16[7], v7b16_0); dump();
mov(v7.b16[7], v7.b16[1]); dump();
mov(v7.b16[7], v7b16_1); dump();
mov(v7.b16[7], v7.b16[2]); dump();
mov(v7.b16[7], v7b16_2); dump();
mov(v7.b16[7], v7.b16[4]); dump();
mov(v7.b16[7], v7b16_4); dump();
mov(v7.b16[7], v7.b16[8]); dump();
mov(v7.b16[7], v7b16_8); dump();
mov(v7.b16[7], v7.b16[15]); dump();
mov(v7.b16[7], v7b16_15); dump();
//DataProcSimd_Move3:1
ins(v7.h8[7], v7.h8[7]); dump();
ins(v7h8_7, v7.h8[7]); dump();
ins(v0.h8[7], v7.h8[7]); dump();
ins(v0h8_7, v7.h8[7]); dump();
ins(v1.h8[7], v7.h8[7]); dump();
ins(v1h8_7, v7.h8[7]); dump();
ins(v2.h8[7], v7.h8[7]); dump();
ins(v2h8_7, v7.h8[7]); dump();
ins(v4.h8[7], v7.h8[7]); dump();
ins(v4h8_7, v7.h8[7]); dump();
ins(v8.h8[7], v7.h8[7]); dump();
ins(v8h8_7, v7.h8[7]); dump();
ins(v16.h8[7], v7.h8[7]); dump();
ins(v16h8_7, v7.h8[7]); dump();
ins(v31.h8[7], v7.h8[7]); dump();
ins(v31h8_7, v7.h8[7]); dump();
ins(v7.h8[0], v7.h8[7]); dump();
ins(v7h8_0, v7.h8[7]); dump();
ins(v7.h8[1], v7.h8[7]); dump();
ins(v7h8_1, v7.h8[7]); dump();
ins(v7.h8[2], v7.h8[7]); dump();
ins(v7h8_2, v7.h8[7]); dump();
ins(v7.h8[4], v7.h8[7]); dump();
ins(v7h8_4, v7.h8[7]); dump();
ins(v7.h8[7], v7.h8[7]); dump();
ins(v7.h8[7], v7h8_7); dump();
ins(v7.h8[7], v0.h8[7]); dump();
ins(v7.h8[7], v0h8_7); dump();
ins(v7.h8[7], v1.h8[7]); dump();
ins(v7.h8[7], v1h8_7); dump();
ins(v7.h8[7], v2.h8[7]); dump();
ins(v7.h8[7], v2h8_7); dump();
ins(v7.h8[7], v4.h8[7]); dump();
ins(v7.h8[7], v4h8_7); dump();
ins(v7.h8[7], v8.h8[7]); dump();
ins(v7.h8[7], v8h8_7); dump();
ins(v7.h8[7], v16.h8[7]); dump();
ins(v7.h8[7], v16h8_7); dump();
ins(v7.h8[7], v31.h8[7]); dump();
ins(v7.h8[7], v31h8_7); dump();
ins(v7.h8[7], v7.h8[0]); dump();
ins(v7.h8[7], v7h8_0); dump();
ins(v7.h8[7], v7.h8[1]); dump();
ins(v7.h8[7], v7h8_1); dump();
ins(v7.h8[7], v7.h8[2]); dump();
ins(v7.h8[7], v7h8_2); dump();
ins(v7.h8[7], v7.h8[4]); dump();
ins(v7.h8[7], v7h8_4); dump();
mov(v7.h8[7], v7.h8[7]); dump();
mov(v7h8_7, v7.h8[7]); dump();
mov(v0.h8[7], v7.h8[7]); dump();
mov(v0h8_7, v7.h8[7]); dump();
mov(v1.h8[7], v7.h8[7]); dump();
mov(v1h8_7, v7.h8[7]); dump();
mov(v2.h8[7], v7.h8[7]); dump();
mov(v2h8_7, v7.h8[7]); dump();
mov(v4.h8[7], v7.h8[7]); dump();
mov(v4h8_7, v7.h8[7]); dump();
mov(v8.h8[7], v7.h8[7]); dump();
mov(v8h8_7, v7.h8[7]); dump();
mov(v16.h8[7], v7.h8[7]); dump();
mov(v16h8_7, v7.h8[7]); dump();
mov(v31.h8[7], v7.h8[7]); dump();
mov(v31h8_7, v7.h8[7]); dump();
mov(v7.h8[0], v7.h8[7]); dump();
mov(v7h8_0, v7.h8[7]); dump();
mov(v7.h8[1], v7.h8[7]); dump();
mov(v7h8_1, v7.h8[7]); dump();
mov(v7.h8[2], v7.h8[7]); dump();
mov(v7h8_2, v7.h8[7]); dump();
mov(v7.h8[4], v7.h8[7]); dump();
mov(v7h8_4, v7.h8[7]); dump();
mov(v7.h8[7], v7.h8[7]); dump();
mov(v7.h8[7], v7h8_7); dump();
mov(v7.h8[7], v0.h8[7]); dump();
mov(v7.h8[7], v0h8_7); dump();
mov(v7.h8[7], v1.h8[7]); dump();
mov(v7.h8[7], v1h8_7); dump();
mov(v7.h8[7], v2.h8[7]); dump();
mov(v7.h8[7], v2h8_7); dump();
mov(v7.h8[7], v4.h8[7]); dump();
mov(v7.h8[7], v4h8_7); dump();
mov(v7.h8[7], v8.h8[7]); dump();
mov(v7.h8[7], v8h8_7); dump();
mov(v7.h8[7], v16.h8[7]); dump();
mov(v7.h8[7], v16h8_7); dump();
mov(v7.h8[7], v31.h8[7]); dump();
mov(v7.h8[7], v31h8_7); dump();
mov(v7.h8[7], v7.h8[0]); dump();
mov(v7.h8[7], v7h8_0); dump();
mov(v7.h8[7], v7.h8[1]); dump();
mov(v7.h8[7], v7h8_1); dump();
mov(v7.h8[7], v7.h8[2]); dump();
mov(v7.h8[7], v7h8_2); dump();
mov(v7.h8[7], v7.h8[4]); dump();
mov(v7.h8[7], v7h8_4); dump();
//DataProcSimd_Move3:2
ins(v7.s4[3], v7.s4[3]); dump();
ins(v7s4_3, v7.s4[3]); dump();
ins(v0.s4[3], v7.s4[3]); dump();
ins(v0s4_3, v7.s4[3]); dump();
ins(v1.s4[3], v7.s4[3]); dump();
ins(v1s4_3, v7.s4[3]); dump();
ins(v2.s4[3], v7.s4[3]); dump();
ins(v2s4_3, v7.s4[3]); dump();
ins(v4.s4[3], v7.s4[3]); dump();
ins(v4s4_3, v7.s4[3]); dump();
ins(v8.s4[3], v7.s4[3]); dump();
ins(v8s4_3, v7.s4[3]); dump();
ins(v16.s4[3], v7.s4[3]); dump();
ins(v16s4_3, v7.s4[3]); dump();
ins(v31.s4[3], v7.s4[3]); dump();
ins(v31s4_3, v7.s4[3]); dump();
ins(v7.s4[0], v7.s4[3]); dump();
ins(v7s4_0, v7.s4[3]); dump();
ins(v7.s4[1], v7.s4[3]); dump();
ins(v7s4_1, v7.s4[3]); dump();
ins(v7.s4[2], v7.s4[3]); dump();
ins(v7s4_2, v7.s4[3]); dump();
ins(v7.s4[3], v7.s4[3]); dump();
ins(v7.s4[3], v7s4_3); dump();
ins(v7.s4[3], v0.s4[3]); dump();
ins(v7.s4[3], v0s4_3); dump();
ins(v7.s4[3], v1.s4[3]); dump();
ins(v7.s4[3], v1s4_3); dump();
ins(v7.s4[3], v2.s4[3]); dump();
ins(v7.s4[3], v2s4_3); dump();
ins(v7.s4[3], v4.s4[3]); dump();
ins(v7.s4[3], v4s4_3); dump();
ins(v7.s4[3], v8.s4[3]); dump();
ins(v7.s4[3], v8s4_3); dump();
ins(v7.s4[3], v16.s4[3]); dump();
ins(v7.s4[3], v16s4_3); dump();
ins(v7.s4[3], v31.s4[3]); dump();
ins(v7.s4[3], v31s4_3); dump();
ins(v7.s4[3], v7.s4[0]); dump();
ins(v7.s4[3], v7s4_0); dump();
ins(v7.s4[3], v7.s4[1]); dump();
ins(v7.s4[3], v7s4_1); dump();
ins(v7.s4[3], v7.s4[2]); dump();
ins(v7.s4[3], v7s4_2); dump();
mov(v7.s4[3], v7.s4[3]); dump();
mov(v7s4_3, v7.s4[3]); dump();
mov(v0.s4[3], v7.s4[3]); dump();
mov(v0s4_3, v7.s4[3]); dump();
mov(v1.s4[3], v7.s4[3]); dump();
mov(v1s4_3, v7.s4[3]); dump();
mov(v2.s4[3], v7.s4[3]); dump();
mov(v2s4_3, v7.s4[3]); dump();
mov(v4.s4[3], v7.s4[3]); dump();
mov(v4s4_3, v7.s4[3]); dump();
mov(v8.s4[3], v7.s4[3]); dump();
mov(v8s4_3, v7.s4[3]); dump();
mov(v16.s4[3], v7.s4[3]); dump();
mov(v16s4_3, v7.s4[3]); dump();
mov(v31.s4[3], v7.s4[3]); dump();
mov(v31s4_3, v7.s4[3]); dump();
mov(v7.s4[0], v7.s4[3]); dump();
mov(v7s4_0, v7.s4[3]); dump();
mov(v7.s4[1], v7.s4[3]); dump();
mov(v7s4_1, v7.s4[3]); dump();
mov(v7.s4[2], v7.s4[3]); dump();
mov(v7s4_2, v7.s4[3]); dump();
mov(v7.s4[3], v7.s4[3]); dump();
mov(v7.s4[3], v7s4_3); dump();
mov(v7.s4[3], v0.s4[3]); dump();
mov(v7.s4[3], v0s4_3); dump();
mov(v7.s4[3], v1.s4[3]); dump();
mov(v7.s4[3], v1s4_3); dump();
mov(v7.s4[3], v2.s4[3]); dump();
mov(v7.s4[3], v2s4_3); dump();
mov(v7.s4[3], v4.s4[3]); dump();
mov(v7.s4[3], v4s4_3); dump();
mov(v7.s4[3], v8.s4[3]); dump();
mov(v7.s4[3], v8s4_3); dump();
mov(v7.s4[3], v16.s4[3]); dump();
mov(v7.s4[3], v16s4_3); dump();
mov(v7.s4[3], v31.s4[3]); dump();
mov(v7.s4[3], v31s4_3); dump();
mov(v7.s4[3], v7.s4[0]); dump();
mov(v7.s4[3], v7s4_0); dump();
mov(v7.s4[3], v7.s4[1]); dump();
mov(v7.s4[3], v7s4_1); dump();
mov(v7.s4[3], v7.s4[2]); dump();
mov(v7.s4[3], v7s4_2); dump();
//DataProcSimd_Move4:0
ins(v7.d2[1], v7.d2[1]); dump();
ins(v7d2_1, v7.d2[1]); dump();
ins(v0.d2[1], v7.d2[1]); dump();
ins(v0d2_1, v7.d2[1]); dump();
ins(v1.d2[1], v7.d2[1]); dump();
ins(v1d2_1, v7.d2[1]); dump();
ins(v2.d2[1], v7.d2[1]); dump();
ins(v2d2_1, v7.d2[1]); dump();
ins(v4.d2[1], v7.d2[1]); dump();
ins(v4d2_1, v7.d2[1]); dump();
ins(v8.d2[1], v7.d2[1]); dump();
ins(v8d2_1, v7.d2[1]); dump();
ins(v16.d2[1], v7.d2[1]); dump();
ins(v16d2_1, v7.d2[1]); dump();
ins(v31.d2[1], v7.d2[1]); dump();
ins(v31d2_1, v7.d2[1]); dump();
ins(v7.d2[0], v7.d2[1]); dump();
ins(v7d2_0, v7.d2[1]); dump();
ins(v7.d2[1], v7.d2[1]); dump();
ins(v7.d2[1], v7d2_1); dump();
ins(v7.d2[1], v0.d2[1]); dump();
ins(v7.d2[1], v0d2_1); dump();
ins(v7.d2[1], v1.d2[1]); dump();
ins(v7.d2[1], v1d2_1); dump();
ins(v7.d2[1], v2.d2[1]); dump();
ins(v7.d2[1], v2d2_1); dump();
ins(v7.d2[1], v4.d2[1]); dump();
ins(v7.d2[1], v4d2_1); dump();
ins(v7.d2[1], v8.d2[1]); dump();
ins(v7.d2[1], v8d2_1); dump();
ins(v7.d2[1], v16.d2[1]); dump();
ins(v7.d2[1], v16d2_1); dump();
ins(v7.d2[1], v31.d2[1]); dump();
ins(v7.d2[1], v31d2_1); dump();
ins(v7.d2[1], v7.d2[0]); dump();
ins(v7.d2[1], v7d2_0); dump();
//DataProcSimd_Move5:0
ins(v7.b16[7], w0); dump();
ins(v7b16_7, w0); dump();
ins(v0.b16[7], w0); dump();
ins(v0b16_7, w0); dump();
ins(v1.b16[7], w0); dump();
ins(v1b16_7, w0); dump();
ins(v2.b16[7], w0); dump();
ins(v2b16_7, w0); dump();
ins(v4.b16[7], w0); dump();
ins(v4b16_7, w0); dump();
ins(v8.b16[7], w0); dump();
ins(v8b16_7, w0); dump();
ins(v16.b16[7], w0); dump();
ins(v16b16_7, w0); dump();
ins(v31.b16[7], w0); dump();
ins(v31b16_7, w0); dump();
ins(v7.b16[0], w0); dump();
ins(v7b16_0, w0); dump();
ins(v7.b16[1], w0); dump();
ins(v7b16_1, w0); dump();
ins(v7.b16[2], w0); dump();
ins(v7b16_2, w0); dump();
ins(v7.b16[4], w0); dump();
ins(v7b16_4, w0); dump();
ins(v7.b16[8], w0); dump();
ins(v7b16_8, w0); dump();
ins(v7.b16[15], w0); dump();
ins(v7b16_15, w0); dump();
ins(v7.b16[7], w0); dump();
ins(v7.b16[7], w1); dump();
ins(v7.b16[7], w2); dump();
ins(v7.b16[7], w4); dump();
ins(v7.b16[7], w8); dump();
ins(v7.b16[7], w16); dump();
ins(v7.b16[7], w30); dump();
mov(v7.b16[7], w0); dump();
mov(v7b16_7, w0); dump();
mov(v0.b16[7], w0); dump();
mov(v0b16_7, w0); dump();
mov(v1.b16[7], w0); dump();
mov(v1b16_7, w0); dump();
mov(v2.b16[7], w0); dump();
mov(v2b16_7, w0); dump();
mov(v4.b16[7], w0); dump();
mov(v4b16_7, w0); dump();
mov(v8.b16[7], w0); dump();
mov(v8b16_7, w0); dump();
mov(v16.b16[7], w0); dump();
mov(v16b16_7, w0); dump();
mov(v31.b16[7], w0); dump();
mov(v31b16_7, w0); dump();
mov(v7.b16[0], w0); dump();
mov(v7b16_0, w0); dump();
mov(v7.b16[1], w0); dump();
mov(v7b16_1, w0); dump();
mov(v7.b16[2], w0); dump();
mov(v7b16_2, w0); dump();
mov(v7.b16[4], w0); dump();
mov(v7b16_4, w0); dump();
mov(v7.b16[8], w0); dump();
mov(v7b16_8, w0); dump();
mov(v7.b16[15], w0); dump();
mov(v7b16_15, w0); dump();
mov(v7.b16[7], w0); dump();
mov(v7.b16[7], w1); dump();
mov(v7.b16[7], w2); dump();
mov(v7.b16[7], w4); dump();
mov(v7.b16[7], w8); dump();
mov(v7.b16[7], w16); dump();
mov(v7.b16[7], w30); dump();
//DataProcSimd_Move5:1
ins(v7.h8[7], w0); dump();
ins(v7h8_7, w0); dump();
ins(v0.h8[7], w0); dump();
ins(v0h8_7, w0); dump();
ins(v1.h8[7], w0); dump();
ins(v1h8_7, w0); dump();
ins(v2.h8[7], w0); dump();
ins(v2h8_7, w0); dump();
ins(v4.h8[7], w0); dump();
ins(v4h8_7, w0); dump();
ins(v8.h8[7], w0); dump();
ins(v8h8_7, w0); dump();
ins(v16.h8[7], w0); dump();
ins(v16h8_7, w0); dump();
ins(v31.h8[7], w0); dump();
ins(v31h8_7, w0); dump();
ins(v7.h8[0], w0); dump();
ins(v7h8_0, w0); dump();
ins(v7.h8[1], w0); dump();
ins(v7h8_1, w0); dump();
ins(v7.h8[2], w0); dump();
ins(v7h8_2, w0); dump();
ins(v7.h8[4], w0); dump();
ins(v7h8_4, w0); dump();
ins(v7.h8[7], w0); dump();
ins(v7.h8[7], w1); dump();
ins(v7.h8[7], w2); dump();
ins(v7.h8[7], w4); dump();
ins(v7.h8[7], w8); dump();
ins(v7.h8[7], w16); dump();
ins(v7.h8[7], w30); dump();
mov(v7.h8[7], w0); dump();
mov(v7h8_7, w0); dump();
mov(v0.h8[7], w0); dump();
mov(v0h8_7, w0); dump();
mov(v1.h8[7], w0); dump();
mov(v1h8_7, w0); dump();
mov(v2.h8[7], w0); dump();
mov(v2h8_7, w0); dump();
mov(v4.h8[7], w0); dump();
mov(v4h8_7, w0); dump();
mov(v8.h8[7], w0); dump();
mov(v8h8_7, w0); dump();
mov(v16.h8[7], w0); dump();
mov(v16h8_7, w0); dump();
mov(v31.h8[7], w0); dump();
mov(v31h8_7, w0); dump();
mov(v7.h8[0], w0); dump();
mov(v7h8_0, w0); dump();
mov(v7.h8[1], w0); dump();
mov(v7h8_1, w0); dump();
mov(v7.h8[2], w0); dump();
mov(v7h8_2, w0); dump();
mov(v7.h8[4], w0); dump();
mov(v7h8_4, w0); dump();
mov(v7.h8[7], w0); dump();
mov(v7.h8[7], w1); dump();
mov(v7.h8[7], w2); dump();
mov(v7.h8[7], w4); dump();
mov(v7.h8[7], w8); dump();
mov(v7.h8[7], w16); dump();
mov(v7.h8[7], w30); dump();
//DataProcSimd_Move5:2
ins(v7.s4[3], w0); dump();
ins(v7s4_3, w0); dump();
ins(v0.s4[3], w0); dump();
ins(v0s4_3, w0); dump();
ins(v1.s4[3], w0); dump();
ins(v1s4_3, w0); dump();
ins(v2.s4[3], w0); dump();
ins(v2s4_3, w0); dump();
ins(v4.s4[3], w0); dump();
ins(v4s4_3, w0); dump();
ins(v8.s4[3], w0); dump();
ins(v8s4_3, w0); dump();
ins(v16.s4[3], w0); dump();
ins(v16s4_3, w0); dump();
ins(v31.s4[3], w0); dump();
ins(v31s4_3, w0); dump();
ins(v7.s4[0], w0); dump();
ins(v7s4_0, w0); dump();
ins(v7.s4[1], w0); dump();
ins(v7s4_1, w0); dump();
ins(v7.s4[2], w0); dump();
ins(v7s4_2, w0); dump();
ins(v7.s4[3], w0); dump();
ins(v7.s4[3], w1); dump();
ins(v7.s4[3], w2); dump();
ins(v7.s4[3], w4); dump();
ins(v7.s4[3], w8); dump();
ins(v7.s4[3], w16); dump();
ins(v7.s4[3], w30); dump();
mov(v7.s4[3], w0); dump();
mov(v7s4_3, w0); dump();
mov(v0.s4[3], w0); dump();
mov(v0s4_3, w0); dump();
mov(v1.s4[3], w0); dump();
mov(v1s4_3, w0); dump();
mov(v2.s4[3], w0); dump();
mov(v2s4_3, w0); dump();
mov(v4.s4[3], w0); dump();
mov(v4s4_3, w0); dump();
mov(v8.s4[3], w0); dump();
mov(v8s4_3, w0); dump();
mov(v16.s4[3], w0); dump();
mov(v16s4_3, w0); dump();
mov(v31.s4[3], w0); dump();
mov(v31s4_3, w0); dump();
mov(v7.s4[0], w0); dump();
mov(v7s4_0, w0); dump();
mov(v7.s4[1], w0); dump();
mov(v7s4_1, w0); dump();
mov(v7.s4[2], w0); dump();
mov(v7s4_2, w0); dump();
mov(v7.s4[3], w0); dump();
mov(v7.s4[3], w1); dump();
mov(v7.s4[3], w2); dump();
mov(v7.s4[3], w4); dump();
mov(v7.s4[3], w8); dump();
mov(v7.s4[3], w16); dump();
mov(v7.s4[3], w30); dump();
//DataProcSimd_Move5:3
ins(v7.d2[1], x0); dump();
ins(v7d2_1, x0); dump();
ins(v0.d2[1], x0); dump();
ins(v0d2_1, x0); dump();
ins(v1.d2[1], x0); dump();
ins(v1d2_1, x0); dump();
ins(v2.d2[1], x0); dump();
ins(v2d2_1, x0); dump();
ins(v4.d2[1], x0); dump();
ins(v4d2_1, x0); dump();
ins(v8.d2[1], x0); dump();
ins(v8d2_1, x0); dump();
ins(v16.d2[1], x0); dump();
ins(v16d2_1, x0); dump();
ins(v31.d2[1], x0); dump();
ins(v31d2_1, x0); dump();
ins(v7.d2[0], x0); dump();
ins(v7d2_0, x0); dump();
ins(v7.d2[1], x0); dump();
ins(v7.d2[1], x1); dump();
ins(v7.d2[1], x2); dump();
ins(v7.d2[1], x4); dump();
ins(v7.d2[1], x8); dump();
ins(v7.d2[1], x16); dump();
ins(v7.d2[1], x30); dump();
mov(v7.d2[1], x0); dump();
mov(v7d2_1, x0); dump();
mov(v0.d2[1], x0); dump();
mov(v0d2_1, x0); dump();
mov(v1.d2[1], x0); dump();
mov(v1d2_1, x0); dump();
mov(v2.d2[1], x0); dump();
mov(v2d2_1, x0); dump();
mov(v4.d2[1], x0); dump();
mov(v4d2_1, x0); dump();
mov(v8.d2[1], x0); dump();
mov(v8d2_1, x0); dump();
mov(v16.d2[1], x0); dump();
mov(v16d2_1, x0); dump();
mov(v31.d2[1], x0); dump();
mov(v31d2_1, x0); dump();
mov(v7.d2[0], x0); dump();
mov(v7d2_0, x0); dump();
mov(v7.d2[1], x0); dump();
mov(v7.d2[1], x1); dump();
mov(v7.d2[1], x2); dump();
mov(v7.d2[1], x4); dump();
mov(v7.d2[1], x8); dump();
mov(v7.d2[1], x16); dump();
mov(v7.d2[1], x30); dump();
//DataProcSimd_Move6:0
mov(w0, v7.s4[3]); dump();
mov(w1, v7.s4[3]); dump();
mov(w2, v7.s4[3]); dump();
mov(w4, v7.s4[3]); dump();
mov(w8, v7.s4[3]); dump();
mov(w16, v7.s4[3]); dump();
mov(w30, v7.s4[3]); dump();
mov(w0, v7.s4[3]); dump();
mov(w0, v7s4_3); dump();
mov(w0, v0.s4[3]); dump();
mov(w0, v0s4_3); dump();
mov(w0, v1.s4[3]); dump();
mov(w0, v1s4_3); dump();
mov(w0, v2.s4[3]); dump();
mov(w0, v2s4_3); dump();
mov(w0, v4.s4[3]); dump();
mov(w0, v4s4_3); dump();
mov(w0, v8.s4[3]); dump();
mov(w0, v8s4_3); dump();
mov(w0, v16.s4[3]); dump();
mov(w0, v16s4_3); dump();
mov(w0, v31.s4[3]); dump();
mov(w0, v31s4_3); dump();
mov(w0, v7.s4[0]); dump();
mov(w0, v7s4_0); dump();
mov(w0, v7.s4[1]); dump();
mov(w0, v7s4_1); dump();
mov(w0, v7.s4[2]); dump();
mov(w0, v7s4_2); dump();
//DataProcSimd_Move6:1
mov(x0, v7.d2[1]); dump();
mov(x1, v7.d2[1]); dump();
mov(x2, v7.d2[1]); dump();
mov(x4, v7.d2[1]); dump();
mov(x8, v7.d2[1]); dump();
mov(x16, v7.d2[1]); dump();
mov(x30, v7.d2[1]); dump();
mov(x0, v7.d2[1]); dump();
mov(x0, v7d2_1); dump();
mov(x0, v0.d2[1]); dump();
mov(x0, v0d2_1); dump();
mov(x0, v1.d2[1]); dump();
mov(x0, v1d2_1); dump();
mov(x0, v2.d2[1]); dump();
mov(x0, v2d2_1); dump();
mov(x0, v4.d2[1]); dump();
mov(x0, v4d2_1); dump();
mov(x0, v8.d2[1]); dump();
mov(x0, v8d2_1); dump();
mov(x0, v16.d2[1]); dump();
mov(x0, v16d2_1); dump();
mov(x0, v31.d2[1]); dump();
mov(x0, v31d2_1); dump();
mov(x0, v7.d2[0]); dump();
mov(x0, v7d2_0); dump();
//DataProcSimd_Move7:0
umov(w0, v7.b16[7]); dump();
umov(w1, v7.b16[7]); dump();
umov(w2, v7.b16[7]); dump();
umov(w4, v7.b16[7]); dump();
umov(w8, v7.b16[7]); dump();
umov(w16, v7.b16[7]); dump();
umov(w30, v7.b16[7]); dump();
umov(w0, v7.b16[7]); dump();
umov(w0, v7b16_7); dump();
umov(w0, v0.b16[7]); dump();
umov(w0, v0b16_7); dump();
umov(w0, v1.b16[7]); dump();
umov(w0, v1b16_7); dump();
umov(w0, v2.b16[7]); dump();
umov(w0, v2b16_7); dump();
umov(w0, v4.b16[7]); dump();
umov(w0, v4b16_7); dump();
umov(w0, v8.b16[7]); dump();
umov(w0, v8b16_7); dump();
umov(w0, v16.b16[7]); dump();
umov(w0, v16b16_7); dump();
umov(w0, v31.b16[7]); dump();
umov(w0, v31b16_7); dump();
umov(w0, v7.b16[0]); dump();
umov(w0, v7b16_0); dump();
umov(w0, v7.b16[1]); dump();
umov(w0, v7b16_1); dump();
umov(w0, v7.b16[2]); dump();
umov(w0, v7b16_2); dump();
umov(w0, v7.b16[4]); dump();
umov(w0, v7b16_4); dump();
umov(w0, v7.b16[8]); dump();
umov(w0, v7b16_8); dump();
umov(w0, v7.b16[15]); dump();
umov(w0, v7b16_15); dump();
//DataProcSimd_Move7:1
umov(w0, v7.h8[7]); dump();
umov(w1, v7.h8[7]); dump();
umov(w2, v7.h8[7]); dump();
umov(w4, v7.h8[7]); dump();
umov(w8, v7.h8[7]); dump();
umov(w16, v7.h8[7]); dump();
umov(w30, v7.h8[7]); dump();
umov(w0, v7.h8[7]); dump();
umov(w0, v7h8_7); dump();
umov(w0, v0.h8[7]); dump();
umov(w0, v0h8_7); dump();
umov(w0, v1.h8[7]); dump();
umov(w0, v1h8_7); dump();
umov(w0, v2.h8[7]); dump();
umov(w0, v2h8_7); dump();
umov(w0, v4.h8[7]); dump();
umov(w0, v4h8_7); dump();
umov(w0, v8.h8[7]); dump();
umov(w0, v8h8_7); dump();
umov(w0, v16.h8[7]); dump();
umov(w0, v16h8_7); dump();
umov(w0, v31.h8[7]); dump();
umov(w0, v31h8_7); dump();
umov(w0, v7.h8[0]); dump();
umov(w0, v7h8_0); dump();
umov(w0, v7.h8[1]); dump();
umov(w0, v7h8_1); dump();
umov(w0, v7.h8[2]); dump();
umov(w0, v7h8_2); dump();
umov(w0, v7.h8[4]); dump();
umov(w0, v7h8_4); dump();
//DataProcSimd_Move7:2
umov(w0, v7.s4[3]); dump();
umov(w1, v7.s4[3]); dump();
umov(w2, v7.s4[3]); dump();
umov(w4, v7.s4[3]); dump();
umov(w8, v7.s4[3]); dump();
umov(w16, v7.s4[3]); dump();
umov(w30, v7.s4[3]); dump();
umov(w0, v7.s4[3]); dump();
umov(w0, v7s4_3); dump();
umov(w0, v0.s4[3]); dump();
umov(w0, v0s4_3); dump();
umov(w0, v1.s4[3]); dump();
umov(w0, v1s4_3); dump();
umov(w0, v2.s4[3]); dump();
umov(w0, v2s4_3); dump();
umov(w0, v4.s4[3]); dump();
umov(w0, v4s4_3); dump();
umov(w0, v8.s4[3]); dump();
umov(w0, v8s4_3); dump();
umov(w0, v16.s4[3]); dump();
umov(w0, v16s4_3); dump();
umov(w0, v31.s4[3]); dump();
umov(w0, v31s4_3); dump();
umov(w0, v7.s4[0]); dump();
umov(w0, v7s4_0); dump();
umov(w0, v7.s4[1]); dump();
umov(w0, v7s4_1); dump();
umov(w0, v7.s4[2]); dump();
umov(w0, v7s4_2); dump();
//DataProcSimd_Move7:3
umov(x0, v7.d2[1]); dump();
umov(x1, v7.d2[1]); dump();
umov(x2, v7.d2[1]); dump();
umov(x4, v7.d2[1]); dump();
umov(x8, v7.d2[1]); dump();
umov(x16, v7.d2[1]); dump();
umov(x30, v7.d2[1]); dump();
umov(x0, v7.d2[1]); dump();
umov(x0, v7d2_1); dump();
umov(x0, v0.d2[1]); dump();
umov(x0, v0d2_1); dump();
umov(x0, v1.d2[1]); dump();
umov(x0, v1d2_1); dump();
umov(x0, v2.d2[1]); dump();
umov(x0, v2d2_1); dump();
umov(x0, v4.d2[1]); dump();
umov(x0, v4d2_1); dump();
umov(x0, v8.d2[1]); dump();
umov(x0, v8d2_1); dump();
umov(x0, v16.d2[1]); dump();
umov(x0, v16d2_1); dump();
umov(x0, v31.d2[1]); dump();
umov(x0, v31d2_1); dump();
umov(x0, v7.d2[0]); dump();
umov(x0, v7d2_0); dump();
//DataProcSimd_Move8:0
smov(w0, v7.b16[7]); dump();
smov(w1, v7.b16[7]); dump();
smov(w2, v7.b16[7]); dump();
smov(w4, v7.b16[7]); dump();
smov(w8, v7.b16[7]); dump();
smov(w16, v7.b16[7]); dump();
smov(w30, v7.b16[7]); dump();
smov(w0, v7.b16[7]); dump();
smov(w0, v7b16_7); dump();
smov(w0, v0.b16[7]); dump();
smov(w0, v0b16_7); dump();
smov(w0, v1.b16[7]); dump();
smov(w0, v1b16_7); dump();
smov(w0, v2.b16[7]); dump();
smov(w0, v2b16_7); dump();
smov(w0, v4.b16[7]); dump();
smov(w0, v4b16_7); dump();
smov(w0, v8.b16[7]); dump();
smov(w0, v8b16_7); dump();
smov(w0, v16.b16[7]); dump();
smov(w0, v16b16_7); dump();
smov(w0, v31.b16[7]); dump();
smov(w0, v31b16_7); dump();
smov(w0, v7.b16[0]); dump();
smov(w0, v7b16_0); dump();
smov(w0, v7.b16[1]); dump();
smov(w0, v7b16_1); dump();
smov(w0, v7.b16[2]); dump();
smov(w0, v7b16_2); dump();
smov(w0, v7.b16[4]); dump();
smov(w0, v7b16_4); dump();
smov(w0, v7.b16[8]); dump();
smov(w0, v7b16_8); dump();
smov(w0, v7.b16[15]); dump();
smov(w0, v7b16_15); dump();
//DataProcSimd_Move8:1
smov(w0, v7.h8[7]); dump();
smov(w1, v7.h8[7]); dump();
smov(w2, v7.h8[7]); dump();
smov(w4, v7.h8[7]); dump();
smov(w8, v7.h8[7]); dump();
smov(w16, v7.h8[7]); dump();
smov(w30, v7.h8[7]); dump();
smov(w0, v7.h8[7]); dump();
smov(w0, v7h8_7); dump();
smov(w0, v0.h8[7]); dump();
smov(w0, v0h8_7); dump();
smov(w0, v1.h8[7]); dump();
smov(w0, v1h8_7); dump();
smov(w0, v2.h8[7]); dump();
smov(w0, v2h8_7); dump();
smov(w0, v4.h8[7]); dump();
smov(w0, v4h8_7); dump();
smov(w0, v8.h8[7]); dump();
smov(w0, v8h8_7); dump();
smov(w0, v16.h8[7]); dump();
smov(w0, v16h8_7); dump();
smov(w0, v31.h8[7]); dump();
smov(w0, v31h8_7); dump();
smov(w0, v7.h8[0]); dump();
smov(w0, v7h8_0); dump();
smov(w0, v7.h8[1]); dump();
smov(w0, v7h8_1); dump();
smov(w0, v7.h8[2]); dump();
smov(w0, v7h8_2); dump();
smov(w0, v7.h8[4]); dump();
smov(w0, v7h8_4); dump();
//DataProcSimd_Move8:2
smov(x0, v7.b16[7]); dump();
smov(x1, v7.b16[7]); dump();
smov(x2, v7.b16[7]); dump();
smov(x4, v7.b16[7]); dump();
smov(x8, v7.b16[7]); dump();
smov(x16, v7.b16[7]); dump();
smov(x30, v7.b16[7]); dump();
smov(x0, v7.b16[7]); dump();
smov(x0, v7b16_7); dump();
smov(x0, v0.b16[7]); dump();
smov(x0, v0b16_7); dump();
smov(x0, v1.b16[7]); dump();
smov(x0, v1b16_7); dump();
smov(x0, v2.b16[7]); dump();
smov(x0, v2b16_7); dump();
smov(x0, v4.b16[7]); dump();
smov(x0, v4b16_7); dump();
smov(x0, v8.b16[7]); dump();
smov(x0, v8b16_7); dump();
smov(x0, v16.b16[7]); dump();
smov(x0, v16b16_7); dump();
smov(x0, v31.b16[7]); dump();
smov(x0, v31b16_7); dump();
smov(x0, v7.b16[0]); dump();
smov(x0, v7b16_0); dump();
smov(x0, v7.b16[1]); dump();
smov(x0, v7b16_1); dump();
smov(x0, v7.b16[2]); dump();
smov(x0, v7b16_2); dump();
smov(x0, v7.b16[4]); dump();
smov(x0, v7b16_4); dump();
smov(x0, v7.b16[8]); dump();
smov(x0, v7b16_8); dump();
smov(x0, v7.b16[15]); dump();
smov(x0, v7b16_15); dump();
//DataProcSimd_Move8:3
smov(x0, v7.h8[7]); dump();
smov(x1, v7.h8[7]); dump();
smov(x2, v7.h8[7]); dump();
smov(x4, v7.h8[7]); dump();
smov(x8, v7.h8[7]); dump();
smov(x16, v7.h8[7]); dump();
smov(x30, v7.h8[7]); dump();
smov(x0, v7.h8[7]); dump();
smov(x0, v7h8_7); dump();
smov(x0, v0.h8[7]); dump();
smov(x0, v0h8_7); dump();
smov(x0, v1.h8[7]); dump();
smov(x0, v1h8_7); dump();
smov(x0, v2.h8[7]); dump();
smov(x0, v2h8_7); dump();
smov(x0, v4.h8[7]); dump();
smov(x0, v4h8_7); dump();
smov(x0, v8.h8[7]); dump();
smov(x0, v8h8_7); dump();
smov(x0, v16.h8[7]); dump();
smov(x0, v16h8_7); dump();
smov(x0, v31.h8[7]); dump();
smov(x0, v31h8_7); dump();
smov(x0, v7.h8[0]); dump();
smov(x0, v7h8_0); dump();
smov(x0, v7.h8[1]); dump();
smov(x0, v7h8_1); dump();
smov(x0, v7.h8[2]); dump();
smov(x0, v7h8_2); dump();
smov(x0, v7.h8[4]); dump();
smov(x0, v7h8_4); dump();
//DataProcSimd_Move8:4
smov(x0, v7.s4[3]); dump();
smov(x1, v7.s4[3]); dump();
smov(x2, v7.s4[3]); dump();
smov(x4, v7.s4[3]); dump();
smov(x8, v7.s4[3]); dump();
smov(x16, v7.s4[3]); dump();
smov(x30, v7.s4[3]); dump();
smov(x0, v7.s4[3]); dump();
smov(x0, v7s4_3); dump();
smov(x0, v0.s4[3]); dump();
smov(x0, v0s4_3); dump();
smov(x0, v1.s4[3]); dump();
smov(x0, v1s4_3); dump();
smov(x0, v2.s4[3]); dump();
smov(x0, v2s4_3); dump();
smov(x0, v4.s4[3]); dump();
smov(x0, v4s4_3); dump();
smov(x0, v8.s4[3]); dump();
smov(x0, v8s4_3); dump();
smov(x0, v16.s4[3]); dump();
smov(x0, v16s4_3); dump();
smov(x0, v31.s4[3]); dump();
smov(x0, v31s4_3); dump();
smov(x0, v7.s4[0]); dump();
smov(x0, v7s4_0); dump();
smov(x0, v7.s4[1]); dump();
smov(x0, v7s4_1); dump();
smov(x0, v7.s4[2]); dump();
smov(x0, v7s4_2); dump();
//DataProcSimd_Arithmetic0:0
add(d7, d7, d7); dump();
add(d0, d7, d7); dump();
add(d1, d7, d7); dump();
add(d2, d7, d7); dump();
add(d4, d7, d7); dump();
add(d8, d7, d7); dump();
add(d16, d7, d7); dump();
add(d31, d7, d7); dump();
add(d7, d7, d7); dump();
add(d7, d0, d7); dump();
add(d7, d1, d7); dump();
add(d7, d2, d7); dump();
add(d7, d4, d7); dump();
add(d7, d8, d7); dump();
add(d7, d16, d7); dump();
add(d7, d31, d7); dump();
add(d7, d7, d7); dump();
add(d7, d7, d0); dump();
add(d7, d7, d1); dump();
add(d7, d7, d2); dump();
add(d7, d7, d4); dump();
add(d7, d7, d8); dump();
add(d7, d7, d16); dump();
add(d7, d7, d31); dump();
//DataProcSimd_Arithmetic1:0
add(v7.b8, v7.b8, v7.b8); dump();
add(v0.b8, v7.b8, v7.b8); dump();
add(v1.b8, v7.b8, v7.b8); dump();
add(v2.b8, v7.b8, v7.b8); dump();
add(v4.b8, v7.b8, v7.b8); dump();
add(v8.b8, v7.b8, v7.b8); dump();
add(v16.b8, v7.b8, v7.b8); dump();
add(v31.b8, v7.b8, v7.b8); dump();
add(v7.b8, v7.b8, v7.b8); dump();
add(v7.b8, v0.b8, v7.b8); dump();
add(v7.b8, v1.b8, v7.b8); dump();
add(v7.b8, v2.b8, v7.b8); dump();
add(v7.b8, v4.b8, v7.b8); dump();
add(v7.b8, v8.b8, v7.b8); dump();
add(v7.b8, v16.b8, v7.b8); dump();
add(v7.b8, v31.b8, v7.b8); dump();
add(v7.b8, v7.b8, v7.b8); dump();
add(v7.b8, v7.b8, v0.b8); dump();
add(v7.b8, v7.b8, v1.b8); dump();
add(v7.b8, v7.b8, v2.b8); dump();
add(v7.b8, v7.b8, v4.b8); dump();
add(v7.b8, v7.b8, v8.b8); dump();
add(v7.b8, v7.b8, v16.b8); dump();
add(v7.b8, v7.b8, v31.b8); dump();
//DataProcSimd_Arithmetic1:1
add(v7.b16, v7.b16, v7.b16); dump();
add(v0.b16, v7.b16, v7.b16); dump();
add(v1.b16, v7.b16, v7.b16); dump();
add(v2.b16, v7.b16, v7.b16); dump();
add(v4.b16, v7.b16, v7.b16); dump();
add(v8.b16, v7.b16, v7.b16); dump();
add(v16.b16, v7.b16, v7.b16); dump();
add(v31.b16, v7.b16, v7.b16); dump();
add(v7.b16, v7.b16, v7.b16); dump();
add(v7.b16, v0.b16, v7.b16); dump();
add(v7.b16, v1.b16, v7.b16); dump();
add(v7.b16, v2.b16, v7.b16); dump();
add(v7.b16, v4.b16, v7.b16); dump();
add(v7.b16, v8.b16, v7.b16); dump();
add(v7.b16, v16.b16, v7.b16); dump();
add(v7.b16, v31.b16, v7.b16); dump();
add(v7.b16, v7.b16, v7.b16); dump();
add(v7.b16, v7.b16, v0.b16); dump();
add(v7.b16, v7.b16, v1.b16); dump();
add(v7.b16, v7.b16, v2.b16); dump();
add(v7.b16, v7.b16, v4.b16); dump();
add(v7.b16, v7.b16, v8.b16); dump();
add(v7.b16, v7.b16, v16.b16); dump();
add(v7.b16, v7.b16, v31.b16); dump();
//DataProcSimd_Arithmetic1:2
add(v7.h4, v7.h4, v7.h4); dump();
add(v0.h4, v7.h4, v7.h4); dump();
add(v1.h4, v7.h4, v7.h4); dump();
add(v2.h4, v7.h4, v7.h4); dump();
add(v4.h4, v7.h4, v7.h4); dump();
add(v8.h4, v7.h4, v7.h4); dump();
add(v16.h4, v7.h4, v7.h4); dump();
add(v31.h4, v7.h4, v7.h4); dump();
add(v7.h4, v7.h4, v7.h4); dump();
add(v7.h4, v0.h4, v7.h4); dump();
add(v7.h4, v1.h4, v7.h4); dump();
add(v7.h4, v2.h4, v7.h4); dump();
add(v7.h4, v4.h4, v7.h4); dump();
add(v7.h4, v8.h4, v7.h4); dump();
add(v7.h4, v16.h4, v7.h4); dump();
add(v7.h4, v31.h4, v7.h4); dump();
add(v7.h4, v7.h4, v7.h4); dump();
add(v7.h4, v7.h4, v0.h4); dump();
add(v7.h4, v7.h4, v1.h4); dump();
add(v7.h4, v7.h4, v2.h4); dump();
add(v7.h4, v7.h4, v4.h4); dump();
add(v7.h4, v7.h4, v8.h4); dump();
add(v7.h4, v7.h4, v16.h4); dump();
add(v7.h4, v7.h4, v31.h4); dump();
//DataProcSimd_Arithmetic1:3
add(v7.h8, v7.h8, v7.h8); dump();
add(v0.h8, v7.h8, v7.h8); dump();
add(v1.h8, v7.h8, v7.h8); dump();
add(v2.h8, v7.h8, v7.h8); dump();
add(v4.h8, v7.h8, v7.h8); dump();
add(v8.h8, v7.h8, v7.h8); dump();
add(v16.h8, v7.h8, v7.h8); dump();
add(v31.h8, v7.h8, v7.h8); dump();
add(v7.h8, v7.h8, v7.h8); dump();
add(v7.h8, v0.h8, v7.h8); dump();
add(v7.h8, v1.h8, v7.h8); dump();
add(v7.h8, v2.h8, v7.h8); dump();
add(v7.h8, v4.h8, v7.h8); dump();
add(v7.h8, v8.h8, v7.h8); dump();
add(v7.h8, v16.h8, v7.h8); dump();
add(v7.h8, v31.h8, v7.h8); dump();
add(v7.h8, v7.h8, v7.h8); dump();
add(v7.h8, v7.h8, v0.h8); dump();
add(v7.h8, v7.h8, v1.h8); dump();
add(v7.h8, v7.h8, v2.h8); dump();
add(v7.h8, v7.h8, v4.h8); dump();
add(v7.h8, v7.h8, v8.h8); dump();
add(v7.h8, v7.h8, v16.h8); dump();
add(v7.h8, v7.h8, v31.h8); dump();
//DataProcSimd_Arithmetic2:0
add(v7.s2, v7.s2, v7.s2); dump();
add(v0.s2, v7.s2, v7.s2); dump();
add(v1.s2, v7.s2, v7.s2); dump();
add(v2.s2, v7.s2, v7.s2); dump();
add(v4.s2, v7.s2, v7.s2); dump();
add(v8.s2, v7.s2, v7.s2); dump();
add(v16.s2, v7.s2, v7.s2); dump();
add(v31.s2, v7.s2, v7.s2); dump();
add(v7.s2, v7.s2, v7.s2); dump();
add(v7.s2, v0.s2, v7.s2); dump();
add(v7.s2, v1.s2, v7.s2); dump();
add(v7.s2, v2.s2, v7.s2); dump();
add(v7.s2, v4.s2, v7.s2); dump();
add(v7.s2, v8.s2, v7.s2); dump();
add(v7.s2, v16.s2, v7.s2); dump();
add(v7.s2, v31.s2, v7.s2); dump();
add(v7.s2, v7.s2, v7.s2); dump();
add(v7.s2, v7.s2, v0.s2); dump();
add(v7.s2, v7.s2, v1.s2); dump();
add(v7.s2, v7.s2, v2.s2); dump();
add(v7.s2, v7.s2, v4.s2); dump();
add(v7.s2, v7.s2, v8.s2); dump();
add(v7.s2, v7.s2, v16.s2); dump();
add(v7.s2, v7.s2, v31.s2); dump();
//DataProcSimd_Arithmetic2:1
add(v7.s4, v7.s4, v7.s4); dump();
add(v0.s4, v7.s4, v7.s4); dump();
add(v1.s4, v7.s4, v7.s4); dump();
add(v2.s4, v7.s4, v7.s4); dump();
add(v4.s4, v7.s4, v7.s4); dump();
add(v8.s4, v7.s4, v7.s4); dump();
add(v16.s4, v7.s4, v7.s4); dump();
add(v31.s4, v7.s4, v7.s4); dump();
add(v7.s4, v7.s4, v7.s4); dump();
add(v7.s4, v0.s4, v7.s4); dump();
add(v7.s4, v1.s4, v7.s4); dump();
add(v7.s4, v2.s4, v7.s4); dump();
add(v7.s4, v4.s4, v7.s4); dump();
add(v7.s4, v8.s4, v7.s4); dump();
add(v7.s4, v16.s4, v7.s4); dump();
add(v7.s4, v31.s4, v7.s4); dump();
add(v7.s4, v7.s4, v7.s4); dump();
add(v7.s4, v7.s4, v0.s4); dump();
add(v7.s4, v7.s4, v1.s4); dump();
add(v7.s4, v7.s4, v2.s4); dump();
add(v7.s4, v7.s4, v4.s4); dump();
add(v7.s4, v7.s4, v8.s4); dump();
add(v7.s4, v7.s4, v16.s4); dump();
add(v7.s4, v7.s4, v31.s4); dump();
//DataProcSimd_Arithmetic2:2
add(v7.d2, v7.d2, v7.d2); dump();
add(v0.d2, v7.d2, v7.d2); dump();
add(v1.d2, v7.d2, v7.d2); dump();
add(v2.d2, v7.d2, v7.d2); dump();
add(v4.d2, v7.d2, v7.d2); dump();
add(v8.d2, v7.d2, v7.d2); dump();
add(v16.d2, v7.d2, v7.d2); dump();
add(v31.d2, v7.d2, v7.d2); dump();
add(v7.d2, v7.d2, v7.d2); dump();
add(v7.d2, v0.d2, v7.d2); dump();
add(v7.d2, v1.d2, v7.d2); dump();
add(v7.d2, v2.d2, v7.d2); dump();
add(v7.d2, v4.d2, v7.d2); dump();
add(v7.d2, v8.d2, v7.d2); dump();
add(v7.d2, v16.d2, v7.d2); dump();
add(v7.d2, v31.d2, v7.d2); dump();
add(v7.d2, v7.d2, v7.d2); dump();
add(v7.d2, v7.d2, v0.d2); dump();
add(v7.d2, v7.d2, v1.d2); dump();
add(v7.d2, v7.d2, v2.d2); dump();
add(v7.d2, v7.d2, v4.d2); dump();
add(v7.d2, v7.d2, v8.d2); dump();
add(v7.d2, v7.d2, v16.d2); dump();
add(v7.d2, v7.d2, v31.d2); dump();
//DataProcSimd_Arithmetic3:0
and_(v7.b8, v7.b8, v7.b8); dump();
and_(v0.b8, v7.b8, v7.b8); dump();
and_(v1.b8, v7.b8, v7.b8); dump();
and_(v2.b8, v7.b8, v7.b8); dump();
and_(v4.b8, v7.b8, v7.b8); dump();
and_(v8.b8, v7.b8, v7.b8); dump();
and_(v16.b8, v7.b8, v7.b8); dump();
and_(v31.b8, v7.b8, v7.b8); dump();
and_(v7.b8, v7.b8, v7.b8); dump();
and_(v7.b8, v0.b8, v7.b8); dump();
and_(v7.b8, v1.b8, v7.b8); dump();
and_(v7.b8, v2.b8, v7.b8); dump();
and_(v7.b8, v4.b8, v7.b8); dump();
and_(v7.b8, v8.b8, v7.b8); dump();
and_(v7.b8, v16.b8, v7.b8); dump();
and_(v7.b8, v31.b8, v7.b8); dump();
and_(v7.b8, v7.b8, v7.b8); dump();
and_(v7.b8, v7.b8, v0.b8); dump();
and_(v7.b8, v7.b8, v1.b8); dump();
and_(v7.b8, v7.b8, v2.b8); dump();
and_(v7.b8, v7.b8, v4.b8); dump();
and_(v7.b8, v7.b8, v8.b8); dump();
and_(v7.b8, v7.b8, v16.b8); dump();
and_(v7.b8, v7.b8, v31.b8); dump();
//DataProcSimd_Arithmetic3:1
and_(v7.b16, v7.b16, v7.b16); dump();
and_(v0.b16, v7.b16, v7.b16); dump();
and_(v1.b16, v7.b16, v7.b16); dump();
and_(v2.b16, v7.b16, v7.b16); dump();
and_(v4.b16, v7.b16, v7.b16); dump();
and_(v8.b16, v7.b16, v7.b16); dump();
and_(v16.b16, v7.b16, v7.b16); dump();
and_(v31.b16, v7.b16, v7.b16); dump();
and_(v7.b16, v7.b16, v7.b16); dump();
and_(v7.b16, v0.b16, v7.b16); dump();
and_(v7.b16, v1.b16, v7.b16); dump();
and_(v7.b16, v2.b16, v7.b16); dump();
and_(v7.b16, v4.b16, v7.b16); dump();
and_(v7.b16, v8.b16, v7.b16); dump();
and_(v7.b16, v16.b16, v7.b16); dump();
and_(v7.b16, v31.b16, v7.b16); dump();
and_(v7.b16, v7.b16, v7.b16); dump();
and_(v7.b16, v7.b16, v0.b16); dump();
and_(v7.b16, v7.b16, v1.b16); dump();
and_(v7.b16, v7.b16, v2.b16); dump();
and_(v7.b16, v7.b16, v4.b16); dump();
and_(v7.b16, v7.b16, v8.b16); dump();
and_(v7.b16, v7.b16, v16.b16); dump();
and_(v7.b16, v7.b16, v31.b16); dump();
//DataProcSimd_Arithmetic4:0
bic(v7.b8, v7.b8, v7.b8); dump();
bic(v0.b8, v7.b8, v7.b8); dump();
bic(v1.b8, v7.b8, v7.b8); dump();
bic(v2.b8, v7.b8, v7.b8); dump();
bic(v4.b8, v7.b8, v7.b8); dump();
bic(v8.b8, v7.b8, v7.b8); dump();
bic(v16.b8, v7.b8, v7.b8); dump();
bic(v31.b8, v7.b8, v7.b8); dump();
bic(v7.b8, v7.b8, v7.b8); dump();
bic(v7.b8, v0.b8, v7.b8); dump();
bic(v7.b8, v1.b8, v7.b8); dump();
bic(v7.b8, v2.b8, v7.b8); dump();
bic(v7.b8, v4.b8, v7.b8); dump();
bic(v7.b8, v8.b8, v7.b8); dump();
bic(v7.b8, v16.b8, v7.b8); dump();
bic(v7.b8, v31.b8, v7.b8); dump();
bic(v7.b8, v7.b8, v7.b8); dump();
bic(v7.b8, v7.b8, v0.b8); dump();
bic(v7.b8, v7.b8, v1.b8); dump();
bic(v7.b8, v7.b8, v2.b8); dump();
bic(v7.b8, v7.b8, v4.b8); dump();
bic(v7.b8, v7.b8, v8.b8); dump();
bic(v7.b8, v7.b8, v16.b8); dump();
bic(v7.b8, v7.b8, v31.b8); dump();
bif(v7.b8, v7.b8, v7.b8); dump();
bif(v0.b8, v7.b8, v7.b8); dump();
bif(v1.b8, v7.b8, v7.b8); dump();
bif(v2.b8, v7.b8, v7.b8); dump();
bif(v4.b8, v7.b8, v7.b8); dump();
bif(v8.b8, v7.b8, v7.b8); dump();
bif(v16.b8, v7.b8, v7.b8); dump();
bif(v31.b8, v7.b8, v7.b8); dump();
bif(v7.b8, v7.b8, v7.b8); dump();
bif(v7.b8, v0.b8, v7.b8); dump();
bif(v7.b8, v1.b8, v7.b8); dump();
bif(v7.b8, v2.b8, v7.b8); dump();
bif(v7.b8, v4.b8, v7.b8); dump();
bif(v7.b8, v8.b8, v7.b8); dump();
bif(v7.b8, v16.b8, v7.b8); dump();
bif(v7.b8, v31.b8, v7.b8); dump();
bif(v7.b8, v7.b8, v7.b8); dump();
bif(v7.b8, v7.b8, v0.b8); dump();
bif(v7.b8, v7.b8, v1.b8); dump();
bif(v7.b8, v7.b8, v2.b8); dump();
bif(v7.b8, v7.b8, v4.b8); dump();
bif(v7.b8, v7.b8, v8.b8); dump();
bif(v7.b8, v7.b8, v16.b8); dump();
bif(v7.b8, v7.b8, v31.b8); dump();
bit(v7.b8, v7.b8, v7.b8); dump();
bit(v0.b8, v7.b8, v7.b8); dump();
bit(v1.b8, v7.b8, v7.b8); dump();
bit(v2.b8, v7.b8, v7.b8); dump();
bit(v4.b8, v7.b8, v7.b8); dump();
bit(v8.b8, v7.b8, v7.b8); dump();
bit(v16.b8, v7.b8, v7.b8); dump();
bit(v31.b8, v7.b8, v7.b8); dump();
bit(v7.b8, v7.b8, v7.b8); dump();
bit(v7.b8, v0.b8, v7.b8); dump();
bit(v7.b8, v1.b8, v7.b8); dump();
bit(v7.b8, v2.b8, v7.b8); dump();
bit(v7.b8, v4.b8, v7.b8); dump();
bit(v7.b8, v8.b8, v7.b8); dump();
bit(v7.b8, v16.b8, v7.b8); dump();
bit(v7.b8, v31.b8, v7.b8); dump();
bit(v7.b8, v7.b8, v7.b8); dump();
bit(v7.b8, v7.b8, v0.b8); dump();
bit(v7.b8, v7.b8, v1.b8); dump();
bit(v7.b8, v7.b8, v2.b8); dump();
bit(v7.b8, v7.b8, v4.b8); dump();
bit(v7.b8, v7.b8, v8.b8); dump();
bit(v7.b8, v7.b8, v16.b8); dump();
bit(v7.b8, v7.b8, v31.b8); dump();
bsl(v7.b8, v7.b8, v7.b8); dump();
bsl(v0.b8, v7.b8, v7.b8); dump();
bsl(v1.b8, v7.b8, v7.b8); dump();
bsl(v2.b8, v7.b8, v7.b8); dump();
bsl(v4.b8, v7.b8, v7.b8); dump();
bsl(v8.b8, v7.b8, v7.b8); dump();
bsl(v16.b8, v7.b8, v7.b8); dump();
bsl(v31.b8, v7.b8, v7.b8); dump();
bsl(v7.b8, v7.b8, v7.b8); dump();
bsl(v7.b8, v0.b8, v7.b8); dump();
bsl(v7.b8, v1.b8, v7.b8); dump();
bsl(v7.b8, v2.b8, v7.b8); dump();
bsl(v7.b8, v4.b8, v7.b8); dump();
bsl(v7.b8, v8.b8, v7.b8); dump();
bsl(v7.b8, v16.b8, v7.b8); dump();
bsl(v7.b8, v31.b8, v7.b8); dump();
bsl(v7.b8, v7.b8, v7.b8); dump();
bsl(v7.b8, v7.b8, v0.b8); dump();
bsl(v7.b8, v7.b8, v1.b8); dump();
bsl(v7.b8, v7.b8, v2.b8); dump();
bsl(v7.b8, v7.b8, v4.b8); dump();
bsl(v7.b8, v7.b8, v8.b8); dump();
bsl(v7.b8, v7.b8, v16.b8); dump();
bsl(v7.b8, v7.b8, v31.b8); dump();
eor(v7.b8, v7.b8, v7.b8); dump();
eor(v0.b8, v7.b8, v7.b8); dump();
eor(v1.b8, v7.b8, v7.b8); dump();
eor(v2.b8, v7.b8, v7.b8); dump();
eor(v4.b8, v7.b8, v7.b8); dump();
eor(v8.b8, v7.b8, v7.b8); dump();
eor(v16.b8, v7.b8, v7.b8); dump();
eor(v31.b8, v7.b8, v7.b8); dump();
eor(v7.b8, v7.b8, v7.b8); dump();
eor(v7.b8, v0.b8, v7.b8); dump();
eor(v7.b8, v1.b8, v7.b8); dump();
eor(v7.b8, v2.b8, v7.b8); dump();
eor(v7.b8, v4.b8, v7.b8); dump();
eor(v7.b8, v8.b8, v7.b8); dump();
eor(v7.b8, v16.b8, v7.b8); dump();
eor(v7.b8, v31.b8, v7.b8); dump();
eor(v7.b8, v7.b8, v7.b8); dump();
eor(v7.b8, v7.b8, v0.b8); dump();
eor(v7.b8, v7.b8, v1.b8); dump();
eor(v7.b8, v7.b8, v2.b8); dump();
eor(v7.b8, v7.b8, v4.b8); dump();
eor(v7.b8, v7.b8, v8.b8); dump();
eor(v7.b8, v7.b8, v16.b8); dump();
eor(v7.b8, v7.b8, v31.b8); dump();
orn(v7.b8, v7.b8, v7.b8); dump();
orn(v0.b8, v7.b8, v7.b8); dump();
orn(v1.b8, v7.b8, v7.b8); dump();
orn(v2.b8, v7.b8, v7.b8); dump();
orn(v4.b8, v7.b8, v7.b8); dump();
orn(v8.b8, v7.b8, v7.b8); dump();
orn(v16.b8, v7.b8, v7.b8); dump();
orn(v31.b8, v7.b8, v7.b8); dump();
orn(v7.b8, v7.b8, v7.b8); dump();
orn(v7.b8, v0.b8, v7.b8); dump();
orn(v7.b8, v1.b8, v7.b8); dump();
orn(v7.b8, v2.b8, v7.b8); dump();
orn(v7.b8, v4.b8, v7.b8); dump();
orn(v7.b8, v8.b8, v7.b8); dump();
orn(v7.b8, v16.b8, v7.b8); dump();
orn(v7.b8, v31.b8, v7.b8); dump();
orn(v7.b8, v7.b8, v7.b8); dump();
orn(v7.b8, v7.b8, v0.b8); dump();
orn(v7.b8, v7.b8, v1.b8); dump();
orn(v7.b8, v7.b8, v2.b8); dump();
orn(v7.b8, v7.b8, v4.b8); dump();
orn(v7.b8, v7.b8, v8.b8); dump();
orn(v7.b8, v7.b8, v16.b8); dump();
orn(v7.b8, v7.b8, v31.b8); dump();
orr(v7.b8, v7.b8, v7.b8); dump();
orr(v0.b8, v7.b8, v7.b8); dump();
orr(v1.b8, v7.b8, v7.b8); dump();
orr(v2.b8, v7.b8, v7.b8); dump();
orr(v4.b8, v7.b8, v7.b8); dump();
orr(v8.b8, v7.b8, v7.b8); dump();
orr(v16.b8, v7.b8, v7.b8); dump();
orr(v31.b8, v7.b8, v7.b8); dump();
orr(v7.b8, v7.b8, v7.b8); dump();
orr(v7.b8, v0.b8, v7.b8); dump();
orr(v7.b8, v1.b8, v7.b8); dump();
orr(v7.b8, v2.b8, v7.b8); dump();
orr(v7.b8, v4.b8, v7.b8); dump();
orr(v7.b8, v8.b8, v7.b8); dump();
orr(v7.b8, v16.b8, v7.b8); dump();
orr(v7.b8, v31.b8, v7.b8); dump();
orr(v7.b8, v7.b8, v7.b8); dump();
orr(v7.b8, v7.b8, v0.b8); dump();
orr(v7.b8, v7.b8, v1.b8); dump();
orr(v7.b8, v7.b8, v2.b8); dump();
orr(v7.b8, v7.b8, v4.b8); dump();
orr(v7.b8, v7.b8, v8.b8); dump();
orr(v7.b8, v7.b8, v16.b8); dump();
orr(v7.b8, v7.b8, v31.b8); dump();
pmul(v7.b8, v7.b8, v7.b8); dump();
pmul(v0.b8, v7.b8, v7.b8); dump();
pmul(v1.b8, v7.b8, v7.b8); dump();
pmul(v2.b8, v7.b8, v7.b8); dump();
pmul(v4.b8, v7.b8, v7.b8); dump();
pmul(v8.b8, v7.b8, v7.b8); dump();
pmul(v16.b8, v7.b8, v7.b8); dump();
pmul(v31.b8, v7.b8, v7.b8); dump();
pmul(v7.b8, v7.b8, v7.b8); dump();
pmul(v7.b8, v0.b8, v7.b8); dump();
pmul(v7.b8, v1.b8, v7.b8); dump();
pmul(v7.b8, v2.b8, v7.b8); dump();
pmul(v7.b8, v4.b8, v7.b8); dump();
pmul(v7.b8, v8.b8, v7.b8); dump();
pmul(v7.b8, v16.b8, v7.b8); dump();
pmul(v7.b8, v31.b8, v7.b8); dump();
pmul(v7.b8, v7.b8, v7.b8); dump();
pmul(v7.b8, v7.b8, v0.b8); dump();
pmul(v7.b8, v7.b8, v1.b8); dump();
pmul(v7.b8, v7.b8, v2.b8); dump();
pmul(v7.b8, v7.b8, v4.b8); dump();
pmul(v7.b8, v7.b8, v8.b8); dump();
pmul(v7.b8, v7.b8, v16.b8); dump();
pmul(v7.b8, v7.b8, v31.b8); dump();
//DataProcSimd_Arithmetic4:1
bic(v7.b16, v7.b16, v7.b16); dump();
bic(v0.b16, v7.b16, v7.b16); dump();
bic(v1.b16, v7.b16, v7.b16); dump();
bic(v2.b16, v7.b16, v7.b16); dump();
bic(v4.b16, v7.b16, v7.b16); dump();
bic(v8.b16, v7.b16, v7.b16); dump();
bic(v16.b16, v7.b16, v7.b16); dump();
bic(v31.b16, v7.b16, v7.b16); dump();
bic(v7.b16, v7.b16, v7.b16); dump();
bic(v7.b16, v0.b16, v7.b16); dump();
bic(v7.b16, v1.b16, v7.b16); dump();
bic(v7.b16, v2.b16, v7.b16); dump();
bic(v7.b16, v4.b16, v7.b16); dump();
bic(v7.b16, v8.b16, v7.b16); dump();
bic(v7.b16, v16.b16, v7.b16); dump();
bic(v7.b16, v31.b16, v7.b16); dump();
bic(v7.b16, v7.b16, v7.b16); dump();
bic(v7.b16, v7.b16, v0.b16); dump();
bic(v7.b16, v7.b16, v1.b16); dump();
bic(v7.b16, v7.b16, v2.b16); dump();
bic(v7.b16, v7.b16, v4.b16); dump();
bic(v7.b16, v7.b16, v8.b16); dump();
bic(v7.b16, v7.b16, v16.b16); dump();
bic(v7.b16, v7.b16, v31.b16); dump();
bif(v7.b16, v7.b16, v7.b16); dump();
bif(v0.b16, v7.b16, v7.b16); dump();
bif(v1.b16, v7.b16, v7.b16); dump();
bif(v2.b16, v7.b16, v7.b16); dump();
bif(v4.b16, v7.b16, v7.b16); dump();
bif(v8.b16, v7.b16, v7.b16); dump();
bif(v16.b16, v7.b16, v7.b16); dump();
bif(v31.b16, v7.b16, v7.b16); dump();
bif(v7.b16, v7.b16, v7.b16); dump();
bif(v7.b16, v0.b16, v7.b16); dump();
bif(v7.b16, v1.b16, v7.b16); dump();
bif(v7.b16, v2.b16, v7.b16); dump();
bif(v7.b16, v4.b16, v7.b16); dump();
bif(v7.b16, v8.b16, v7.b16); dump();
bif(v7.b16, v16.b16, v7.b16); dump();
bif(v7.b16, v31.b16, v7.b16); dump();
bif(v7.b16, v7.b16, v7.b16); dump();
bif(v7.b16, v7.b16, v0.b16); dump();
bif(v7.b16, v7.b16, v1.b16); dump();
bif(v7.b16, v7.b16, v2.b16); dump();
bif(v7.b16, v7.b16, v4.b16); dump();
bif(v7.b16, v7.b16, v8.b16); dump();
bif(v7.b16, v7.b16, v16.b16); dump();
bif(v7.b16, v7.b16, v31.b16); dump();
bit(v7.b16, v7.b16, v7.b16); dump();
bit(v0.b16, v7.b16, v7.b16); dump();
bit(v1.b16, v7.b16, v7.b16); dump();
bit(v2.b16, v7.b16, v7.b16); dump();
bit(v4.b16, v7.b16, v7.b16); dump();
bit(v8.b16, v7.b16, v7.b16); dump();
bit(v16.b16, v7.b16, v7.b16); dump();
bit(v31.b16, v7.b16, v7.b16); dump();
bit(v7.b16, v7.b16, v7.b16); dump();
bit(v7.b16, v0.b16, v7.b16); dump();
bit(v7.b16, v1.b16, v7.b16); dump();
bit(v7.b16, v2.b16, v7.b16); dump();
bit(v7.b16, v4.b16, v7.b16); dump();
bit(v7.b16, v8.b16, v7.b16); dump();
bit(v7.b16, v16.b16, v7.b16); dump();
bit(v7.b16, v31.b16, v7.b16); dump();
bit(v7.b16, v7.b16, v7.b16); dump();
bit(v7.b16, v7.b16, v0.b16); dump();
bit(v7.b16, v7.b16, v1.b16); dump();
bit(v7.b16, v7.b16, v2.b16); dump();
bit(v7.b16, v7.b16, v4.b16); dump();
bit(v7.b16, v7.b16, v8.b16); dump();
bit(v7.b16, v7.b16, v16.b16); dump();
bit(v7.b16, v7.b16, v31.b16); dump();
bsl(v7.b16, v7.b16, v7.b16); dump();
bsl(v0.b16, v7.b16, v7.b16); dump();
bsl(v1.b16, v7.b16, v7.b16); dump();
bsl(v2.b16, v7.b16, v7.b16); dump();
bsl(v4.b16, v7.b16, v7.b16); dump();
bsl(v8.b16, v7.b16, v7.b16); dump();
bsl(v16.b16, v7.b16, v7.b16); dump();
bsl(v31.b16, v7.b16, v7.b16); dump();
bsl(v7.b16, v7.b16, v7.b16); dump();
bsl(v7.b16, v0.b16, v7.b16); dump();
bsl(v7.b16, v1.b16, v7.b16); dump();
bsl(v7.b16, v2.b16, v7.b16); dump();
bsl(v7.b16, v4.b16, v7.b16); dump();
bsl(v7.b16, v8.b16, v7.b16); dump();
bsl(v7.b16, v16.b16, v7.b16); dump();
bsl(v7.b16, v31.b16, v7.b16); dump();
bsl(v7.b16, v7.b16, v7.b16); dump();
bsl(v7.b16, v7.b16, v0.b16); dump();
bsl(v7.b16, v7.b16, v1.b16); dump();
bsl(v7.b16, v7.b16, v2.b16); dump();
bsl(v7.b16, v7.b16, v4.b16); dump();
bsl(v7.b16, v7.b16, v8.b16); dump();
bsl(v7.b16, v7.b16, v16.b16); dump();
bsl(v7.b16, v7.b16, v31.b16); dump();
eor(v7.b16, v7.b16, v7.b16); dump();
eor(v0.b16, v7.b16, v7.b16); dump();
eor(v1.b16, v7.b16, v7.b16); dump();
eor(v2.b16, v7.b16, v7.b16); dump();
eor(v4.b16, v7.b16, v7.b16); dump();
eor(v8.b16, v7.b16, v7.b16); dump();
eor(v16.b16, v7.b16, v7.b16); dump();
eor(v31.b16, v7.b16, v7.b16); dump();
eor(v7.b16, v7.b16, v7.b16); dump();
eor(v7.b16, v0.b16, v7.b16); dump();
eor(v7.b16, v1.b16, v7.b16); dump();
eor(v7.b16, v2.b16, v7.b16); dump();
eor(v7.b16, v4.b16, v7.b16); dump();
eor(v7.b16, v8.b16, v7.b16); dump();
eor(v7.b16, v16.b16, v7.b16); dump();
eor(v7.b16, v31.b16, v7.b16); dump();
eor(v7.b16, v7.b16, v7.b16); dump();
eor(v7.b16, v7.b16, v0.b16); dump();
eor(v7.b16, v7.b16, v1.b16); dump();
eor(v7.b16, v7.b16, v2.b16); dump();
eor(v7.b16, v7.b16, v4.b16); dump();
eor(v7.b16, v7.b16, v8.b16); dump();
eor(v7.b16, v7.b16, v16.b16); dump();
eor(v7.b16, v7.b16, v31.b16); dump();
orn(v7.b16, v7.b16, v7.b16); dump();
orn(v0.b16, v7.b16, v7.b16); dump();
orn(v1.b16, v7.b16, v7.b16); dump();
orn(v2.b16, v7.b16, v7.b16); dump();
orn(v4.b16, v7.b16, v7.b16); dump();
orn(v8.b16, v7.b16, v7.b16); dump();
orn(v16.b16, v7.b16, v7.b16); dump();
orn(v31.b16, v7.b16, v7.b16); dump();
orn(v7.b16, v7.b16, v7.b16); dump();
orn(v7.b16, v0.b16, v7.b16); dump();
orn(v7.b16, v1.b16, v7.b16); dump();
orn(v7.b16, v2.b16, v7.b16); dump();
orn(v7.b16, v4.b16, v7.b16); dump();
orn(v7.b16, v8.b16, v7.b16); dump();
orn(v7.b16, v16.b16, v7.b16); dump();
orn(v7.b16, v31.b16, v7.b16); dump();
orn(v7.b16, v7.b16, v7.b16); dump();
orn(v7.b16, v7.b16, v0.b16); dump();
orn(v7.b16, v7.b16, v1.b16); dump();
orn(v7.b16, v7.b16, v2.b16); dump();
orn(v7.b16, v7.b16, v4.b16); dump();
orn(v7.b16, v7.b16, v8.b16); dump();
orn(v7.b16, v7.b16, v16.b16); dump();
orn(v7.b16, v7.b16, v31.b16); dump();
orr(v7.b16, v7.b16, v7.b16); dump();
orr(v0.b16, v7.b16, v7.b16); dump();
orr(v1.b16, v7.b16, v7.b16); dump();
orr(v2.b16, v7.b16, v7.b16); dump();
orr(v4.b16, v7.b16, v7.b16); dump();
orr(v8.b16, v7.b16, v7.b16); dump();
orr(v16.b16, v7.b16, v7.b16); dump();
orr(v31.b16, v7.b16, v7.b16); dump();
orr(v7.b16, v7.b16, v7.b16); dump();
orr(v7.b16, v0.b16, v7.b16); dump();
orr(v7.b16, v1.b16, v7.b16); dump();
orr(v7.b16, v2.b16, v7.b16); dump();
orr(v7.b16, v4.b16, v7.b16); dump();
orr(v7.b16, v8.b16, v7.b16); dump();
orr(v7.b16, v16.b16, v7.b16); dump();
orr(v7.b16, v31.b16, v7.b16); dump();
orr(v7.b16, v7.b16, v7.b16); dump();
orr(v7.b16, v7.b16, v0.b16); dump();
orr(v7.b16, v7.b16, v1.b16); dump();
orr(v7.b16, v7.b16, v2.b16); dump();
orr(v7.b16, v7.b16, v4.b16); dump();
orr(v7.b16, v7.b16, v8.b16); dump();
orr(v7.b16, v7.b16, v16.b16); dump();
orr(v7.b16, v7.b16, v31.b16); dump();
pmul(v7.b16, v7.b16, v7.b16); dump();
pmul(v0.b16, v7.b16, v7.b16); dump();
pmul(v1.b16, v7.b16, v7.b16); dump();
pmul(v2.b16, v7.b16, v7.b16); dump();
pmul(v4.b16, v7.b16, v7.b16); dump();
pmul(v8.b16, v7.b16, v7.b16); dump();
pmul(v16.b16, v7.b16, v7.b16); dump();
pmul(v31.b16, v7.b16, v7.b16); dump();
pmul(v7.b16, v7.b16, v7.b16); dump();
pmul(v7.b16, v0.b16, v7.b16); dump();
pmul(v7.b16, v1.b16, v7.b16); dump();
pmul(v7.b16, v2.b16, v7.b16); dump();
pmul(v7.b16, v4.b16, v7.b16); dump();
pmul(v7.b16, v8.b16, v7.b16); dump();
pmul(v7.b16, v16.b16, v7.b16); dump();
pmul(v7.b16, v31.b16, v7.b16); dump();
pmul(v7.b16, v7.b16, v7.b16); dump();
pmul(v7.b16, v7.b16, v0.b16); dump();
pmul(v7.b16, v7.b16, v1.b16); dump();
pmul(v7.b16, v7.b16, v2.b16); dump();
pmul(v7.b16, v7.b16, v4.b16); dump();
pmul(v7.b16, v7.b16, v8.b16); dump();
pmul(v7.b16, v7.b16, v16.b16); dump();
pmul(v7.b16, v7.b16, v31.b16); dump();
//DataProcSimd_Arithmetic5:0
mov(v7.b8, v7.b8); dump();
mov(v0.b8, v7.b8); dump();
mov(v1.b8, v7.b8); dump();
mov(v2.b8, v7.b8); dump();
mov(v4.b8, v7.b8); dump();
mov(v8.b8, v7.b8); dump();
mov(v16.b8, v7.b8); dump();
mov(v31.b8, v7.b8); dump();
mov(v7.b8, v7.b8); dump();
mov(v7.b8, v0.b8); dump();
mov(v7.b8, v1.b8); dump();
mov(v7.b8, v2.b8); dump();
mov(v7.b8, v4.b8); dump();
mov(v7.b8, v8.b8); dump();
mov(v7.b8, v16.b8); dump();
mov(v7.b8, v31.b8); dump();
//DataProcSimd_Arithmetic5:1
mov(v7.b16, v7.b16); dump();
mov(v0.b16, v7.b16); dump();
mov(v1.b16, v7.b16); dump();
mov(v2.b16, v7.b16); dump();
mov(v4.b16, v7.b16); dump();
mov(v8.b16, v7.b16); dump();
mov(v16.b16, v7.b16); dump();
mov(v31.b16, v7.b16); dump();
mov(v7.b16, v7.b16); dump();
mov(v7.b16, v0.b16); dump();
mov(v7.b16, v1.b16); dump();
mov(v7.b16, v2.b16); dump();
mov(v7.b16, v4.b16); dump();
mov(v7.b16, v8.b16); dump();
mov(v7.b16, v16.b16); dump();
mov(v7.b16, v31.b16); dump();
//DataProcSimd_Arithmetic6:0
fabd(h7, h7, h7); dump();
fabd(h0, h7, h7); dump();
fabd(h1, h7, h7); dump();
fabd(h2, h7, h7); dump();
fabd(h4, h7, h7); dump();
fabd(h8, h7, h7); dump();
fabd(h16, h7, h7); dump();
fabd(h31, h7, h7); dump();
fabd(h7, h7, h7); dump();
fabd(h7, h0, h7); dump();
fabd(h7, h1, h7); dump();
fabd(h7, h2, h7); dump();
fabd(h7, h4, h7); dump();
fabd(h7, h8, h7); dump();
fabd(h7, h16, h7); dump();
fabd(h7, h31, h7); dump();
fabd(h7, h7, h7); dump();
fabd(h7, h7, h0); dump();
fabd(h7, h7, h1); dump();
fabd(h7, h7, h2); dump();
fabd(h7, h7, h4); dump();
fabd(h7, h7, h8); dump();
fabd(h7, h7, h16); dump();
fabd(h7, h7, h31); dump();
fmulx(h7, h7, h7); dump();
fmulx(h0, h7, h7); dump();
fmulx(h1, h7, h7); dump();
fmulx(h2, h7, h7); dump();
fmulx(h4, h7, h7); dump();
fmulx(h8, h7, h7); dump();
fmulx(h16, h7, h7); dump();
fmulx(h31, h7, h7); dump();
fmulx(h7, h7, h7); dump();
fmulx(h7, h0, h7); dump();
fmulx(h7, h1, h7); dump();
fmulx(h7, h2, h7); dump();
fmulx(h7, h4, h7); dump();
fmulx(h7, h8, h7); dump();
fmulx(h7, h16, h7); dump();
fmulx(h7, h31, h7); dump();
fmulx(h7, h7, h7); dump();
fmulx(h7, h7, h0); dump();
fmulx(h7, h7, h1); dump();
fmulx(h7, h7, h2); dump();
fmulx(h7, h7, h4); dump();
fmulx(h7, h7, h8); dump();
fmulx(h7, h7, h16); dump();
fmulx(h7, h7, h31); dump();
frecps(h7, h7, h7); dump();
frecps(h0, h7, h7); dump();
frecps(h1, h7, h7); dump();
frecps(h2, h7, h7); dump();
frecps(h4, h7, h7); dump();
frecps(h8, h7, h7); dump();
frecps(h16, h7, h7); dump();
frecps(h31, h7, h7); dump();
frecps(h7, h7, h7); dump();
frecps(h7, h0, h7); dump();
frecps(h7, h1, h7); dump();
frecps(h7, h2, h7); dump();
frecps(h7, h4, h7); dump();
frecps(h7, h8, h7); dump();
frecps(h7, h16, h7); dump();
frecps(h7, h31, h7); dump();
frecps(h7, h7, h7); dump();
frecps(h7, h7, h0); dump();
frecps(h7, h7, h1); dump();
frecps(h7, h7, h2); dump();
frecps(h7, h7, h4); dump();
frecps(h7, h7, h8); dump();
frecps(h7, h7, h16); dump();
frecps(h7, h7, h31); dump();
frsqrts(h7, h7, h7); dump();
frsqrts(h0, h7, h7); dump();
frsqrts(h1, h7, h7); dump();
frsqrts(h2, h7, h7); dump();
frsqrts(h4, h7, h7); dump();
frsqrts(h8, h7, h7); dump();
frsqrts(h16, h7, h7); dump();
frsqrts(h31, h7, h7); dump();
frsqrts(h7, h7, h7); dump();
frsqrts(h7, h0, h7); dump();
frsqrts(h7, h1, h7); dump();
frsqrts(h7, h2, h7); dump();
frsqrts(h7, h4, h7); dump();
frsqrts(h7, h8, h7); dump();
frsqrts(h7, h16, h7); dump();
frsqrts(h7, h31, h7); dump();
frsqrts(h7, h7, h7); dump();
frsqrts(h7, h7, h0); dump();
frsqrts(h7, h7, h1); dump();
frsqrts(h7, h7, h2); dump();
frsqrts(h7, h7, h4); dump();
frsqrts(h7, h7, h8); dump();
frsqrts(h7, h7, h16); dump();
frsqrts(h7, h7, h31); dump();
//DataProcSimd_Arithmetic6:1
fabd(s7, s7, s7); dump();
fabd(s0, s7, s7); dump();
fabd(s1, s7, s7); dump();
fabd(s2, s7, s7); dump();
fabd(s4, s7, s7); dump();
fabd(s8, s7, s7); dump();
fabd(s16, s7, s7); dump();
fabd(s31, s7, s7); dump();
fabd(s7, s7, s7); dump();
fabd(s7, s0, s7); dump();
fabd(s7, s1, s7); dump();
fabd(s7, s2, s7); dump();
fabd(s7, s4, s7); dump();
fabd(s7, s8, s7); dump();
fabd(s7, s16, s7); dump();
fabd(s7, s31, s7); dump();
fabd(s7, s7, s7); dump();
fabd(s7, s7, s0); dump();
fabd(s7, s7, s1); dump();
fabd(s7, s7, s2); dump();
fabd(s7, s7, s4); dump();
fabd(s7, s7, s8); dump();
fabd(s7, s7, s16); dump();
fabd(s7, s7, s31); dump();
fmulx(s7, s7, s7); dump();
fmulx(s0, s7, s7); dump();
fmulx(s1, s7, s7); dump();
fmulx(s2, s7, s7); dump();
fmulx(s4, s7, s7); dump();
fmulx(s8, s7, s7); dump();
fmulx(s16, s7, s7); dump();
fmulx(s31, s7, s7); dump();
fmulx(s7, s7, s7); dump();
fmulx(s7, s0, s7); dump();
fmulx(s7, s1, s7); dump();
fmulx(s7, s2, s7); dump();
fmulx(s7, s4, s7); dump();
fmulx(s7, s8, s7); dump();
fmulx(s7, s16, s7); dump();
fmulx(s7, s31, s7); dump();
fmulx(s7, s7, s7); dump();
fmulx(s7, s7, s0); dump();
fmulx(s7, s7, s1); dump();
fmulx(s7, s7, s2); dump();
fmulx(s7, s7, s4); dump();
fmulx(s7, s7, s8); dump();
fmulx(s7, s7, s16); dump();
fmulx(s7, s7, s31); dump();
frecps(s7, s7, s7); dump();
frecps(s0, s7, s7); dump();
frecps(s1, s7, s7); dump();
frecps(s2, s7, s7); dump();
frecps(s4, s7, s7); dump();
frecps(s8, s7, s7); dump();
frecps(s16, s7, s7); dump();
frecps(s31, s7, s7); dump();
frecps(s7, s7, s7); dump();
frecps(s7, s0, s7); dump();
frecps(s7, s1, s7); dump();
frecps(s7, s2, s7); dump();
frecps(s7, s4, s7); dump();
frecps(s7, s8, s7); dump();
frecps(s7, s16, s7); dump();
frecps(s7, s31, s7); dump();
frecps(s7, s7, s7); dump();
frecps(s7, s7, s0); dump();
frecps(s7, s7, s1); dump();
frecps(s7, s7, s2); dump();
frecps(s7, s7, s4); dump();
frecps(s7, s7, s8); dump();
frecps(s7, s7, s16); dump();
frecps(s7, s7, s31); dump();
frsqrts(s7, s7, s7); dump();
frsqrts(s0, s7, s7); dump();
frsqrts(s1, s7, s7); dump();
frsqrts(s2, s7, s7); dump();
frsqrts(s4, s7, s7); dump();
frsqrts(s8, s7, s7); dump();
frsqrts(s16, s7, s7); dump();
frsqrts(s31, s7, s7); dump();
frsqrts(s7, s7, s7); dump();
frsqrts(s7, s0, s7); dump();
frsqrts(s7, s1, s7); dump();
frsqrts(s7, s2, s7); dump();
frsqrts(s7, s4, s7); dump();
frsqrts(s7, s8, s7); dump();
frsqrts(s7, s16, s7); dump();
frsqrts(s7, s31, s7); dump();
frsqrts(s7, s7, s7); dump();
frsqrts(s7, s7, s0); dump();
frsqrts(s7, s7, s1); dump();
frsqrts(s7, s7, s2); dump();
frsqrts(s7, s7, s4); dump();
frsqrts(s7, s7, s8); dump();
frsqrts(s7, s7, s16); dump();
frsqrts(s7, s7, s31); dump();
//DataProcSimd_Arithmetic6:2
fabd(d7, d7, d7); dump();
fabd(d0, d7, d7); dump();
fabd(d1, d7, d7); dump();
fabd(d2, d7, d7); dump();
fabd(d4, d7, d7); dump();
fabd(d8, d7, d7); dump();
fabd(d16, d7, d7); dump();
fabd(d31, d7, d7); dump();
fabd(d7, d7, d7); dump();
fabd(d7, d0, d7); dump();
fabd(d7, d1, d7); dump();
fabd(d7, d2, d7); dump();
fabd(d7, d4, d7); dump();
fabd(d7, d8, d7); dump();
fabd(d7, d16, d7); dump();
fabd(d7, d31, d7); dump();
fabd(d7, d7, d7); dump();
fabd(d7, d7, d0); dump();
fabd(d7, d7, d1); dump();
fabd(d7, d7, d2); dump();
fabd(d7, d7, d4); dump();
fabd(d7, d7, d8); dump();
fabd(d7, d7, d16); dump();
fabd(d7, d7, d31); dump();
fmulx(d7, d7, d7); dump();
fmulx(d0, d7, d7); dump();
fmulx(d1, d7, d7); dump();
fmulx(d2, d7, d7); dump();
fmulx(d4, d7, d7); dump();
fmulx(d8, d7, d7); dump();
fmulx(d16, d7, d7); dump();
fmulx(d31, d7, d7); dump();
fmulx(d7, d7, d7); dump();
fmulx(d7, d0, d7); dump();
fmulx(d7, d1, d7); dump();
fmulx(d7, d2, d7); dump();
fmulx(d7, d4, d7); dump();
fmulx(d7, d8, d7); dump();
fmulx(d7, d16, d7); dump();
fmulx(d7, d31, d7); dump();
fmulx(d7, d7, d7); dump();
fmulx(d7, d7, d0); dump();
fmulx(d7, d7, d1); dump();
fmulx(d7, d7, d2); dump();
fmulx(d7, d7, d4); dump();
fmulx(d7, d7, d8); dump();
fmulx(d7, d7, d16); dump();
fmulx(d7, d7, d31); dump();
frecps(d7, d7, d7); dump();
frecps(d0, d7, d7); dump();
frecps(d1, d7, d7); dump();
frecps(d2, d7, d7); dump();
frecps(d4, d7, d7); dump();
frecps(d8, d7, d7); dump();
frecps(d16, d7, d7); dump();
frecps(d31, d7, d7); dump();
frecps(d7, d7, d7); dump();
frecps(d7, d0, d7); dump();
frecps(d7, d1, d7); dump();
frecps(d7, d2, d7); dump();
frecps(d7, d4, d7); dump();
frecps(d7, d8, d7); dump();
frecps(d7, d16, d7); dump();
frecps(d7, d31, d7); dump();
frecps(d7, d7, d7); dump();
frecps(d7, d7, d0); dump();
frecps(d7, d7, d1); dump();
frecps(d7, d7, d2); dump();
frecps(d7, d7, d4); dump();
frecps(d7, d7, d8); dump();
frecps(d7, d7, d16); dump();
frecps(d7, d7, d31); dump();
frsqrts(d7, d7, d7); dump();
frsqrts(d0, d7, d7); dump();
frsqrts(d1, d7, d7); dump();
frsqrts(d2, d7, d7); dump();
frsqrts(d4, d7, d7); dump();
frsqrts(d8, d7, d7); dump();
frsqrts(d16, d7, d7); dump();
frsqrts(d31, d7, d7); dump();
frsqrts(d7, d7, d7); dump();
frsqrts(d7, d0, d7); dump();
frsqrts(d7, d1, d7); dump();
frsqrts(d7, d2, d7); dump();
frsqrts(d7, d4, d7); dump();
frsqrts(d7, d8, d7); dump();
frsqrts(d7, d16, d7); dump();
frsqrts(d7, d31, d7); dump();
frsqrts(d7, d7, d7); dump();
frsqrts(d7, d7, d0); dump();
frsqrts(d7, d7, d1); dump();
frsqrts(d7, d7, d2); dump();
frsqrts(d7, d7, d4); dump();
frsqrts(d7, d7, d8); dump();
frsqrts(d7, d7, d16); dump();
frsqrts(d7, d7, d31); dump();
//DataProcSimd_Arithmetic6:3
fabd(v7.h8, v7.h8, v7.h8); dump();
fabd(v0.h8, v7.h8, v7.h8); dump();
fabd(v1.h8, v7.h8, v7.h8); dump();
fabd(v2.h8, v7.h8, v7.h8); dump();
fabd(v4.h8, v7.h8, v7.h8); dump();
fabd(v8.h8, v7.h8, v7.h8); dump();
fabd(v16.h8, v7.h8, v7.h8); dump();
fabd(v31.h8, v7.h8, v7.h8); dump();
fabd(v7.h8, v7.h8, v7.h8); dump();
fabd(v7.h8, v0.h8, v7.h8); dump();
fabd(v7.h8, v1.h8, v7.h8); dump();
fabd(v7.h8, v2.h8, v7.h8); dump();
fabd(v7.h8, v4.h8, v7.h8); dump();
fabd(v7.h8, v8.h8, v7.h8); dump();
fabd(v7.h8, v16.h8, v7.h8); dump();
fabd(v7.h8, v31.h8, v7.h8); dump();
fabd(v7.h8, v7.h8, v7.h8); dump();
fabd(v7.h8, v7.h8, v0.h8); dump();
fabd(v7.h8, v7.h8, v1.h8); dump();
fabd(v7.h8, v7.h8, v2.h8); dump();
fabd(v7.h8, v7.h8, v4.h8); dump();
fabd(v7.h8, v7.h8, v8.h8); dump();
fabd(v7.h8, v7.h8, v16.h8); dump();
fabd(v7.h8, v7.h8, v31.h8); dump();
fmulx(v7.h8, v7.h8, v7.h8); dump();
fmulx(v0.h8, v7.h8, v7.h8); dump();
fmulx(v1.h8, v7.h8, v7.h8); dump();
fmulx(v2.h8, v7.h8, v7.h8); dump();
fmulx(v4.h8, v7.h8, v7.h8); dump();
fmulx(v8.h8, v7.h8, v7.h8); dump();
fmulx(v16.h8, v7.h8, v7.h8); dump();
fmulx(v31.h8, v7.h8, v7.h8); dump();
fmulx(v7.h8, v7.h8, v7.h8); dump();
fmulx(v7.h8, v0.h8, v7.h8); dump();
fmulx(v7.h8, v1.h8, v7.h8); dump();
fmulx(v7.h8, v2.h8, v7.h8); dump();
fmulx(v7.h8, v4.h8, v7.h8); dump();
fmulx(v7.h8, v8.h8, v7.h8); dump();
fmulx(v7.h8, v16.h8, v7.h8); dump();
fmulx(v7.h8, v31.h8, v7.h8); dump();
fmulx(v7.h8, v7.h8, v7.h8); dump();
fmulx(v7.h8, v7.h8, v0.h8); dump();
fmulx(v7.h8, v7.h8, v1.h8); dump();
fmulx(v7.h8, v7.h8, v2.h8); dump();
fmulx(v7.h8, v7.h8, v4.h8); dump();
fmulx(v7.h8, v7.h8, v8.h8); dump();
fmulx(v7.h8, v7.h8, v16.h8); dump();
fmulx(v7.h8, v7.h8, v31.h8); dump();
frecps(v7.h8, v7.h8, v7.h8); dump();
frecps(v0.h8, v7.h8, v7.h8); dump();
frecps(v1.h8, v7.h8, v7.h8); dump();
frecps(v2.h8, v7.h8, v7.h8); dump();
frecps(v4.h8, v7.h8, v7.h8); dump();
frecps(v8.h8, v7.h8, v7.h8); dump();
frecps(v16.h8, v7.h8, v7.h8); dump();
frecps(v31.h8, v7.h8, v7.h8); dump();
frecps(v7.h8, v7.h8, v7.h8); dump();
frecps(v7.h8, v0.h8, v7.h8); dump();
frecps(v7.h8, v1.h8, v7.h8); dump();
frecps(v7.h8, v2.h8, v7.h8); dump();
frecps(v7.h8, v4.h8, v7.h8); dump();
frecps(v7.h8, v8.h8, v7.h8); dump();
frecps(v7.h8, v16.h8, v7.h8); dump();
frecps(v7.h8, v31.h8, v7.h8); dump();
frecps(v7.h8, v7.h8, v7.h8); dump();
frecps(v7.h8, v7.h8, v0.h8); dump();
frecps(v7.h8, v7.h8, v1.h8); dump();
frecps(v7.h8, v7.h8, v2.h8); dump();
frecps(v7.h8, v7.h8, v4.h8); dump();
frecps(v7.h8, v7.h8, v8.h8); dump();
frecps(v7.h8, v7.h8, v16.h8); dump();
frecps(v7.h8, v7.h8, v31.h8); dump();
frsqrts(v7.h8, v7.h8, v7.h8); dump();
frsqrts(v0.h8, v7.h8, v7.h8); dump();
frsqrts(v1.h8, v7.h8, v7.h8); dump();
frsqrts(v2.h8, v7.h8, v7.h8); dump();
frsqrts(v4.h8, v7.h8, v7.h8); dump();
frsqrts(v8.h8, v7.h8, v7.h8); dump();
frsqrts(v16.h8, v7.h8, v7.h8); dump();
frsqrts(v31.h8, v7.h8, v7.h8); dump();
frsqrts(v7.h8, v7.h8, v7.h8); dump();
frsqrts(v7.h8, v0.h8, v7.h8); dump();
frsqrts(v7.h8, v1.h8, v7.h8); dump();
frsqrts(v7.h8, v2.h8, v7.h8); dump();
frsqrts(v7.h8, v4.h8, v7.h8); dump();
frsqrts(v7.h8, v8.h8, v7.h8); dump();
frsqrts(v7.h8, v16.h8, v7.h8); dump();
frsqrts(v7.h8, v31.h8, v7.h8); dump();
frsqrts(v7.h8, v7.h8, v7.h8); dump();
frsqrts(v7.h8, v7.h8, v0.h8); dump();
frsqrts(v7.h8, v7.h8, v1.h8); dump();
frsqrts(v7.h8, v7.h8, v2.h8); dump();
frsqrts(v7.h8, v7.h8, v4.h8); dump();
frsqrts(v7.h8, v7.h8, v8.h8); dump();
frsqrts(v7.h8, v7.h8, v16.h8); dump();
frsqrts(v7.h8, v7.h8, v31.h8); dump();
//DataProcSimd_Arithmetic6:4
fabd(v7.h4, v7.h4, v7.h4); dump();
fabd(v0.h4, v7.h4, v7.h4); dump();
fabd(v1.h4, v7.h4, v7.h4); dump();
fabd(v2.h4, v7.h4, v7.h4); dump();
fabd(v4.h4, v7.h4, v7.h4); dump();
fabd(v8.h4, v7.h4, v7.h4); dump();
fabd(v16.h4, v7.h4, v7.h4); dump();
fabd(v31.h4, v7.h4, v7.h4); dump();
fabd(v7.h4, v7.h4, v7.h4); dump();
fabd(v7.h4, v0.h4, v7.h4); dump();
fabd(v7.h4, v1.h4, v7.h4); dump();
fabd(v7.h4, v2.h4, v7.h4); dump();
fabd(v7.h4, v4.h4, v7.h4); dump();
fabd(v7.h4, v8.h4, v7.h4); dump();
fabd(v7.h4, v16.h4, v7.h4); dump();
fabd(v7.h4, v31.h4, v7.h4); dump();
fabd(v7.h4, v7.h4, v7.h4); dump();
fabd(v7.h4, v7.h4, v0.h4); dump();
fabd(v7.h4, v7.h4, v1.h4); dump();
fabd(v7.h4, v7.h4, v2.h4); dump();
fabd(v7.h4, v7.h4, v4.h4); dump();
fabd(v7.h4, v7.h4, v8.h4); dump();
fabd(v7.h4, v7.h4, v16.h4); dump();
fabd(v7.h4, v7.h4, v31.h4); dump();
fmulx(v7.h4, v7.h4, v7.h4); dump();
fmulx(v0.h4, v7.h4, v7.h4); dump();
fmulx(v1.h4, v7.h4, v7.h4); dump();
fmulx(v2.h4, v7.h4, v7.h4); dump();
fmulx(v4.h4, v7.h4, v7.h4); dump();
fmulx(v8.h4, v7.h4, v7.h4); dump();
fmulx(v16.h4, v7.h4, v7.h4); dump();
fmulx(v31.h4, v7.h4, v7.h4); dump();
fmulx(v7.h4, v7.h4, v7.h4); dump();
fmulx(v7.h4, v0.h4, v7.h4); dump();
fmulx(v7.h4, v1.h4, v7.h4); dump();
fmulx(v7.h4, v2.h4, v7.h4); dump();
fmulx(v7.h4, v4.h4, v7.h4); dump();
fmulx(v7.h4, v8.h4, v7.h4); dump();
fmulx(v7.h4, v16.h4, v7.h4); dump();
fmulx(v7.h4, v31.h4, v7.h4); dump();
fmulx(v7.h4, v7.h4, v7.h4); dump();
fmulx(v7.h4, v7.h4, v0.h4); dump();
fmulx(v7.h4, v7.h4, v1.h4); dump();
fmulx(v7.h4, v7.h4, v2.h4); dump();
fmulx(v7.h4, v7.h4, v4.h4); dump();
fmulx(v7.h4, v7.h4, v8.h4); dump();
fmulx(v7.h4, v7.h4, v16.h4); dump();
fmulx(v7.h4, v7.h4, v31.h4); dump();
frecps(v7.h4, v7.h4, v7.h4); dump();
frecps(v0.h4, v7.h4, v7.h4); dump();
frecps(v1.h4, v7.h4, v7.h4); dump();
frecps(v2.h4, v7.h4, v7.h4); dump();
frecps(v4.h4, v7.h4, v7.h4); dump();
frecps(v8.h4, v7.h4, v7.h4); dump();
frecps(v16.h4, v7.h4, v7.h4); dump();
frecps(v31.h4, v7.h4, v7.h4); dump();
frecps(v7.h4, v7.h4, v7.h4); dump();
frecps(v7.h4, v0.h4, v7.h4); dump();
frecps(v7.h4, v1.h4, v7.h4); dump();
frecps(v7.h4, v2.h4, v7.h4); dump();
frecps(v7.h4, v4.h4, v7.h4); dump();
frecps(v7.h4, v8.h4, v7.h4); dump();
frecps(v7.h4, v16.h4, v7.h4); dump();
frecps(v7.h4, v31.h4, v7.h4); dump();
frecps(v7.h4, v7.h4, v7.h4); dump();
frecps(v7.h4, v7.h4, v0.h4); dump();
frecps(v7.h4, v7.h4, v1.h4); dump();
frecps(v7.h4, v7.h4, v2.h4); dump();
frecps(v7.h4, v7.h4, v4.h4); dump();
frecps(v7.h4, v7.h4, v8.h4); dump();
frecps(v7.h4, v7.h4, v16.h4); dump();
frecps(v7.h4, v7.h4, v31.h4); dump();
frsqrts(v7.h4, v7.h4, v7.h4); dump();
frsqrts(v0.h4, v7.h4, v7.h4); dump();
frsqrts(v1.h4, v7.h4, v7.h4); dump();
frsqrts(v2.h4, v7.h4, v7.h4); dump();
frsqrts(v4.h4, v7.h4, v7.h4); dump();
frsqrts(v8.h4, v7.h4, v7.h4); dump();
frsqrts(v16.h4, v7.h4, v7.h4); dump();
frsqrts(v31.h4, v7.h4, v7.h4); dump();
frsqrts(v7.h4, v7.h4, v7.h4); dump();
frsqrts(v7.h4, v0.h4, v7.h4); dump();
frsqrts(v7.h4, v1.h4, v7.h4); dump();
frsqrts(v7.h4, v2.h4, v7.h4); dump();
frsqrts(v7.h4, v4.h4, v7.h4); dump();
frsqrts(v7.h4, v8.h4, v7.h4); dump();
frsqrts(v7.h4, v16.h4, v7.h4); dump();
frsqrts(v7.h4, v31.h4, v7.h4); dump();
frsqrts(v7.h4, v7.h4, v7.h4); dump();
frsqrts(v7.h4, v7.h4, v0.h4); dump();
frsqrts(v7.h4, v7.h4, v1.h4); dump();
frsqrts(v7.h4, v7.h4, v2.h4); dump();
frsqrts(v7.h4, v7.h4, v4.h4); dump();
frsqrts(v7.h4, v7.h4, v8.h4); dump();
frsqrts(v7.h4, v7.h4, v16.h4); dump();
frsqrts(v7.h4, v7.h4, v31.h4); dump();
//DataProcSimd_Arithmetic6:5
fabd(v7.s4, v7.s4, v7.s4); dump();
fabd(v0.s4, v7.s4, v7.s4); dump();
fabd(v1.s4, v7.s4, v7.s4); dump();
fabd(v2.s4, v7.s4, v7.s4); dump();
fabd(v4.s4, v7.s4, v7.s4); dump();
fabd(v8.s4, v7.s4, v7.s4); dump();
fabd(v16.s4, v7.s4, v7.s4); dump();
fabd(v31.s4, v7.s4, v7.s4); dump();
fabd(v7.s4, v7.s4, v7.s4); dump();
fabd(v7.s4, v0.s4, v7.s4); dump();
fabd(v7.s4, v1.s4, v7.s4); dump();
fabd(v7.s4, v2.s4, v7.s4); dump();
fabd(v7.s4, v4.s4, v7.s4); dump();
fabd(v7.s4, v8.s4, v7.s4); dump();
fabd(v7.s4, v16.s4, v7.s4); dump();
fabd(v7.s4, v31.s4, v7.s4); dump();
fabd(v7.s4, v7.s4, v7.s4); dump();
fabd(v7.s4, v7.s4, v0.s4); dump();
fabd(v7.s4, v7.s4, v1.s4); dump();
fabd(v7.s4, v7.s4, v2.s4); dump();
fabd(v7.s4, v7.s4, v4.s4); dump();
fabd(v7.s4, v7.s4, v8.s4); dump();
fabd(v7.s4, v7.s4, v16.s4); dump();
fabd(v7.s4, v7.s4, v31.s4); dump();
fmulx(v7.s4, v7.s4, v7.s4); dump();
fmulx(v0.s4, v7.s4, v7.s4); dump();
fmulx(v1.s4, v7.s4, v7.s4); dump();
fmulx(v2.s4, v7.s4, v7.s4); dump();
fmulx(v4.s4, v7.s4, v7.s4); dump();
fmulx(v8.s4, v7.s4, v7.s4); dump();
fmulx(v16.s4, v7.s4, v7.s4); dump();
fmulx(v31.s4, v7.s4, v7.s4); dump();
fmulx(v7.s4, v7.s4, v7.s4); dump();
fmulx(v7.s4, v0.s4, v7.s4); dump();
fmulx(v7.s4, v1.s4, v7.s4); dump();
fmulx(v7.s4, v2.s4, v7.s4); dump();
fmulx(v7.s4, v4.s4, v7.s4); dump();
fmulx(v7.s4, v8.s4, v7.s4); dump();
fmulx(v7.s4, v16.s4, v7.s4); dump();
fmulx(v7.s4, v31.s4, v7.s4); dump();
fmulx(v7.s4, v7.s4, v7.s4); dump();
fmulx(v7.s4, v7.s4, v0.s4); dump();
fmulx(v7.s4, v7.s4, v1.s4); dump();
fmulx(v7.s4, v7.s4, v2.s4); dump();
fmulx(v7.s4, v7.s4, v4.s4); dump();
fmulx(v7.s4, v7.s4, v8.s4); dump();
fmulx(v7.s4, v7.s4, v16.s4); dump();
fmulx(v7.s4, v7.s4, v31.s4); dump();
frecps(v7.s4, v7.s4, v7.s4); dump();
frecps(v0.s4, v7.s4, v7.s4); dump();
frecps(v1.s4, v7.s4, v7.s4); dump();
frecps(v2.s4, v7.s4, v7.s4); dump();
frecps(v4.s4, v7.s4, v7.s4); dump();
frecps(v8.s4, v7.s4, v7.s4); dump();
frecps(v16.s4, v7.s4, v7.s4); dump();
frecps(v31.s4, v7.s4, v7.s4); dump();
frecps(v7.s4, v7.s4, v7.s4); dump();
frecps(v7.s4, v0.s4, v7.s4); dump();
frecps(v7.s4, v1.s4, v7.s4); dump();
frecps(v7.s4, v2.s4, v7.s4); dump();
frecps(v7.s4, v4.s4, v7.s4); dump();
frecps(v7.s4, v8.s4, v7.s4); dump();
frecps(v7.s4, v16.s4, v7.s4); dump();
frecps(v7.s4, v31.s4, v7.s4); dump();
frecps(v7.s4, v7.s4, v7.s4); dump();
frecps(v7.s4, v7.s4, v0.s4); dump();
frecps(v7.s4, v7.s4, v1.s4); dump();
frecps(v7.s4, v7.s4, v2.s4); dump();
frecps(v7.s4, v7.s4, v4.s4); dump();
frecps(v7.s4, v7.s4, v8.s4); dump();
frecps(v7.s4, v7.s4, v16.s4); dump();
frecps(v7.s4, v7.s4, v31.s4); dump();
frsqrts(v7.s4, v7.s4, v7.s4); dump();
frsqrts(v0.s4, v7.s4, v7.s4); dump();
frsqrts(v1.s4, v7.s4, v7.s4); dump();
frsqrts(v2.s4, v7.s4, v7.s4); dump();
frsqrts(v4.s4, v7.s4, v7.s4); dump();
frsqrts(v8.s4, v7.s4, v7.s4); dump();
frsqrts(v16.s4, v7.s4, v7.s4); dump();
frsqrts(v31.s4, v7.s4, v7.s4); dump();
frsqrts(v7.s4, v7.s4, v7.s4); dump();
frsqrts(v7.s4, v0.s4, v7.s4); dump();
frsqrts(v7.s4, v1.s4, v7.s4); dump();
frsqrts(v7.s4, v2.s4, v7.s4); dump();
frsqrts(v7.s4, v4.s4, v7.s4); dump();
frsqrts(v7.s4, v8.s4, v7.s4); dump();
frsqrts(v7.s4, v16.s4, v7.s4); dump();
frsqrts(v7.s4, v31.s4, v7.s4); dump();
frsqrts(v7.s4, v7.s4, v7.s4); dump();
frsqrts(v7.s4, v7.s4, v0.s4); dump();
frsqrts(v7.s4, v7.s4, v1.s4); dump();
frsqrts(v7.s4, v7.s4, v2.s4); dump();
frsqrts(v7.s4, v7.s4, v4.s4); dump();
frsqrts(v7.s4, v7.s4, v8.s4); dump();
frsqrts(v7.s4, v7.s4, v16.s4); dump();
frsqrts(v7.s4, v7.s4, v31.s4); dump();
//DataProcSimd_Arithmetic6:6
fabd(v7.s2, v7.s2, v7.s2); dump();
fabd(v0.s2, v7.s2, v7.s2); dump();
fabd(v1.s2, v7.s2, v7.s2); dump();
fabd(v2.s2, v7.s2, v7.s2); dump();
fabd(v4.s2, v7.s2, v7.s2); dump();
fabd(v8.s2, v7.s2, v7.s2); dump();
fabd(v16.s2, v7.s2, v7.s2); dump();
fabd(v31.s2, v7.s2, v7.s2); dump();
fabd(v7.s2, v7.s2, v7.s2); dump();
fabd(v7.s2, v0.s2, v7.s2); dump();
fabd(v7.s2, v1.s2, v7.s2); dump();
fabd(v7.s2, v2.s2, v7.s2); dump();
fabd(v7.s2, v4.s2, v7.s2); dump();
fabd(v7.s2, v8.s2, v7.s2); dump();
fabd(v7.s2, v16.s2, v7.s2); dump();
fabd(v7.s2, v31.s2, v7.s2); dump();
fabd(v7.s2, v7.s2, v7.s2); dump();
fabd(v7.s2, v7.s2, v0.s2); dump();
fabd(v7.s2, v7.s2, v1.s2); dump();
fabd(v7.s2, v7.s2, v2.s2); dump();
fabd(v7.s2, v7.s2, v4.s2); dump();
fabd(v7.s2, v7.s2, v8.s2); dump();
fabd(v7.s2, v7.s2, v16.s2); dump();
fabd(v7.s2, v7.s2, v31.s2); dump();
fmulx(v7.s2, v7.s2, v7.s2); dump();
fmulx(v0.s2, v7.s2, v7.s2); dump();
fmulx(v1.s2, v7.s2, v7.s2); dump();
fmulx(v2.s2, v7.s2, v7.s2); dump();
fmulx(v4.s2, v7.s2, v7.s2); dump();
fmulx(v8.s2, v7.s2, v7.s2); dump();
fmulx(v16.s2, v7.s2, v7.s2); dump();
fmulx(v31.s2, v7.s2, v7.s2); dump();
fmulx(v7.s2, v7.s2, v7.s2); dump();
fmulx(v7.s2, v0.s2, v7.s2); dump();
fmulx(v7.s2, v1.s2, v7.s2); dump();
fmulx(v7.s2, v2.s2, v7.s2); dump();
fmulx(v7.s2, v4.s2, v7.s2); dump();
fmulx(v7.s2, v8.s2, v7.s2); dump();
fmulx(v7.s2, v16.s2, v7.s2); dump();
fmulx(v7.s2, v31.s2, v7.s2); dump();
fmulx(v7.s2, v7.s2, v7.s2); dump();
fmulx(v7.s2, v7.s2, v0.s2); dump();
fmulx(v7.s2, v7.s2, v1.s2); dump();
fmulx(v7.s2, v7.s2, v2.s2); dump();
fmulx(v7.s2, v7.s2, v4.s2); dump();
fmulx(v7.s2, v7.s2, v8.s2); dump();
fmulx(v7.s2, v7.s2, v16.s2); dump();
fmulx(v7.s2, v7.s2, v31.s2); dump();
frecps(v7.s2, v7.s2, v7.s2); dump();
frecps(v0.s2, v7.s2, v7.s2); dump();
frecps(v1.s2, v7.s2, v7.s2); dump();
frecps(v2.s2, v7.s2, v7.s2); dump();
frecps(v4.s2, v7.s2, v7.s2); dump();
frecps(v8.s2, v7.s2, v7.s2); dump();
frecps(v16.s2, v7.s2, v7.s2); dump();
frecps(v31.s2, v7.s2, v7.s2); dump();
frecps(v7.s2, v7.s2, v7.s2); dump();
frecps(v7.s2, v0.s2, v7.s2); dump();
frecps(v7.s2, v1.s2, v7.s2); dump();
frecps(v7.s2, v2.s2, v7.s2); dump();
frecps(v7.s2, v4.s2, v7.s2); dump();
frecps(v7.s2, v8.s2, v7.s2); dump();
frecps(v7.s2, v16.s2, v7.s2); dump();
frecps(v7.s2, v31.s2, v7.s2); dump();
frecps(v7.s2, v7.s2, v7.s2); dump();
frecps(v7.s2, v7.s2, v0.s2); dump();
frecps(v7.s2, v7.s2, v1.s2); dump();
frecps(v7.s2, v7.s2, v2.s2); dump();
frecps(v7.s2, v7.s2, v4.s2); dump();
frecps(v7.s2, v7.s2, v8.s2); dump();
frecps(v7.s2, v7.s2, v16.s2); dump();
frecps(v7.s2, v7.s2, v31.s2); dump();
frsqrts(v7.s2, v7.s2, v7.s2); dump();
frsqrts(v0.s2, v7.s2, v7.s2); dump();
frsqrts(v1.s2, v7.s2, v7.s2); dump();
frsqrts(v2.s2, v7.s2, v7.s2); dump();
frsqrts(v4.s2, v7.s2, v7.s2); dump();
frsqrts(v8.s2, v7.s2, v7.s2); dump();
frsqrts(v16.s2, v7.s2, v7.s2); dump();
frsqrts(v31.s2, v7.s2, v7.s2); dump();
frsqrts(v7.s2, v7.s2, v7.s2); dump();
frsqrts(v7.s2, v0.s2, v7.s2); dump();
frsqrts(v7.s2, v1.s2, v7.s2); dump();
frsqrts(v7.s2, v2.s2, v7.s2); dump();
frsqrts(v7.s2, v4.s2, v7.s2); dump();
frsqrts(v7.s2, v8.s2, v7.s2); dump();
frsqrts(v7.s2, v16.s2, v7.s2); dump();
frsqrts(v7.s2, v31.s2, v7.s2); dump();
frsqrts(v7.s2, v7.s2, v7.s2); dump();
frsqrts(v7.s2, v7.s2, v0.s2); dump();
frsqrts(v7.s2, v7.s2, v1.s2); dump();
frsqrts(v7.s2, v7.s2, v2.s2); dump();
frsqrts(v7.s2, v7.s2, v4.s2); dump();
frsqrts(v7.s2, v7.s2, v8.s2); dump();
frsqrts(v7.s2, v7.s2, v16.s2); dump();
frsqrts(v7.s2, v7.s2, v31.s2); dump();
//DataProcSimd_Arithmetic6:7
fabd(v7.d2, v7.d2, v7.d2); dump();
fabd(v0.d2, v7.d2, v7.d2); dump();
fabd(v1.d2, v7.d2, v7.d2); dump();
fabd(v2.d2, v7.d2, v7.d2); dump();
fabd(v4.d2, v7.d2, v7.d2); dump();
fabd(v8.d2, v7.d2, v7.d2); dump();
fabd(v16.d2, v7.d2, v7.d2); dump();
fabd(v31.d2, v7.d2, v7.d2); dump();
fabd(v7.d2, v7.d2, v7.d2); dump();
fabd(v7.d2, v0.d2, v7.d2); dump();
fabd(v7.d2, v1.d2, v7.d2); dump();
fabd(v7.d2, v2.d2, v7.d2); dump();
fabd(v7.d2, v4.d2, v7.d2); dump();
fabd(v7.d2, v8.d2, v7.d2); dump();
fabd(v7.d2, v16.d2, v7.d2); dump();
fabd(v7.d2, v31.d2, v7.d2); dump();
fabd(v7.d2, v7.d2, v7.d2); dump();
fabd(v7.d2, v7.d2, v0.d2); dump();
fabd(v7.d2, v7.d2, v1.d2); dump();
fabd(v7.d2, v7.d2, v2.d2); dump();
fabd(v7.d2, v7.d2, v4.d2); dump();
fabd(v7.d2, v7.d2, v8.d2); dump();
fabd(v7.d2, v7.d2, v16.d2); dump();
fabd(v7.d2, v7.d2, v31.d2); dump();
fmulx(v7.d2, v7.d2, v7.d2); dump();
fmulx(v0.d2, v7.d2, v7.d2); dump();
fmulx(v1.d2, v7.d2, v7.d2); dump();
fmulx(v2.d2, v7.d2, v7.d2); dump();
fmulx(v4.d2, v7.d2, v7.d2); dump();
fmulx(v8.d2, v7.d2, v7.d2); dump();
fmulx(v16.d2, v7.d2, v7.d2); dump();
fmulx(v31.d2, v7.d2, v7.d2); dump();
fmulx(v7.d2, v7.d2, v7.d2); dump();
fmulx(v7.d2, v0.d2, v7.d2); dump();
fmulx(v7.d2, v1.d2, v7.d2); dump();
fmulx(v7.d2, v2.d2, v7.d2); dump();
fmulx(v7.d2, v4.d2, v7.d2); dump();
fmulx(v7.d2, v8.d2, v7.d2); dump();
fmulx(v7.d2, v16.d2, v7.d2); dump();
fmulx(v7.d2, v31.d2, v7.d2); dump();
fmulx(v7.d2, v7.d2, v7.d2); dump();
fmulx(v7.d2, v7.d2, v0.d2); dump();
fmulx(v7.d2, v7.d2, v1.d2); dump();
fmulx(v7.d2, v7.d2, v2.d2); dump();
fmulx(v7.d2, v7.d2, v4.d2); dump();
fmulx(v7.d2, v7.d2, v8.d2); dump();
fmulx(v7.d2, v7.d2, v16.d2); dump();
fmulx(v7.d2, v7.d2, v31.d2); dump();
frecps(v7.d2, v7.d2, v7.d2); dump();
frecps(v0.d2, v7.d2, v7.d2); dump();
frecps(v1.d2, v7.d2, v7.d2); dump();
frecps(v2.d2, v7.d2, v7.d2); dump();
frecps(v4.d2, v7.d2, v7.d2); dump();
frecps(v8.d2, v7.d2, v7.d2); dump();
frecps(v16.d2, v7.d2, v7.d2); dump();
frecps(v31.d2, v7.d2, v7.d2); dump();
frecps(v7.d2, v7.d2, v7.d2); dump();
frecps(v7.d2, v0.d2, v7.d2); dump();
frecps(v7.d2, v1.d2, v7.d2); dump();
frecps(v7.d2, v2.d2, v7.d2); dump();
frecps(v7.d2, v4.d2, v7.d2); dump();
frecps(v7.d2, v8.d2, v7.d2); dump();
frecps(v7.d2, v16.d2, v7.d2); dump();
frecps(v7.d2, v31.d2, v7.d2); dump();
frecps(v7.d2, v7.d2, v7.d2); dump();
frecps(v7.d2, v7.d2, v0.d2); dump();
frecps(v7.d2, v7.d2, v1.d2); dump();
frecps(v7.d2, v7.d2, v2.d2); dump();
frecps(v7.d2, v7.d2, v4.d2); dump();
frecps(v7.d2, v7.d2, v8.d2); dump();
frecps(v7.d2, v7.d2, v16.d2); dump();
frecps(v7.d2, v7.d2, v31.d2); dump();
frsqrts(v7.d2, v7.d2, v7.d2); dump();
frsqrts(v0.d2, v7.d2, v7.d2); dump();
frsqrts(v1.d2, v7.d2, v7.d2); dump();
frsqrts(v2.d2, v7.d2, v7.d2); dump();
frsqrts(v4.d2, v7.d2, v7.d2); dump();
frsqrts(v8.d2, v7.d2, v7.d2); dump();
frsqrts(v16.d2, v7.d2, v7.d2); dump();
frsqrts(v31.d2, v7.d2, v7.d2); dump();
frsqrts(v7.d2, v7.d2, v7.d2); dump();
frsqrts(v7.d2, v0.d2, v7.d2); dump();
frsqrts(v7.d2, v1.d2, v7.d2); dump();
frsqrts(v7.d2, v2.d2, v7.d2); dump();
frsqrts(v7.d2, v4.d2, v7.d2); dump();
frsqrts(v7.d2, v8.d2, v7.d2); dump();
frsqrts(v7.d2, v16.d2, v7.d2); dump();
frsqrts(v7.d2, v31.d2, v7.d2); dump();
frsqrts(v7.d2, v7.d2, v7.d2); dump();
frsqrts(v7.d2, v7.d2, v0.d2); dump();
frsqrts(v7.d2, v7.d2, v1.d2); dump();
frsqrts(v7.d2, v7.d2, v2.d2); dump();
frsqrts(v7.d2, v7.d2, v4.d2); dump();
frsqrts(v7.d2, v7.d2, v8.d2); dump();
frsqrts(v7.d2, v7.d2, v16.d2); dump();
frsqrts(v7.d2, v7.d2, v31.d2); dump();
//DataProcSimd_Arithmetic7:0
fadd(h7, h7, h7); dump();
fadd(h0, h7, h7); dump();
fadd(h1, h7, h7); dump();
fadd(h2, h7, h7); dump();
fadd(h4, h7, h7); dump();
fadd(h8, h7, h7); dump();
fadd(h16, h7, h7); dump();
fadd(h31, h7, h7); dump();
fadd(h7, h7, h7); dump();
fadd(h7, h0, h7); dump();
fadd(h7, h1, h7); dump();
fadd(h7, h2, h7); dump();
fadd(h7, h4, h7); dump();
fadd(h7, h8, h7); dump();
fadd(h7, h16, h7); dump();
fadd(h7, h31, h7); dump();
fadd(h7, h7, h7); dump();
fadd(h7, h7, h0); dump();
fadd(h7, h7, h1); dump();
fadd(h7, h7, h2); dump();
fadd(h7, h7, h4); dump();
fadd(h7, h7, h8); dump();
fadd(h7, h7, h16); dump();
fadd(h7, h7, h31); dump();
fdiv(h7, h7, h7); dump();
fdiv(h0, h7, h7); dump();
fdiv(h1, h7, h7); dump();
fdiv(h2, h7, h7); dump();
fdiv(h4, h7, h7); dump();
fdiv(h8, h7, h7); dump();
fdiv(h16, h7, h7); dump();
fdiv(h31, h7, h7); dump();
fdiv(h7, h7, h7); dump();
fdiv(h7, h0, h7); dump();
fdiv(h7, h1, h7); dump();
fdiv(h7, h2, h7); dump();
fdiv(h7, h4, h7); dump();
fdiv(h7, h8, h7); dump();
fdiv(h7, h16, h7); dump();
fdiv(h7, h31, h7); dump();
fdiv(h7, h7, h7); dump();
fdiv(h7, h7, h0); dump();
fdiv(h7, h7, h1); dump();
fdiv(h7, h7, h2); dump();
fdiv(h7, h7, h4); dump();
fdiv(h7, h7, h8); dump();
fdiv(h7, h7, h16); dump();
fdiv(h7, h7, h31); dump();
//DataProcSimd_Arithmetic7:1
fadd(s7, s7, s7); dump();
fadd(s0, s7, s7); dump();
fadd(s1, s7, s7); dump();
fadd(s2, s7, s7); dump();
fadd(s4, s7, s7); dump();
fadd(s8, s7, s7); dump();
fadd(s16, s7, s7); dump();
fadd(s31, s7, s7); dump();
fadd(s7, s7, s7); dump();
fadd(s7, s0, s7); dump();
fadd(s7, s1, s7); dump();
fadd(s7, s2, s7); dump();
fadd(s7, s4, s7); dump();
fadd(s7, s8, s7); dump();
fadd(s7, s16, s7); dump();
fadd(s7, s31, s7); dump();
fadd(s7, s7, s7); dump();
fadd(s7, s7, s0); dump();
fadd(s7, s7, s1); dump();
fadd(s7, s7, s2); dump();
fadd(s7, s7, s4); dump();
fadd(s7, s7, s8); dump();
fadd(s7, s7, s16); dump();
fadd(s7, s7, s31); dump();
fdiv(s7, s7, s7); dump();
fdiv(s0, s7, s7); dump();
fdiv(s1, s7, s7); dump();
fdiv(s2, s7, s7); dump();
fdiv(s4, s7, s7); dump();
fdiv(s8, s7, s7); dump();
fdiv(s16, s7, s7); dump();
fdiv(s31, s7, s7); dump();
fdiv(s7, s7, s7); dump();
fdiv(s7, s0, s7); dump();
fdiv(s7, s1, s7); dump();
fdiv(s7, s2, s7); dump();
fdiv(s7, s4, s7); dump();
fdiv(s7, s8, s7); dump();
fdiv(s7, s16, s7); dump();
fdiv(s7, s31, s7); dump();
fdiv(s7, s7, s7); dump();
fdiv(s7, s7, s0); dump();
fdiv(s7, s7, s1); dump();
fdiv(s7, s7, s2); dump();
fdiv(s7, s7, s4); dump();
fdiv(s7, s7, s8); dump();
fdiv(s7, s7, s16); dump();
fdiv(s7, s7, s31); dump();
//DataProcSimd_Arithmetic7:2
fadd(d7, d7, d7); dump();
fadd(d0, d7, d7); dump();
fadd(d1, d7, d7); dump();
fadd(d2, d7, d7); dump();
fadd(d4, d7, d7); dump();
fadd(d8, d7, d7); dump();
fadd(d16, d7, d7); dump();
fadd(d31, d7, d7); dump();
fadd(d7, d7, d7); dump();
fadd(d7, d0, d7); dump();
fadd(d7, d1, d7); dump();
fadd(d7, d2, d7); dump();
fadd(d7, d4, d7); dump();
fadd(d7, d8, d7); dump();
fadd(d7, d16, d7); dump();
fadd(d7, d31, d7); dump();
fadd(d7, d7, d7); dump();
fadd(d7, d7, d0); dump();
fadd(d7, d7, d1); dump();
fadd(d7, d7, d2); dump();
fadd(d7, d7, d4); dump();
fadd(d7, d7, d8); dump();
fadd(d7, d7, d16); dump();
fadd(d7, d7, d31); dump();
fdiv(d7, d7, d7); dump();
fdiv(d0, d7, d7); dump();
fdiv(d1, d7, d7); dump();
fdiv(d2, d7, d7); dump();
fdiv(d4, d7, d7); dump();
fdiv(d8, d7, d7); dump();
fdiv(d16, d7, d7); dump();
fdiv(d31, d7, d7); dump();
fdiv(d7, d7, d7); dump();
fdiv(d7, d0, d7); dump();
fdiv(d7, d1, d7); dump();
fdiv(d7, d2, d7); dump();
fdiv(d7, d4, d7); dump();
fdiv(d7, d8, d7); dump();
fdiv(d7, d16, d7); dump();
fdiv(d7, d31, d7); dump();
fdiv(d7, d7, d7); dump();
fdiv(d7, d7, d0); dump();
fdiv(d7, d7, d1); dump();
fdiv(d7, d7, d2); dump();
fdiv(d7, d7, d4); dump();
fdiv(d7, d7, d8); dump();
fdiv(d7, d7, d16); dump();
fdiv(d7, d7, d31); dump();
//DataProcSimd_Arithmetic8:0
fdiv(v7.h8, v7.h8, v7.h8); dump();
fdiv(v0.h8, v7.h8, v7.h8); dump();
fdiv(v1.h8, v7.h8, v7.h8); dump();
fdiv(v2.h8, v7.h8, v7.h8); dump();
fdiv(v4.h8, v7.h8, v7.h8); dump();
fdiv(v8.h8, v7.h8, v7.h8); dump();
fdiv(v16.h8, v7.h8, v7.h8); dump();
fdiv(v31.h8, v7.h8, v7.h8); dump();
fdiv(v7.h8, v7.h8, v7.h8); dump();
fdiv(v7.h8, v0.h8, v7.h8); dump();
fdiv(v7.h8, v1.h8, v7.h8); dump();
fdiv(v7.h8, v2.h8, v7.h8); dump();
fdiv(v7.h8, v4.h8, v7.h8); dump();
fdiv(v7.h8, v8.h8, v7.h8); dump();
fdiv(v7.h8, v16.h8, v7.h8); dump();
fdiv(v7.h8, v31.h8, v7.h8); dump();
fdiv(v7.h8, v7.h8, v7.h8); dump();
fdiv(v7.h8, v7.h8, v0.h8); dump();
fdiv(v7.h8, v7.h8, v1.h8); dump();
fdiv(v7.h8, v7.h8, v2.h8); dump();
fdiv(v7.h8, v7.h8, v4.h8); dump();
fdiv(v7.h8, v7.h8, v8.h8); dump();
fdiv(v7.h8, v7.h8, v16.h8); dump();
fdiv(v7.h8, v7.h8, v31.h8); dump();
fmaxp(v7.h8, v7.h8, v7.h8); dump();
fmaxp(v0.h8, v7.h8, v7.h8); dump();
fmaxp(v1.h8, v7.h8, v7.h8); dump();
fmaxp(v2.h8, v7.h8, v7.h8); dump();
fmaxp(v4.h8, v7.h8, v7.h8); dump();
fmaxp(v8.h8, v7.h8, v7.h8); dump();
fmaxp(v16.h8, v7.h8, v7.h8); dump();
fmaxp(v31.h8, v7.h8, v7.h8); dump();
fmaxp(v7.h8, v7.h8, v7.h8); dump();
fmaxp(v7.h8, v0.h8, v7.h8); dump();
fmaxp(v7.h8, v1.h8, v7.h8); dump();
fmaxp(v7.h8, v2.h8, v7.h8); dump();
fmaxp(v7.h8, v4.h8, v7.h8); dump();
fmaxp(v7.h8, v8.h8, v7.h8); dump();
fmaxp(v7.h8, v16.h8, v7.h8); dump();
fmaxp(v7.h8, v31.h8, v7.h8); dump();
fmaxp(v7.h8, v7.h8, v7.h8); dump();
fmaxp(v7.h8, v7.h8, v0.h8); dump();
fmaxp(v7.h8, v7.h8, v1.h8); dump();
fmaxp(v7.h8, v7.h8, v2.h8); dump();
fmaxp(v7.h8, v7.h8, v4.h8); dump();
fmaxp(v7.h8, v7.h8, v8.h8); dump();
fmaxp(v7.h8, v7.h8, v16.h8); dump();
fmaxp(v7.h8, v7.h8, v31.h8); dump();
fmaxnm(v7.h8, v7.h8, v7.h8); dump();
fmaxnm(v0.h8, v7.h8, v7.h8); dump();
fmaxnm(v1.h8, v7.h8, v7.h8); dump();
fmaxnm(v2.h8, v7.h8, v7.h8); dump();
fmaxnm(v4.h8, v7.h8, v7.h8); dump();
fmaxnm(v8.h8, v7.h8, v7.h8); dump();
fmaxnm(v16.h8, v7.h8, v7.h8); dump();
fmaxnm(v31.h8, v7.h8, v7.h8); dump();
fmaxnm(v7.h8, v7.h8, v7.h8); dump();
fmaxnm(v7.h8, v0.h8, v7.h8); dump();
fmaxnm(v7.h8, v1.h8, v7.h8); dump();
fmaxnm(v7.h8, v2.h8, v7.h8); dump();
fmaxnm(v7.h8, v4.h8, v7.h8); dump();
fmaxnm(v7.h8, v8.h8, v7.h8); dump();
fmaxnm(v7.h8, v16.h8, v7.h8); dump();
fmaxnm(v7.h8, v31.h8, v7.h8); dump();
fmaxnm(v7.h8, v7.h8, v7.h8); dump();
fmaxnm(v7.h8, v7.h8, v0.h8); dump();
fmaxnm(v7.h8, v7.h8, v1.h8); dump();
fmaxnm(v7.h8, v7.h8, v2.h8); dump();
fmaxnm(v7.h8, v7.h8, v4.h8); dump();
fmaxnm(v7.h8, v7.h8, v8.h8); dump();
fmaxnm(v7.h8, v7.h8, v16.h8); dump();
fmaxnm(v7.h8, v7.h8, v31.h8); dump();
fmin(v7.h8, v7.h8, v7.h8); dump();
fmin(v0.h8, v7.h8, v7.h8); dump();
fmin(v1.h8, v7.h8, v7.h8); dump();
fmin(v2.h8, v7.h8, v7.h8); dump();
fmin(v4.h8, v7.h8, v7.h8); dump();
fmin(v8.h8, v7.h8, v7.h8); dump();
fmin(v16.h8, v7.h8, v7.h8); dump();
fmin(v31.h8, v7.h8, v7.h8); dump();
fmin(v7.h8, v7.h8, v7.h8); dump();
fmin(v7.h8, v0.h8, v7.h8); dump();
fmin(v7.h8, v1.h8, v7.h8); dump();
fmin(v7.h8, v2.h8, v7.h8); dump();
fmin(v7.h8, v4.h8, v7.h8); dump();
fmin(v7.h8, v8.h8, v7.h8); dump();
fmin(v7.h8, v16.h8, v7.h8); dump();
fmin(v7.h8, v31.h8, v7.h8); dump();
fmin(v7.h8, v7.h8, v7.h8); dump();
fmin(v7.h8, v7.h8, v0.h8); dump();
fmin(v7.h8, v7.h8, v1.h8); dump();
fmin(v7.h8, v7.h8, v2.h8); dump();
fmin(v7.h8, v7.h8, v4.h8); dump();
fmin(v7.h8, v7.h8, v8.h8); dump();
fmin(v7.h8, v7.h8, v16.h8); dump();
fmin(v7.h8, v7.h8, v31.h8); dump();
fminnm(v7.h8, v7.h8, v7.h8); dump();
fminnm(v0.h8, v7.h8, v7.h8); dump();
fminnm(v1.h8, v7.h8, v7.h8); dump();
fminnm(v2.h8, v7.h8, v7.h8); dump();
fminnm(v4.h8, v7.h8, v7.h8); dump();
fminnm(v8.h8, v7.h8, v7.h8); dump();
fminnm(v16.h8, v7.h8, v7.h8); dump();
fminnm(v31.h8, v7.h8, v7.h8); dump();
fminnm(v7.h8, v7.h8, v7.h8); dump();
fminnm(v7.h8, v0.h8, v7.h8); dump();
fminnm(v7.h8, v1.h8, v7.h8); dump();
fminnm(v7.h8, v2.h8, v7.h8); dump();
fminnm(v7.h8, v4.h8, v7.h8); dump();
fminnm(v7.h8, v8.h8, v7.h8); dump();
fminnm(v7.h8, v16.h8, v7.h8); dump();
fminnm(v7.h8, v31.h8, v7.h8); dump();
fminnm(v7.h8, v7.h8, v7.h8); dump();
fminnm(v7.h8, v7.h8, v0.h8); dump();
fminnm(v7.h8, v7.h8, v1.h8); dump();
fminnm(v7.h8, v7.h8, v2.h8); dump();
fminnm(v7.h8, v7.h8, v4.h8); dump();
fminnm(v7.h8, v7.h8, v8.h8); dump();
fminnm(v7.h8, v7.h8, v16.h8); dump();
fminnm(v7.h8, v7.h8, v31.h8); dump();
fmla(v7.h8, v7.h8, v7.h8); dump();
fmla(v0.h8, v7.h8, v7.h8); dump();
fmla(v1.h8, v7.h8, v7.h8); dump();
fmla(v2.h8, v7.h8, v7.h8); dump();
fmla(v4.h8, v7.h8, v7.h8); dump();
fmla(v8.h8, v7.h8, v7.h8); dump();
fmla(v16.h8, v7.h8, v7.h8); dump();
fmla(v31.h8, v7.h8, v7.h8); dump();
fmla(v7.h8, v7.h8, v7.h8); dump();
fmla(v7.h8, v0.h8, v7.h8); dump();
fmla(v7.h8, v1.h8, v7.h8); dump();
fmla(v7.h8, v2.h8, v7.h8); dump();
fmla(v7.h8, v4.h8, v7.h8); dump();
fmla(v7.h8, v8.h8, v7.h8); dump();
fmla(v7.h8, v16.h8, v7.h8); dump();
fmla(v7.h8, v31.h8, v7.h8); dump();
fmla(v7.h8, v7.h8, v7.h8); dump();
fmla(v7.h8, v7.h8, v0.h8); dump();
fmla(v7.h8, v7.h8, v1.h8); dump();
fmla(v7.h8, v7.h8, v2.h8); dump();
fmla(v7.h8, v7.h8, v4.h8); dump();
fmla(v7.h8, v7.h8, v8.h8); dump();
fmla(v7.h8, v7.h8, v16.h8); dump();
fmla(v7.h8, v7.h8, v31.h8); dump();
fmls(v7.h8, v7.h8, v7.h8); dump();
fmls(v0.h8, v7.h8, v7.h8); dump();
fmls(v1.h8, v7.h8, v7.h8); dump();
fmls(v2.h8, v7.h8, v7.h8); dump();
fmls(v4.h8, v7.h8, v7.h8); dump();
fmls(v8.h8, v7.h8, v7.h8); dump();
fmls(v16.h8, v7.h8, v7.h8); dump();
fmls(v31.h8, v7.h8, v7.h8); dump();
fmls(v7.h8, v7.h8, v7.h8); dump();
fmls(v7.h8, v0.h8, v7.h8); dump();
fmls(v7.h8, v1.h8, v7.h8); dump();
fmls(v7.h8, v2.h8, v7.h8); dump();
fmls(v7.h8, v4.h8, v7.h8); dump();
fmls(v7.h8, v8.h8, v7.h8); dump();
fmls(v7.h8, v16.h8, v7.h8); dump();
fmls(v7.h8, v31.h8, v7.h8); dump();
fmls(v7.h8, v7.h8, v7.h8); dump();
fmls(v7.h8, v7.h8, v0.h8); dump();
fmls(v7.h8, v7.h8, v1.h8); dump();
fmls(v7.h8, v7.h8, v2.h8); dump();
fmls(v7.h8, v7.h8, v4.h8); dump();
fmls(v7.h8, v7.h8, v8.h8); dump();
fmls(v7.h8, v7.h8, v16.h8); dump();
fmls(v7.h8, v7.h8, v31.h8); dump();
fmul(v7.h8, v7.h8, v7.h8); dump();
fmul(v0.h8, v7.h8, v7.h8); dump();
fmul(v1.h8, v7.h8, v7.h8); dump();
fmul(v2.h8, v7.h8, v7.h8); dump();
fmul(v4.h8, v7.h8, v7.h8); dump();
fmul(v8.h8, v7.h8, v7.h8); dump();
fmul(v16.h8, v7.h8, v7.h8); dump();
fmul(v31.h8, v7.h8, v7.h8); dump();
fmul(v7.h8, v7.h8, v7.h8); dump();
fmul(v7.h8, v0.h8, v7.h8); dump();
fmul(v7.h8, v1.h8, v7.h8); dump();
fmul(v7.h8, v2.h8, v7.h8); dump();
fmul(v7.h8, v4.h8, v7.h8); dump();
fmul(v7.h8, v8.h8, v7.h8); dump();
fmul(v7.h8, v16.h8, v7.h8); dump();
fmul(v7.h8, v31.h8, v7.h8); dump();
fmul(v7.h8, v7.h8, v7.h8); dump();
fmul(v7.h8, v7.h8, v0.h8); dump();
fmul(v7.h8, v7.h8, v1.h8); dump();
fmul(v7.h8, v7.h8, v2.h8); dump();
fmul(v7.h8, v7.h8, v4.h8); dump();
fmul(v7.h8, v7.h8, v8.h8); dump();
fmul(v7.h8, v7.h8, v16.h8); dump();
fmul(v7.h8, v7.h8, v31.h8); dump();
fsub(v7.h8, v7.h8, v7.h8); dump();
fsub(v0.h8, v7.h8, v7.h8); dump();
fsub(v1.h8, v7.h8, v7.h8); dump();
fsub(v2.h8, v7.h8, v7.h8); dump();
fsub(v4.h8, v7.h8, v7.h8); dump();
fsub(v8.h8, v7.h8, v7.h8); dump();
fsub(v16.h8, v7.h8, v7.h8); dump();
fsub(v31.h8, v7.h8, v7.h8); dump();
fsub(v7.h8, v7.h8, v7.h8); dump();
fsub(v7.h8, v0.h8, v7.h8); dump();
fsub(v7.h8, v1.h8, v7.h8); dump();
fsub(v7.h8, v2.h8, v7.h8); dump();
fsub(v7.h8, v4.h8, v7.h8); dump();
fsub(v7.h8, v8.h8, v7.h8); dump();
fsub(v7.h8, v16.h8, v7.h8); dump();
fsub(v7.h8, v31.h8, v7.h8); dump();
fsub(v7.h8, v7.h8, v7.h8); dump();
fsub(v7.h8, v7.h8, v0.h8); dump();
fsub(v7.h8, v7.h8, v1.h8); dump();
fsub(v7.h8, v7.h8, v2.h8); dump();
fsub(v7.h8, v7.h8, v4.h8); dump();
fsub(v7.h8, v7.h8, v8.h8); dump();
fsub(v7.h8, v7.h8, v16.h8); dump();
fsub(v7.h8, v7.h8, v31.h8); dump();
//DataProcSimd_Arithmetic8:1
fdiv(v7.h4, v7.h4, v7.h4); dump();
fdiv(v0.h4, v7.h4, v7.h4); dump();
fdiv(v1.h4, v7.h4, v7.h4); dump();
fdiv(v2.h4, v7.h4, v7.h4); dump();
fdiv(v4.h4, v7.h4, v7.h4); dump();
fdiv(v8.h4, v7.h4, v7.h4); dump();
fdiv(v16.h4, v7.h4, v7.h4); dump();
fdiv(v31.h4, v7.h4, v7.h4); dump();
fdiv(v7.h4, v7.h4, v7.h4); dump();
fdiv(v7.h4, v0.h4, v7.h4); dump();
fdiv(v7.h4, v1.h4, v7.h4); dump();
fdiv(v7.h4, v2.h4, v7.h4); dump();
fdiv(v7.h4, v4.h4, v7.h4); dump();
fdiv(v7.h4, v8.h4, v7.h4); dump();
fdiv(v7.h4, v16.h4, v7.h4); dump();
fdiv(v7.h4, v31.h4, v7.h4); dump();
fdiv(v7.h4, v7.h4, v7.h4); dump();
fdiv(v7.h4, v7.h4, v0.h4); dump();
fdiv(v7.h4, v7.h4, v1.h4); dump();
fdiv(v7.h4, v7.h4, v2.h4); dump();
fdiv(v7.h4, v7.h4, v4.h4); dump();
fdiv(v7.h4, v7.h4, v8.h4); dump();
fdiv(v7.h4, v7.h4, v16.h4); dump();
fdiv(v7.h4, v7.h4, v31.h4); dump();
fmaxp(v7.h4, v7.h4, v7.h4); dump();
fmaxp(v0.h4, v7.h4, v7.h4); dump();
fmaxp(v1.h4, v7.h4, v7.h4); dump();
fmaxp(v2.h4, v7.h4, v7.h4); dump();
fmaxp(v4.h4, v7.h4, v7.h4); dump();
fmaxp(v8.h4, v7.h4, v7.h4); dump();
fmaxp(v16.h4, v7.h4, v7.h4); dump();
fmaxp(v31.h4, v7.h4, v7.h4); dump();
fmaxp(v7.h4, v7.h4, v7.h4); dump();
fmaxp(v7.h4, v0.h4, v7.h4); dump();
fmaxp(v7.h4, v1.h4, v7.h4); dump();
fmaxp(v7.h4, v2.h4, v7.h4); dump();
fmaxp(v7.h4, v4.h4, v7.h4); dump();
fmaxp(v7.h4, v8.h4, v7.h4); dump();
fmaxp(v7.h4, v16.h4, v7.h4); dump();
fmaxp(v7.h4, v31.h4, v7.h4); dump();
fmaxp(v7.h4, v7.h4, v7.h4); dump();
fmaxp(v7.h4, v7.h4, v0.h4); dump();
fmaxp(v7.h4, v7.h4, v1.h4); dump();
fmaxp(v7.h4, v7.h4, v2.h4); dump();
fmaxp(v7.h4, v7.h4, v4.h4); dump();
fmaxp(v7.h4, v7.h4, v8.h4); dump();
fmaxp(v7.h4, v7.h4, v16.h4); dump();
fmaxp(v7.h4, v7.h4, v31.h4); dump();
fmaxnm(v7.h4, v7.h4, v7.h4); dump();
fmaxnm(v0.h4, v7.h4, v7.h4); dump();
fmaxnm(v1.h4, v7.h4, v7.h4); dump();
fmaxnm(v2.h4, v7.h4, v7.h4); dump();
fmaxnm(v4.h4, v7.h4, v7.h4); dump();
fmaxnm(v8.h4, v7.h4, v7.h4); dump();
fmaxnm(v16.h4, v7.h4, v7.h4); dump();
fmaxnm(v31.h4, v7.h4, v7.h4); dump();
fmaxnm(v7.h4, v7.h4, v7.h4); dump();
fmaxnm(v7.h4, v0.h4, v7.h4); dump();
fmaxnm(v7.h4, v1.h4, v7.h4); dump();
fmaxnm(v7.h4, v2.h4, v7.h4); dump();
fmaxnm(v7.h4, v4.h4, v7.h4); dump();
fmaxnm(v7.h4, v8.h4, v7.h4); dump();
fmaxnm(v7.h4, v16.h4, v7.h4); dump();
fmaxnm(v7.h4, v31.h4, v7.h4); dump();
fmaxnm(v7.h4, v7.h4, v7.h4); dump();
fmaxnm(v7.h4, v7.h4, v0.h4); dump();
fmaxnm(v7.h4, v7.h4, v1.h4); dump();
fmaxnm(v7.h4, v7.h4, v2.h4); dump();
fmaxnm(v7.h4, v7.h4, v4.h4); dump();
fmaxnm(v7.h4, v7.h4, v8.h4); dump();
fmaxnm(v7.h4, v7.h4, v16.h4); dump();
fmaxnm(v7.h4, v7.h4, v31.h4); dump();
fmin(v7.h4, v7.h4, v7.h4); dump();
fmin(v0.h4, v7.h4, v7.h4); dump();
fmin(v1.h4, v7.h4, v7.h4); dump();
fmin(v2.h4, v7.h4, v7.h4); dump();
fmin(v4.h4, v7.h4, v7.h4); dump();
fmin(v8.h4, v7.h4, v7.h4); dump();
fmin(v16.h4, v7.h4, v7.h4); dump();
fmin(v31.h4, v7.h4, v7.h4); dump();
fmin(v7.h4, v7.h4, v7.h4); dump();
fmin(v7.h4, v0.h4, v7.h4); dump();
fmin(v7.h4, v1.h4, v7.h4); dump();
fmin(v7.h4, v2.h4, v7.h4); dump();
fmin(v7.h4, v4.h4, v7.h4); dump();
fmin(v7.h4, v8.h4, v7.h4); dump();
fmin(v7.h4, v16.h4, v7.h4); dump();
fmin(v7.h4, v31.h4, v7.h4); dump();
fmin(v7.h4, v7.h4, v7.h4); dump();
fmin(v7.h4, v7.h4, v0.h4); dump();
fmin(v7.h4, v7.h4, v1.h4); dump();
fmin(v7.h4, v7.h4, v2.h4); dump();
fmin(v7.h4, v7.h4, v4.h4); dump();
fmin(v7.h4, v7.h4, v8.h4); dump();
fmin(v7.h4, v7.h4, v16.h4); dump();
fmin(v7.h4, v7.h4, v31.h4); dump();
fminnm(v7.h4, v7.h4, v7.h4); dump();
fminnm(v0.h4, v7.h4, v7.h4); dump();
fminnm(v1.h4, v7.h4, v7.h4); dump();
fminnm(v2.h4, v7.h4, v7.h4); dump();
fminnm(v4.h4, v7.h4, v7.h4); dump();
fminnm(v8.h4, v7.h4, v7.h4); dump();
fminnm(v16.h4, v7.h4, v7.h4); dump();
fminnm(v31.h4, v7.h4, v7.h4); dump();
fminnm(v7.h4, v7.h4, v7.h4); dump();
fminnm(v7.h4, v0.h4, v7.h4); dump();
fminnm(v7.h4, v1.h4, v7.h4); dump();
fminnm(v7.h4, v2.h4, v7.h4); dump();
fminnm(v7.h4, v4.h4, v7.h4); dump();
fminnm(v7.h4, v8.h4, v7.h4); dump();
fminnm(v7.h4, v16.h4, v7.h4); dump();
fminnm(v7.h4, v31.h4, v7.h4); dump();
fminnm(v7.h4, v7.h4, v7.h4); dump();
fminnm(v7.h4, v7.h4, v0.h4); dump();
fminnm(v7.h4, v7.h4, v1.h4); dump();
fminnm(v7.h4, v7.h4, v2.h4); dump();
fminnm(v7.h4, v7.h4, v4.h4); dump();
fminnm(v7.h4, v7.h4, v8.h4); dump();
fminnm(v7.h4, v7.h4, v16.h4); dump();
fminnm(v7.h4, v7.h4, v31.h4); dump();
fmla(v7.h4, v7.h4, v7.h4); dump();
fmla(v0.h4, v7.h4, v7.h4); dump();
fmla(v1.h4, v7.h4, v7.h4); dump();
fmla(v2.h4, v7.h4, v7.h4); dump();
fmla(v4.h4, v7.h4, v7.h4); dump();
fmla(v8.h4, v7.h4, v7.h4); dump();
fmla(v16.h4, v7.h4, v7.h4); dump();
fmla(v31.h4, v7.h4, v7.h4); dump();
fmla(v7.h4, v7.h4, v7.h4); dump();
fmla(v7.h4, v0.h4, v7.h4); dump();
fmla(v7.h4, v1.h4, v7.h4); dump();
fmla(v7.h4, v2.h4, v7.h4); dump();
fmla(v7.h4, v4.h4, v7.h4); dump();
fmla(v7.h4, v8.h4, v7.h4); dump();
fmla(v7.h4, v16.h4, v7.h4); dump();
fmla(v7.h4, v31.h4, v7.h4); dump();
fmla(v7.h4, v7.h4, v7.h4); dump();
fmla(v7.h4, v7.h4, v0.h4); dump();
fmla(v7.h4, v7.h4, v1.h4); dump();
fmla(v7.h4, v7.h4, v2.h4); dump();
fmla(v7.h4, v7.h4, v4.h4); dump();
fmla(v7.h4, v7.h4, v8.h4); dump();
fmla(v7.h4, v7.h4, v16.h4); dump();
fmla(v7.h4, v7.h4, v31.h4); dump();
fmls(v7.h4, v7.h4, v7.h4); dump();
fmls(v0.h4, v7.h4, v7.h4); dump();
fmls(v1.h4, v7.h4, v7.h4); dump();
fmls(v2.h4, v7.h4, v7.h4); dump();
fmls(v4.h4, v7.h4, v7.h4); dump();
fmls(v8.h4, v7.h4, v7.h4); dump();
fmls(v16.h4, v7.h4, v7.h4); dump();
fmls(v31.h4, v7.h4, v7.h4); dump();
fmls(v7.h4, v7.h4, v7.h4); dump();
fmls(v7.h4, v0.h4, v7.h4); dump();
fmls(v7.h4, v1.h4, v7.h4); dump();
fmls(v7.h4, v2.h4, v7.h4); dump();
fmls(v7.h4, v4.h4, v7.h4); dump();
fmls(v7.h4, v8.h4, v7.h4); dump();
fmls(v7.h4, v16.h4, v7.h4); dump();
fmls(v7.h4, v31.h4, v7.h4); dump();
fmls(v7.h4, v7.h4, v7.h4); dump();
fmls(v7.h4, v7.h4, v0.h4); dump();
fmls(v7.h4, v7.h4, v1.h4); dump();
fmls(v7.h4, v7.h4, v2.h4); dump();
fmls(v7.h4, v7.h4, v4.h4); dump();
fmls(v7.h4, v7.h4, v8.h4); dump();
fmls(v7.h4, v7.h4, v16.h4); dump();
fmls(v7.h4, v7.h4, v31.h4); dump();
fmul(v7.h4, v7.h4, v7.h4); dump();
fmul(v0.h4, v7.h4, v7.h4); dump();
fmul(v1.h4, v7.h4, v7.h4); dump();
fmul(v2.h4, v7.h4, v7.h4); dump();
fmul(v4.h4, v7.h4, v7.h4); dump();
fmul(v8.h4, v7.h4, v7.h4); dump();
fmul(v16.h4, v7.h4, v7.h4); dump();
fmul(v31.h4, v7.h4, v7.h4); dump();
fmul(v7.h4, v7.h4, v7.h4); dump();
fmul(v7.h4, v0.h4, v7.h4); dump();
fmul(v7.h4, v1.h4, v7.h4); dump();
fmul(v7.h4, v2.h4, v7.h4); dump();
fmul(v7.h4, v4.h4, v7.h4); dump();
fmul(v7.h4, v8.h4, v7.h4); dump();
fmul(v7.h4, v16.h4, v7.h4); dump();
fmul(v7.h4, v31.h4, v7.h4); dump();
fmul(v7.h4, v7.h4, v7.h4); dump();
fmul(v7.h4, v7.h4, v0.h4); dump();
fmul(v7.h4, v7.h4, v1.h4); dump();
fmul(v7.h4, v7.h4, v2.h4); dump();
fmul(v7.h4, v7.h4, v4.h4); dump();
fmul(v7.h4, v7.h4, v8.h4); dump();
fmul(v7.h4, v7.h4, v16.h4); dump();
fmul(v7.h4, v7.h4, v31.h4); dump();
fsub(v7.h4, v7.h4, v7.h4); dump();
fsub(v0.h4, v7.h4, v7.h4); dump();
fsub(v1.h4, v7.h4, v7.h4); dump();
fsub(v2.h4, v7.h4, v7.h4); dump();
fsub(v4.h4, v7.h4, v7.h4); dump();
fsub(v8.h4, v7.h4, v7.h4); dump();
fsub(v16.h4, v7.h4, v7.h4); dump();
fsub(v31.h4, v7.h4, v7.h4); dump();
fsub(v7.h4, v7.h4, v7.h4); dump();
fsub(v7.h4, v0.h4, v7.h4); dump();
fsub(v7.h4, v1.h4, v7.h4); dump();
fsub(v7.h4, v2.h4, v7.h4); dump();
fsub(v7.h4, v4.h4, v7.h4); dump();
fsub(v7.h4, v8.h4, v7.h4); dump();
fsub(v7.h4, v16.h4, v7.h4); dump();
fsub(v7.h4, v31.h4, v7.h4); dump();
fsub(v7.h4, v7.h4, v7.h4); dump();
fsub(v7.h4, v7.h4, v0.h4); dump();
fsub(v7.h4, v7.h4, v1.h4); dump();
fsub(v7.h4, v7.h4, v2.h4); dump();
fsub(v7.h4, v7.h4, v4.h4); dump();
fsub(v7.h4, v7.h4, v8.h4); dump();
fsub(v7.h4, v7.h4, v16.h4); dump();
fsub(v7.h4, v7.h4, v31.h4); dump();
//DataProcSimd_Arithmetic8:2
fdiv(v7.s2, v7.s2, v7.s2); dump();
fdiv(v0.s2, v7.s2, v7.s2); dump();
fdiv(v1.s2, v7.s2, v7.s2); dump();
fdiv(v2.s2, v7.s2, v7.s2); dump();
fdiv(v4.s2, v7.s2, v7.s2); dump();
fdiv(v8.s2, v7.s2, v7.s2); dump();
fdiv(v16.s2, v7.s2, v7.s2); dump();
fdiv(v31.s2, v7.s2, v7.s2); dump();
fdiv(v7.s2, v7.s2, v7.s2); dump();
fdiv(v7.s2, v0.s2, v7.s2); dump();
fdiv(v7.s2, v1.s2, v7.s2); dump();
fdiv(v7.s2, v2.s2, v7.s2); dump();
fdiv(v7.s2, v4.s2, v7.s2); dump();
fdiv(v7.s2, v8.s2, v7.s2); dump();
fdiv(v7.s2, v16.s2, v7.s2); dump();
fdiv(v7.s2, v31.s2, v7.s2); dump();
fdiv(v7.s2, v7.s2, v7.s2); dump();
fdiv(v7.s2, v7.s2, v0.s2); dump();
fdiv(v7.s2, v7.s2, v1.s2); dump();
fdiv(v7.s2, v7.s2, v2.s2); dump();
fdiv(v7.s2, v7.s2, v4.s2); dump();
fdiv(v7.s2, v7.s2, v8.s2); dump();
fdiv(v7.s2, v7.s2, v16.s2); dump();
fdiv(v7.s2, v7.s2, v31.s2); dump();
fmaxp(v7.s2, v7.s2, v7.s2); dump();
fmaxp(v0.s2, v7.s2, v7.s2); dump();
fmaxp(v1.s2, v7.s2, v7.s2); dump();
fmaxp(v2.s2, v7.s2, v7.s2); dump();
fmaxp(v4.s2, v7.s2, v7.s2); dump();
fmaxp(v8.s2, v7.s2, v7.s2); dump();
fmaxp(v16.s2, v7.s2, v7.s2); dump();
fmaxp(v31.s2, v7.s2, v7.s2); dump();
fmaxp(v7.s2, v7.s2, v7.s2); dump();
fmaxp(v7.s2, v0.s2, v7.s2); dump();
fmaxp(v7.s2, v1.s2, v7.s2); dump();
fmaxp(v7.s2, v2.s2, v7.s2); dump();
fmaxp(v7.s2, v4.s2, v7.s2); dump();
fmaxp(v7.s2, v8.s2, v7.s2); dump();
fmaxp(v7.s2, v16.s2, v7.s2); dump();
fmaxp(v7.s2, v31.s2, v7.s2); dump();
fmaxp(v7.s2, v7.s2, v7.s2); dump();
fmaxp(v7.s2, v7.s2, v0.s2); dump();
fmaxp(v7.s2, v7.s2, v1.s2); dump();
fmaxp(v7.s2, v7.s2, v2.s2); dump();
fmaxp(v7.s2, v7.s2, v4.s2); dump();
fmaxp(v7.s2, v7.s2, v8.s2); dump();
fmaxp(v7.s2, v7.s2, v16.s2); dump();
fmaxp(v7.s2, v7.s2, v31.s2); dump();
fmaxnm(v7.s2, v7.s2, v7.s2); dump();
fmaxnm(v0.s2, v7.s2, v7.s2); dump();
fmaxnm(v1.s2, v7.s2, v7.s2); dump();
fmaxnm(v2.s2, v7.s2, v7.s2); dump();
fmaxnm(v4.s2, v7.s2, v7.s2); dump();
fmaxnm(v8.s2, v7.s2, v7.s2); dump();
fmaxnm(v16.s2, v7.s2, v7.s2); dump();
fmaxnm(v31.s2, v7.s2, v7.s2); dump();
fmaxnm(v7.s2, v7.s2, v7.s2); dump();
fmaxnm(v7.s2, v0.s2, v7.s2); dump();
fmaxnm(v7.s2, v1.s2, v7.s2); dump();
fmaxnm(v7.s2, v2.s2, v7.s2); dump();
fmaxnm(v7.s2, v4.s2, v7.s2); dump();
fmaxnm(v7.s2, v8.s2, v7.s2); dump();
fmaxnm(v7.s2, v16.s2, v7.s2); dump();
fmaxnm(v7.s2, v31.s2, v7.s2); dump();
fmaxnm(v7.s2, v7.s2, v7.s2); dump();
fmaxnm(v7.s2, v7.s2, v0.s2); dump();
fmaxnm(v7.s2, v7.s2, v1.s2); dump();
fmaxnm(v7.s2, v7.s2, v2.s2); dump();
fmaxnm(v7.s2, v7.s2, v4.s2); dump();
fmaxnm(v7.s2, v7.s2, v8.s2); dump();
fmaxnm(v7.s2, v7.s2, v16.s2); dump();
fmaxnm(v7.s2, v7.s2, v31.s2); dump();
fmin(v7.s2, v7.s2, v7.s2); dump();
fmin(v0.s2, v7.s2, v7.s2); dump();
fmin(v1.s2, v7.s2, v7.s2); dump();
fmin(v2.s2, v7.s2, v7.s2); dump();
fmin(v4.s2, v7.s2, v7.s2); dump();
fmin(v8.s2, v7.s2, v7.s2); dump();
fmin(v16.s2, v7.s2, v7.s2); dump();
fmin(v31.s2, v7.s2, v7.s2); dump();
fmin(v7.s2, v7.s2, v7.s2); dump();
fmin(v7.s2, v0.s2, v7.s2); dump();
fmin(v7.s2, v1.s2, v7.s2); dump();
fmin(v7.s2, v2.s2, v7.s2); dump();
fmin(v7.s2, v4.s2, v7.s2); dump();
fmin(v7.s2, v8.s2, v7.s2); dump();
fmin(v7.s2, v16.s2, v7.s2); dump();
fmin(v7.s2, v31.s2, v7.s2); dump();
fmin(v7.s2, v7.s2, v7.s2); dump();
fmin(v7.s2, v7.s2, v0.s2); dump();
fmin(v7.s2, v7.s2, v1.s2); dump();
fmin(v7.s2, v7.s2, v2.s2); dump();
fmin(v7.s2, v7.s2, v4.s2); dump();
fmin(v7.s2, v7.s2, v8.s2); dump();
fmin(v7.s2, v7.s2, v16.s2); dump();
fmin(v7.s2, v7.s2, v31.s2); dump();
fminnm(v7.s2, v7.s2, v7.s2); dump();
fminnm(v0.s2, v7.s2, v7.s2); dump();
fminnm(v1.s2, v7.s2, v7.s2); dump();
fminnm(v2.s2, v7.s2, v7.s2); dump();
fminnm(v4.s2, v7.s2, v7.s2); dump();
fminnm(v8.s2, v7.s2, v7.s2); dump();
fminnm(v16.s2, v7.s2, v7.s2); dump();
fminnm(v31.s2, v7.s2, v7.s2); dump();
fminnm(v7.s2, v7.s2, v7.s2); dump();
fminnm(v7.s2, v0.s2, v7.s2); dump();
fminnm(v7.s2, v1.s2, v7.s2); dump();
fminnm(v7.s2, v2.s2, v7.s2); dump();
fminnm(v7.s2, v4.s2, v7.s2); dump();
fminnm(v7.s2, v8.s2, v7.s2); dump();
fminnm(v7.s2, v16.s2, v7.s2); dump();
fminnm(v7.s2, v31.s2, v7.s2); dump();
fminnm(v7.s2, v7.s2, v7.s2); dump();
fminnm(v7.s2, v7.s2, v0.s2); dump();
fminnm(v7.s2, v7.s2, v1.s2); dump();
fminnm(v7.s2, v7.s2, v2.s2); dump();
fminnm(v7.s2, v7.s2, v4.s2); dump();
fminnm(v7.s2, v7.s2, v8.s2); dump();
fminnm(v7.s2, v7.s2, v16.s2); dump();
fminnm(v7.s2, v7.s2, v31.s2); dump();
fmla(v7.s2, v7.s2, v7.s2); dump();
fmla(v0.s2, v7.s2, v7.s2); dump();
fmla(v1.s2, v7.s2, v7.s2); dump();
fmla(v2.s2, v7.s2, v7.s2); dump();
fmla(v4.s2, v7.s2, v7.s2); dump();
fmla(v8.s2, v7.s2, v7.s2); dump();
fmla(v16.s2, v7.s2, v7.s2); dump();
fmla(v31.s2, v7.s2, v7.s2); dump();
fmla(v7.s2, v7.s2, v7.s2); dump();
fmla(v7.s2, v0.s2, v7.s2); dump();
fmla(v7.s2, v1.s2, v7.s2); dump();
fmla(v7.s2, v2.s2, v7.s2); dump();
fmla(v7.s2, v4.s2, v7.s2); dump();
fmla(v7.s2, v8.s2, v7.s2); dump();
fmla(v7.s2, v16.s2, v7.s2); dump();
fmla(v7.s2, v31.s2, v7.s2); dump();
fmla(v7.s2, v7.s2, v7.s2); dump();
fmla(v7.s2, v7.s2, v0.s2); dump();
fmla(v7.s2, v7.s2, v1.s2); dump();
fmla(v7.s2, v7.s2, v2.s2); dump();
fmla(v7.s2, v7.s2, v4.s2); dump();
fmla(v7.s2, v7.s2, v8.s2); dump();
fmla(v7.s2, v7.s2, v16.s2); dump();
fmla(v7.s2, v7.s2, v31.s2); dump();
fmls(v7.s2, v7.s2, v7.s2); dump();
fmls(v0.s2, v7.s2, v7.s2); dump();
fmls(v1.s2, v7.s2, v7.s2); dump();
fmls(v2.s2, v7.s2, v7.s2); dump();
fmls(v4.s2, v7.s2, v7.s2); dump();
fmls(v8.s2, v7.s2, v7.s2); dump();
fmls(v16.s2, v7.s2, v7.s2); dump();
fmls(v31.s2, v7.s2, v7.s2); dump();
fmls(v7.s2, v7.s2, v7.s2); dump();
fmls(v7.s2, v0.s2, v7.s2); dump();
fmls(v7.s2, v1.s2, v7.s2); dump();
fmls(v7.s2, v2.s2, v7.s2); dump();
fmls(v7.s2, v4.s2, v7.s2); dump();
fmls(v7.s2, v8.s2, v7.s2); dump();
fmls(v7.s2, v16.s2, v7.s2); dump();
fmls(v7.s2, v31.s2, v7.s2); dump();
fmls(v7.s2, v7.s2, v7.s2); dump();
fmls(v7.s2, v7.s2, v0.s2); dump();
fmls(v7.s2, v7.s2, v1.s2); dump();
fmls(v7.s2, v7.s2, v2.s2); dump();
fmls(v7.s2, v7.s2, v4.s2); dump();
fmls(v7.s2, v7.s2, v8.s2); dump();
fmls(v7.s2, v7.s2, v16.s2); dump();
fmls(v7.s2, v7.s2, v31.s2); dump();
fmul(v7.s2, v7.s2, v7.s2); dump();
fmul(v0.s2, v7.s2, v7.s2); dump();
fmul(v1.s2, v7.s2, v7.s2); dump();
fmul(v2.s2, v7.s2, v7.s2); dump();
fmul(v4.s2, v7.s2, v7.s2); dump();
fmul(v8.s2, v7.s2, v7.s2); dump();
fmul(v16.s2, v7.s2, v7.s2); dump();
fmul(v31.s2, v7.s2, v7.s2); dump();
fmul(v7.s2, v7.s2, v7.s2); dump();
fmul(v7.s2, v0.s2, v7.s2); dump();
fmul(v7.s2, v1.s2, v7.s2); dump();
fmul(v7.s2, v2.s2, v7.s2); dump();
fmul(v7.s2, v4.s2, v7.s2); dump();
fmul(v7.s2, v8.s2, v7.s2); dump();
fmul(v7.s2, v16.s2, v7.s2); dump();
fmul(v7.s2, v31.s2, v7.s2); dump();
fmul(v7.s2, v7.s2, v7.s2); dump();
fmul(v7.s2, v7.s2, v0.s2); dump();
fmul(v7.s2, v7.s2, v1.s2); dump();
fmul(v7.s2, v7.s2, v2.s2); dump();
fmul(v7.s2, v7.s2, v4.s2); dump();
fmul(v7.s2, v7.s2, v8.s2); dump();
fmul(v7.s2, v7.s2, v16.s2); dump();
fmul(v7.s2, v7.s2, v31.s2); dump();
fsub(v7.s2, v7.s2, v7.s2); dump();
fsub(v0.s2, v7.s2, v7.s2); dump();
fsub(v1.s2, v7.s2, v7.s2); dump();
fsub(v2.s2, v7.s2, v7.s2); dump();
fsub(v4.s2, v7.s2, v7.s2); dump();
fsub(v8.s2, v7.s2, v7.s2); dump();
fsub(v16.s2, v7.s2, v7.s2); dump();
fsub(v31.s2, v7.s2, v7.s2); dump();
fsub(v7.s2, v7.s2, v7.s2); dump();
fsub(v7.s2, v0.s2, v7.s2); dump();
fsub(v7.s2, v1.s2, v7.s2); dump();
fsub(v7.s2, v2.s2, v7.s2); dump();
fsub(v7.s2, v4.s2, v7.s2); dump();
fsub(v7.s2, v8.s2, v7.s2); dump();
fsub(v7.s2, v16.s2, v7.s2); dump();
fsub(v7.s2, v31.s2, v7.s2); dump();
fsub(v7.s2, v7.s2, v7.s2); dump();
fsub(v7.s2, v7.s2, v0.s2); dump();
fsub(v7.s2, v7.s2, v1.s2); dump();
fsub(v7.s2, v7.s2, v2.s2); dump();
fsub(v7.s2, v7.s2, v4.s2); dump();
fsub(v7.s2, v7.s2, v8.s2); dump();
fsub(v7.s2, v7.s2, v16.s2); dump();
fsub(v7.s2, v7.s2, v31.s2); dump();
//DataProcSimd_Arithmetic8:3
fdiv(v7.s4, v7.s4, v7.s4); dump();
fdiv(v0.s4, v7.s4, v7.s4); dump();
fdiv(v1.s4, v7.s4, v7.s4); dump();
fdiv(v2.s4, v7.s4, v7.s4); dump();
fdiv(v4.s4, v7.s4, v7.s4); dump();
fdiv(v8.s4, v7.s4, v7.s4); dump();
fdiv(v16.s4, v7.s4, v7.s4); dump();
fdiv(v31.s4, v7.s4, v7.s4); dump();
fdiv(v7.s4, v7.s4, v7.s4); dump();
fdiv(v7.s4, v0.s4, v7.s4); dump();
fdiv(v7.s4, v1.s4, v7.s4); dump();
fdiv(v7.s4, v2.s4, v7.s4); dump();
fdiv(v7.s4, v4.s4, v7.s4); dump();
fdiv(v7.s4, v8.s4, v7.s4); dump();
fdiv(v7.s4, v16.s4, v7.s4); dump();
fdiv(v7.s4, v31.s4, v7.s4); dump();
fdiv(v7.s4, v7.s4, v7.s4); dump();
fdiv(v7.s4, v7.s4, v0.s4); dump();
fdiv(v7.s4, v7.s4, v1.s4); dump();
fdiv(v7.s4, v7.s4, v2.s4); dump();
fdiv(v7.s4, v7.s4, v4.s4); dump();
fdiv(v7.s4, v7.s4, v8.s4); dump();
fdiv(v7.s4, v7.s4, v16.s4); dump();
fdiv(v7.s4, v7.s4, v31.s4); dump();
fmaxp(v7.s4, v7.s4, v7.s4); dump();
fmaxp(v0.s4, v7.s4, v7.s4); dump();
fmaxp(v1.s4, v7.s4, v7.s4); dump();
fmaxp(v2.s4, v7.s4, v7.s4); dump();
fmaxp(v4.s4, v7.s4, v7.s4); dump();
fmaxp(v8.s4, v7.s4, v7.s4); dump();
fmaxp(v16.s4, v7.s4, v7.s4); dump();
fmaxp(v31.s4, v7.s4, v7.s4); dump();
fmaxp(v7.s4, v7.s4, v7.s4); dump();
fmaxp(v7.s4, v0.s4, v7.s4); dump();
fmaxp(v7.s4, v1.s4, v7.s4); dump();
fmaxp(v7.s4, v2.s4, v7.s4); dump();
fmaxp(v7.s4, v4.s4, v7.s4); dump();
fmaxp(v7.s4, v8.s4, v7.s4); dump();
fmaxp(v7.s4, v16.s4, v7.s4); dump();
fmaxp(v7.s4, v31.s4, v7.s4); dump();
fmaxp(v7.s4, v7.s4, v7.s4); dump();
fmaxp(v7.s4, v7.s4, v0.s4); dump();
fmaxp(v7.s4, v7.s4, v1.s4); dump();
fmaxp(v7.s4, v7.s4, v2.s4); dump();
fmaxp(v7.s4, v7.s4, v4.s4); dump();
fmaxp(v7.s4, v7.s4, v8.s4); dump();
fmaxp(v7.s4, v7.s4, v16.s4); dump();
fmaxp(v7.s4, v7.s4, v31.s4); dump();
fmaxnm(v7.s4, v7.s4, v7.s4); dump();
fmaxnm(v0.s4, v7.s4, v7.s4); dump();
fmaxnm(v1.s4, v7.s4, v7.s4); dump();
fmaxnm(v2.s4, v7.s4, v7.s4); dump();
fmaxnm(v4.s4, v7.s4, v7.s4); dump();
fmaxnm(v8.s4, v7.s4, v7.s4); dump();
fmaxnm(v16.s4, v7.s4, v7.s4); dump();
fmaxnm(v31.s4, v7.s4, v7.s4); dump();
fmaxnm(v7.s4, v7.s4, v7.s4); dump();
fmaxnm(v7.s4, v0.s4, v7.s4); dump();
fmaxnm(v7.s4, v1.s4, v7.s4); dump();
fmaxnm(v7.s4, v2.s4, v7.s4); dump();
fmaxnm(v7.s4, v4.s4, v7.s4); dump();
fmaxnm(v7.s4, v8.s4, v7.s4); dump();
fmaxnm(v7.s4, v16.s4, v7.s4); dump();
fmaxnm(v7.s4, v31.s4, v7.s4); dump();
fmaxnm(v7.s4, v7.s4, v7.s4); dump();
fmaxnm(v7.s4, v7.s4, v0.s4); dump();
fmaxnm(v7.s4, v7.s4, v1.s4); dump();
fmaxnm(v7.s4, v7.s4, v2.s4); dump();
fmaxnm(v7.s4, v7.s4, v4.s4); dump();
fmaxnm(v7.s4, v7.s4, v8.s4); dump();
fmaxnm(v7.s4, v7.s4, v16.s4); dump();
fmaxnm(v7.s4, v7.s4, v31.s4); dump();
fmin(v7.s4, v7.s4, v7.s4); dump();
fmin(v0.s4, v7.s4, v7.s4); dump();
fmin(v1.s4, v7.s4, v7.s4); dump();
fmin(v2.s4, v7.s4, v7.s4); dump();
fmin(v4.s4, v7.s4, v7.s4); dump();
fmin(v8.s4, v7.s4, v7.s4); dump();
fmin(v16.s4, v7.s4, v7.s4); dump();
fmin(v31.s4, v7.s4, v7.s4); dump();
fmin(v7.s4, v7.s4, v7.s4); dump();
fmin(v7.s4, v0.s4, v7.s4); dump();
fmin(v7.s4, v1.s4, v7.s4); dump();
fmin(v7.s4, v2.s4, v7.s4); dump();
fmin(v7.s4, v4.s4, v7.s4); dump();
fmin(v7.s4, v8.s4, v7.s4); dump();
fmin(v7.s4, v16.s4, v7.s4); dump();
fmin(v7.s4, v31.s4, v7.s4); dump();
fmin(v7.s4, v7.s4, v7.s4); dump();
fmin(v7.s4, v7.s4, v0.s4); dump();
fmin(v7.s4, v7.s4, v1.s4); dump();
fmin(v7.s4, v7.s4, v2.s4); dump();
fmin(v7.s4, v7.s4, v4.s4); dump();
fmin(v7.s4, v7.s4, v8.s4); dump();
fmin(v7.s4, v7.s4, v16.s4); dump();
fmin(v7.s4, v7.s4, v31.s4); dump();
fminnm(v7.s4, v7.s4, v7.s4); dump();
fminnm(v0.s4, v7.s4, v7.s4); dump();
fminnm(v1.s4, v7.s4, v7.s4); dump();
fminnm(v2.s4, v7.s4, v7.s4); dump();
fminnm(v4.s4, v7.s4, v7.s4); dump();
fminnm(v8.s4, v7.s4, v7.s4); dump();
fminnm(v16.s4, v7.s4, v7.s4); dump();
fminnm(v31.s4, v7.s4, v7.s4); dump();
fminnm(v7.s4, v7.s4, v7.s4); dump();
fminnm(v7.s4, v0.s4, v7.s4); dump();
fminnm(v7.s4, v1.s4, v7.s4); dump();
fminnm(v7.s4, v2.s4, v7.s4); dump();
fminnm(v7.s4, v4.s4, v7.s4); dump();
fminnm(v7.s4, v8.s4, v7.s4); dump();
fminnm(v7.s4, v16.s4, v7.s4); dump();
fminnm(v7.s4, v31.s4, v7.s4); dump();
fminnm(v7.s4, v7.s4, v7.s4); dump();
fminnm(v7.s4, v7.s4, v0.s4); dump();
fminnm(v7.s4, v7.s4, v1.s4); dump();
fminnm(v7.s4, v7.s4, v2.s4); dump();
fminnm(v7.s4, v7.s4, v4.s4); dump();
fminnm(v7.s4, v7.s4, v8.s4); dump();
fminnm(v7.s4, v7.s4, v16.s4); dump();
fminnm(v7.s4, v7.s4, v31.s4); dump();
fmla(v7.s4, v7.s4, v7.s4); dump();
fmla(v0.s4, v7.s4, v7.s4); dump();
fmla(v1.s4, v7.s4, v7.s4); dump();
fmla(v2.s4, v7.s4, v7.s4); dump();
fmla(v4.s4, v7.s4, v7.s4); dump();
fmla(v8.s4, v7.s4, v7.s4); dump();
fmla(v16.s4, v7.s4, v7.s4); dump();
fmla(v31.s4, v7.s4, v7.s4); dump();
fmla(v7.s4, v7.s4, v7.s4); dump();
fmla(v7.s4, v0.s4, v7.s4); dump();
fmla(v7.s4, v1.s4, v7.s4); dump();
fmla(v7.s4, v2.s4, v7.s4); dump();
fmla(v7.s4, v4.s4, v7.s4); dump();
fmla(v7.s4, v8.s4, v7.s4); dump();
fmla(v7.s4, v16.s4, v7.s4); dump();
fmla(v7.s4, v31.s4, v7.s4); dump();
fmla(v7.s4, v7.s4, v7.s4); dump();
fmla(v7.s4, v7.s4, v0.s4); dump();
fmla(v7.s4, v7.s4, v1.s4); dump();
fmla(v7.s4, v7.s4, v2.s4); dump();
fmla(v7.s4, v7.s4, v4.s4); dump();
fmla(v7.s4, v7.s4, v8.s4); dump();
fmla(v7.s4, v7.s4, v16.s4); dump();
fmla(v7.s4, v7.s4, v31.s4); dump();
fmls(v7.s4, v7.s4, v7.s4); dump();
fmls(v0.s4, v7.s4, v7.s4); dump();
fmls(v1.s4, v7.s4, v7.s4); dump();
fmls(v2.s4, v7.s4, v7.s4); dump();
fmls(v4.s4, v7.s4, v7.s4); dump();
fmls(v8.s4, v7.s4, v7.s4); dump();
fmls(v16.s4, v7.s4, v7.s4); dump();
fmls(v31.s4, v7.s4, v7.s4); dump();
fmls(v7.s4, v7.s4, v7.s4); dump();
fmls(v7.s4, v0.s4, v7.s4); dump();
fmls(v7.s4, v1.s4, v7.s4); dump();
fmls(v7.s4, v2.s4, v7.s4); dump();
fmls(v7.s4, v4.s4, v7.s4); dump();
fmls(v7.s4, v8.s4, v7.s4); dump();
fmls(v7.s4, v16.s4, v7.s4); dump();
fmls(v7.s4, v31.s4, v7.s4); dump();
fmls(v7.s4, v7.s4, v7.s4); dump();
fmls(v7.s4, v7.s4, v0.s4); dump();
fmls(v7.s4, v7.s4, v1.s4); dump();
fmls(v7.s4, v7.s4, v2.s4); dump();
fmls(v7.s4, v7.s4, v4.s4); dump();
fmls(v7.s4, v7.s4, v8.s4); dump();
fmls(v7.s4, v7.s4, v16.s4); dump();
fmls(v7.s4, v7.s4, v31.s4); dump();
fmul(v7.s4, v7.s4, v7.s4); dump();
fmul(v0.s4, v7.s4, v7.s4); dump();
fmul(v1.s4, v7.s4, v7.s4); dump();
fmul(v2.s4, v7.s4, v7.s4); dump();
fmul(v4.s4, v7.s4, v7.s4); dump();
fmul(v8.s4, v7.s4, v7.s4); dump();
fmul(v16.s4, v7.s4, v7.s4); dump();
fmul(v31.s4, v7.s4, v7.s4); dump();
fmul(v7.s4, v7.s4, v7.s4); dump();
fmul(v7.s4, v0.s4, v7.s4); dump();
fmul(v7.s4, v1.s4, v7.s4); dump();
fmul(v7.s4, v2.s4, v7.s4); dump();
fmul(v7.s4, v4.s4, v7.s4); dump();
fmul(v7.s4, v8.s4, v7.s4); dump();
fmul(v7.s4, v16.s4, v7.s4); dump();
fmul(v7.s4, v31.s4, v7.s4); dump();
fmul(v7.s4, v7.s4, v7.s4); dump();
fmul(v7.s4, v7.s4, v0.s4); dump();
fmul(v7.s4, v7.s4, v1.s4); dump();
fmul(v7.s4, v7.s4, v2.s4); dump();
fmul(v7.s4, v7.s4, v4.s4); dump();
fmul(v7.s4, v7.s4, v8.s4); dump();
fmul(v7.s4, v7.s4, v16.s4); dump();
fmul(v7.s4, v7.s4, v31.s4); dump();
fsub(v7.s4, v7.s4, v7.s4); dump();
fsub(v0.s4, v7.s4, v7.s4); dump();
fsub(v1.s4, v7.s4, v7.s4); dump();
fsub(v2.s4, v7.s4, v7.s4); dump();
fsub(v4.s4, v7.s4, v7.s4); dump();
fsub(v8.s4, v7.s4, v7.s4); dump();
fsub(v16.s4, v7.s4, v7.s4); dump();
fsub(v31.s4, v7.s4, v7.s4); dump();
fsub(v7.s4, v7.s4, v7.s4); dump();
fsub(v7.s4, v0.s4, v7.s4); dump();
fsub(v7.s4, v1.s4, v7.s4); dump();
fsub(v7.s4, v2.s4, v7.s4); dump();
fsub(v7.s4, v4.s4, v7.s4); dump();
fsub(v7.s4, v8.s4, v7.s4); dump();
fsub(v7.s4, v16.s4, v7.s4); dump();
fsub(v7.s4, v31.s4, v7.s4); dump();
fsub(v7.s4, v7.s4, v7.s4); dump();
fsub(v7.s4, v7.s4, v0.s4); dump();
fsub(v7.s4, v7.s4, v1.s4); dump();
fsub(v7.s4, v7.s4, v2.s4); dump();
fsub(v7.s4, v7.s4, v4.s4); dump();
fsub(v7.s4, v7.s4, v8.s4); dump();
fsub(v7.s4, v7.s4, v16.s4); dump();
fsub(v7.s4, v7.s4, v31.s4); dump();
//DataProcSimd_Arithmetic8:4
fdiv(v7.d2, v7.d2, v7.d2); dump();
fdiv(v0.d2, v7.d2, v7.d2); dump();
fdiv(v1.d2, v7.d2, v7.d2); dump();
fdiv(v2.d2, v7.d2, v7.d2); dump();
fdiv(v4.d2, v7.d2, v7.d2); dump();
fdiv(v8.d2, v7.d2, v7.d2); dump();
fdiv(v16.d2, v7.d2, v7.d2); dump();
fdiv(v31.d2, v7.d2, v7.d2); dump();
fdiv(v7.d2, v7.d2, v7.d2); dump();
fdiv(v7.d2, v0.d2, v7.d2); dump();
fdiv(v7.d2, v1.d2, v7.d2); dump();
fdiv(v7.d2, v2.d2, v7.d2); dump();
fdiv(v7.d2, v4.d2, v7.d2); dump();
fdiv(v7.d2, v8.d2, v7.d2); dump();
fdiv(v7.d2, v16.d2, v7.d2); dump();
fdiv(v7.d2, v31.d2, v7.d2); dump();
fdiv(v7.d2, v7.d2, v7.d2); dump();
fdiv(v7.d2, v7.d2, v0.d2); dump();
fdiv(v7.d2, v7.d2, v1.d2); dump();
fdiv(v7.d2, v7.d2, v2.d2); dump();
fdiv(v7.d2, v7.d2, v4.d2); dump();
fdiv(v7.d2, v7.d2, v8.d2); dump();
fdiv(v7.d2, v7.d2, v16.d2); dump();
fdiv(v7.d2, v7.d2, v31.d2); dump();
fmaxp(v7.d2, v7.d2, v7.d2); dump();
fmaxp(v0.d2, v7.d2, v7.d2); dump();
fmaxp(v1.d2, v7.d2, v7.d2); dump();
fmaxp(v2.d2, v7.d2, v7.d2); dump();
fmaxp(v4.d2, v7.d2, v7.d2); dump();
fmaxp(v8.d2, v7.d2, v7.d2); dump();
fmaxp(v16.d2, v7.d2, v7.d2); dump();
fmaxp(v31.d2, v7.d2, v7.d2); dump();
fmaxp(v7.d2, v7.d2, v7.d2); dump();
fmaxp(v7.d2, v0.d2, v7.d2); dump();
fmaxp(v7.d2, v1.d2, v7.d2); dump();
fmaxp(v7.d2, v2.d2, v7.d2); dump();
fmaxp(v7.d2, v4.d2, v7.d2); dump();
fmaxp(v7.d2, v8.d2, v7.d2); dump();
fmaxp(v7.d2, v16.d2, v7.d2); dump();
fmaxp(v7.d2, v31.d2, v7.d2); dump();
fmaxp(v7.d2, v7.d2, v7.d2); dump();
fmaxp(v7.d2, v7.d2, v0.d2); dump();
fmaxp(v7.d2, v7.d2, v1.d2); dump();
fmaxp(v7.d2, v7.d2, v2.d2); dump();
fmaxp(v7.d2, v7.d2, v4.d2); dump();
fmaxp(v7.d2, v7.d2, v8.d2); dump();
fmaxp(v7.d2, v7.d2, v16.d2); dump();
fmaxp(v7.d2, v7.d2, v31.d2); dump();
fmaxnm(v7.d2, v7.d2, v7.d2); dump();
fmaxnm(v0.d2, v7.d2, v7.d2); dump();
fmaxnm(v1.d2, v7.d2, v7.d2); dump();
fmaxnm(v2.d2, v7.d2, v7.d2); dump();
fmaxnm(v4.d2, v7.d2, v7.d2); dump();
fmaxnm(v8.d2, v7.d2, v7.d2); dump();
fmaxnm(v16.d2, v7.d2, v7.d2); dump();
fmaxnm(v31.d2, v7.d2, v7.d2); dump();
fmaxnm(v7.d2, v7.d2, v7.d2); dump();
fmaxnm(v7.d2, v0.d2, v7.d2); dump();
fmaxnm(v7.d2, v1.d2, v7.d2); dump();
fmaxnm(v7.d2, v2.d2, v7.d2); dump();
fmaxnm(v7.d2, v4.d2, v7.d2); dump();
fmaxnm(v7.d2, v8.d2, v7.d2); dump();
fmaxnm(v7.d2, v16.d2, v7.d2); dump();
fmaxnm(v7.d2, v31.d2, v7.d2); dump();
fmaxnm(v7.d2, v7.d2, v7.d2); dump();
fmaxnm(v7.d2, v7.d2, v0.d2); dump();
fmaxnm(v7.d2, v7.d2, v1.d2); dump();
fmaxnm(v7.d2, v7.d2, v2.d2); dump();
fmaxnm(v7.d2, v7.d2, v4.d2); dump();
fmaxnm(v7.d2, v7.d2, v8.d2); dump();
fmaxnm(v7.d2, v7.d2, v16.d2); dump();
fmaxnm(v7.d2, v7.d2, v31.d2); dump();
fmin(v7.d2, v7.d2, v7.d2); dump();
fmin(v0.d2, v7.d2, v7.d2); dump();
fmin(v1.d2, v7.d2, v7.d2); dump();
fmin(v2.d2, v7.d2, v7.d2); dump();
fmin(v4.d2, v7.d2, v7.d2); dump();
fmin(v8.d2, v7.d2, v7.d2); dump();
fmin(v16.d2, v7.d2, v7.d2); dump();
fmin(v31.d2, v7.d2, v7.d2); dump();
fmin(v7.d2, v7.d2, v7.d2); dump();
fmin(v7.d2, v0.d2, v7.d2); dump();
fmin(v7.d2, v1.d2, v7.d2); dump();
fmin(v7.d2, v2.d2, v7.d2); dump();
fmin(v7.d2, v4.d2, v7.d2); dump();
fmin(v7.d2, v8.d2, v7.d2); dump();
fmin(v7.d2, v16.d2, v7.d2); dump();
fmin(v7.d2, v31.d2, v7.d2); dump();
fmin(v7.d2, v7.d2, v7.d2); dump();
fmin(v7.d2, v7.d2, v0.d2); dump();
fmin(v7.d2, v7.d2, v1.d2); dump();
fmin(v7.d2, v7.d2, v2.d2); dump();
fmin(v7.d2, v7.d2, v4.d2); dump();
fmin(v7.d2, v7.d2, v8.d2); dump();
fmin(v7.d2, v7.d2, v16.d2); dump();
fmin(v7.d2, v7.d2, v31.d2); dump();
fminnm(v7.d2, v7.d2, v7.d2); dump();
fminnm(v0.d2, v7.d2, v7.d2); dump();
fminnm(v1.d2, v7.d2, v7.d2); dump();
fminnm(v2.d2, v7.d2, v7.d2); dump();
fminnm(v4.d2, v7.d2, v7.d2); dump();
fminnm(v8.d2, v7.d2, v7.d2); dump();
fminnm(v16.d2, v7.d2, v7.d2); dump();
fminnm(v31.d2, v7.d2, v7.d2); dump();
fminnm(v7.d2, v7.d2, v7.d2); dump();
fminnm(v7.d2, v0.d2, v7.d2); dump();
fminnm(v7.d2, v1.d2, v7.d2); dump();
fminnm(v7.d2, v2.d2, v7.d2); dump();
fminnm(v7.d2, v4.d2, v7.d2); dump();
fminnm(v7.d2, v8.d2, v7.d2); dump();
fminnm(v7.d2, v16.d2, v7.d2); dump();
fminnm(v7.d2, v31.d2, v7.d2); dump();
fminnm(v7.d2, v7.d2, v7.d2); dump();
fminnm(v7.d2, v7.d2, v0.d2); dump();
fminnm(v7.d2, v7.d2, v1.d2); dump();
fminnm(v7.d2, v7.d2, v2.d2); dump();
fminnm(v7.d2, v7.d2, v4.d2); dump();
fminnm(v7.d2, v7.d2, v8.d2); dump();
fminnm(v7.d2, v7.d2, v16.d2); dump();
fminnm(v7.d2, v7.d2, v31.d2); dump();
fmla(v7.d2, v7.d2, v7.d2); dump();
fmla(v0.d2, v7.d2, v7.d2); dump();
fmla(v1.d2, v7.d2, v7.d2); dump();
fmla(v2.d2, v7.d2, v7.d2); dump();
fmla(v4.d2, v7.d2, v7.d2); dump();
fmla(v8.d2, v7.d2, v7.d2); dump();
fmla(v16.d2, v7.d2, v7.d2); dump();
fmla(v31.d2, v7.d2, v7.d2); dump();
fmla(v7.d2, v7.d2, v7.d2); dump();
fmla(v7.d2, v0.d2, v7.d2); dump();
fmla(v7.d2, v1.d2, v7.d2); dump();
fmla(v7.d2, v2.d2, v7.d2); dump();
fmla(v7.d2, v4.d2, v7.d2); dump();
fmla(v7.d2, v8.d2, v7.d2); dump();
fmla(v7.d2, v16.d2, v7.d2); dump();
fmla(v7.d2, v31.d2, v7.d2); dump();
fmla(v7.d2, v7.d2, v7.d2); dump();
fmla(v7.d2, v7.d2, v0.d2); dump();
fmla(v7.d2, v7.d2, v1.d2); dump();
fmla(v7.d2, v7.d2, v2.d2); dump();
fmla(v7.d2, v7.d2, v4.d2); dump();
fmla(v7.d2, v7.d2, v8.d2); dump();
fmla(v7.d2, v7.d2, v16.d2); dump();
fmla(v7.d2, v7.d2, v31.d2); dump();
fmls(v7.d2, v7.d2, v7.d2); dump();
fmls(v0.d2, v7.d2, v7.d2); dump();
fmls(v1.d2, v7.d2, v7.d2); dump();
fmls(v2.d2, v7.d2, v7.d2); dump();
fmls(v4.d2, v7.d2, v7.d2); dump();
fmls(v8.d2, v7.d2, v7.d2); dump();
fmls(v16.d2, v7.d2, v7.d2); dump();
fmls(v31.d2, v7.d2, v7.d2); dump();
fmls(v7.d2, v7.d2, v7.d2); dump();
fmls(v7.d2, v0.d2, v7.d2); dump();
fmls(v7.d2, v1.d2, v7.d2); dump();
fmls(v7.d2, v2.d2, v7.d2); dump();
fmls(v7.d2, v4.d2, v7.d2); dump();
fmls(v7.d2, v8.d2, v7.d2); dump();
fmls(v7.d2, v16.d2, v7.d2); dump();
fmls(v7.d2, v31.d2, v7.d2); dump();
fmls(v7.d2, v7.d2, v7.d2); dump();
fmls(v7.d2, v7.d2, v0.d2); dump();
fmls(v7.d2, v7.d2, v1.d2); dump();
fmls(v7.d2, v7.d2, v2.d2); dump();
fmls(v7.d2, v7.d2, v4.d2); dump();
fmls(v7.d2, v7.d2, v8.d2); dump();
fmls(v7.d2, v7.d2, v16.d2); dump();
fmls(v7.d2, v7.d2, v31.d2); dump();
fmul(v7.d2, v7.d2, v7.d2); dump();
fmul(v0.d2, v7.d2, v7.d2); dump();
fmul(v1.d2, v7.d2, v7.d2); dump();
fmul(v2.d2, v7.d2, v7.d2); dump();
fmul(v4.d2, v7.d2, v7.d2); dump();
fmul(v8.d2, v7.d2, v7.d2); dump();
fmul(v16.d2, v7.d2, v7.d2); dump();
fmul(v31.d2, v7.d2, v7.d2); dump();
fmul(v7.d2, v7.d2, v7.d2); dump();
fmul(v7.d2, v0.d2, v7.d2); dump();
fmul(v7.d2, v1.d2, v7.d2); dump();
fmul(v7.d2, v2.d2, v7.d2); dump();
fmul(v7.d2, v4.d2, v7.d2); dump();
fmul(v7.d2, v8.d2, v7.d2); dump();
fmul(v7.d2, v16.d2, v7.d2); dump();
fmul(v7.d2, v31.d2, v7.d2); dump();
fmul(v7.d2, v7.d2, v7.d2); dump();
fmul(v7.d2, v7.d2, v0.d2); dump();
fmul(v7.d2, v7.d2, v1.d2); dump();
fmul(v7.d2, v7.d2, v2.d2); dump();
fmul(v7.d2, v7.d2, v4.d2); dump();
fmul(v7.d2, v7.d2, v8.d2); dump();
fmul(v7.d2, v7.d2, v16.d2); dump();
fmul(v7.d2, v7.d2, v31.d2); dump();
fsub(v7.d2, v7.d2, v7.d2); dump();
fsub(v0.d2, v7.d2, v7.d2); dump();
fsub(v1.d2, v7.d2, v7.d2); dump();
fsub(v2.d2, v7.d2, v7.d2); dump();
fsub(v4.d2, v7.d2, v7.d2); dump();
fsub(v8.d2, v7.d2, v7.d2); dump();
fsub(v16.d2, v7.d2, v7.d2); dump();
fsub(v31.d2, v7.d2, v7.d2); dump();
fsub(v7.d2, v7.d2, v7.d2); dump();
fsub(v7.d2, v0.d2, v7.d2); dump();
fsub(v7.d2, v1.d2, v7.d2); dump();
fsub(v7.d2, v2.d2, v7.d2); dump();
fsub(v7.d2, v4.d2, v7.d2); dump();
fsub(v7.d2, v8.d2, v7.d2); dump();
fsub(v7.d2, v16.d2, v7.d2); dump();
fsub(v7.d2, v31.d2, v7.d2); dump();
fsub(v7.d2, v7.d2, v7.d2); dump();
fsub(v7.d2, v7.d2, v0.d2); dump();
fsub(v7.d2, v7.d2, v1.d2); dump();
fsub(v7.d2, v7.d2, v2.d2); dump();
fsub(v7.d2, v7.d2, v4.d2); dump();
fsub(v7.d2, v7.d2, v8.d2); dump();
fsub(v7.d2, v7.d2, v16.d2); dump();
fsub(v7.d2, v7.d2, v31.d2); dump();
//DataProcSimd_Arithmetic9:0
fmlal(v7.s2, v7.h2, v7.h2); dump();
fmlal(v0.s2, v7.h2, v7.h2); dump();
fmlal(v1.s2, v7.h2, v7.h2); dump();
fmlal(v2.s2, v7.h2, v7.h2); dump();
fmlal(v4.s2, v7.h2, v7.h2); dump();
fmlal(v8.s2, v7.h2, v7.h2); dump();
fmlal(v16.s2, v7.h2, v7.h2); dump();
fmlal(v31.s2, v7.h2, v7.h2); dump();
fmlal(v7.s2, v7.h2, v7.h2); dump();
fmlal(v7.s2, v0.h2, v7.h2); dump();
fmlal(v7.s2, v1.h2, v7.h2); dump();
fmlal(v7.s2, v2.h2, v7.h2); dump();
fmlal(v7.s2, v4.h2, v7.h2); dump();
fmlal(v7.s2, v8.h2, v7.h2); dump();
fmlal(v7.s2, v16.h2, v7.h2); dump();
fmlal(v7.s2, v31.h2, v7.h2); dump();
fmlal(v7.s2, v7.h2, v7.h2); dump();
fmlal(v7.s2, v7.h2, v0.h2); dump();
fmlal(v7.s2, v7.h2, v1.h2); dump();
fmlal(v7.s2, v7.h2, v2.h2); dump();
fmlal(v7.s2, v7.h2, v4.h2); dump();
fmlal(v7.s2, v7.h2, v8.h2); dump();
fmlal(v7.s2, v7.h2, v16.h2); dump();
fmlal(v7.s2, v7.h2, v31.h2); dump();
fmlal(v7.s2, v7.h2, v7.h2); dump();
fmlal(v0.s2, v7.h2, v7.h2); dump();
fmlal(v1.s2, v7.h2, v7.h2); dump();
fmlal(v2.s2, v7.h2, v7.h2); dump();
fmlal(v4.s2, v7.h2, v7.h2); dump();
fmlal(v8.s2, v7.h2, v7.h2); dump();
fmlal(v16.s2, v7.h2, v7.h2); dump();
fmlal(v31.s2, v7.h2, v7.h2); dump();
fmlal(v7.s2, v7.h2, v7.h2); dump();
fmlal(v7.s2, v0.h2, v7.h2); dump();
fmlal(v7.s2, v1.h2, v7.h2); dump();
fmlal(v7.s2, v2.h2, v7.h2); dump();
fmlal(v7.s2, v4.h2, v7.h2); dump();
fmlal(v7.s2, v8.h2, v7.h2); dump();
fmlal(v7.s2, v16.h2, v7.h2); dump();
fmlal(v7.s2, v31.h2, v7.h2); dump();
fmlal(v7.s2, v7.h2, v7.h2); dump();
fmlal(v7.s2, v7.h2, v0.h2); dump();
fmlal(v7.s2, v7.h2, v1.h2); dump();
fmlal(v7.s2, v7.h2, v2.h2); dump();
fmlal(v7.s2, v7.h2, v4.h2); dump();
fmlal(v7.s2, v7.h2, v8.h2); dump();
fmlal(v7.s2, v7.h2, v16.h2); dump();
fmlal(v7.s2, v7.h2, v31.h2); dump();
fmlsl(v7.s2, v7.h2, v7.h2); dump();
fmlsl(v0.s2, v7.h2, v7.h2); dump();
fmlsl(v1.s2, v7.h2, v7.h2); dump();
fmlsl(v2.s2, v7.h2, v7.h2); dump();
fmlsl(v4.s2, v7.h2, v7.h2); dump();
fmlsl(v8.s2, v7.h2, v7.h2); dump();
fmlsl(v16.s2, v7.h2, v7.h2); dump();
fmlsl(v31.s2, v7.h2, v7.h2); dump();
fmlsl(v7.s2, v7.h2, v7.h2); dump();
fmlsl(v7.s2, v0.h2, v7.h2); dump();
fmlsl(v7.s2, v1.h2, v7.h2); dump();
fmlsl(v7.s2, v2.h2, v7.h2); dump();
fmlsl(v7.s2, v4.h2, v7.h2); dump();
fmlsl(v7.s2, v8.h2, v7.h2); dump();
fmlsl(v7.s2, v16.h2, v7.h2); dump();
fmlsl(v7.s2, v31.h2, v7.h2); dump();
fmlsl(v7.s2, v7.h2, v7.h2); dump();
fmlsl(v7.s2, v7.h2, v0.h2); dump();
fmlsl(v7.s2, v7.h2, v1.h2); dump();
fmlsl(v7.s2, v7.h2, v2.h2); dump();
fmlsl(v7.s2, v7.h2, v4.h2); dump();
fmlsl(v7.s2, v7.h2, v8.h2); dump();
fmlsl(v7.s2, v7.h2, v16.h2); dump();
fmlsl(v7.s2, v7.h2, v31.h2); dump();
fmlsl2(v7.s2, v7.h2, v7.h2); dump();
fmlsl2(v0.s2, v7.h2, v7.h2); dump();
fmlsl2(v1.s2, v7.h2, v7.h2); dump();
fmlsl2(v2.s2, v7.h2, v7.h2); dump();
fmlsl2(v4.s2, v7.h2, v7.h2); dump();
fmlsl2(v8.s2, v7.h2, v7.h2); dump();
fmlsl2(v16.s2, v7.h2, v7.h2); dump();
fmlsl2(v31.s2, v7.h2, v7.h2); dump();
fmlsl2(v7.s2, v7.h2, v7.h2); dump();
fmlsl2(v7.s2, v0.h2, v7.h2); dump();
fmlsl2(v7.s2, v1.h2, v7.h2); dump();
fmlsl2(v7.s2, v2.h2, v7.h2); dump();
fmlsl2(v7.s2, v4.h2, v7.h2); dump();
fmlsl2(v7.s2, v8.h2, v7.h2); dump();
fmlsl2(v7.s2, v16.h2, v7.h2); dump();
fmlsl2(v7.s2, v31.h2, v7.h2); dump();
fmlsl2(v7.s2, v7.h2, v7.h2); dump();
fmlsl2(v7.s2, v7.h2, v0.h2); dump();
fmlsl2(v7.s2, v7.h2, v1.h2); dump();
fmlsl2(v7.s2, v7.h2, v2.h2); dump();
fmlsl2(v7.s2, v7.h2, v4.h2); dump();
fmlsl2(v7.s2, v7.h2, v8.h2); dump();
fmlsl2(v7.s2, v7.h2, v16.h2); dump();
fmlsl2(v7.s2, v7.h2, v31.h2); dump();
//DataProcSimd_Arithmetic9:1
fmlal(v7.s4, v7.h4, v7.h4); dump();
fmlal(v0.s4, v7.h4, v7.h4); dump();
fmlal(v1.s4, v7.h4, v7.h4); dump();
fmlal(v2.s4, v7.h4, v7.h4); dump();
fmlal(v4.s4, v7.h4, v7.h4); dump();
fmlal(v8.s4, v7.h4, v7.h4); dump();
fmlal(v16.s4, v7.h4, v7.h4); dump();
fmlal(v31.s4, v7.h4, v7.h4); dump();
fmlal(v7.s4, v7.h4, v7.h4); dump();
fmlal(v7.s4, v0.h4, v7.h4); dump();
fmlal(v7.s4, v1.h4, v7.h4); dump();
fmlal(v7.s4, v2.h4, v7.h4); dump();
fmlal(v7.s4, v4.h4, v7.h4); dump();
fmlal(v7.s4, v8.h4, v7.h4); dump();
fmlal(v7.s4, v16.h4, v7.h4); dump();
fmlal(v7.s4, v31.h4, v7.h4); dump();
fmlal(v7.s4, v7.h4, v7.h4); dump();
fmlal(v7.s4, v7.h4, v0.h4); dump();
fmlal(v7.s4, v7.h4, v1.h4); dump();
fmlal(v7.s4, v7.h4, v2.h4); dump();
fmlal(v7.s4, v7.h4, v4.h4); dump();
fmlal(v7.s4, v7.h4, v8.h4); dump();
fmlal(v7.s4, v7.h4, v16.h4); dump();
fmlal(v7.s4, v7.h4, v31.h4); dump();
fmlal(v7.s4, v7.h4, v7.h4); dump();
fmlal(v0.s4, v7.h4, v7.h4); dump();
fmlal(v1.s4, v7.h4, v7.h4); dump();
fmlal(v2.s4, v7.h4, v7.h4); dump();
fmlal(v4.s4, v7.h4, v7.h4); dump();
fmlal(v8.s4, v7.h4, v7.h4); dump();
fmlal(v16.s4, v7.h4, v7.h4); dump();
fmlal(v31.s4, v7.h4, v7.h4); dump();
fmlal(v7.s4, v7.h4, v7.h4); dump();
fmlal(v7.s4, v0.h4, v7.h4); dump();
fmlal(v7.s4, v1.h4, v7.h4); dump();
fmlal(v7.s4, v2.h4, v7.h4); dump();
fmlal(v7.s4, v4.h4, v7.h4); dump();
fmlal(v7.s4, v8.h4, v7.h4); dump();
fmlal(v7.s4, v16.h4, v7.h4); dump();
fmlal(v7.s4, v31.h4, v7.h4); dump();
fmlal(v7.s4, v7.h4, v7.h4); dump();
fmlal(v7.s4, v7.h4, v0.h4); dump();
fmlal(v7.s4, v7.h4, v1.h4); dump();
fmlal(v7.s4, v7.h4, v2.h4); dump();
fmlal(v7.s4, v7.h4, v4.h4); dump();
fmlal(v7.s4, v7.h4, v8.h4); dump();
fmlal(v7.s4, v7.h4, v16.h4); dump();
fmlal(v7.s4, v7.h4, v31.h4); dump();
fmlsl(v7.s4, v7.h4, v7.h4); dump();
fmlsl(v0.s4, v7.h4, v7.h4); dump();
fmlsl(v1.s4, v7.h4, v7.h4); dump();
fmlsl(v2.s4, v7.h4, v7.h4); dump();
fmlsl(v4.s4, v7.h4, v7.h4); dump();
fmlsl(v8.s4, v7.h4, v7.h4); dump();
fmlsl(v16.s4, v7.h4, v7.h4); dump();
fmlsl(v31.s4, v7.h4, v7.h4); dump();
fmlsl(v7.s4, v7.h4, v7.h4); dump();
fmlsl(v7.s4, v0.h4, v7.h4); dump();
fmlsl(v7.s4, v1.h4, v7.h4); dump();
fmlsl(v7.s4, v2.h4, v7.h4); dump();
fmlsl(v7.s4, v4.h4, v7.h4); dump();
fmlsl(v7.s4, v8.h4, v7.h4); dump();
fmlsl(v7.s4, v16.h4, v7.h4); dump();
fmlsl(v7.s4, v31.h4, v7.h4); dump();
fmlsl(v7.s4, v7.h4, v7.h4); dump();
fmlsl(v7.s4, v7.h4, v0.h4); dump();
fmlsl(v7.s4, v7.h4, v1.h4); dump();
fmlsl(v7.s4, v7.h4, v2.h4); dump();
fmlsl(v7.s4, v7.h4, v4.h4); dump();
fmlsl(v7.s4, v7.h4, v8.h4); dump();
fmlsl(v7.s4, v7.h4, v16.h4); dump();
fmlsl(v7.s4, v7.h4, v31.h4); dump();
fmlsl2(v7.s4, v7.h4, v7.h4); dump();
fmlsl2(v0.s4, v7.h4, v7.h4); dump();
fmlsl2(v1.s4, v7.h4, v7.h4); dump();
fmlsl2(v2.s4, v7.h4, v7.h4); dump();
fmlsl2(v4.s4, v7.h4, v7.h4); dump();
fmlsl2(v8.s4, v7.h4, v7.h4); dump();
fmlsl2(v16.s4, v7.h4, v7.h4); dump();
fmlsl2(v31.s4, v7.h4, v7.h4); dump();
fmlsl2(v7.s4, v7.h4, v7.h4); dump();
fmlsl2(v7.s4, v0.h4, v7.h4); dump();
fmlsl2(v7.s4, v1.h4, v7.h4); dump();
fmlsl2(v7.s4, v2.h4, v7.h4); dump();
fmlsl2(v7.s4, v4.h4, v7.h4); dump();
fmlsl2(v7.s4, v8.h4, v7.h4); dump();
fmlsl2(v7.s4, v16.h4, v7.h4); dump();
fmlsl2(v7.s4, v31.h4, v7.h4); dump();
fmlsl2(v7.s4, v7.h4, v7.h4); dump();
fmlsl2(v7.s4, v7.h4, v0.h4); dump();
fmlsl2(v7.s4, v7.h4, v1.h4); dump();
fmlsl2(v7.s4, v7.h4, v2.h4); dump();
fmlsl2(v7.s4, v7.h4, v4.h4); dump();
fmlsl2(v7.s4, v7.h4, v8.h4); dump();
fmlsl2(v7.s4, v7.h4, v16.h4); dump();
fmlsl2(v7.s4, v7.h4, v31.h4); dump();
//DataProcSimd_Arithmetic10:0
mla(v7.b8, v7.b8, v7.b8); dump();
mla(v0.b8, v7.b8, v7.b8); dump();
mla(v1.b8, v7.b8, v7.b8); dump();
mla(v2.b8, v7.b8, v7.b8); dump();
mla(v4.b8, v7.b8, v7.b8); dump();
mla(v8.b8, v7.b8, v7.b8); dump();
mla(v16.b8, v7.b8, v7.b8); dump();
mla(v31.b8, v7.b8, v7.b8); dump();
mla(v7.b8, v7.b8, v7.b8); dump();
mla(v7.b8, v0.b8, v7.b8); dump();
mla(v7.b8, v1.b8, v7.b8); dump();
mla(v7.b8, v2.b8, v7.b8); dump();
mla(v7.b8, v4.b8, v7.b8); dump();
mla(v7.b8, v8.b8, v7.b8); dump();
mla(v7.b8, v16.b8, v7.b8); dump();
mla(v7.b8, v31.b8, v7.b8); dump();
mla(v7.b8, v7.b8, v7.b8); dump();
mla(v7.b8, v7.b8, v0.b8); dump();
mla(v7.b8, v7.b8, v1.b8); dump();
mla(v7.b8, v7.b8, v2.b8); dump();
mla(v7.b8, v7.b8, v4.b8); dump();
mla(v7.b8, v7.b8, v8.b8); dump();
mla(v7.b8, v7.b8, v16.b8); dump();
mla(v7.b8, v7.b8, v31.b8); dump();
mls(v7.b8, v7.b8, v7.b8); dump();
mls(v0.b8, v7.b8, v7.b8); dump();
mls(v1.b8, v7.b8, v7.b8); dump();
mls(v2.b8, v7.b8, v7.b8); dump();
mls(v4.b8, v7.b8, v7.b8); dump();
mls(v8.b8, v7.b8, v7.b8); dump();
mls(v16.b8, v7.b8, v7.b8); dump();
mls(v31.b8, v7.b8, v7.b8); dump();
mls(v7.b8, v7.b8, v7.b8); dump();
mls(v7.b8, v0.b8, v7.b8); dump();
mls(v7.b8, v1.b8, v7.b8); dump();
mls(v7.b8, v2.b8, v7.b8); dump();
mls(v7.b8, v4.b8, v7.b8); dump();
mls(v7.b8, v8.b8, v7.b8); dump();
mls(v7.b8, v16.b8, v7.b8); dump();
mls(v7.b8, v31.b8, v7.b8); dump();
mls(v7.b8, v7.b8, v7.b8); dump();
mls(v7.b8, v7.b8, v0.b8); dump();
mls(v7.b8, v7.b8, v1.b8); dump();
mls(v7.b8, v7.b8, v2.b8); dump();
mls(v7.b8, v7.b8, v4.b8); dump();
mls(v7.b8, v7.b8, v8.b8); dump();
mls(v7.b8, v7.b8, v16.b8); dump();
mls(v7.b8, v7.b8, v31.b8); dump();
mul(v7.b8, v7.b8, v7.b8); dump();
mul(v0.b8, v7.b8, v7.b8); dump();
mul(v1.b8, v7.b8, v7.b8); dump();
mul(v2.b8, v7.b8, v7.b8); dump();
mul(v4.b8, v7.b8, v7.b8); dump();
mul(v8.b8, v7.b8, v7.b8); dump();
mul(v16.b8, v7.b8, v7.b8); dump();
mul(v31.b8, v7.b8, v7.b8); dump();
mul(v7.b8, v7.b8, v7.b8); dump();
mul(v7.b8, v0.b8, v7.b8); dump();
mul(v7.b8, v1.b8, v7.b8); dump();
mul(v7.b8, v2.b8, v7.b8); dump();
mul(v7.b8, v4.b8, v7.b8); dump();
mul(v7.b8, v8.b8, v7.b8); dump();
mul(v7.b8, v16.b8, v7.b8); dump();
mul(v7.b8, v31.b8, v7.b8); dump();
mul(v7.b8, v7.b8, v7.b8); dump();
mul(v7.b8, v7.b8, v0.b8); dump();
mul(v7.b8, v7.b8, v1.b8); dump();
mul(v7.b8, v7.b8, v2.b8); dump();
mul(v7.b8, v7.b8, v4.b8); dump();
mul(v7.b8, v7.b8, v8.b8); dump();
mul(v7.b8, v7.b8, v16.b8); dump();
mul(v7.b8, v7.b8, v31.b8); dump();
saba(v7.b8, v7.b8, v7.b8); dump();
saba(v0.b8, v7.b8, v7.b8); dump();
saba(v1.b8, v7.b8, v7.b8); dump();
saba(v2.b8, v7.b8, v7.b8); dump();
saba(v4.b8, v7.b8, v7.b8); dump();
saba(v8.b8, v7.b8, v7.b8); dump();
saba(v16.b8, v7.b8, v7.b8); dump();
saba(v31.b8, v7.b8, v7.b8); dump();
saba(v7.b8, v7.b8, v7.b8); dump();
saba(v7.b8, v0.b8, v7.b8); dump();
saba(v7.b8, v1.b8, v7.b8); dump();
saba(v7.b8, v2.b8, v7.b8); dump();
saba(v7.b8, v4.b8, v7.b8); dump();
saba(v7.b8, v8.b8, v7.b8); dump();
saba(v7.b8, v16.b8, v7.b8); dump();
saba(v7.b8, v31.b8, v7.b8); dump();
saba(v7.b8, v7.b8, v7.b8); dump();
saba(v7.b8, v7.b8, v0.b8); dump();
saba(v7.b8, v7.b8, v1.b8); dump();
saba(v7.b8, v7.b8, v2.b8); dump();
saba(v7.b8, v7.b8, v4.b8); dump();
saba(v7.b8, v7.b8, v8.b8); dump();
saba(v7.b8, v7.b8, v16.b8); dump();
saba(v7.b8, v7.b8, v31.b8); dump();
sabd(v7.b8, v7.b8, v7.b8); dump();
sabd(v0.b8, v7.b8, v7.b8); dump();
sabd(v1.b8, v7.b8, v7.b8); dump();
sabd(v2.b8, v7.b8, v7.b8); dump();
sabd(v4.b8, v7.b8, v7.b8); dump();
sabd(v8.b8, v7.b8, v7.b8); dump();
sabd(v16.b8, v7.b8, v7.b8); dump();
sabd(v31.b8, v7.b8, v7.b8); dump();
sabd(v7.b8, v7.b8, v7.b8); dump();
sabd(v7.b8, v0.b8, v7.b8); dump();
sabd(v7.b8, v1.b8, v7.b8); dump();
sabd(v7.b8, v2.b8, v7.b8); dump();
sabd(v7.b8, v4.b8, v7.b8); dump();
sabd(v7.b8, v8.b8, v7.b8); dump();
sabd(v7.b8, v16.b8, v7.b8); dump();
sabd(v7.b8, v31.b8, v7.b8); dump();
sabd(v7.b8, v7.b8, v7.b8); dump();
sabd(v7.b8, v7.b8, v0.b8); dump();
sabd(v7.b8, v7.b8, v1.b8); dump();
sabd(v7.b8, v7.b8, v2.b8); dump();
sabd(v7.b8, v7.b8, v4.b8); dump();
sabd(v7.b8, v7.b8, v8.b8); dump();
sabd(v7.b8, v7.b8, v16.b8); dump();
sabd(v7.b8, v7.b8, v31.b8); dump();
shadd(v7.b8, v7.b8, v7.b8); dump();
shadd(v0.b8, v7.b8, v7.b8); dump();
shadd(v1.b8, v7.b8, v7.b8); dump();
shadd(v2.b8, v7.b8, v7.b8); dump();
shadd(v4.b8, v7.b8, v7.b8); dump();
shadd(v8.b8, v7.b8, v7.b8); dump();
shadd(v16.b8, v7.b8, v7.b8); dump();
shadd(v31.b8, v7.b8, v7.b8); dump();
shadd(v7.b8, v7.b8, v7.b8); dump();
shadd(v7.b8, v0.b8, v7.b8); dump();
shadd(v7.b8, v1.b8, v7.b8); dump();
shadd(v7.b8, v2.b8, v7.b8); dump();
shadd(v7.b8, v4.b8, v7.b8); dump();
shadd(v7.b8, v8.b8, v7.b8); dump();
shadd(v7.b8, v16.b8, v7.b8); dump();
shadd(v7.b8, v31.b8, v7.b8); dump();
shadd(v7.b8, v7.b8, v7.b8); dump();
shadd(v7.b8, v7.b8, v0.b8); dump();
shadd(v7.b8, v7.b8, v1.b8); dump();
shadd(v7.b8, v7.b8, v2.b8); dump();
shadd(v7.b8, v7.b8, v4.b8); dump();
shadd(v7.b8, v7.b8, v8.b8); dump();
shadd(v7.b8, v7.b8, v16.b8); dump();
shadd(v7.b8, v7.b8, v31.b8); dump();
shsub(v7.b8, v7.b8, v7.b8); dump();
shsub(v0.b8, v7.b8, v7.b8); dump();
shsub(v1.b8, v7.b8, v7.b8); dump();
shsub(v2.b8, v7.b8, v7.b8); dump();
shsub(v4.b8, v7.b8, v7.b8); dump();
shsub(v8.b8, v7.b8, v7.b8); dump();
shsub(v16.b8, v7.b8, v7.b8); dump();
shsub(v31.b8, v7.b8, v7.b8); dump();
shsub(v7.b8, v7.b8, v7.b8); dump();
shsub(v7.b8, v0.b8, v7.b8); dump();
shsub(v7.b8, v1.b8, v7.b8); dump();
shsub(v7.b8, v2.b8, v7.b8); dump();
shsub(v7.b8, v4.b8, v7.b8); dump();
shsub(v7.b8, v8.b8, v7.b8); dump();
shsub(v7.b8, v16.b8, v7.b8); dump();
shsub(v7.b8, v31.b8, v7.b8); dump();
shsub(v7.b8, v7.b8, v7.b8); dump();
shsub(v7.b8, v7.b8, v0.b8); dump();
shsub(v7.b8, v7.b8, v1.b8); dump();
shsub(v7.b8, v7.b8, v2.b8); dump();
shsub(v7.b8, v7.b8, v4.b8); dump();
shsub(v7.b8, v7.b8, v8.b8); dump();
shsub(v7.b8, v7.b8, v16.b8); dump();
shsub(v7.b8, v7.b8, v31.b8); dump();
smax(v7.b8, v7.b8, v7.b8); dump();
smax(v0.b8, v7.b8, v7.b8); dump();
smax(v1.b8, v7.b8, v7.b8); dump();
smax(v2.b8, v7.b8, v7.b8); dump();
smax(v4.b8, v7.b8, v7.b8); dump();
smax(v8.b8, v7.b8, v7.b8); dump();
smax(v16.b8, v7.b8, v7.b8); dump();
smax(v31.b8, v7.b8, v7.b8); dump();
smax(v7.b8, v7.b8, v7.b8); dump();
smax(v7.b8, v0.b8, v7.b8); dump();
smax(v7.b8, v1.b8, v7.b8); dump();
smax(v7.b8, v2.b8, v7.b8); dump();
smax(v7.b8, v4.b8, v7.b8); dump();
smax(v7.b8, v8.b8, v7.b8); dump();
smax(v7.b8, v16.b8, v7.b8); dump();
smax(v7.b8, v31.b8, v7.b8); dump();
smax(v7.b8, v7.b8, v7.b8); dump();
smax(v7.b8, v7.b8, v0.b8); dump();
smax(v7.b8, v7.b8, v1.b8); dump();
smax(v7.b8, v7.b8, v2.b8); dump();
smax(v7.b8, v7.b8, v4.b8); dump();
smax(v7.b8, v7.b8, v8.b8); dump();
smax(v7.b8, v7.b8, v16.b8); dump();
smax(v7.b8, v7.b8, v31.b8); dump();
smin(v7.b8, v7.b8, v7.b8); dump();
smin(v0.b8, v7.b8, v7.b8); dump();
smin(v1.b8, v7.b8, v7.b8); dump();
smin(v2.b8, v7.b8, v7.b8); dump();
smin(v4.b8, v7.b8, v7.b8); dump();
smin(v8.b8, v7.b8, v7.b8); dump();
smin(v16.b8, v7.b8, v7.b8); dump();
smin(v31.b8, v7.b8, v7.b8); dump();
smin(v7.b8, v7.b8, v7.b8); dump();
smin(v7.b8, v0.b8, v7.b8); dump();
smin(v7.b8, v1.b8, v7.b8); dump();
smin(v7.b8, v2.b8, v7.b8); dump();
smin(v7.b8, v4.b8, v7.b8); dump();
smin(v7.b8, v8.b8, v7.b8); dump();
smin(v7.b8, v16.b8, v7.b8); dump();
smin(v7.b8, v31.b8, v7.b8); dump();
smin(v7.b8, v7.b8, v7.b8); dump();
smin(v7.b8, v7.b8, v0.b8); dump();
smin(v7.b8, v7.b8, v1.b8); dump();
smin(v7.b8, v7.b8, v2.b8); dump();
smin(v7.b8, v7.b8, v4.b8); dump();
smin(v7.b8, v7.b8, v8.b8); dump();
smin(v7.b8, v7.b8, v16.b8); dump();
smin(v7.b8, v7.b8, v31.b8); dump();
srhadd(v7.b8, v7.b8, v7.b8); dump();
srhadd(v0.b8, v7.b8, v7.b8); dump();
srhadd(v1.b8, v7.b8, v7.b8); dump();
srhadd(v2.b8, v7.b8, v7.b8); dump();
srhadd(v4.b8, v7.b8, v7.b8); dump();
srhadd(v8.b8, v7.b8, v7.b8); dump();
srhadd(v16.b8, v7.b8, v7.b8); dump();
srhadd(v31.b8, v7.b8, v7.b8); dump();
srhadd(v7.b8, v7.b8, v7.b8); dump();
srhadd(v7.b8, v0.b8, v7.b8); dump();
srhadd(v7.b8, v1.b8, v7.b8); dump();
srhadd(v7.b8, v2.b8, v7.b8); dump();
srhadd(v7.b8, v4.b8, v7.b8); dump();
srhadd(v7.b8, v8.b8, v7.b8); dump();
srhadd(v7.b8, v16.b8, v7.b8); dump();
srhadd(v7.b8, v31.b8, v7.b8); dump();
srhadd(v7.b8, v7.b8, v7.b8); dump();
srhadd(v7.b8, v7.b8, v0.b8); dump();
srhadd(v7.b8, v7.b8, v1.b8); dump();
srhadd(v7.b8, v7.b8, v2.b8); dump();
srhadd(v7.b8, v7.b8, v4.b8); dump();
srhadd(v7.b8, v7.b8, v8.b8); dump();
srhadd(v7.b8, v7.b8, v16.b8); dump();
srhadd(v7.b8, v7.b8, v31.b8); dump();
uaba(v7.b8, v7.b8, v7.b8); dump();
uaba(v0.b8, v7.b8, v7.b8); dump();
uaba(v1.b8, v7.b8, v7.b8); dump();
uaba(v2.b8, v7.b8, v7.b8); dump();
uaba(v4.b8, v7.b8, v7.b8); dump();
uaba(v8.b8, v7.b8, v7.b8); dump();
uaba(v16.b8, v7.b8, v7.b8); dump();
uaba(v31.b8, v7.b8, v7.b8); dump();
uaba(v7.b8, v7.b8, v7.b8); dump();
uaba(v7.b8, v0.b8, v7.b8); dump();
uaba(v7.b8, v1.b8, v7.b8); dump();
uaba(v7.b8, v2.b8, v7.b8); dump();
uaba(v7.b8, v4.b8, v7.b8); dump();
uaba(v7.b8, v8.b8, v7.b8); dump();
uaba(v7.b8, v16.b8, v7.b8); dump();
uaba(v7.b8, v31.b8, v7.b8); dump();
uaba(v7.b8, v7.b8, v7.b8); dump();
uaba(v7.b8, v7.b8, v0.b8); dump();
uaba(v7.b8, v7.b8, v1.b8); dump();
uaba(v7.b8, v7.b8, v2.b8); dump();
uaba(v7.b8, v7.b8, v4.b8); dump();
uaba(v7.b8, v7.b8, v8.b8); dump();
uaba(v7.b8, v7.b8, v16.b8); dump();
uaba(v7.b8, v7.b8, v31.b8); dump();
uabd(v7.b8, v7.b8, v7.b8); dump();
uabd(v0.b8, v7.b8, v7.b8); dump();
uabd(v1.b8, v7.b8, v7.b8); dump();
uabd(v2.b8, v7.b8, v7.b8); dump();
uabd(v4.b8, v7.b8, v7.b8); dump();
uabd(v8.b8, v7.b8, v7.b8); dump();
uabd(v16.b8, v7.b8, v7.b8); dump();
uabd(v31.b8, v7.b8, v7.b8); dump();
uabd(v7.b8, v7.b8, v7.b8); dump();
uabd(v7.b8, v0.b8, v7.b8); dump();
uabd(v7.b8, v1.b8, v7.b8); dump();
uabd(v7.b8, v2.b8, v7.b8); dump();
uabd(v7.b8, v4.b8, v7.b8); dump();
uabd(v7.b8, v8.b8, v7.b8); dump();
uabd(v7.b8, v16.b8, v7.b8); dump();
uabd(v7.b8, v31.b8, v7.b8); dump();
uabd(v7.b8, v7.b8, v7.b8); dump();
uabd(v7.b8, v7.b8, v0.b8); dump();
uabd(v7.b8, v7.b8, v1.b8); dump();
uabd(v7.b8, v7.b8, v2.b8); dump();
uabd(v7.b8, v7.b8, v4.b8); dump();
uabd(v7.b8, v7.b8, v8.b8); dump();
uabd(v7.b8, v7.b8, v16.b8); dump();
uabd(v7.b8, v7.b8, v31.b8); dump();
uhadd(v7.b8, v7.b8, v7.b8); dump();
uhadd(v0.b8, v7.b8, v7.b8); dump();
uhadd(v1.b8, v7.b8, v7.b8); dump();
uhadd(v2.b8, v7.b8, v7.b8); dump();
uhadd(v4.b8, v7.b8, v7.b8); dump();
uhadd(v8.b8, v7.b8, v7.b8); dump();
uhadd(v16.b8, v7.b8, v7.b8); dump();
uhadd(v31.b8, v7.b8, v7.b8); dump();
uhadd(v7.b8, v7.b8, v7.b8); dump();
uhadd(v7.b8, v0.b8, v7.b8); dump();
uhadd(v7.b8, v1.b8, v7.b8); dump();
uhadd(v7.b8, v2.b8, v7.b8); dump();
uhadd(v7.b8, v4.b8, v7.b8); dump();
uhadd(v7.b8, v8.b8, v7.b8); dump();
uhadd(v7.b8, v16.b8, v7.b8); dump();
uhadd(v7.b8, v31.b8, v7.b8); dump();
uhadd(v7.b8, v7.b8, v7.b8); dump();
uhadd(v7.b8, v7.b8, v0.b8); dump();
uhadd(v7.b8, v7.b8, v1.b8); dump();
uhadd(v7.b8, v7.b8, v2.b8); dump();
uhadd(v7.b8, v7.b8, v4.b8); dump();
uhadd(v7.b8, v7.b8, v8.b8); dump();
uhadd(v7.b8, v7.b8, v16.b8); dump();
uhadd(v7.b8, v7.b8, v31.b8); dump();
uhsub(v7.b8, v7.b8, v7.b8); dump();
uhsub(v0.b8, v7.b8, v7.b8); dump();
uhsub(v1.b8, v7.b8, v7.b8); dump();
uhsub(v2.b8, v7.b8, v7.b8); dump();
uhsub(v4.b8, v7.b8, v7.b8); dump();
uhsub(v8.b8, v7.b8, v7.b8); dump();
uhsub(v16.b8, v7.b8, v7.b8); dump();
uhsub(v31.b8, v7.b8, v7.b8); dump();
uhsub(v7.b8, v7.b8, v7.b8); dump();
uhsub(v7.b8, v0.b8, v7.b8); dump();
uhsub(v7.b8, v1.b8, v7.b8); dump();
uhsub(v7.b8, v2.b8, v7.b8); dump();
uhsub(v7.b8, v4.b8, v7.b8); dump();
uhsub(v7.b8, v8.b8, v7.b8); dump();
uhsub(v7.b8, v16.b8, v7.b8); dump();
uhsub(v7.b8, v31.b8, v7.b8); dump();
uhsub(v7.b8, v7.b8, v7.b8); dump();
uhsub(v7.b8, v7.b8, v0.b8); dump();
uhsub(v7.b8, v7.b8, v1.b8); dump();
uhsub(v7.b8, v7.b8, v2.b8); dump();
uhsub(v7.b8, v7.b8, v4.b8); dump();
uhsub(v7.b8, v7.b8, v8.b8); dump();
uhsub(v7.b8, v7.b8, v16.b8); dump();
uhsub(v7.b8, v7.b8, v31.b8); dump();
umax(v7.b8, v7.b8, v7.b8); dump();
umax(v0.b8, v7.b8, v7.b8); dump();
umax(v1.b8, v7.b8, v7.b8); dump();
umax(v2.b8, v7.b8, v7.b8); dump();
umax(v4.b8, v7.b8, v7.b8); dump();
umax(v8.b8, v7.b8, v7.b8); dump();
umax(v16.b8, v7.b8, v7.b8); dump();
umax(v31.b8, v7.b8, v7.b8); dump();
umax(v7.b8, v7.b8, v7.b8); dump();
umax(v7.b8, v0.b8, v7.b8); dump();
umax(v7.b8, v1.b8, v7.b8); dump();
umax(v7.b8, v2.b8, v7.b8); dump();
umax(v7.b8, v4.b8, v7.b8); dump();
umax(v7.b8, v8.b8, v7.b8); dump();
umax(v7.b8, v16.b8, v7.b8); dump();
umax(v7.b8, v31.b8, v7.b8); dump();
umax(v7.b8, v7.b8, v7.b8); dump();
umax(v7.b8, v7.b8, v0.b8); dump();
umax(v7.b8, v7.b8, v1.b8); dump();
umax(v7.b8, v7.b8, v2.b8); dump();
umax(v7.b8, v7.b8, v4.b8); dump();
umax(v7.b8, v7.b8, v8.b8); dump();
umax(v7.b8, v7.b8, v16.b8); dump();
umax(v7.b8, v7.b8, v31.b8); dump();
umin(v7.b8, v7.b8, v7.b8); dump();
umin(v0.b8, v7.b8, v7.b8); dump();
umin(v1.b8, v7.b8, v7.b8); dump();
umin(v2.b8, v7.b8, v7.b8); dump();
umin(v4.b8, v7.b8, v7.b8); dump();
umin(v8.b8, v7.b8, v7.b8); dump();
umin(v16.b8, v7.b8, v7.b8); dump();
umin(v31.b8, v7.b8, v7.b8); dump();
umin(v7.b8, v7.b8, v7.b8); dump();
umin(v7.b8, v0.b8, v7.b8); dump();
umin(v7.b8, v1.b8, v7.b8); dump();
umin(v7.b8, v2.b8, v7.b8); dump();
umin(v7.b8, v4.b8, v7.b8); dump();
umin(v7.b8, v8.b8, v7.b8); dump();
umin(v7.b8, v16.b8, v7.b8); dump();
umin(v7.b8, v31.b8, v7.b8); dump();
umin(v7.b8, v7.b8, v7.b8); dump();
umin(v7.b8, v7.b8, v0.b8); dump();
umin(v7.b8, v7.b8, v1.b8); dump();
umin(v7.b8, v7.b8, v2.b8); dump();
umin(v7.b8, v7.b8, v4.b8); dump();
umin(v7.b8, v7.b8, v8.b8); dump();
umin(v7.b8, v7.b8, v16.b8); dump();
umin(v7.b8, v7.b8, v31.b8); dump();
urhadd(v7.b8, v7.b8, v7.b8); dump();
urhadd(v0.b8, v7.b8, v7.b8); dump();
urhadd(v1.b8, v7.b8, v7.b8); dump();
urhadd(v2.b8, v7.b8, v7.b8); dump();
urhadd(v4.b8, v7.b8, v7.b8); dump();
urhadd(v8.b8, v7.b8, v7.b8); dump();
urhadd(v16.b8, v7.b8, v7.b8); dump();
urhadd(v31.b8, v7.b8, v7.b8); dump();
urhadd(v7.b8, v7.b8, v7.b8); dump();
urhadd(v7.b8, v0.b8, v7.b8); dump();
urhadd(v7.b8, v1.b8, v7.b8); dump();
urhadd(v7.b8, v2.b8, v7.b8); dump();
urhadd(v7.b8, v4.b8, v7.b8); dump();
urhadd(v7.b8, v8.b8, v7.b8); dump();
urhadd(v7.b8, v16.b8, v7.b8); dump();
urhadd(v7.b8, v31.b8, v7.b8); dump();
urhadd(v7.b8, v7.b8, v7.b8); dump();
urhadd(v7.b8, v7.b8, v0.b8); dump();
urhadd(v7.b8, v7.b8, v1.b8); dump();
urhadd(v7.b8, v7.b8, v2.b8); dump();
urhadd(v7.b8, v7.b8, v4.b8); dump();
urhadd(v7.b8, v7.b8, v8.b8); dump();
urhadd(v7.b8, v7.b8, v16.b8); dump();
urhadd(v7.b8, v7.b8, v31.b8); dump();
//DataProcSimd_Arithmetic10:1
mla(v7.b16, v7.b16, v7.b16); dump();
mla(v0.b16, v7.b16, v7.b16); dump();
mla(v1.b16, v7.b16, v7.b16); dump();
mla(v2.b16, v7.b16, v7.b16); dump();
mla(v4.b16, v7.b16, v7.b16); dump();
mla(v8.b16, v7.b16, v7.b16); dump();
mla(v16.b16, v7.b16, v7.b16); dump();
mla(v31.b16, v7.b16, v7.b16); dump();
mla(v7.b16, v7.b16, v7.b16); dump();
mla(v7.b16, v0.b16, v7.b16); dump();
mla(v7.b16, v1.b16, v7.b16); dump();
mla(v7.b16, v2.b16, v7.b16); dump();
mla(v7.b16, v4.b16, v7.b16); dump();
mla(v7.b16, v8.b16, v7.b16); dump();
mla(v7.b16, v16.b16, v7.b16); dump();
mla(v7.b16, v31.b16, v7.b16); dump();
mla(v7.b16, v7.b16, v7.b16); dump();
mla(v7.b16, v7.b16, v0.b16); dump();
mla(v7.b16, v7.b16, v1.b16); dump();
mla(v7.b16, v7.b16, v2.b16); dump();
mla(v7.b16, v7.b16, v4.b16); dump();
mla(v7.b16, v7.b16, v8.b16); dump();
mla(v7.b16, v7.b16, v16.b16); dump();
mla(v7.b16, v7.b16, v31.b16); dump();
mls(v7.b16, v7.b16, v7.b16); dump();
mls(v0.b16, v7.b16, v7.b16); dump();
mls(v1.b16, v7.b16, v7.b16); dump();
mls(v2.b16, v7.b16, v7.b16); dump();
mls(v4.b16, v7.b16, v7.b16); dump();
mls(v8.b16, v7.b16, v7.b16); dump();
mls(v16.b16, v7.b16, v7.b16); dump();
mls(v31.b16, v7.b16, v7.b16); dump();
mls(v7.b16, v7.b16, v7.b16); dump();
mls(v7.b16, v0.b16, v7.b16); dump();
mls(v7.b16, v1.b16, v7.b16); dump();
mls(v7.b16, v2.b16, v7.b16); dump();
mls(v7.b16, v4.b16, v7.b16); dump();
mls(v7.b16, v8.b16, v7.b16); dump();
mls(v7.b16, v16.b16, v7.b16); dump();
mls(v7.b16, v31.b16, v7.b16); dump();
mls(v7.b16, v7.b16, v7.b16); dump();
mls(v7.b16, v7.b16, v0.b16); dump();
mls(v7.b16, v7.b16, v1.b16); dump();
mls(v7.b16, v7.b16, v2.b16); dump();
mls(v7.b16, v7.b16, v4.b16); dump();
mls(v7.b16, v7.b16, v8.b16); dump();
mls(v7.b16, v7.b16, v16.b16); dump();
mls(v7.b16, v7.b16, v31.b16); dump();
mul(v7.b16, v7.b16, v7.b16); dump();
mul(v0.b16, v7.b16, v7.b16); dump();
mul(v1.b16, v7.b16, v7.b16); dump();
mul(v2.b16, v7.b16, v7.b16); dump();
mul(v4.b16, v7.b16, v7.b16); dump();
mul(v8.b16, v7.b16, v7.b16); dump();
mul(v16.b16, v7.b16, v7.b16); dump();
mul(v31.b16, v7.b16, v7.b16); dump();
mul(v7.b16, v7.b16, v7.b16); dump();
mul(v7.b16, v0.b16, v7.b16); dump();
mul(v7.b16, v1.b16, v7.b16); dump();
mul(v7.b16, v2.b16, v7.b16); dump();
mul(v7.b16, v4.b16, v7.b16); dump();
mul(v7.b16, v8.b16, v7.b16); dump();
mul(v7.b16, v16.b16, v7.b16); dump();
mul(v7.b16, v31.b16, v7.b16); dump();
mul(v7.b16, v7.b16, v7.b16); dump();
mul(v7.b16, v7.b16, v0.b16); dump();
mul(v7.b16, v7.b16, v1.b16); dump();
mul(v7.b16, v7.b16, v2.b16); dump();
mul(v7.b16, v7.b16, v4.b16); dump();
mul(v7.b16, v7.b16, v8.b16); dump();
mul(v7.b16, v7.b16, v16.b16); dump();
mul(v7.b16, v7.b16, v31.b16); dump();
saba(v7.b16, v7.b16, v7.b16); dump();
saba(v0.b16, v7.b16, v7.b16); dump();
saba(v1.b16, v7.b16, v7.b16); dump();
saba(v2.b16, v7.b16, v7.b16); dump();
saba(v4.b16, v7.b16, v7.b16); dump();
saba(v8.b16, v7.b16, v7.b16); dump();
saba(v16.b16, v7.b16, v7.b16); dump();
saba(v31.b16, v7.b16, v7.b16); dump();
saba(v7.b16, v7.b16, v7.b16); dump();
saba(v7.b16, v0.b16, v7.b16); dump();
saba(v7.b16, v1.b16, v7.b16); dump();
saba(v7.b16, v2.b16, v7.b16); dump();
saba(v7.b16, v4.b16, v7.b16); dump();
saba(v7.b16, v8.b16, v7.b16); dump();
saba(v7.b16, v16.b16, v7.b16); dump();
saba(v7.b16, v31.b16, v7.b16); dump();
saba(v7.b16, v7.b16, v7.b16); dump();
saba(v7.b16, v7.b16, v0.b16); dump();
saba(v7.b16, v7.b16, v1.b16); dump();
saba(v7.b16, v7.b16, v2.b16); dump();
saba(v7.b16, v7.b16, v4.b16); dump();
saba(v7.b16, v7.b16, v8.b16); dump();
saba(v7.b16, v7.b16, v16.b16); dump();
saba(v7.b16, v7.b16, v31.b16); dump();
sabd(v7.b16, v7.b16, v7.b16); dump();
sabd(v0.b16, v7.b16, v7.b16); dump();
sabd(v1.b16, v7.b16, v7.b16); dump();
sabd(v2.b16, v7.b16, v7.b16); dump();
sabd(v4.b16, v7.b16, v7.b16); dump();
sabd(v8.b16, v7.b16, v7.b16); dump();
sabd(v16.b16, v7.b16, v7.b16); dump();
sabd(v31.b16, v7.b16, v7.b16); dump();
sabd(v7.b16, v7.b16, v7.b16); dump();
sabd(v7.b16, v0.b16, v7.b16); dump();
sabd(v7.b16, v1.b16, v7.b16); dump();
sabd(v7.b16, v2.b16, v7.b16); dump();
sabd(v7.b16, v4.b16, v7.b16); dump();
sabd(v7.b16, v8.b16, v7.b16); dump();
sabd(v7.b16, v16.b16, v7.b16); dump();
sabd(v7.b16, v31.b16, v7.b16); dump();
sabd(v7.b16, v7.b16, v7.b16); dump();
sabd(v7.b16, v7.b16, v0.b16); dump();
sabd(v7.b16, v7.b16, v1.b16); dump();
sabd(v7.b16, v7.b16, v2.b16); dump();
sabd(v7.b16, v7.b16, v4.b16); dump();
sabd(v7.b16, v7.b16, v8.b16); dump();
sabd(v7.b16, v7.b16, v16.b16); dump();
sabd(v7.b16, v7.b16, v31.b16); dump();
shadd(v7.b16, v7.b16, v7.b16); dump();
shadd(v0.b16, v7.b16, v7.b16); dump();
shadd(v1.b16, v7.b16, v7.b16); dump();
shadd(v2.b16, v7.b16, v7.b16); dump();
shadd(v4.b16, v7.b16, v7.b16); dump();
shadd(v8.b16, v7.b16, v7.b16); dump();
shadd(v16.b16, v7.b16, v7.b16); dump();
shadd(v31.b16, v7.b16, v7.b16); dump();
shadd(v7.b16, v7.b16, v7.b16); dump();
shadd(v7.b16, v0.b16, v7.b16); dump();
shadd(v7.b16, v1.b16, v7.b16); dump();
shadd(v7.b16, v2.b16, v7.b16); dump();
shadd(v7.b16, v4.b16, v7.b16); dump();
shadd(v7.b16, v8.b16, v7.b16); dump();
shadd(v7.b16, v16.b16, v7.b16); dump();
shadd(v7.b16, v31.b16, v7.b16); dump();
shadd(v7.b16, v7.b16, v7.b16); dump();
shadd(v7.b16, v7.b16, v0.b16); dump();
shadd(v7.b16, v7.b16, v1.b16); dump();
shadd(v7.b16, v7.b16, v2.b16); dump();
shadd(v7.b16, v7.b16, v4.b16); dump();
shadd(v7.b16, v7.b16, v8.b16); dump();
shadd(v7.b16, v7.b16, v16.b16); dump();
shadd(v7.b16, v7.b16, v31.b16); dump();
shsub(v7.b16, v7.b16, v7.b16); dump();
shsub(v0.b16, v7.b16, v7.b16); dump();
shsub(v1.b16, v7.b16, v7.b16); dump();
shsub(v2.b16, v7.b16, v7.b16); dump();
shsub(v4.b16, v7.b16, v7.b16); dump();
shsub(v8.b16, v7.b16, v7.b16); dump();
shsub(v16.b16, v7.b16, v7.b16); dump();
shsub(v31.b16, v7.b16, v7.b16); dump();
shsub(v7.b16, v7.b16, v7.b16); dump();
shsub(v7.b16, v0.b16, v7.b16); dump();
shsub(v7.b16, v1.b16, v7.b16); dump();
shsub(v7.b16, v2.b16, v7.b16); dump();
shsub(v7.b16, v4.b16, v7.b16); dump();
shsub(v7.b16, v8.b16, v7.b16); dump();
shsub(v7.b16, v16.b16, v7.b16); dump();
shsub(v7.b16, v31.b16, v7.b16); dump();
shsub(v7.b16, v7.b16, v7.b16); dump();
shsub(v7.b16, v7.b16, v0.b16); dump();
shsub(v7.b16, v7.b16, v1.b16); dump();
shsub(v7.b16, v7.b16, v2.b16); dump();
shsub(v7.b16, v7.b16, v4.b16); dump();
shsub(v7.b16, v7.b16, v8.b16); dump();
shsub(v7.b16, v7.b16, v16.b16); dump();
shsub(v7.b16, v7.b16, v31.b16); dump();
smax(v7.b16, v7.b16, v7.b16); dump();
smax(v0.b16, v7.b16, v7.b16); dump();
smax(v1.b16, v7.b16, v7.b16); dump();
smax(v2.b16, v7.b16, v7.b16); dump();
smax(v4.b16, v7.b16, v7.b16); dump();
smax(v8.b16, v7.b16, v7.b16); dump();
smax(v16.b16, v7.b16, v7.b16); dump();
smax(v31.b16, v7.b16, v7.b16); dump();
smax(v7.b16, v7.b16, v7.b16); dump();
smax(v7.b16, v0.b16, v7.b16); dump();
smax(v7.b16, v1.b16, v7.b16); dump();
smax(v7.b16, v2.b16, v7.b16); dump();
smax(v7.b16, v4.b16, v7.b16); dump();
smax(v7.b16, v8.b16, v7.b16); dump();
smax(v7.b16, v16.b16, v7.b16); dump();
smax(v7.b16, v31.b16, v7.b16); dump();
smax(v7.b16, v7.b16, v7.b16); dump();
smax(v7.b16, v7.b16, v0.b16); dump();
smax(v7.b16, v7.b16, v1.b16); dump();
smax(v7.b16, v7.b16, v2.b16); dump();
smax(v7.b16, v7.b16, v4.b16); dump();
smax(v7.b16, v7.b16, v8.b16); dump();
smax(v7.b16, v7.b16, v16.b16); dump();
smax(v7.b16, v7.b16, v31.b16); dump();
smin(v7.b16, v7.b16, v7.b16); dump();
smin(v0.b16, v7.b16, v7.b16); dump();
smin(v1.b16, v7.b16, v7.b16); dump();
smin(v2.b16, v7.b16, v7.b16); dump();
smin(v4.b16, v7.b16, v7.b16); dump();
smin(v8.b16, v7.b16, v7.b16); dump();
smin(v16.b16, v7.b16, v7.b16); dump();
smin(v31.b16, v7.b16, v7.b16); dump();
smin(v7.b16, v7.b16, v7.b16); dump();
smin(v7.b16, v0.b16, v7.b16); dump();
smin(v7.b16, v1.b16, v7.b16); dump();
smin(v7.b16, v2.b16, v7.b16); dump();
smin(v7.b16, v4.b16, v7.b16); dump();
smin(v7.b16, v8.b16, v7.b16); dump();
smin(v7.b16, v16.b16, v7.b16); dump();
smin(v7.b16, v31.b16, v7.b16); dump();
smin(v7.b16, v7.b16, v7.b16); dump();
smin(v7.b16, v7.b16, v0.b16); dump();
smin(v7.b16, v7.b16, v1.b16); dump();
smin(v7.b16, v7.b16, v2.b16); dump();
smin(v7.b16, v7.b16, v4.b16); dump();
smin(v7.b16, v7.b16, v8.b16); dump();
smin(v7.b16, v7.b16, v16.b16); dump();
smin(v7.b16, v7.b16, v31.b16); dump();
srhadd(v7.b16, v7.b16, v7.b16); dump();
srhadd(v0.b16, v7.b16, v7.b16); dump();
srhadd(v1.b16, v7.b16, v7.b16); dump();
srhadd(v2.b16, v7.b16, v7.b16); dump();
srhadd(v4.b16, v7.b16, v7.b16); dump();
srhadd(v8.b16, v7.b16, v7.b16); dump();
srhadd(v16.b16, v7.b16, v7.b16); dump();
srhadd(v31.b16, v7.b16, v7.b16); dump();
srhadd(v7.b16, v7.b16, v7.b16); dump();
srhadd(v7.b16, v0.b16, v7.b16); dump();
srhadd(v7.b16, v1.b16, v7.b16); dump();
srhadd(v7.b16, v2.b16, v7.b16); dump();
srhadd(v7.b16, v4.b16, v7.b16); dump();
srhadd(v7.b16, v8.b16, v7.b16); dump();
srhadd(v7.b16, v16.b16, v7.b16); dump();
srhadd(v7.b16, v31.b16, v7.b16); dump();
srhadd(v7.b16, v7.b16, v7.b16); dump();
srhadd(v7.b16, v7.b16, v0.b16); dump();
srhadd(v7.b16, v7.b16, v1.b16); dump();
srhadd(v7.b16, v7.b16, v2.b16); dump();
srhadd(v7.b16, v7.b16, v4.b16); dump();
srhadd(v7.b16, v7.b16, v8.b16); dump();
srhadd(v7.b16, v7.b16, v16.b16); dump();
srhadd(v7.b16, v7.b16, v31.b16); dump();
uaba(v7.b16, v7.b16, v7.b16); dump();
uaba(v0.b16, v7.b16, v7.b16); dump();
uaba(v1.b16, v7.b16, v7.b16); dump();
uaba(v2.b16, v7.b16, v7.b16); dump();
uaba(v4.b16, v7.b16, v7.b16); dump();
uaba(v8.b16, v7.b16, v7.b16); dump();
uaba(v16.b16, v7.b16, v7.b16); dump();
uaba(v31.b16, v7.b16, v7.b16); dump();
uaba(v7.b16, v7.b16, v7.b16); dump();
uaba(v7.b16, v0.b16, v7.b16); dump();
uaba(v7.b16, v1.b16, v7.b16); dump();
uaba(v7.b16, v2.b16, v7.b16); dump();
uaba(v7.b16, v4.b16, v7.b16); dump();
uaba(v7.b16, v8.b16, v7.b16); dump();
uaba(v7.b16, v16.b16, v7.b16); dump();
uaba(v7.b16, v31.b16, v7.b16); dump();
uaba(v7.b16, v7.b16, v7.b16); dump();
uaba(v7.b16, v7.b16, v0.b16); dump();
uaba(v7.b16, v7.b16, v1.b16); dump();
uaba(v7.b16, v7.b16, v2.b16); dump();
uaba(v7.b16, v7.b16, v4.b16); dump();
uaba(v7.b16, v7.b16, v8.b16); dump();
uaba(v7.b16, v7.b16, v16.b16); dump();
uaba(v7.b16, v7.b16, v31.b16); dump();
uabd(v7.b16, v7.b16, v7.b16); dump();
uabd(v0.b16, v7.b16, v7.b16); dump();
uabd(v1.b16, v7.b16, v7.b16); dump();
uabd(v2.b16, v7.b16, v7.b16); dump();
uabd(v4.b16, v7.b16, v7.b16); dump();
uabd(v8.b16, v7.b16, v7.b16); dump();
uabd(v16.b16, v7.b16, v7.b16); dump();
uabd(v31.b16, v7.b16, v7.b16); dump();
uabd(v7.b16, v7.b16, v7.b16); dump();
uabd(v7.b16, v0.b16, v7.b16); dump();
uabd(v7.b16, v1.b16, v7.b16); dump();
uabd(v7.b16, v2.b16, v7.b16); dump();
uabd(v7.b16, v4.b16, v7.b16); dump();
uabd(v7.b16, v8.b16, v7.b16); dump();
uabd(v7.b16, v16.b16, v7.b16); dump();
uabd(v7.b16, v31.b16, v7.b16); dump();
uabd(v7.b16, v7.b16, v7.b16); dump();
uabd(v7.b16, v7.b16, v0.b16); dump();
uabd(v7.b16, v7.b16, v1.b16); dump();
uabd(v7.b16, v7.b16, v2.b16); dump();
uabd(v7.b16, v7.b16, v4.b16); dump();
uabd(v7.b16, v7.b16, v8.b16); dump();
uabd(v7.b16, v7.b16, v16.b16); dump();
uabd(v7.b16, v7.b16, v31.b16); dump();
uhadd(v7.b16, v7.b16, v7.b16); dump();
uhadd(v0.b16, v7.b16, v7.b16); dump();
uhadd(v1.b16, v7.b16, v7.b16); dump();
uhadd(v2.b16, v7.b16, v7.b16); dump();
uhadd(v4.b16, v7.b16, v7.b16); dump();
uhadd(v8.b16, v7.b16, v7.b16); dump();
uhadd(v16.b16, v7.b16, v7.b16); dump();
uhadd(v31.b16, v7.b16, v7.b16); dump();
uhadd(v7.b16, v7.b16, v7.b16); dump();
uhadd(v7.b16, v0.b16, v7.b16); dump();
uhadd(v7.b16, v1.b16, v7.b16); dump();
uhadd(v7.b16, v2.b16, v7.b16); dump();
uhadd(v7.b16, v4.b16, v7.b16); dump();
uhadd(v7.b16, v8.b16, v7.b16); dump();
uhadd(v7.b16, v16.b16, v7.b16); dump();
uhadd(v7.b16, v31.b16, v7.b16); dump();
uhadd(v7.b16, v7.b16, v7.b16); dump();
uhadd(v7.b16, v7.b16, v0.b16); dump();
uhadd(v7.b16, v7.b16, v1.b16); dump();
uhadd(v7.b16, v7.b16, v2.b16); dump();
uhadd(v7.b16, v7.b16, v4.b16); dump();
uhadd(v7.b16, v7.b16, v8.b16); dump();
uhadd(v7.b16, v7.b16, v16.b16); dump();
uhadd(v7.b16, v7.b16, v31.b16); dump();
uhsub(v7.b16, v7.b16, v7.b16); dump();
uhsub(v0.b16, v7.b16, v7.b16); dump();
uhsub(v1.b16, v7.b16, v7.b16); dump();
uhsub(v2.b16, v7.b16, v7.b16); dump();
uhsub(v4.b16, v7.b16, v7.b16); dump();
uhsub(v8.b16, v7.b16, v7.b16); dump();
uhsub(v16.b16, v7.b16, v7.b16); dump();
uhsub(v31.b16, v7.b16, v7.b16); dump();
uhsub(v7.b16, v7.b16, v7.b16); dump();
uhsub(v7.b16, v0.b16, v7.b16); dump();
uhsub(v7.b16, v1.b16, v7.b16); dump();
uhsub(v7.b16, v2.b16, v7.b16); dump();
uhsub(v7.b16, v4.b16, v7.b16); dump();
uhsub(v7.b16, v8.b16, v7.b16); dump();
uhsub(v7.b16, v16.b16, v7.b16); dump();
uhsub(v7.b16, v31.b16, v7.b16); dump();
uhsub(v7.b16, v7.b16, v7.b16); dump();
uhsub(v7.b16, v7.b16, v0.b16); dump();
uhsub(v7.b16, v7.b16, v1.b16); dump();
uhsub(v7.b16, v7.b16, v2.b16); dump();
uhsub(v7.b16, v7.b16, v4.b16); dump();
uhsub(v7.b16, v7.b16, v8.b16); dump();
uhsub(v7.b16, v7.b16, v16.b16); dump();
uhsub(v7.b16, v7.b16, v31.b16); dump();
umax(v7.b16, v7.b16, v7.b16); dump();
umax(v0.b16, v7.b16, v7.b16); dump();
umax(v1.b16, v7.b16, v7.b16); dump();
umax(v2.b16, v7.b16, v7.b16); dump();
umax(v4.b16, v7.b16, v7.b16); dump();
umax(v8.b16, v7.b16, v7.b16); dump();
umax(v16.b16, v7.b16, v7.b16); dump();
umax(v31.b16, v7.b16, v7.b16); dump();
umax(v7.b16, v7.b16, v7.b16); dump();
umax(v7.b16, v0.b16, v7.b16); dump();
umax(v7.b16, v1.b16, v7.b16); dump();
umax(v7.b16, v2.b16, v7.b16); dump();
umax(v7.b16, v4.b16, v7.b16); dump();
umax(v7.b16, v8.b16, v7.b16); dump();
umax(v7.b16, v16.b16, v7.b16); dump();
umax(v7.b16, v31.b16, v7.b16); dump();
umax(v7.b16, v7.b16, v7.b16); dump();
umax(v7.b16, v7.b16, v0.b16); dump();
umax(v7.b16, v7.b16, v1.b16); dump();
umax(v7.b16, v7.b16, v2.b16); dump();
umax(v7.b16, v7.b16, v4.b16); dump();
umax(v7.b16, v7.b16, v8.b16); dump();
umax(v7.b16, v7.b16, v16.b16); dump();
umax(v7.b16, v7.b16, v31.b16); dump();
umin(v7.b16, v7.b16, v7.b16); dump();
umin(v0.b16, v7.b16, v7.b16); dump();
umin(v1.b16, v7.b16, v7.b16); dump();
umin(v2.b16, v7.b16, v7.b16); dump();
umin(v4.b16, v7.b16, v7.b16); dump();
umin(v8.b16, v7.b16, v7.b16); dump();
umin(v16.b16, v7.b16, v7.b16); dump();
umin(v31.b16, v7.b16, v7.b16); dump();
umin(v7.b16, v7.b16, v7.b16); dump();
umin(v7.b16, v0.b16, v7.b16); dump();
umin(v7.b16, v1.b16, v7.b16); dump();
umin(v7.b16, v2.b16, v7.b16); dump();
umin(v7.b16, v4.b16, v7.b16); dump();
umin(v7.b16, v8.b16, v7.b16); dump();
umin(v7.b16, v16.b16, v7.b16); dump();
umin(v7.b16, v31.b16, v7.b16); dump();
umin(v7.b16, v7.b16, v7.b16); dump();
umin(v7.b16, v7.b16, v0.b16); dump();
umin(v7.b16, v7.b16, v1.b16); dump();
umin(v7.b16, v7.b16, v2.b16); dump();
umin(v7.b16, v7.b16, v4.b16); dump();
umin(v7.b16, v7.b16, v8.b16); dump();
umin(v7.b16, v7.b16, v16.b16); dump();
umin(v7.b16, v7.b16, v31.b16); dump();
urhadd(v7.b16, v7.b16, v7.b16); dump();
urhadd(v0.b16, v7.b16, v7.b16); dump();
urhadd(v1.b16, v7.b16, v7.b16); dump();
urhadd(v2.b16, v7.b16, v7.b16); dump();
urhadd(v4.b16, v7.b16, v7.b16); dump();
urhadd(v8.b16, v7.b16, v7.b16); dump();
urhadd(v16.b16, v7.b16, v7.b16); dump();
urhadd(v31.b16, v7.b16, v7.b16); dump();
urhadd(v7.b16, v7.b16, v7.b16); dump();
urhadd(v7.b16, v0.b16, v7.b16); dump();
urhadd(v7.b16, v1.b16, v7.b16); dump();
urhadd(v7.b16, v2.b16, v7.b16); dump();
urhadd(v7.b16, v4.b16, v7.b16); dump();
urhadd(v7.b16, v8.b16, v7.b16); dump();
urhadd(v7.b16, v16.b16, v7.b16); dump();
urhadd(v7.b16, v31.b16, v7.b16); dump();
urhadd(v7.b16, v7.b16, v7.b16); dump();
urhadd(v7.b16, v7.b16, v0.b16); dump();
urhadd(v7.b16, v7.b16, v1.b16); dump();
urhadd(v7.b16, v7.b16, v2.b16); dump();
urhadd(v7.b16, v7.b16, v4.b16); dump();
urhadd(v7.b16, v7.b16, v8.b16); dump();
urhadd(v7.b16, v7.b16, v16.b16); dump();
urhadd(v7.b16, v7.b16, v31.b16); dump();
//DataProcSimd_Arithmetic10:2
mla(v7.h4, v7.h4, v7.h4); dump();
mla(v0.h4, v7.h4, v7.h4); dump();
mla(v1.h4, v7.h4, v7.h4); dump();
mla(v2.h4, v7.h4, v7.h4); dump();
mla(v4.h4, v7.h4, v7.h4); dump();
mla(v8.h4, v7.h4, v7.h4); dump();
mla(v16.h4, v7.h4, v7.h4); dump();
mla(v31.h4, v7.h4, v7.h4); dump();
mla(v7.h4, v7.h4, v7.h4); dump();
mla(v7.h4, v0.h4, v7.h4); dump();
mla(v7.h4, v1.h4, v7.h4); dump();
mla(v7.h4, v2.h4, v7.h4); dump();
mla(v7.h4, v4.h4, v7.h4); dump();
mla(v7.h4, v8.h4, v7.h4); dump();
mla(v7.h4, v16.h4, v7.h4); dump();
mla(v7.h4, v31.h4, v7.h4); dump();
mla(v7.h4, v7.h4, v7.h4); dump();
mla(v7.h4, v7.h4, v0.h4); dump();
mla(v7.h4, v7.h4, v1.h4); dump();
mla(v7.h4, v7.h4, v2.h4); dump();
mla(v7.h4, v7.h4, v4.h4); dump();
mla(v7.h4, v7.h4, v8.h4); dump();
mla(v7.h4, v7.h4, v16.h4); dump();
mla(v7.h4, v7.h4, v31.h4); dump();
mls(v7.h4, v7.h4, v7.h4); dump();
mls(v0.h4, v7.h4, v7.h4); dump();
mls(v1.h4, v7.h4, v7.h4); dump();
mls(v2.h4, v7.h4, v7.h4); dump();
mls(v4.h4, v7.h4, v7.h4); dump();
mls(v8.h4, v7.h4, v7.h4); dump();
mls(v16.h4, v7.h4, v7.h4); dump();
mls(v31.h4, v7.h4, v7.h4); dump();
mls(v7.h4, v7.h4, v7.h4); dump();
mls(v7.h4, v0.h4, v7.h4); dump();
mls(v7.h4, v1.h4, v7.h4); dump();
mls(v7.h4, v2.h4, v7.h4); dump();
mls(v7.h4, v4.h4, v7.h4); dump();
mls(v7.h4, v8.h4, v7.h4); dump();
mls(v7.h4, v16.h4, v7.h4); dump();
mls(v7.h4, v31.h4, v7.h4); dump();
mls(v7.h4, v7.h4, v7.h4); dump();
mls(v7.h4, v7.h4, v0.h4); dump();
mls(v7.h4, v7.h4, v1.h4); dump();
mls(v7.h4, v7.h4, v2.h4); dump();
mls(v7.h4, v7.h4, v4.h4); dump();
mls(v7.h4, v7.h4, v8.h4); dump();
mls(v7.h4, v7.h4, v16.h4); dump();
mls(v7.h4, v7.h4, v31.h4); dump();
mul(v7.h4, v7.h4, v7.h4); dump();
mul(v0.h4, v7.h4, v7.h4); dump();
mul(v1.h4, v7.h4, v7.h4); dump();
mul(v2.h4, v7.h4, v7.h4); dump();
mul(v4.h4, v7.h4, v7.h4); dump();
mul(v8.h4, v7.h4, v7.h4); dump();
mul(v16.h4, v7.h4, v7.h4); dump();
mul(v31.h4, v7.h4, v7.h4); dump();
mul(v7.h4, v7.h4, v7.h4); dump();
mul(v7.h4, v0.h4, v7.h4); dump();
mul(v7.h4, v1.h4, v7.h4); dump();
mul(v7.h4, v2.h4, v7.h4); dump();
mul(v7.h4, v4.h4, v7.h4); dump();
mul(v7.h4, v8.h4, v7.h4); dump();
mul(v7.h4, v16.h4, v7.h4); dump();
mul(v7.h4, v31.h4, v7.h4); dump();
mul(v7.h4, v7.h4, v7.h4); dump();
mul(v7.h4, v7.h4, v0.h4); dump();
mul(v7.h4, v7.h4, v1.h4); dump();
mul(v7.h4, v7.h4, v2.h4); dump();
mul(v7.h4, v7.h4, v4.h4); dump();
mul(v7.h4, v7.h4, v8.h4); dump();
mul(v7.h4, v7.h4, v16.h4); dump();
mul(v7.h4, v7.h4, v31.h4); dump();
saba(v7.h4, v7.h4, v7.h4); dump();
saba(v0.h4, v7.h4, v7.h4); dump();
saba(v1.h4, v7.h4, v7.h4); dump();
saba(v2.h4, v7.h4, v7.h4); dump();
saba(v4.h4, v7.h4, v7.h4); dump();
saba(v8.h4, v7.h4, v7.h4); dump();
saba(v16.h4, v7.h4, v7.h4); dump();
saba(v31.h4, v7.h4, v7.h4); dump();
saba(v7.h4, v7.h4, v7.h4); dump();
saba(v7.h4, v0.h4, v7.h4); dump();
saba(v7.h4, v1.h4, v7.h4); dump();
saba(v7.h4, v2.h4, v7.h4); dump();
saba(v7.h4, v4.h4, v7.h4); dump();
saba(v7.h4, v8.h4, v7.h4); dump();
saba(v7.h4, v16.h4, v7.h4); dump();
saba(v7.h4, v31.h4, v7.h4); dump();
saba(v7.h4, v7.h4, v7.h4); dump();
saba(v7.h4, v7.h4, v0.h4); dump();
saba(v7.h4, v7.h4, v1.h4); dump();
saba(v7.h4, v7.h4, v2.h4); dump();
saba(v7.h4, v7.h4, v4.h4); dump();
saba(v7.h4, v7.h4, v8.h4); dump();
saba(v7.h4, v7.h4, v16.h4); dump();
saba(v7.h4, v7.h4, v31.h4); dump();
sabd(v7.h4, v7.h4, v7.h4); dump();
sabd(v0.h4, v7.h4, v7.h4); dump();
sabd(v1.h4, v7.h4, v7.h4); dump();
sabd(v2.h4, v7.h4, v7.h4); dump();
sabd(v4.h4, v7.h4, v7.h4); dump();
sabd(v8.h4, v7.h4, v7.h4); dump();
sabd(v16.h4, v7.h4, v7.h4); dump();
sabd(v31.h4, v7.h4, v7.h4); dump();
sabd(v7.h4, v7.h4, v7.h4); dump();
sabd(v7.h4, v0.h4, v7.h4); dump();
sabd(v7.h4, v1.h4, v7.h4); dump();
sabd(v7.h4, v2.h4, v7.h4); dump();
sabd(v7.h4, v4.h4, v7.h4); dump();
sabd(v7.h4, v8.h4, v7.h4); dump();
sabd(v7.h4, v16.h4, v7.h4); dump();
sabd(v7.h4, v31.h4, v7.h4); dump();
sabd(v7.h4, v7.h4, v7.h4); dump();
sabd(v7.h4, v7.h4, v0.h4); dump();
sabd(v7.h4, v7.h4, v1.h4); dump();
sabd(v7.h4, v7.h4, v2.h4); dump();
sabd(v7.h4, v7.h4, v4.h4); dump();
sabd(v7.h4, v7.h4, v8.h4); dump();
sabd(v7.h4, v7.h4, v16.h4); dump();
sabd(v7.h4, v7.h4, v31.h4); dump();
shadd(v7.h4, v7.h4, v7.h4); dump();
shadd(v0.h4, v7.h4, v7.h4); dump();
shadd(v1.h4, v7.h4, v7.h4); dump();
shadd(v2.h4, v7.h4, v7.h4); dump();
shadd(v4.h4, v7.h4, v7.h4); dump();
shadd(v8.h4, v7.h4, v7.h4); dump();
shadd(v16.h4, v7.h4, v7.h4); dump();
shadd(v31.h4, v7.h4, v7.h4); dump();
shadd(v7.h4, v7.h4, v7.h4); dump();
shadd(v7.h4, v0.h4, v7.h4); dump();
shadd(v7.h4, v1.h4, v7.h4); dump();
shadd(v7.h4, v2.h4, v7.h4); dump();
shadd(v7.h4, v4.h4, v7.h4); dump();
shadd(v7.h4, v8.h4, v7.h4); dump();
shadd(v7.h4, v16.h4, v7.h4); dump();
shadd(v7.h4, v31.h4, v7.h4); dump();
shadd(v7.h4, v7.h4, v7.h4); dump();
shadd(v7.h4, v7.h4, v0.h4); dump();
shadd(v7.h4, v7.h4, v1.h4); dump();
shadd(v7.h4, v7.h4, v2.h4); dump();
shadd(v7.h4, v7.h4, v4.h4); dump();
shadd(v7.h4, v7.h4, v8.h4); dump();
shadd(v7.h4, v7.h4, v16.h4); dump();
shadd(v7.h4, v7.h4, v31.h4); dump();
shsub(v7.h4, v7.h4, v7.h4); dump();
shsub(v0.h4, v7.h4, v7.h4); dump();
shsub(v1.h4, v7.h4, v7.h4); dump();
shsub(v2.h4, v7.h4, v7.h4); dump();
shsub(v4.h4, v7.h4, v7.h4); dump();
shsub(v8.h4, v7.h4, v7.h4); dump();
shsub(v16.h4, v7.h4, v7.h4); dump();
shsub(v31.h4, v7.h4, v7.h4); dump();
shsub(v7.h4, v7.h4, v7.h4); dump();
shsub(v7.h4, v0.h4, v7.h4); dump();
shsub(v7.h4, v1.h4, v7.h4); dump();
shsub(v7.h4, v2.h4, v7.h4); dump();
shsub(v7.h4, v4.h4, v7.h4); dump();
shsub(v7.h4, v8.h4, v7.h4); dump();
shsub(v7.h4, v16.h4, v7.h4); dump();
shsub(v7.h4, v31.h4, v7.h4); dump();
shsub(v7.h4, v7.h4, v7.h4); dump();
shsub(v7.h4, v7.h4, v0.h4); dump();
shsub(v7.h4, v7.h4, v1.h4); dump();
shsub(v7.h4, v7.h4, v2.h4); dump();
shsub(v7.h4, v7.h4, v4.h4); dump();
shsub(v7.h4, v7.h4, v8.h4); dump();
shsub(v7.h4, v7.h4, v16.h4); dump();
shsub(v7.h4, v7.h4, v31.h4); dump();
smax(v7.h4, v7.h4, v7.h4); dump();
smax(v0.h4, v7.h4, v7.h4); dump();
smax(v1.h4, v7.h4, v7.h4); dump();
smax(v2.h4, v7.h4, v7.h4); dump();
smax(v4.h4, v7.h4, v7.h4); dump();
smax(v8.h4, v7.h4, v7.h4); dump();
smax(v16.h4, v7.h4, v7.h4); dump();
smax(v31.h4, v7.h4, v7.h4); dump();
smax(v7.h4, v7.h4, v7.h4); dump();
smax(v7.h4, v0.h4, v7.h4); dump();
smax(v7.h4, v1.h4, v7.h4); dump();
smax(v7.h4, v2.h4, v7.h4); dump();
smax(v7.h4, v4.h4, v7.h4); dump();
smax(v7.h4, v8.h4, v7.h4); dump();
smax(v7.h4, v16.h4, v7.h4); dump();
smax(v7.h4, v31.h4, v7.h4); dump();
smax(v7.h4, v7.h4, v7.h4); dump();
smax(v7.h4, v7.h4, v0.h4); dump();
smax(v7.h4, v7.h4, v1.h4); dump();
smax(v7.h4, v7.h4, v2.h4); dump();
smax(v7.h4, v7.h4, v4.h4); dump();
smax(v7.h4, v7.h4, v8.h4); dump();
smax(v7.h4, v7.h4, v16.h4); dump();
smax(v7.h4, v7.h4, v31.h4); dump();
smin(v7.h4, v7.h4, v7.h4); dump();
smin(v0.h4, v7.h4, v7.h4); dump();
smin(v1.h4, v7.h4, v7.h4); dump();
smin(v2.h4, v7.h4, v7.h4); dump();
smin(v4.h4, v7.h4, v7.h4); dump();
smin(v8.h4, v7.h4, v7.h4); dump();
smin(v16.h4, v7.h4, v7.h4); dump();
smin(v31.h4, v7.h4, v7.h4); dump();
smin(v7.h4, v7.h4, v7.h4); dump();
smin(v7.h4, v0.h4, v7.h4); dump();
smin(v7.h4, v1.h4, v7.h4); dump();
smin(v7.h4, v2.h4, v7.h4); dump();
smin(v7.h4, v4.h4, v7.h4); dump();
smin(v7.h4, v8.h4, v7.h4); dump();
smin(v7.h4, v16.h4, v7.h4); dump();
smin(v7.h4, v31.h4, v7.h4); dump();
smin(v7.h4, v7.h4, v7.h4); dump();
smin(v7.h4, v7.h4, v0.h4); dump();
smin(v7.h4, v7.h4, v1.h4); dump();
smin(v7.h4, v7.h4, v2.h4); dump();
smin(v7.h4, v7.h4, v4.h4); dump();
smin(v7.h4, v7.h4, v8.h4); dump();
smin(v7.h4, v7.h4, v16.h4); dump();
smin(v7.h4, v7.h4, v31.h4); dump();
srhadd(v7.h4, v7.h4, v7.h4); dump();
srhadd(v0.h4, v7.h4, v7.h4); dump();
srhadd(v1.h4, v7.h4, v7.h4); dump();
srhadd(v2.h4, v7.h4, v7.h4); dump();
srhadd(v4.h4, v7.h4, v7.h4); dump();
srhadd(v8.h4, v7.h4, v7.h4); dump();
srhadd(v16.h4, v7.h4, v7.h4); dump();
srhadd(v31.h4, v7.h4, v7.h4); dump();
srhadd(v7.h4, v7.h4, v7.h4); dump();
srhadd(v7.h4, v0.h4, v7.h4); dump();
srhadd(v7.h4, v1.h4, v7.h4); dump();
srhadd(v7.h4, v2.h4, v7.h4); dump();
srhadd(v7.h4, v4.h4, v7.h4); dump();
srhadd(v7.h4, v8.h4, v7.h4); dump();
srhadd(v7.h4, v16.h4, v7.h4); dump();
srhadd(v7.h4, v31.h4, v7.h4); dump();
srhadd(v7.h4, v7.h4, v7.h4); dump();
srhadd(v7.h4, v7.h4, v0.h4); dump();
srhadd(v7.h4, v7.h4, v1.h4); dump();
srhadd(v7.h4, v7.h4, v2.h4); dump();
srhadd(v7.h4, v7.h4, v4.h4); dump();
srhadd(v7.h4, v7.h4, v8.h4); dump();
srhadd(v7.h4, v7.h4, v16.h4); dump();
srhadd(v7.h4, v7.h4, v31.h4); dump();
uaba(v7.h4, v7.h4, v7.h4); dump();
uaba(v0.h4, v7.h4, v7.h4); dump();
uaba(v1.h4, v7.h4, v7.h4); dump();
uaba(v2.h4, v7.h4, v7.h4); dump();
uaba(v4.h4, v7.h4, v7.h4); dump();
uaba(v8.h4, v7.h4, v7.h4); dump();
uaba(v16.h4, v7.h4, v7.h4); dump();
uaba(v31.h4, v7.h4, v7.h4); dump();
uaba(v7.h4, v7.h4, v7.h4); dump();
uaba(v7.h4, v0.h4, v7.h4); dump();
uaba(v7.h4, v1.h4, v7.h4); dump();
uaba(v7.h4, v2.h4, v7.h4); dump();
uaba(v7.h4, v4.h4, v7.h4); dump();
uaba(v7.h4, v8.h4, v7.h4); dump();
uaba(v7.h4, v16.h4, v7.h4); dump();
uaba(v7.h4, v31.h4, v7.h4); dump();
uaba(v7.h4, v7.h4, v7.h4); dump();
uaba(v7.h4, v7.h4, v0.h4); dump();
uaba(v7.h4, v7.h4, v1.h4); dump();
uaba(v7.h4, v7.h4, v2.h4); dump();
uaba(v7.h4, v7.h4, v4.h4); dump();
uaba(v7.h4, v7.h4, v8.h4); dump();
uaba(v7.h4, v7.h4, v16.h4); dump();
uaba(v7.h4, v7.h4, v31.h4); dump();
uabd(v7.h4, v7.h4, v7.h4); dump();
uabd(v0.h4, v7.h4, v7.h4); dump();
uabd(v1.h4, v7.h4, v7.h4); dump();
uabd(v2.h4, v7.h4, v7.h4); dump();
uabd(v4.h4, v7.h4, v7.h4); dump();
uabd(v8.h4, v7.h4, v7.h4); dump();
uabd(v16.h4, v7.h4, v7.h4); dump();
uabd(v31.h4, v7.h4, v7.h4); dump();
uabd(v7.h4, v7.h4, v7.h4); dump();
uabd(v7.h4, v0.h4, v7.h4); dump();
uabd(v7.h4, v1.h4, v7.h4); dump();
uabd(v7.h4, v2.h4, v7.h4); dump();
uabd(v7.h4, v4.h4, v7.h4); dump();
uabd(v7.h4, v8.h4, v7.h4); dump();
uabd(v7.h4, v16.h4, v7.h4); dump();
uabd(v7.h4, v31.h4, v7.h4); dump();
uabd(v7.h4, v7.h4, v7.h4); dump();
uabd(v7.h4, v7.h4, v0.h4); dump();
uabd(v7.h4, v7.h4, v1.h4); dump();
uabd(v7.h4, v7.h4, v2.h4); dump();
uabd(v7.h4, v7.h4, v4.h4); dump();
uabd(v7.h4, v7.h4, v8.h4); dump();
uabd(v7.h4, v7.h4, v16.h4); dump();
uabd(v7.h4, v7.h4, v31.h4); dump();
uhadd(v7.h4, v7.h4, v7.h4); dump();
uhadd(v0.h4, v7.h4, v7.h4); dump();
uhadd(v1.h4, v7.h4, v7.h4); dump();
uhadd(v2.h4, v7.h4, v7.h4); dump();
uhadd(v4.h4, v7.h4, v7.h4); dump();
uhadd(v8.h4, v7.h4, v7.h4); dump();
uhadd(v16.h4, v7.h4, v7.h4); dump();
uhadd(v31.h4, v7.h4, v7.h4); dump();
uhadd(v7.h4, v7.h4, v7.h4); dump();
uhadd(v7.h4, v0.h4, v7.h4); dump();
uhadd(v7.h4, v1.h4, v7.h4); dump();
uhadd(v7.h4, v2.h4, v7.h4); dump();
uhadd(v7.h4, v4.h4, v7.h4); dump();
uhadd(v7.h4, v8.h4, v7.h4); dump();
uhadd(v7.h4, v16.h4, v7.h4); dump();
uhadd(v7.h4, v31.h4, v7.h4); dump();
uhadd(v7.h4, v7.h4, v7.h4); dump();
uhadd(v7.h4, v7.h4, v0.h4); dump();
uhadd(v7.h4, v7.h4, v1.h4); dump();
uhadd(v7.h4, v7.h4, v2.h4); dump();
uhadd(v7.h4, v7.h4, v4.h4); dump();
uhadd(v7.h4, v7.h4, v8.h4); dump();
uhadd(v7.h4, v7.h4, v16.h4); dump();
uhadd(v7.h4, v7.h4, v31.h4); dump();
uhsub(v7.h4, v7.h4, v7.h4); dump();
uhsub(v0.h4, v7.h4, v7.h4); dump();
uhsub(v1.h4, v7.h4, v7.h4); dump();
uhsub(v2.h4, v7.h4, v7.h4); dump();
uhsub(v4.h4, v7.h4, v7.h4); dump();
uhsub(v8.h4, v7.h4, v7.h4); dump();
uhsub(v16.h4, v7.h4, v7.h4); dump();
uhsub(v31.h4, v7.h4, v7.h4); dump();
uhsub(v7.h4, v7.h4, v7.h4); dump();
uhsub(v7.h4, v0.h4, v7.h4); dump();
uhsub(v7.h4, v1.h4, v7.h4); dump();
uhsub(v7.h4, v2.h4, v7.h4); dump();
uhsub(v7.h4, v4.h4, v7.h4); dump();
uhsub(v7.h4, v8.h4, v7.h4); dump();
uhsub(v7.h4, v16.h4, v7.h4); dump();
uhsub(v7.h4, v31.h4, v7.h4); dump();
uhsub(v7.h4, v7.h4, v7.h4); dump();
uhsub(v7.h4, v7.h4, v0.h4); dump();
uhsub(v7.h4, v7.h4, v1.h4); dump();
uhsub(v7.h4, v7.h4, v2.h4); dump();
uhsub(v7.h4, v7.h4, v4.h4); dump();
uhsub(v7.h4, v7.h4, v8.h4); dump();
uhsub(v7.h4, v7.h4, v16.h4); dump();
uhsub(v7.h4, v7.h4, v31.h4); dump();
umax(v7.h4, v7.h4, v7.h4); dump();
umax(v0.h4, v7.h4, v7.h4); dump();
umax(v1.h4, v7.h4, v7.h4); dump();
umax(v2.h4, v7.h4, v7.h4); dump();
umax(v4.h4, v7.h4, v7.h4); dump();
umax(v8.h4, v7.h4, v7.h4); dump();
umax(v16.h4, v7.h4, v7.h4); dump();
umax(v31.h4, v7.h4, v7.h4); dump();
umax(v7.h4, v7.h4, v7.h4); dump();
umax(v7.h4, v0.h4, v7.h4); dump();
umax(v7.h4, v1.h4, v7.h4); dump();
umax(v7.h4, v2.h4, v7.h4); dump();
umax(v7.h4, v4.h4, v7.h4); dump();
umax(v7.h4, v8.h4, v7.h4); dump();
umax(v7.h4, v16.h4, v7.h4); dump();
umax(v7.h4, v31.h4, v7.h4); dump();
umax(v7.h4, v7.h4, v7.h4); dump();
umax(v7.h4, v7.h4, v0.h4); dump();
umax(v7.h4, v7.h4, v1.h4); dump();
umax(v7.h4, v7.h4, v2.h4); dump();
umax(v7.h4, v7.h4, v4.h4); dump();
umax(v7.h4, v7.h4, v8.h4); dump();
umax(v7.h4, v7.h4, v16.h4); dump();
umax(v7.h4, v7.h4, v31.h4); dump();
umin(v7.h4, v7.h4, v7.h4); dump();
umin(v0.h4, v7.h4, v7.h4); dump();
umin(v1.h4, v7.h4, v7.h4); dump();
umin(v2.h4, v7.h4, v7.h4); dump();
umin(v4.h4, v7.h4, v7.h4); dump();
umin(v8.h4, v7.h4, v7.h4); dump();
umin(v16.h4, v7.h4, v7.h4); dump();
umin(v31.h4, v7.h4, v7.h4); dump();
umin(v7.h4, v7.h4, v7.h4); dump();
umin(v7.h4, v0.h4, v7.h4); dump();
umin(v7.h4, v1.h4, v7.h4); dump();
umin(v7.h4, v2.h4, v7.h4); dump();
umin(v7.h4, v4.h4, v7.h4); dump();
umin(v7.h4, v8.h4, v7.h4); dump();
umin(v7.h4, v16.h4, v7.h4); dump();
umin(v7.h4, v31.h4, v7.h4); dump();
umin(v7.h4, v7.h4, v7.h4); dump();
umin(v7.h4, v7.h4, v0.h4); dump();
umin(v7.h4, v7.h4, v1.h4); dump();
umin(v7.h4, v7.h4, v2.h4); dump();
umin(v7.h4, v7.h4, v4.h4); dump();
umin(v7.h4, v7.h4, v8.h4); dump();
umin(v7.h4, v7.h4, v16.h4); dump();
umin(v7.h4, v7.h4, v31.h4); dump();
urhadd(v7.h4, v7.h4, v7.h4); dump();
urhadd(v0.h4, v7.h4, v7.h4); dump();
urhadd(v1.h4, v7.h4, v7.h4); dump();
urhadd(v2.h4, v7.h4, v7.h4); dump();
urhadd(v4.h4, v7.h4, v7.h4); dump();
urhadd(v8.h4, v7.h4, v7.h4); dump();
urhadd(v16.h4, v7.h4, v7.h4); dump();
urhadd(v31.h4, v7.h4, v7.h4); dump();
urhadd(v7.h4, v7.h4, v7.h4); dump();
urhadd(v7.h4, v0.h4, v7.h4); dump();
urhadd(v7.h4, v1.h4, v7.h4); dump();
urhadd(v7.h4, v2.h4, v7.h4); dump();
urhadd(v7.h4, v4.h4, v7.h4); dump();
urhadd(v7.h4, v8.h4, v7.h4); dump();
urhadd(v7.h4, v16.h4, v7.h4); dump();
urhadd(v7.h4, v31.h4, v7.h4); dump();
urhadd(v7.h4, v7.h4, v7.h4); dump();
urhadd(v7.h4, v7.h4, v0.h4); dump();
urhadd(v7.h4, v7.h4, v1.h4); dump();
urhadd(v7.h4, v7.h4, v2.h4); dump();
urhadd(v7.h4, v7.h4, v4.h4); dump();
urhadd(v7.h4, v7.h4, v8.h4); dump();
urhadd(v7.h4, v7.h4, v16.h4); dump();
urhadd(v7.h4, v7.h4, v31.h4); dump();
//DataProcSimd_Arithmetic10:3
mla(v7.h8, v7.h8, v7.h8); dump();
mla(v0.h8, v7.h8, v7.h8); dump();
mla(v1.h8, v7.h8, v7.h8); dump();
mla(v2.h8, v7.h8, v7.h8); dump();
mla(v4.h8, v7.h8, v7.h8); dump();
mla(v8.h8, v7.h8, v7.h8); dump();
mla(v16.h8, v7.h8, v7.h8); dump();
mla(v31.h8, v7.h8, v7.h8); dump();
mla(v7.h8, v7.h8, v7.h8); dump();
mla(v7.h8, v0.h8, v7.h8); dump();
mla(v7.h8, v1.h8, v7.h8); dump();
mla(v7.h8, v2.h8, v7.h8); dump();
mla(v7.h8, v4.h8, v7.h8); dump();
mla(v7.h8, v8.h8, v7.h8); dump();
mla(v7.h8, v16.h8, v7.h8); dump();
mla(v7.h8, v31.h8, v7.h8); dump();
mla(v7.h8, v7.h8, v7.h8); dump();
mla(v7.h8, v7.h8, v0.h8); dump();
mla(v7.h8, v7.h8, v1.h8); dump();
mla(v7.h8, v7.h8, v2.h8); dump();
mla(v7.h8, v7.h8, v4.h8); dump();
mla(v7.h8, v7.h8, v8.h8); dump();
mla(v7.h8, v7.h8, v16.h8); dump();
mla(v7.h8, v7.h8, v31.h8); dump();
mls(v7.h8, v7.h8, v7.h8); dump();
mls(v0.h8, v7.h8, v7.h8); dump();
mls(v1.h8, v7.h8, v7.h8); dump();
mls(v2.h8, v7.h8, v7.h8); dump();
mls(v4.h8, v7.h8, v7.h8); dump();
mls(v8.h8, v7.h8, v7.h8); dump();
mls(v16.h8, v7.h8, v7.h8); dump();
mls(v31.h8, v7.h8, v7.h8); dump();
mls(v7.h8, v7.h8, v7.h8); dump();
mls(v7.h8, v0.h8, v7.h8); dump();
mls(v7.h8, v1.h8, v7.h8); dump();
mls(v7.h8, v2.h8, v7.h8); dump();
mls(v7.h8, v4.h8, v7.h8); dump();
mls(v7.h8, v8.h8, v7.h8); dump();
mls(v7.h8, v16.h8, v7.h8); dump();
mls(v7.h8, v31.h8, v7.h8); dump();
mls(v7.h8, v7.h8, v7.h8); dump();
mls(v7.h8, v7.h8, v0.h8); dump();
mls(v7.h8, v7.h8, v1.h8); dump();
mls(v7.h8, v7.h8, v2.h8); dump();
mls(v7.h8, v7.h8, v4.h8); dump();
mls(v7.h8, v7.h8, v8.h8); dump();
mls(v7.h8, v7.h8, v16.h8); dump();
mls(v7.h8, v7.h8, v31.h8); dump();
mul(v7.h8, v7.h8, v7.h8); dump();
mul(v0.h8, v7.h8, v7.h8); dump();
mul(v1.h8, v7.h8, v7.h8); dump();
mul(v2.h8, v7.h8, v7.h8); dump();
mul(v4.h8, v7.h8, v7.h8); dump();
mul(v8.h8, v7.h8, v7.h8); dump();
mul(v16.h8, v7.h8, v7.h8); dump();
mul(v31.h8, v7.h8, v7.h8); dump();
mul(v7.h8, v7.h8, v7.h8); dump();
mul(v7.h8, v0.h8, v7.h8); dump();
mul(v7.h8, v1.h8, v7.h8); dump();
mul(v7.h8, v2.h8, v7.h8); dump();
mul(v7.h8, v4.h8, v7.h8); dump();
mul(v7.h8, v8.h8, v7.h8); dump();
mul(v7.h8, v16.h8, v7.h8); dump();
mul(v7.h8, v31.h8, v7.h8); dump();
mul(v7.h8, v7.h8, v7.h8); dump();
mul(v7.h8, v7.h8, v0.h8); dump();
mul(v7.h8, v7.h8, v1.h8); dump();
mul(v7.h8, v7.h8, v2.h8); dump();
mul(v7.h8, v7.h8, v4.h8); dump();
mul(v7.h8, v7.h8, v8.h8); dump();
mul(v7.h8, v7.h8, v16.h8); dump();
mul(v7.h8, v7.h8, v31.h8); dump();
saba(v7.h8, v7.h8, v7.h8); dump();
saba(v0.h8, v7.h8, v7.h8); dump();
saba(v1.h8, v7.h8, v7.h8); dump();
saba(v2.h8, v7.h8, v7.h8); dump();
saba(v4.h8, v7.h8, v7.h8); dump();
saba(v8.h8, v7.h8, v7.h8); dump();
saba(v16.h8, v7.h8, v7.h8); dump();
saba(v31.h8, v7.h8, v7.h8); dump();
saba(v7.h8, v7.h8, v7.h8); dump();
saba(v7.h8, v0.h8, v7.h8); dump();
saba(v7.h8, v1.h8, v7.h8); dump();
saba(v7.h8, v2.h8, v7.h8); dump();
saba(v7.h8, v4.h8, v7.h8); dump();
saba(v7.h8, v8.h8, v7.h8); dump();
saba(v7.h8, v16.h8, v7.h8); dump();
saba(v7.h8, v31.h8, v7.h8); dump();
saba(v7.h8, v7.h8, v7.h8); dump();
saba(v7.h8, v7.h8, v0.h8); dump();
saba(v7.h8, v7.h8, v1.h8); dump();
saba(v7.h8, v7.h8, v2.h8); dump();
saba(v7.h8, v7.h8, v4.h8); dump();
saba(v7.h8, v7.h8, v8.h8); dump();
saba(v7.h8, v7.h8, v16.h8); dump();
saba(v7.h8, v7.h8, v31.h8); dump();
sabd(v7.h8, v7.h8, v7.h8); dump();
sabd(v0.h8, v7.h8, v7.h8); dump();
sabd(v1.h8, v7.h8, v7.h8); dump();
sabd(v2.h8, v7.h8, v7.h8); dump();
sabd(v4.h8, v7.h8, v7.h8); dump();
sabd(v8.h8, v7.h8, v7.h8); dump();
sabd(v16.h8, v7.h8, v7.h8); dump();
sabd(v31.h8, v7.h8, v7.h8); dump();
sabd(v7.h8, v7.h8, v7.h8); dump();
sabd(v7.h8, v0.h8, v7.h8); dump();
sabd(v7.h8, v1.h8, v7.h8); dump();
sabd(v7.h8, v2.h8, v7.h8); dump();
sabd(v7.h8, v4.h8, v7.h8); dump();
sabd(v7.h8, v8.h8, v7.h8); dump();
sabd(v7.h8, v16.h8, v7.h8); dump();
sabd(v7.h8, v31.h8, v7.h8); dump();
sabd(v7.h8, v7.h8, v7.h8); dump();
sabd(v7.h8, v7.h8, v0.h8); dump();
sabd(v7.h8, v7.h8, v1.h8); dump();
sabd(v7.h8, v7.h8, v2.h8); dump();
sabd(v7.h8, v7.h8, v4.h8); dump();
sabd(v7.h8, v7.h8, v8.h8); dump();
sabd(v7.h8, v7.h8, v16.h8); dump();
sabd(v7.h8, v7.h8, v31.h8); dump();
shadd(v7.h8, v7.h8, v7.h8); dump();
shadd(v0.h8, v7.h8, v7.h8); dump();
shadd(v1.h8, v7.h8, v7.h8); dump();
shadd(v2.h8, v7.h8, v7.h8); dump();
shadd(v4.h8, v7.h8, v7.h8); dump();
shadd(v8.h8, v7.h8, v7.h8); dump();
shadd(v16.h8, v7.h8, v7.h8); dump();
shadd(v31.h8, v7.h8, v7.h8); dump();
shadd(v7.h8, v7.h8, v7.h8); dump();
shadd(v7.h8, v0.h8, v7.h8); dump();
shadd(v7.h8, v1.h8, v7.h8); dump();
shadd(v7.h8, v2.h8, v7.h8); dump();
shadd(v7.h8, v4.h8, v7.h8); dump();
shadd(v7.h8, v8.h8, v7.h8); dump();
shadd(v7.h8, v16.h8, v7.h8); dump();
shadd(v7.h8, v31.h8, v7.h8); dump();
shadd(v7.h8, v7.h8, v7.h8); dump();
shadd(v7.h8, v7.h8, v0.h8); dump();
shadd(v7.h8, v7.h8, v1.h8); dump();
shadd(v7.h8, v7.h8, v2.h8); dump();
shadd(v7.h8, v7.h8, v4.h8); dump();
shadd(v7.h8, v7.h8, v8.h8); dump();
shadd(v7.h8, v7.h8, v16.h8); dump();
shadd(v7.h8, v7.h8, v31.h8); dump();
shsub(v7.h8, v7.h8, v7.h8); dump();
shsub(v0.h8, v7.h8, v7.h8); dump();
shsub(v1.h8, v7.h8, v7.h8); dump();
shsub(v2.h8, v7.h8, v7.h8); dump();
shsub(v4.h8, v7.h8, v7.h8); dump();
shsub(v8.h8, v7.h8, v7.h8); dump();
shsub(v16.h8, v7.h8, v7.h8); dump();
shsub(v31.h8, v7.h8, v7.h8); dump();
shsub(v7.h8, v7.h8, v7.h8); dump();
shsub(v7.h8, v0.h8, v7.h8); dump();
shsub(v7.h8, v1.h8, v7.h8); dump();
shsub(v7.h8, v2.h8, v7.h8); dump();
shsub(v7.h8, v4.h8, v7.h8); dump();
shsub(v7.h8, v8.h8, v7.h8); dump();
shsub(v7.h8, v16.h8, v7.h8); dump();
shsub(v7.h8, v31.h8, v7.h8); dump();
shsub(v7.h8, v7.h8, v7.h8); dump();
shsub(v7.h8, v7.h8, v0.h8); dump();
shsub(v7.h8, v7.h8, v1.h8); dump();
shsub(v7.h8, v7.h8, v2.h8); dump();
shsub(v7.h8, v7.h8, v4.h8); dump();
shsub(v7.h8, v7.h8, v8.h8); dump();
shsub(v7.h8, v7.h8, v16.h8); dump();
shsub(v7.h8, v7.h8, v31.h8); dump();
smax(v7.h8, v7.h8, v7.h8); dump();
smax(v0.h8, v7.h8, v7.h8); dump();
smax(v1.h8, v7.h8, v7.h8); dump();
smax(v2.h8, v7.h8, v7.h8); dump();
smax(v4.h8, v7.h8, v7.h8); dump();
smax(v8.h8, v7.h8, v7.h8); dump();
smax(v16.h8, v7.h8, v7.h8); dump();
smax(v31.h8, v7.h8, v7.h8); dump();
smax(v7.h8, v7.h8, v7.h8); dump();
smax(v7.h8, v0.h8, v7.h8); dump();
smax(v7.h8, v1.h8, v7.h8); dump();
smax(v7.h8, v2.h8, v7.h8); dump();
smax(v7.h8, v4.h8, v7.h8); dump();
smax(v7.h8, v8.h8, v7.h8); dump();
smax(v7.h8, v16.h8, v7.h8); dump();
smax(v7.h8, v31.h8, v7.h8); dump();
smax(v7.h8, v7.h8, v7.h8); dump();
smax(v7.h8, v7.h8, v0.h8); dump();
smax(v7.h8, v7.h8, v1.h8); dump();
smax(v7.h8, v7.h8, v2.h8); dump();
smax(v7.h8, v7.h8, v4.h8); dump();
smax(v7.h8, v7.h8, v8.h8); dump();
smax(v7.h8, v7.h8, v16.h8); dump();
smax(v7.h8, v7.h8, v31.h8); dump();
smin(v7.h8, v7.h8, v7.h8); dump();
smin(v0.h8, v7.h8, v7.h8); dump();
smin(v1.h8, v7.h8, v7.h8); dump();
smin(v2.h8, v7.h8, v7.h8); dump();
smin(v4.h8, v7.h8, v7.h8); dump();
smin(v8.h8, v7.h8, v7.h8); dump();
smin(v16.h8, v7.h8, v7.h8); dump();
smin(v31.h8, v7.h8, v7.h8); dump();
smin(v7.h8, v7.h8, v7.h8); dump();
smin(v7.h8, v0.h8, v7.h8); dump();
smin(v7.h8, v1.h8, v7.h8); dump();
smin(v7.h8, v2.h8, v7.h8); dump();
smin(v7.h8, v4.h8, v7.h8); dump();
smin(v7.h8, v8.h8, v7.h8); dump();
smin(v7.h8, v16.h8, v7.h8); dump();
smin(v7.h8, v31.h8, v7.h8); dump();
smin(v7.h8, v7.h8, v7.h8); dump();
smin(v7.h8, v7.h8, v0.h8); dump();
smin(v7.h8, v7.h8, v1.h8); dump();
smin(v7.h8, v7.h8, v2.h8); dump();
smin(v7.h8, v7.h8, v4.h8); dump();
smin(v7.h8, v7.h8, v8.h8); dump();
smin(v7.h8, v7.h8, v16.h8); dump();
smin(v7.h8, v7.h8, v31.h8); dump();
srhadd(v7.h8, v7.h8, v7.h8); dump();
srhadd(v0.h8, v7.h8, v7.h8); dump();
srhadd(v1.h8, v7.h8, v7.h8); dump();
srhadd(v2.h8, v7.h8, v7.h8); dump();
srhadd(v4.h8, v7.h8, v7.h8); dump();
srhadd(v8.h8, v7.h8, v7.h8); dump();
srhadd(v16.h8, v7.h8, v7.h8); dump();
srhadd(v31.h8, v7.h8, v7.h8); dump();
srhadd(v7.h8, v7.h8, v7.h8); dump();
srhadd(v7.h8, v0.h8, v7.h8); dump();
srhadd(v7.h8, v1.h8, v7.h8); dump();
srhadd(v7.h8, v2.h8, v7.h8); dump();
srhadd(v7.h8, v4.h8, v7.h8); dump();
srhadd(v7.h8, v8.h8, v7.h8); dump();
srhadd(v7.h8, v16.h8, v7.h8); dump();
srhadd(v7.h8, v31.h8, v7.h8); dump();
srhadd(v7.h8, v7.h8, v7.h8); dump();
srhadd(v7.h8, v7.h8, v0.h8); dump();
srhadd(v7.h8, v7.h8, v1.h8); dump();
srhadd(v7.h8, v7.h8, v2.h8); dump();
srhadd(v7.h8, v7.h8, v4.h8); dump();
srhadd(v7.h8, v7.h8, v8.h8); dump();
srhadd(v7.h8, v7.h8, v16.h8); dump();
srhadd(v7.h8, v7.h8, v31.h8); dump();
uaba(v7.h8, v7.h8, v7.h8); dump();
uaba(v0.h8, v7.h8, v7.h8); dump();
uaba(v1.h8, v7.h8, v7.h8); dump();
uaba(v2.h8, v7.h8, v7.h8); dump();
uaba(v4.h8, v7.h8, v7.h8); dump();
uaba(v8.h8, v7.h8, v7.h8); dump();
uaba(v16.h8, v7.h8, v7.h8); dump();
uaba(v31.h8, v7.h8, v7.h8); dump();
uaba(v7.h8, v7.h8, v7.h8); dump();
uaba(v7.h8, v0.h8, v7.h8); dump();
uaba(v7.h8, v1.h8, v7.h8); dump();
uaba(v7.h8, v2.h8, v7.h8); dump();
uaba(v7.h8, v4.h8, v7.h8); dump();
uaba(v7.h8, v8.h8, v7.h8); dump();
uaba(v7.h8, v16.h8, v7.h8); dump();
uaba(v7.h8, v31.h8, v7.h8); dump();
uaba(v7.h8, v7.h8, v7.h8); dump();
uaba(v7.h8, v7.h8, v0.h8); dump();
uaba(v7.h8, v7.h8, v1.h8); dump();
uaba(v7.h8, v7.h8, v2.h8); dump();
uaba(v7.h8, v7.h8, v4.h8); dump();
uaba(v7.h8, v7.h8, v8.h8); dump();
uaba(v7.h8, v7.h8, v16.h8); dump();
uaba(v7.h8, v7.h8, v31.h8); dump();
uabd(v7.h8, v7.h8, v7.h8); dump();
uabd(v0.h8, v7.h8, v7.h8); dump();
uabd(v1.h8, v7.h8, v7.h8); dump();
uabd(v2.h8, v7.h8, v7.h8); dump();
uabd(v4.h8, v7.h8, v7.h8); dump();
uabd(v8.h8, v7.h8, v7.h8); dump();
uabd(v16.h8, v7.h8, v7.h8); dump();
uabd(v31.h8, v7.h8, v7.h8); dump();
uabd(v7.h8, v7.h8, v7.h8); dump();
uabd(v7.h8, v0.h8, v7.h8); dump();
uabd(v7.h8, v1.h8, v7.h8); dump();
uabd(v7.h8, v2.h8, v7.h8); dump();
uabd(v7.h8, v4.h8, v7.h8); dump();
uabd(v7.h8, v8.h8, v7.h8); dump();
uabd(v7.h8, v16.h8, v7.h8); dump();
uabd(v7.h8, v31.h8, v7.h8); dump();
uabd(v7.h8, v7.h8, v7.h8); dump();
uabd(v7.h8, v7.h8, v0.h8); dump();
uabd(v7.h8, v7.h8, v1.h8); dump();
uabd(v7.h8, v7.h8, v2.h8); dump();
uabd(v7.h8, v7.h8, v4.h8); dump();
uabd(v7.h8, v7.h8, v8.h8); dump();
uabd(v7.h8, v7.h8, v16.h8); dump();
uabd(v7.h8, v7.h8, v31.h8); dump();
uhadd(v7.h8, v7.h8, v7.h8); dump();
uhadd(v0.h8, v7.h8, v7.h8); dump();
uhadd(v1.h8, v7.h8, v7.h8); dump();
uhadd(v2.h8, v7.h8, v7.h8); dump();
uhadd(v4.h8, v7.h8, v7.h8); dump();
uhadd(v8.h8, v7.h8, v7.h8); dump();
uhadd(v16.h8, v7.h8, v7.h8); dump();
uhadd(v31.h8, v7.h8, v7.h8); dump();
uhadd(v7.h8, v7.h8, v7.h8); dump();
uhadd(v7.h8, v0.h8, v7.h8); dump();
uhadd(v7.h8, v1.h8, v7.h8); dump();
uhadd(v7.h8, v2.h8, v7.h8); dump();
uhadd(v7.h8, v4.h8, v7.h8); dump();
uhadd(v7.h8, v8.h8, v7.h8); dump();
uhadd(v7.h8, v16.h8, v7.h8); dump();
uhadd(v7.h8, v31.h8, v7.h8); dump();
uhadd(v7.h8, v7.h8, v7.h8); dump();
uhadd(v7.h8, v7.h8, v0.h8); dump();
uhadd(v7.h8, v7.h8, v1.h8); dump();
uhadd(v7.h8, v7.h8, v2.h8); dump();
uhadd(v7.h8, v7.h8, v4.h8); dump();
uhadd(v7.h8, v7.h8, v8.h8); dump();
uhadd(v7.h8, v7.h8, v16.h8); dump();
uhadd(v7.h8, v7.h8, v31.h8); dump();
uhsub(v7.h8, v7.h8, v7.h8); dump();
uhsub(v0.h8, v7.h8, v7.h8); dump();
uhsub(v1.h8, v7.h8, v7.h8); dump();
uhsub(v2.h8, v7.h8, v7.h8); dump();
uhsub(v4.h8, v7.h8, v7.h8); dump();
uhsub(v8.h8, v7.h8, v7.h8); dump();
uhsub(v16.h8, v7.h8, v7.h8); dump();
uhsub(v31.h8, v7.h8, v7.h8); dump();
uhsub(v7.h8, v7.h8, v7.h8); dump();
uhsub(v7.h8, v0.h8, v7.h8); dump();
uhsub(v7.h8, v1.h8, v7.h8); dump();
uhsub(v7.h8, v2.h8, v7.h8); dump();
uhsub(v7.h8, v4.h8, v7.h8); dump();
uhsub(v7.h8, v8.h8, v7.h8); dump();
uhsub(v7.h8, v16.h8, v7.h8); dump();
uhsub(v7.h8, v31.h8, v7.h8); dump();
uhsub(v7.h8, v7.h8, v7.h8); dump();
uhsub(v7.h8, v7.h8, v0.h8); dump();
uhsub(v7.h8, v7.h8, v1.h8); dump();
uhsub(v7.h8, v7.h8, v2.h8); dump();
uhsub(v7.h8, v7.h8, v4.h8); dump();
uhsub(v7.h8, v7.h8, v8.h8); dump();
uhsub(v7.h8, v7.h8, v16.h8); dump();
uhsub(v7.h8, v7.h8, v31.h8); dump();
umax(v7.h8, v7.h8, v7.h8); dump();
umax(v0.h8, v7.h8, v7.h8); dump();
umax(v1.h8, v7.h8, v7.h8); dump();
umax(v2.h8, v7.h8, v7.h8); dump();
umax(v4.h8, v7.h8, v7.h8); dump();
umax(v8.h8, v7.h8, v7.h8); dump();
umax(v16.h8, v7.h8, v7.h8); dump();
umax(v31.h8, v7.h8, v7.h8); dump();
umax(v7.h8, v7.h8, v7.h8); dump();
umax(v7.h8, v0.h8, v7.h8); dump();
umax(v7.h8, v1.h8, v7.h8); dump();
umax(v7.h8, v2.h8, v7.h8); dump();
umax(v7.h8, v4.h8, v7.h8); dump();
umax(v7.h8, v8.h8, v7.h8); dump();
umax(v7.h8, v16.h8, v7.h8); dump();
umax(v7.h8, v31.h8, v7.h8); dump();
umax(v7.h8, v7.h8, v7.h8); dump();
umax(v7.h8, v7.h8, v0.h8); dump();
umax(v7.h8, v7.h8, v1.h8); dump();
umax(v7.h8, v7.h8, v2.h8); dump();
umax(v7.h8, v7.h8, v4.h8); dump();
umax(v7.h8, v7.h8, v8.h8); dump();
umax(v7.h8, v7.h8, v16.h8); dump();
umax(v7.h8, v7.h8, v31.h8); dump();
umin(v7.h8, v7.h8, v7.h8); dump();
umin(v0.h8, v7.h8, v7.h8); dump();
umin(v1.h8, v7.h8, v7.h8); dump();
umin(v2.h8, v7.h8, v7.h8); dump();
umin(v4.h8, v7.h8, v7.h8); dump();
umin(v8.h8, v7.h8, v7.h8); dump();
umin(v16.h8, v7.h8, v7.h8); dump();
umin(v31.h8, v7.h8, v7.h8); dump();
umin(v7.h8, v7.h8, v7.h8); dump();
umin(v7.h8, v0.h8, v7.h8); dump();
umin(v7.h8, v1.h8, v7.h8); dump();
umin(v7.h8, v2.h8, v7.h8); dump();
umin(v7.h8, v4.h8, v7.h8); dump();
umin(v7.h8, v8.h8, v7.h8); dump();
umin(v7.h8, v16.h8, v7.h8); dump();
umin(v7.h8, v31.h8, v7.h8); dump();
umin(v7.h8, v7.h8, v7.h8); dump();
umin(v7.h8, v7.h8, v0.h8); dump();
umin(v7.h8, v7.h8, v1.h8); dump();
umin(v7.h8, v7.h8, v2.h8); dump();
umin(v7.h8, v7.h8, v4.h8); dump();
umin(v7.h8, v7.h8, v8.h8); dump();
umin(v7.h8, v7.h8, v16.h8); dump();
umin(v7.h8, v7.h8, v31.h8); dump();
urhadd(v7.h8, v7.h8, v7.h8); dump();
urhadd(v0.h8, v7.h8, v7.h8); dump();
urhadd(v1.h8, v7.h8, v7.h8); dump();
urhadd(v2.h8, v7.h8, v7.h8); dump();
urhadd(v4.h8, v7.h8, v7.h8); dump();
urhadd(v8.h8, v7.h8, v7.h8); dump();
urhadd(v16.h8, v7.h8, v7.h8); dump();
urhadd(v31.h8, v7.h8, v7.h8); dump();
urhadd(v7.h8, v7.h8, v7.h8); dump();
urhadd(v7.h8, v0.h8, v7.h8); dump();
urhadd(v7.h8, v1.h8, v7.h8); dump();
urhadd(v7.h8, v2.h8, v7.h8); dump();
urhadd(v7.h8, v4.h8, v7.h8); dump();
urhadd(v7.h8, v8.h8, v7.h8); dump();
urhadd(v7.h8, v16.h8, v7.h8); dump();
urhadd(v7.h8, v31.h8, v7.h8); dump();
urhadd(v7.h8, v7.h8, v7.h8); dump();
urhadd(v7.h8, v7.h8, v0.h8); dump();
urhadd(v7.h8, v7.h8, v1.h8); dump();
urhadd(v7.h8, v7.h8, v2.h8); dump();
urhadd(v7.h8, v7.h8, v4.h8); dump();
urhadd(v7.h8, v7.h8, v8.h8); dump();
urhadd(v7.h8, v7.h8, v16.h8); dump();
urhadd(v7.h8, v7.h8, v31.h8); dump();
//DataProcSimd_Arithmetic10:4
mla(v7.s2, v7.s2, v7.s2); dump();
mla(v0.s2, v7.s2, v7.s2); dump();
mla(v1.s2, v7.s2, v7.s2); dump();
mla(v2.s2, v7.s2, v7.s2); dump();
mla(v4.s2, v7.s2, v7.s2); dump();
mla(v8.s2, v7.s2, v7.s2); dump();
mla(v16.s2, v7.s2, v7.s2); dump();
mla(v31.s2, v7.s2, v7.s2); dump();
mla(v7.s2, v7.s2, v7.s2); dump();
mla(v7.s2, v0.s2, v7.s2); dump();
mla(v7.s2, v1.s2, v7.s2); dump();
mla(v7.s2, v2.s2, v7.s2); dump();
mla(v7.s2, v4.s2, v7.s2); dump();
mla(v7.s2, v8.s2, v7.s2); dump();
mla(v7.s2, v16.s2, v7.s2); dump();
mla(v7.s2, v31.s2, v7.s2); dump();
mla(v7.s2, v7.s2, v7.s2); dump();
mla(v7.s2, v7.s2, v0.s2); dump();
mla(v7.s2, v7.s2, v1.s2); dump();
mla(v7.s2, v7.s2, v2.s2); dump();
mla(v7.s2, v7.s2, v4.s2); dump();
mla(v7.s2, v7.s2, v8.s2); dump();
mla(v7.s2, v7.s2, v16.s2); dump();
mla(v7.s2, v7.s2, v31.s2); dump();
mls(v7.s2, v7.s2, v7.s2); dump();
mls(v0.s2, v7.s2, v7.s2); dump();
mls(v1.s2, v7.s2, v7.s2); dump();
mls(v2.s2, v7.s2, v7.s2); dump();
mls(v4.s2, v7.s2, v7.s2); dump();
mls(v8.s2, v7.s2, v7.s2); dump();
mls(v16.s2, v7.s2, v7.s2); dump();
mls(v31.s2, v7.s2, v7.s2); dump();
mls(v7.s2, v7.s2, v7.s2); dump();
mls(v7.s2, v0.s2, v7.s2); dump();
mls(v7.s2, v1.s2, v7.s2); dump();
mls(v7.s2, v2.s2, v7.s2); dump();
mls(v7.s2, v4.s2, v7.s2); dump();
mls(v7.s2, v8.s2, v7.s2); dump();
mls(v7.s2, v16.s2, v7.s2); dump();
mls(v7.s2, v31.s2, v7.s2); dump();
mls(v7.s2, v7.s2, v7.s2); dump();
mls(v7.s2, v7.s2, v0.s2); dump();
mls(v7.s2, v7.s2, v1.s2); dump();
mls(v7.s2, v7.s2, v2.s2); dump();
mls(v7.s2, v7.s2, v4.s2); dump();
mls(v7.s2, v7.s2, v8.s2); dump();
mls(v7.s2, v7.s2, v16.s2); dump();
mls(v7.s2, v7.s2, v31.s2); dump();
mul(v7.s2, v7.s2, v7.s2); dump();
mul(v0.s2, v7.s2, v7.s2); dump();
mul(v1.s2, v7.s2, v7.s2); dump();
mul(v2.s2, v7.s2, v7.s2); dump();
mul(v4.s2, v7.s2, v7.s2); dump();
mul(v8.s2, v7.s2, v7.s2); dump();
mul(v16.s2, v7.s2, v7.s2); dump();
mul(v31.s2, v7.s2, v7.s2); dump();
mul(v7.s2, v7.s2, v7.s2); dump();
mul(v7.s2, v0.s2, v7.s2); dump();
mul(v7.s2, v1.s2, v7.s2); dump();
mul(v7.s2, v2.s2, v7.s2); dump();
mul(v7.s2, v4.s2, v7.s2); dump();
mul(v7.s2, v8.s2, v7.s2); dump();
mul(v7.s2, v16.s2, v7.s2); dump();
mul(v7.s2, v31.s2, v7.s2); dump();
mul(v7.s2, v7.s2, v7.s2); dump();
mul(v7.s2, v7.s2, v0.s2); dump();
mul(v7.s2, v7.s2, v1.s2); dump();
mul(v7.s2, v7.s2, v2.s2); dump();
mul(v7.s2, v7.s2, v4.s2); dump();
mul(v7.s2, v7.s2, v8.s2); dump();
mul(v7.s2, v7.s2, v16.s2); dump();
mul(v7.s2, v7.s2, v31.s2); dump();
saba(v7.s2, v7.s2, v7.s2); dump();
saba(v0.s2, v7.s2, v7.s2); dump();
saba(v1.s2, v7.s2, v7.s2); dump();
saba(v2.s2, v7.s2, v7.s2); dump();
saba(v4.s2, v7.s2, v7.s2); dump();
saba(v8.s2, v7.s2, v7.s2); dump();
saba(v16.s2, v7.s2, v7.s2); dump();
saba(v31.s2, v7.s2, v7.s2); dump();
saba(v7.s2, v7.s2, v7.s2); dump();
saba(v7.s2, v0.s2, v7.s2); dump();
saba(v7.s2, v1.s2, v7.s2); dump();
saba(v7.s2, v2.s2, v7.s2); dump();
saba(v7.s2, v4.s2, v7.s2); dump();
saba(v7.s2, v8.s2, v7.s2); dump();
saba(v7.s2, v16.s2, v7.s2); dump();
saba(v7.s2, v31.s2, v7.s2); dump();
saba(v7.s2, v7.s2, v7.s2); dump();
saba(v7.s2, v7.s2, v0.s2); dump();
saba(v7.s2, v7.s2, v1.s2); dump();
saba(v7.s2, v7.s2, v2.s2); dump();
saba(v7.s2, v7.s2, v4.s2); dump();
saba(v7.s2, v7.s2, v8.s2); dump();
saba(v7.s2, v7.s2, v16.s2); dump();
saba(v7.s2, v7.s2, v31.s2); dump();
sabd(v7.s2, v7.s2, v7.s2); dump();
sabd(v0.s2, v7.s2, v7.s2); dump();
sabd(v1.s2, v7.s2, v7.s2); dump();
sabd(v2.s2, v7.s2, v7.s2); dump();
sabd(v4.s2, v7.s2, v7.s2); dump();
sabd(v8.s2, v7.s2, v7.s2); dump();
sabd(v16.s2, v7.s2, v7.s2); dump();
sabd(v31.s2, v7.s2, v7.s2); dump();
sabd(v7.s2, v7.s2, v7.s2); dump();
sabd(v7.s2, v0.s2, v7.s2); dump();
sabd(v7.s2, v1.s2, v7.s2); dump();
sabd(v7.s2, v2.s2, v7.s2); dump();
sabd(v7.s2, v4.s2, v7.s2); dump();
sabd(v7.s2, v8.s2, v7.s2); dump();
sabd(v7.s2, v16.s2, v7.s2); dump();
sabd(v7.s2, v31.s2, v7.s2); dump();
sabd(v7.s2, v7.s2, v7.s2); dump();
sabd(v7.s2, v7.s2, v0.s2); dump();
sabd(v7.s2, v7.s2, v1.s2); dump();
sabd(v7.s2, v7.s2, v2.s2); dump();
sabd(v7.s2, v7.s2, v4.s2); dump();
sabd(v7.s2, v7.s2, v8.s2); dump();
sabd(v7.s2, v7.s2, v16.s2); dump();
sabd(v7.s2, v7.s2, v31.s2); dump();
shadd(v7.s2, v7.s2, v7.s2); dump();
shadd(v0.s2, v7.s2, v7.s2); dump();
shadd(v1.s2, v7.s2, v7.s2); dump();
shadd(v2.s2, v7.s2, v7.s2); dump();
shadd(v4.s2, v7.s2, v7.s2); dump();
shadd(v8.s2, v7.s2, v7.s2); dump();
shadd(v16.s2, v7.s2, v7.s2); dump();
shadd(v31.s2, v7.s2, v7.s2); dump();
shadd(v7.s2, v7.s2, v7.s2); dump();
shadd(v7.s2, v0.s2, v7.s2); dump();
shadd(v7.s2, v1.s2, v7.s2); dump();
shadd(v7.s2, v2.s2, v7.s2); dump();
shadd(v7.s2, v4.s2, v7.s2); dump();
shadd(v7.s2, v8.s2, v7.s2); dump();
shadd(v7.s2, v16.s2, v7.s2); dump();
shadd(v7.s2, v31.s2, v7.s2); dump();
shadd(v7.s2, v7.s2, v7.s2); dump();
shadd(v7.s2, v7.s2, v0.s2); dump();
shadd(v7.s2, v7.s2, v1.s2); dump();
shadd(v7.s2, v7.s2, v2.s2); dump();
shadd(v7.s2, v7.s2, v4.s2); dump();
shadd(v7.s2, v7.s2, v8.s2); dump();
shadd(v7.s2, v7.s2, v16.s2); dump();
shadd(v7.s2, v7.s2, v31.s2); dump();
shsub(v7.s2, v7.s2, v7.s2); dump();
shsub(v0.s2, v7.s2, v7.s2); dump();
shsub(v1.s2, v7.s2, v7.s2); dump();
shsub(v2.s2, v7.s2, v7.s2); dump();
shsub(v4.s2, v7.s2, v7.s2); dump();
shsub(v8.s2, v7.s2, v7.s2); dump();
shsub(v16.s2, v7.s2, v7.s2); dump();
shsub(v31.s2, v7.s2, v7.s2); dump();
shsub(v7.s2, v7.s2, v7.s2); dump();
shsub(v7.s2, v0.s2, v7.s2); dump();
shsub(v7.s2, v1.s2, v7.s2); dump();
shsub(v7.s2, v2.s2, v7.s2); dump();
shsub(v7.s2, v4.s2, v7.s2); dump();
shsub(v7.s2, v8.s2, v7.s2); dump();
shsub(v7.s2, v16.s2, v7.s2); dump();
shsub(v7.s2, v31.s2, v7.s2); dump();
shsub(v7.s2, v7.s2, v7.s2); dump();
shsub(v7.s2, v7.s2, v0.s2); dump();
shsub(v7.s2, v7.s2, v1.s2); dump();
shsub(v7.s2, v7.s2, v2.s2); dump();
shsub(v7.s2, v7.s2, v4.s2); dump();
shsub(v7.s2, v7.s2, v8.s2); dump();
shsub(v7.s2, v7.s2, v16.s2); dump();
shsub(v7.s2, v7.s2, v31.s2); dump();
smax(v7.s2, v7.s2, v7.s2); dump();
smax(v0.s2, v7.s2, v7.s2); dump();
smax(v1.s2, v7.s2, v7.s2); dump();
smax(v2.s2, v7.s2, v7.s2); dump();
smax(v4.s2, v7.s2, v7.s2); dump();
smax(v8.s2, v7.s2, v7.s2); dump();
smax(v16.s2, v7.s2, v7.s2); dump();
smax(v31.s2, v7.s2, v7.s2); dump();
smax(v7.s2, v7.s2, v7.s2); dump();
smax(v7.s2, v0.s2, v7.s2); dump();
smax(v7.s2, v1.s2, v7.s2); dump();
smax(v7.s2, v2.s2, v7.s2); dump();
smax(v7.s2, v4.s2, v7.s2); dump();
smax(v7.s2, v8.s2, v7.s2); dump();
smax(v7.s2, v16.s2, v7.s2); dump();
smax(v7.s2, v31.s2, v7.s2); dump();
smax(v7.s2, v7.s2, v7.s2); dump();
smax(v7.s2, v7.s2, v0.s2); dump();
smax(v7.s2, v7.s2, v1.s2); dump();
smax(v7.s2, v7.s2, v2.s2); dump();
smax(v7.s2, v7.s2, v4.s2); dump();
smax(v7.s2, v7.s2, v8.s2); dump();
smax(v7.s2, v7.s2, v16.s2); dump();
smax(v7.s2, v7.s2, v31.s2); dump();
smin(v7.s2, v7.s2, v7.s2); dump();
smin(v0.s2, v7.s2, v7.s2); dump();
smin(v1.s2, v7.s2, v7.s2); dump();
smin(v2.s2, v7.s2, v7.s2); dump();
smin(v4.s2, v7.s2, v7.s2); dump();
smin(v8.s2, v7.s2, v7.s2); dump();
smin(v16.s2, v7.s2, v7.s2); dump();
smin(v31.s2, v7.s2, v7.s2); dump();
smin(v7.s2, v7.s2, v7.s2); dump();
smin(v7.s2, v0.s2, v7.s2); dump();
smin(v7.s2, v1.s2, v7.s2); dump();
smin(v7.s2, v2.s2, v7.s2); dump();
smin(v7.s2, v4.s2, v7.s2); dump();
smin(v7.s2, v8.s2, v7.s2); dump();
smin(v7.s2, v16.s2, v7.s2); dump();
smin(v7.s2, v31.s2, v7.s2); dump();
smin(v7.s2, v7.s2, v7.s2); dump();
smin(v7.s2, v7.s2, v0.s2); dump();
smin(v7.s2, v7.s2, v1.s2); dump();
smin(v7.s2, v7.s2, v2.s2); dump();
smin(v7.s2, v7.s2, v4.s2); dump();
smin(v7.s2, v7.s2, v8.s2); dump();
smin(v7.s2, v7.s2, v16.s2); dump();
smin(v7.s2, v7.s2, v31.s2); dump();
srhadd(v7.s2, v7.s2, v7.s2); dump();
srhadd(v0.s2, v7.s2, v7.s2); dump();
srhadd(v1.s2, v7.s2, v7.s2); dump();
srhadd(v2.s2, v7.s2, v7.s2); dump();
srhadd(v4.s2, v7.s2, v7.s2); dump();
srhadd(v8.s2, v7.s2, v7.s2); dump();
srhadd(v16.s2, v7.s2, v7.s2); dump();
srhadd(v31.s2, v7.s2, v7.s2); dump();
srhadd(v7.s2, v7.s2, v7.s2); dump();
srhadd(v7.s2, v0.s2, v7.s2); dump();
srhadd(v7.s2, v1.s2, v7.s2); dump();
srhadd(v7.s2, v2.s2, v7.s2); dump();
srhadd(v7.s2, v4.s2, v7.s2); dump();
srhadd(v7.s2, v8.s2, v7.s2); dump();
srhadd(v7.s2, v16.s2, v7.s2); dump();
srhadd(v7.s2, v31.s2, v7.s2); dump();
srhadd(v7.s2, v7.s2, v7.s2); dump();
srhadd(v7.s2, v7.s2, v0.s2); dump();
srhadd(v7.s2, v7.s2, v1.s2); dump();
srhadd(v7.s2, v7.s2, v2.s2); dump();
srhadd(v7.s2, v7.s2, v4.s2); dump();
srhadd(v7.s2, v7.s2, v8.s2); dump();
srhadd(v7.s2, v7.s2, v16.s2); dump();
srhadd(v7.s2, v7.s2, v31.s2); dump();
uaba(v7.s2, v7.s2, v7.s2); dump();
uaba(v0.s2, v7.s2, v7.s2); dump();
uaba(v1.s2, v7.s2, v7.s2); dump();
uaba(v2.s2, v7.s2, v7.s2); dump();
uaba(v4.s2, v7.s2, v7.s2); dump();
uaba(v8.s2, v7.s2, v7.s2); dump();
uaba(v16.s2, v7.s2, v7.s2); dump();
uaba(v31.s2, v7.s2, v7.s2); dump();
uaba(v7.s2, v7.s2, v7.s2); dump();
uaba(v7.s2, v0.s2, v7.s2); dump();
uaba(v7.s2, v1.s2, v7.s2); dump();
uaba(v7.s2, v2.s2, v7.s2); dump();
uaba(v7.s2, v4.s2, v7.s2); dump();
uaba(v7.s2, v8.s2, v7.s2); dump();
uaba(v7.s2, v16.s2, v7.s2); dump();
uaba(v7.s2, v31.s2, v7.s2); dump();
uaba(v7.s2, v7.s2, v7.s2); dump();
uaba(v7.s2, v7.s2, v0.s2); dump();
uaba(v7.s2, v7.s2, v1.s2); dump();
uaba(v7.s2, v7.s2, v2.s2); dump();
uaba(v7.s2, v7.s2, v4.s2); dump();
uaba(v7.s2, v7.s2, v8.s2); dump();
uaba(v7.s2, v7.s2, v16.s2); dump();
uaba(v7.s2, v7.s2, v31.s2); dump();
uabd(v7.s2, v7.s2, v7.s2); dump();
uabd(v0.s2, v7.s2, v7.s2); dump();
uabd(v1.s2, v7.s2, v7.s2); dump();
uabd(v2.s2, v7.s2, v7.s2); dump();
uabd(v4.s2, v7.s2, v7.s2); dump();
uabd(v8.s2, v7.s2, v7.s2); dump();
uabd(v16.s2, v7.s2, v7.s2); dump();
uabd(v31.s2, v7.s2, v7.s2); dump();
uabd(v7.s2, v7.s2, v7.s2); dump();
uabd(v7.s2, v0.s2, v7.s2); dump();
uabd(v7.s2, v1.s2, v7.s2); dump();
uabd(v7.s2, v2.s2, v7.s2); dump();
uabd(v7.s2, v4.s2, v7.s2); dump();
uabd(v7.s2, v8.s2, v7.s2); dump();
uabd(v7.s2, v16.s2, v7.s2); dump();
uabd(v7.s2, v31.s2, v7.s2); dump();
uabd(v7.s2, v7.s2, v7.s2); dump();
uabd(v7.s2, v7.s2, v0.s2); dump();
uabd(v7.s2, v7.s2, v1.s2); dump();
uabd(v7.s2, v7.s2, v2.s2); dump();
uabd(v7.s2, v7.s2, v4.s2); dump();
uabd(v7.s2, v7.s2, v8.s2); dump();
uabd(v7.s2, v7.s2, v16.s2); dump();
uabd(v7.s2, v7.s2, v31.s2); dump();
uhadd(v7.s2, v7.s2, v7.s2); dump();
uhadd(v0.s2, v7.s2, v7.s2); dump();
uhadd(v1.s2, v7.s2, v7.s2); dump();
uhadd(v2.s2, v7.s2, v7.s2); dump();
uhadd(v4.s2, v7.s2, v7.s2); dump();
uhadd(v8.s2, v7.s2, v7.s2); dump();
uhadd(v16.s2, v7.s2, v7.s2); dump();
uhadd(v31.s2, v7.s2, v7.s2); dump();
uhadd(v7.s2, v7.s2, v7.s2); dump();
uhadd(v7.s2, v0.s2, v7.s2); dump();
uhadd(v7.s2, v1.s2, v7.s2); dump();
uhadd(v7.s2, v2.s2, v7.s2); dump();
uhadd(v7.s2, v4.s2, v7.s2); dump();
uhadd(v7.s2, v8.s2, v7.s2); dump();
uhadd(v7.s2, v16.s2, v7.s2); dump();
uhadd(v7.s2, v31.s2, v7.s2); dump();
uhadd(v7.s2, v7.s2, v7.s2); dump();
uhadd(v7.s2, v7.s2, v0.s2); dump();
uhadd(v7.s2, v7.s2, v1.s2); dump();
uhadd(v7.s2, v7.s2, v2.s2); dump();
uhadd(v7.s2, v7.s2, v4.s2); dump();
uhadd(v7.s2, v7.s2, v8.s2); dump();
uhadd(v7.s2, v7.s2, v16.s2); dump();
uhadd(v7.s2, v7.s2, v31.s2); dump();
uhsub(v7.s2, v7.s2, v7.s2); dump();
uhsub(v0.s2, v7.s2, v7.s2); dump();
uhsub(v1.s2, v7.s2, v7.s2); dump();
uhsub(v2.s2, v7.s2, v7.s2); dump();
uhsub(v4.s2, v7.s2, v7.s2); dump();
uhsub(v8.s2, v7.s2, v7.s2); dump();
uhsub(v16.s2, v7.s2, v7.s2); dump();
uhsub(v31.s2, v7.s2, v7.s2); dump();
uhsub(v7.s2, v7.s2, v7.s2); dump();
uhsub(v7.s2, v0.s2, v7.s2); dump();
uhsub(v7.s2, v1.s2, v7.s2); dump();
uhsub(v7.s2, v2.s2, v7.s2); dump();
uhsub(v7.s2, v4.s2, v7.s2); dump();
uhsub(v7.s2, v8.s2, v7.s2); dump();
uhsub(v7.s2, v16.s2, v7.s2); dump();
uhsub(v7.s2, v31.s2, v7.s2); dump();
uhsub(v7.s2, v7.s2, v7.s2); dump();
uhsub(v7.s2, v7.s2, v0.s2); dump();
uhsub(v7.s2, v7.s2, v1.s2); dump();
uhsub(v7.s2, v7.s2, v2.s2); dump();
uhsub(v7.s2, v7.s2, v4.s2); dump();
uhsub(v7.s2, v7.s2, v8.s2); dump();
uhsub(v7.s2, v7.s2, v16.s2); dump();
uhsub(v7.s2, v7.s2, v31.s2); dump();
umax(v7.s2, v7.s2, v7.s2); dump();
umax(v0.s2, v7.s2, v7.s2); dump();
umax(v1.s2, v7.s2, v7.s2); dump();
umax(v2.s2, v7.s2, v7.s2); dump();
umax(v4.s2, v7.s2, v7.s2); dump();
umax(v8.s2, v7.s2, v7.s2); dump();
umax(v16.s2, v7.s2, v7.s2); dump();
umax(v31.s2, v7.s2, v7.s2); dump();
umax(v7.s2, v7.s2, v7.s2); dump();
umax(v7.s2, v0.s2, v7.s2); dump();
umax(v7.s2, v1.s2, v7.s2); dump();
umax(v7.s2, v2.s2, v7.s2); dump();
umax(v7.s2, v4.s2, v7.s2); dump();
umax(v7.s2, v8.s2, v7.s2); dump();
umax(v7.s2, v16.s2, v7.s2); dump();
umax(v7.s2, v31.s2, v7.s2); dump();
umax(v7.s2, v7.s2, v7.s2); dump();
umax(v7.s2, v7.s2, v0.s2); dump();
umax(v7.s2, v7.s2, v1.s2); dump();
umax(v7.s2, v7.s2, v2.s2); dump();
umax(v7.s2, v7.s2, v4.s2); dump();
umax(v7.s2, v7.s2, v8.s2); dump();
umax(v7.s2, v7.s2, v16.s2); dump();
umax(v7.s2, v7.s2, v31.s2); dump();
umin(v7.s2, v7.s2, v7.s2); dump();
umin(v0.s2, v7.s2, v7.s2); dump();
umin(v1.s2, v7.s2, v7.s2); dump();
umin(v2.s2, v7.s2, v7.s2); dump();
umin(v4.s2, v7.s2, v7.s2); dump();
umin(v8.s2, v7.s2, v7.s2); dump();
umin(v16.s2, v7.s2, v7.s2); dump();
umin(v31.s2, v7.s2, v7.s2); dump();
umin(v7.s2, v7.s2, v7.s2); dump();
umin(v7.s2, v0.s2, v7.s2); dump();
umin(v7.s2, v1.s2, v7.s2); dump();
umin(v7.s2, v2.s2, v7.s2); dump();
umin(v7.s2, v4.s2, v7.s2); dump();
umin(v7.s2, v8.s2, v7.s2); dump();
umin(v7.s2, v16.s2, v7.s2); dump();
umin(v7.s2, v31.s2, v7.s2); dump();
umin(v7.s2, v7.s2, v7.s2); dump();
umin(v7.s2, v7.s2, v0.s2); dump();
umin(v7.s2, v7.s2, v1.s2); dump();
umin(v7.s2, v7.s2, v2.s2); dump();
umin(v7.s2, v7.s2, v4.s2); dump();
umin(v7.s2, v7.s2, v8.s2); dump();
umin(v7.s2, v7.s2, v16.s2); dump();
umin(v7.s2, v7.s2, v31.s2); dump();
urhadd(v7.s2, v7.s2, v7.s2); dump();
urhadd(v0.s2, v7.s2, v7.s2); dump();
urhadd(v1.s2, v7.s2, v7.s2); dump();
urhadd(v2.s2, v7.s2, v7.s2); dump();
urhadd(v4.s2, v7.s2, v7.s2); dump();
urhadd(v8.s2, v7.s2, v7.s2); dump();
urhadd(v16.s2, v7.s2, v7.s2); dump();
urhadd(v31.s2, v7.s2, v7.s2); dump();
urhadd(v7.s2, v7.s2, v7.s2); dump();
urhadd(v7.s2, v0.s2, v7.s2); dump();
urhadd(v7.s2, v1.s2, v7.s2); dump();
urhadd(v7.s2, v2.s2, v7.s2); dump();
urhadd(v7.s2, v4.s2, v7.s2); dump();
urhadd(v7.s2, v8.s2, v7.s2); dump();
urhadd(v7.s2, v16.s2, v7.s2); dump();
urhadd(v7.s2, v31.s2, v7.s2); dump();
urhadd(v7.s2, v7.s2, v7.s2); dump();
urhadd(v7.s2, v7.s2, v0.s2); dump();
urhadd(v7.s2, v7.s2, v1.s2); dump();
urhadd(v7.s2, v7.s2, v2.s2); dump();
urhadd(v7.s2, v7.s2, v4.s2); dump();
urhadd(v7.s2, v7.s2, v8.s2); dump();
urhadd(v7.s2, v7.s2, v16.s2); dump();
urhadd(v7.s2, v7.s2, v31.s2); dump();
//DataProcSimd_Arithmetic10:5
mla(v7.s4, v7.s4, v7.s4); dump();
mla(v0.s4, v7.s4, v7.s4); dump();
mla(v1.s4, v7.s4, v7.s4); dump();
mla(v2.s4, v7.s4, v7.s4); dump();
mla(v4.s4, v7.s4, v7.s4); dump();
mla(v8.s4, v7.s4, v7.s4); dump();
mla(v16.s4, v7.s4, v7.s4); dump();
mla(v31.s4, v7.s4, v7.s4); dump();
mla(v7.s4, v7.s4, v7.s4); dump();
mla(v7.s4, v0.s4, v7.s4); dump();
mla(v7.s4, v1.s4, v7.s4); dump();
mla(v7.s4, v2.s4, v7.s4); dump();
mla(v7.s4, v4.s4, v7.s4); dump();
mla(v7.s4, v8.s4, v7.s4); dump();
mla(v7.s4, v16.s4, v7.s4); dump();
mla(v7.s4, v31.s4, v7.s4); dump();
mla(v7.s4, v7.s4, v7.s4); dump();
mla(v7.s4, v7.s4, v0.s4); dump();
mla(v7.s4, v7.s4, v1.s4); dump();
mla(v7.s4, v7.s4, v2.s4); dump();
mla(v7.s4, v7.s4, v4.s4); dump();
mla(v7.s4, v7.s4, v8.s4); dump();
mla(v7.s4, v7.s4, v16.s4); dump();
mla(v7.s4, v7.s4, v31.s4); dump();
mls(v7.s4, v7.s4, v7.s4); dump();
mls(v0.s4, v7.s4, v7.s4); dump();
mls(v1.s4, v7.s4, v7.s4); dump();
mls(v2.s4, v7.s4, v7.s4); dump();
mls(v4.s4, v7.s4, v7.s4); dump();
mls(v8.s4, v7.s4, v7.s4); dump();
mls(v16.s4, v7.s4, v7.s4); dump();
mls(v31.s4, v7.s4, v7.s4); dump();
mls(v7.s4, v7.s4, v7.s4); dump();
mls(v7.s4, v0.s4, v7.s4); dump();
mls(v7.s4, v1.s4, v7.s4); dump();
mls(v7.s4, v2.s4, v7.s4); dump();
mls(v7.s4, v4.s4, v7.s4); dump();
mls(v7.s4, v8.s4, v7.s4); dump();
mls(v7.s4, v16.s4, v7.s4); dump();
mls(v7.s4, v31.s4, v7.s4); dump();
mls(v7.s4, v7.s4, v7.s4); dump();
mls(v7.s4, v7.s4, v0.s4); dump();
mls(v7.s4, v7.s4, v1.s4); dump();
mls(v7.s4, v7.s4, v2.s4); dump();
mls(v7.s4, v7.s4, v4.s4); dump();
mls(v7.s4, v7.s4, v8.s4); dump();
mls(v7.s4, v7.s4, v16.s4); dump();
mls(v7.s4, v7.s4, v31.s4); dump();
mul(v7.s4, v7.s4, v7.s4); dump();
mul(v0.s4, v7.s4, v7.s4); dump();
mul(v1.s4, v7.s4, v7.s4); dump();
mul(v2.s4, v7.s4, v7.s4); dump();
mul(v4.s4, v7.s4, v7.s4); dump();
mul(v8.s4, v7.s4, v7.s4); dump();
mul(v16.s4, v7.s4, v7.s4); dump();
mul(v31.s4, v7.s4, v7.s4); dump();
mul(v7.s4, v7.s4, v7.s4); dump();
mul(v7.s4, v0.s4, v7.s4); dump();
mul(v7.s4, v1.s4, v7.s4); dump();
mul(v7.s4, v2.s4, v7.s4); dump();
mul(v7.s4, v4.s4, v7.s4); dump();
mul(v7.s4, v8.s4, v7.s4); dump();
mul(v7.s4, v16.s4, v7.s4); dump();
mul(v7.s4, v31.s4, v7.s4); dump();
mul(v7.s4, v7.s4, v7.s4); dump();
mul(v7.s4, v7.s4, v0.s4); dump();
mul(v7.s4, v7.s4, v1.s4); dump();
mul(v7.s4, v7.s4, v2.s4); dump();
mul(v7.s4, v7.s4, v4.s4); dump();
mul(v7.s4, v7.s4, v8.s4); dump();
mul(v7.s4, v7.s4, v16.s4); dump();
mul(v7.s4, v7.s4, v31.s4); dump();
saba(v7.s4, v7.s4, v7.s4); dump();
saba(v0.s4, v7.s4, v7.s4); dump();
saba(v1.s4, v7.s4, v7.s4); dump();
saba(v2.s4, v7.s4, v7.s4); dump();
saba(v4.s4, v7.s4, v7.s4); dump();
saba(v8.s4, v7.s4, v7.s4); dump();
saba(v16.s4, v7.s4, v7.s4); dump();
saba(v31.s4, v7.s4, v7.s4); dump();
saba(v7.s4, v7.s4, v7.s4); dump();
saba(v7.s4, v0.s4, v7.s4); dump();
saba(v7.s4, v1.s4, v7.s4); dump();
saba(v7.s4, v2.s4, v7.s4); dump();
saba(v7.s4, v4.s4, v7.s4); dump();
saba(v7.s4, v8.s4, v7.s4); dump();
saba(v7.s4, v16.s4, v7.s4); dump();
saba(v7.s4, v31.s4, v7.s4); dump();
saba(v7.s4, v7.s4, v7.s4); dump();
saba(v7.s4, v7.s4, v0.s4); dump();
saba(v7.s4, v7.s4, v1.s4); dump();
saba(v7.s4, v7.s4, v2.s4); dump();
saba(v7.s4, v7.s4, v4.s4); dump();
saba(v7.s4, v7.s4, v8.s4); dump();
saba(v7.s4, v7.s4, v16.s4); dump();
saba(v7.s4, v7.s4, v31.s4); dump();
sabd(v7.s4, v7.s4, v7.s4); dump();
sabd(v0.s4, v7.s4, v7.s4); dump();
sabd(v1.s4, v7.s4, v7.s4); dump();
sabd(v2.s4, v7.s4, v7.s4); dump();
sabd(v4.s4, v7.s4, v7.s4); dump();
sabd(v8.s4, v7.s4, v7.s4); dump();
sabd(v16.s4, v7.s4, v7.s4); dump();
sabd(v31.s4, v7.s4, v7.s4); dump();
sabd(v7.s4, v7.s4, v7.s4); dump();
sabd(v7.s4, v0.s4, v7.s4); dump();
sabd(v7.s4, v1.s4, v7.s4); dump();
sabd(v7.s4, v2.s4, v7.s4); dump();
sabd(v7.s4, v4.s4, v7.s4); dump();
sabd(v7.s4, v8.s4, v7.s4); dump();
sabd(v7.s4, v16.s4, v7.s4); dump();
sabd(v7.s4, v31.s4, v7.s4); dump();
sabd(v7.s4, v7.s4, v7.s4); dump();
sabd(v7.s4, v7.s4, v0.s4); dump();
sabd(v7.s4, v7.s4, v1.s4); dump();
sabd(v7.s4, v7.s4, v2.s4); dump();
sabd(v7.s4, v7.s4, v4.s4); dump();
sabd(v7.s4, v7.s4, v8.s4); dump();
sabd(v7.s4, v7.s4, v16.s4); dump();
sabd(v7.s4, v7.s4, v31.s4); dump();
shadd(v7.s4, v7.s4, v7.s4); dump();
shadd(v0.s4, v7.s4, v7.s4); dump();
shadd(v1.s4, v7.s4, v7.s4); dump();
shadd(v2.s4, v7.s4, v7.s4); dump();
shadd(v4.s4, v7.s4, v7.s4); dump();
shadd(v8.s4, v7.s4, v7.s4); dump();
shadd(v16.s4, v7.s4, v7.s4); dump();
shadd(v31.s4, v7.s4, v7.s4); dump();
shadd(v7.s4, v7.s4, v7.s4); dump();
shadd(v7.s4, v0.s4, v7.s4); dump();
shadd(v7.s4, v1.s4, v7.s4); dump();
shadd(v7.s4, v2.s4, v7.s4); dump();
shadd(v7.s4, v4.s4, v7.s4); dump();
shadd(v7.s4, v8.s4, v7.s4); dump();
shadd(v7.s4, v16.s4, v7.s4); dump();
shadd(v7.s4, v31.s4, v7.s4); dump();
shadd(v7.s4, v7.s4, v7.s4); dump();
shadd(v7.s4, v7.s4, v0.s4); dump();
shadd(v7.s4, v7.s4, v1.s4); dump();
shadd(v7.s4, v7.s4, v2.s4); dump();
shadd(v7.s4, v7.s4, v4.s4); dump();
shadd(v7.s4, v7.s4, v8.s4); dump();
shadd(v7.s4, v7.s4, v16.s4); dump();
shadd(v7.s4, v7.s4, v31.s4); dump();
shsub(v7.s4, v7.s4, v7.s4); dump();
shsub(v0.s4, v7.s4, v7.s4); dump();
shsub(v1.s4, v7.s4, v7.s4); dump();
shsub(v2.s4, v7.s4, v7.s4); dump();
shsub(v4.s4, v7.s4, v7.s4); dump();
shsub(v8.s4, v7.s4, v7.s4); dump();
shsub(v16.s4, v7.s4, v7.s4); dump();
shsub(v31.s4, v7.s4, v7.s4); dump();
shsub(v7.s4, v7.s4, v7.s4); dump();
shsub(v7.s4, v0.s4, v7.s4); dump();
shsub(v7.s4, v1.s4, v7.s4); dump();
shsub(v7.s4, v2.s4, v7.s4); dump();
shsub(v7.s4, v4.s4, v7.s4); dump();
shsub(v7.s4, v8.s4, v7.s4); dump();
shsub(v7.s4, v16.s4, v7.s4); dump();
shsub(v7.s4, v31.s4, v7.s4); dump();
shsub(v7.s4, v7.s4, v7.s4); dump();
shsub(v7.s4, v7.s4, v0.s4); dump();
shsub(v7.s4, v7.s4, v1.s4); dump();
shsub(v7.s4, v7.s4, v2.s4); dump();
shsub(v7.s4, v7.s4, v4.s4); dump();
shsub(v7.s4, v7.s4, v8.s4); dump();
shsub(v7.s4, v7.s4, v16.s4); dump();
shsub(v7.s4, v7.s4, v31.s4); dump();
smax(v7.s4, v7.s4, v7.s4); dump();
smax(v0.s4, v7.s4, v7.s4); dump();
smax(v1.s4, v7.s4, v7.s4); dump();
smax(v2.s4, v7.s4, v7.s4); dump();
smax(v4.s4, v7.s4, v7.s4); dump();
smax(v8.s4, v7.s4, v7.s4); dump();
smax(v16.s4, v7.s4, v7.s4); dump();
smax(v31.s4, v7.s4, v7.s4); dump();
smax(v7.s4, v7.s4, v7.s4); dump();
smax(v7.s4, v0.s4, v7.s4); dump();
smax(v7.s4, v1.s4, v7.s4); dump();
smax(v7.s4, v2.s4, v7.s4); dump();
smax(v7.s4, v4.s4, v7.s4); dump();
smax(v7.s4, v8.s4, v7.s4); dump();
smax(v7.s4, v16.s4, v7.s4); dump();
smax(v7.s4, v31.s4, v7.s4); dump();
smax(v7.s4, v7.s4, v7.s4); dump();
smax(v7.s4, v7.s4, v0.s4); dump();
smax(v7.s4, v7.s4, v1.s4); dump();
smax(v7.s4, v7.s4, v2.s4); dump();
smax(v7.s4, v7.s4, v4.s4); dump();
smax(v7.s4, v7.s4, v8.s4); dump();
smax(v7.s4, v7.s4, v16.s4); dump();
smax(v7.s4, v7.s4, v31.s4); dump();
smin(v7.s4, v7.s4, v7.s4); dump();
smin(v0.s4, v7.s4, v7.s4); dump();
smin(v1.s4, v7.s4, v7.s4); dump();
smin(v2.s4, v7.s4, v7.s4); dump();
smin(v4.s4, v7.s4, v7.s4); dump();
smin(v8.s4, v7.s4, v7.s4); dump();
smin(v16.s4, v7.s4, v7.s4); dump();
smin(v31.s4, v7.s4, v7.s4); dump();
smin(v7.s4, v7.s4, v7.s4); dump();
smin(v7.s4, v0.s4, v7.s4); dump();
smin(v7.s4, v1.s4, v7.s4); dump();
smin(v7.s4, v2.s4, v7.s4); dump();
smin(v7.s4, v4.s4, v7.s4); dump();
smin(v7.s4, v8.s4, v7.s4); dump();
smin(v7.s4, v16.s4, v7.s4); dump();
smin(v7.s4, v31.s4, v7.s4); dump();
smin(v7.s4, v7.s4, v7.s4); dump();
smin(v7.s4, v7.s4, v0.s4); dump();
smin(v7.s4, v7.s4, v1.s4); dump();
smin(v7.s4, v7.s4, v2.s4); dump();
smin(v7.s4, v7.s4, v4.s4); dump();
smin(v7.s4, v7.s4, v8.s4); dump();
smin(v7.s4, v7.s4, v16.s4); dump();
smin(v7.s4, v7.s4, v31.s4); dump();
srhadd(v7.s4, v7.s4, v7.s4); dump();
srhadd(v0.s4, v7.s4, v7.s4); dump();
srhadd(v1.s4, v7.s4, v7.s4); dump();
srhadd(v2.s4, v7.s4, v7.s4); dump();
srhadd(v4.s4, v7.s4, v7.s4); dump();
srhadd(v8.s4, v7.s4, v7.s4); dump();
srhadd(v16.s4, v7.s4, v7.s4); dump();
srhadd(v31.s4, v7.s4, v7.s4); dump();
srhadd(v7.s4, v7.s4, v7.s4); dump();
srhadd(v7.s4, v0.s4, v7.s4); dump();
srhadd(v7.s4, v1.s4, v7.s4); dump();
srhadd(v7.s4, v2.s4, v7.s4); dump();
srhadd(v7.s4, v4.s4, v7.s4); dump();
srhadd(v7.s4, v8.s4, v7.s4); dump();
srhadd(v7.s4, v16.s4, v7.s4); dump();
srhadd(v7.s4, v31.s4, v7.s4); dump();
srhadd(v7.s4, v7.s4, v7.s4); dump();
srhadd(v7.s4, v7.s4, v0.s4); dump();
srhadd(v7.s4, v7.s4, v1.s4); dump();
srhadd(v7.s4, v7.s4, v2.s4); dump();
srhadd(v7.s4, v7.s4, v4.s4); dump();
srhadd(v7.s4, v7.s4, v8.s4); dump();
srhadd(v7.s4, v7.s4, v16.s4); dump();
srhadd(v7.s4, v7.s4, v31.s4); dump();
uaba(v7.s4, v7.s4, v7.s4); dump();
uaba(v0.s4, v7.s4, v7.s4); dump();
uaba(v1.s4, v7.s4, v7.s4); dump();
uaba(v2.s4, v7.s4, v7.s4); dump();
uaba(v4.s4, v7.s4, v7.s4); dump();
uaba(v8.s4, v7.s4, v7.s4); dump();
uaba(v16.s4, v7.s4, v7.s4); dump();
uaba(v31.s4, v7.s4, v7.s4); dump();
uaba(v7.s4, v7.s4, v7.s4); dump();
uaba(v7.s4, v0.s4, v7.s4); dump();
uaba(v7.s4, v1.s4, v7.s4); dump();
uaba(v7.s4, v2.s4, v7.s4); dump();
uaba(v7.s4, v4.s4, v7.s4); dump();
uaba(v7.s4, v8.s4, v7.s4); dump();
uaba(v7.s4, v16.s4, v7.s4); dump();
uaba(v7.s4, v31.s4, v7.s4); dump();
uaba(v7.s4, v7.s4, v7.s4); dump();
uaba(v7.s4, v7.s4, v0.s4); dump();
uaba(v7.s4, v7.s4, v1.s4); dump();
uaba(v7.s4, v7.s4, v2.s4); dump();
uaba(v7.s4, v7.s4, v4.s4); dump();
uaba(v7.s4, v7.s4, v8.s4); dump();
uaba(v7.s4, v7.s4, v16.s4); dump();
uaba(v7.s4, v7.s4, v31.s4); dump();
uabd(v7.s4, v7.s4, v7.s4); dump();
uabd(v0.s4, v7.s4, v7.s4); dump();
uabd(v1.s4, v7.s4, v7.s4); dump();
uabd(v2.s4, v7.s4, v7.s4); dump();
uabd(v4.s4, v7.s4, v7.s4); dump();
uabd(v8.s4, v7.s4, v7.s4); dump();
uabd(v16.s4, v7.s4, v7.s4); dump();
uabd(v31.s4, v7.s4, v7.s4); dump();
uabd(v7.s4, v7.s4, v7.s4); dump();
uabd(v7.s4, v0.s4, v7.s4); dump();
uabd(v7.s4, v1.s4, v7.s4); dump();
uabd(v7.s4, v2.s4, v7.s4); dump();
uabd(v7.s4, v4.s4, v7.s4); dump();
uabd(v7.s4, v8.s4, v7.s4); dump();
uabd(v7.s4, v16.s4, v7.s4); dump();
uabd(v7.s4, v31.s4, v7.s4); dump();
uabd(v7.s4, v7.s4, v7.s4); dump();
uabd(v7.s4, v7.s4, v0.s4); dump();
uabd(v7.s4, v7.s4, v1.s4); dump();
uabd(v7.s4, v7.s4, v2.s4); dump();
uabd(v7.s4, v7.s4, v4.s4); dump();
uabd(v7.s4, v7.s4, v8.s4); dump();
uabd(v7.s4, v7.s4, v16.s4); dump();
uabd(v7.s4, v7.s4, v31.s4); dump();
uhadd(v7.s4, v7.s4, v7.s4); dump();
uhadd(v0.s4, v7.s4, v7.s4); dump();
uhadd(v1.s4, v7.s4, v7.s4); dump();
uhadd(v2.s4, v7.s4, v7.s4); dump();
uhadd(v4.s4, v7.s4, v7.s4); dump();
uhadd(v8.s4, v7.s4, v7.s4); dump();
uhadd(v16.s4, v7.s4, v7.s4); dump();
uhadd(v31.s4, v7.s4, v7.s4); dump();
uhadd(v7.s4, v7.s4, v7.s4); dump();
uhadd(v7.s4, v0.s4, v7.s4); dump();
uhadd(v7.s4, v1.s4, v7.s4); dump();
uhadd(v7.s4, v2.s4, v7.s4); dump();
uhadd(v7.s4, v4.s4, v7.s4); dump();
uhadd(v7.s4, v8.s4, v7.s4); dump();
uhadd(v7.s4, v16.s4, v7.s4); dump();
uhadd(v7.s4, v31.s4, v7.s4); dump();
uhadd(v7.s4, v7.s4, v7.s4); dump();
uhadd(v7.s4, v7.s4, v0.s4); dump();
uhadd(v7.s4, v7.s4, v1.s4); dump();
uhadd(v7.s4, v7.s4, v2.s4); dump();
uhadd(v7.s4, v7.s4, v4.s4); dump();
uhadd(v7.s4, v7.s4, v8.s4); dump();
uhadd(v7.s4, v7.s4, v16.s4); dump();
uhadd(v7.s4, v7.s4, v31.s4); dump();
uhsub(v7.s4, v7.s4, v7.s4); dump();
uhsub(v0.s4, v7.s4, v7.s4); dump();
uhsub(v1.s4, v7.s4, v7.s4); dump();
uhsub(v2.s4, v7.s4, v7.s4); dump();
uhsub(v4.s4, v7.s4, v7.s4); dump();
uhsub(v8.s4, v7.s4, v7.s4); dump();
uhsub(v16.s4, v7.s4, v7.s4); dump();
uhsub(v31.s4, v7.s4, v7.s4); dump();
uhsub(v7.s4, v7.s4, v7.s4); dump();
uhsub(v7.s4, v0.s4, v7.s4); dump();
uhsub(v7.s4, v1.s4, v7.s4); dump();
uhsub(v7.s4, v2.s4, v7.s4); dump();
uhsub(v7.s4, v4.s4, v7.s4); dump();
uhsub(v7.s4, v8.s4, v7.s4); dump();
uhsub(v7.s4, v16.s4, v7.s4); dump();
uhsub(v7.s4, v31.s4, v7.s4); dump();
uhsub(v7.s4, v7.s4, v7.s4); dump();
uhsub(v7.s4, v7.s4, v0.s4); dump();
uhsub(v7.s4, v7.s4, v1.s4); dump();
uhsub(v7.s4, v7.s4, v2.s4); dump();
uhsub(v7.s4, v7.s4, v4.s4); dump();
uhsub(v7.s4, v7.s4, v8.s4); dump();
uhsub(v7.s4, v7.s4, v16.s4); dump();
uhsub(v7.s4, v7.s4, v31.s4); dump();
umax(v7.s4, v7.s4, v7.s4); dump();
umax(v0.s4, v7.s4, v7.s4); dump();
umax(v1.s4, v7.s4, v7.s4); dump();
umax(v2.s4, v7.s4, v7.s4); dump();
umax(v4.s4, v7.s4, v7.s4); dump();
umax(v8.s4, v7.s4, v7.s4); dump();
umax(v16.s4, v7.s4, v7.s4); dump();
umax(v31.s4, v7.s4, v7.s4); dump();
umax(v7.s4, v7.s4, v7.s4); dump();
umax(v7.s4, v0.s4, v7.s4); dump();
umax(v7.s4, v1.s4, v7.s4); dump();
umax(v7.s4, v2.s4, v7.s4); dump();
umax(v7.s4, v4.s4, v7.s4); dump();
umax(v7.s4, v8.s4, v7.s4); dump();
umax(v7.s4, v16.s4, v7.s4); dump();
umax(v7.s4, v31.s4, v7.s4); dump();
umax(v7.s4, v7.s4, v7.s4); dump();
umax(v7.s4, v7.s4, v0.s4); dump();
umax(v7.s4, v7.s4, v1.s4); dump();
umax(v7.s4, v7.s4, v2.s4); dump();
umax(v7.s4, v7.s4, v4.s4); dump();
umax(v7.s4, v7.s4, v8.s4); dump();
umax(v7.s4, v7.s4, v16.s4); dump();
umax(v7.s4, v7.s4, v31.s4); dump();
umin(v7.s4, v7.s4, v7.s4); dump();
umin(v0.s4, v7.s4, v7.s4); dump();
umin(v1.s4, v7.s4, v7.s4); dump();
umin(v2.s4, v7.s4, v7.s4); dump();
umin(v4.s4, v7.s4, v7.s4); dump();
umin(v8.s4, v7.s4, v7.s4); dump();
umin(v16.s4, v7.s4, v7.s4); dump();
umin(v31.s4, v7.s4, v7.s4); dump();
umin(v7.s4, v7.s4, v7.s4); dump();
umin(v7.s4, v0.s4, v7.s4); dump();
umin(v7.s4, v1.s4, v7.s4); dump();
umin(v7.s4, v2.s4, v7.s4); dump();
umin(v7.s4, v4.s4, v7.s4); dump();
umin(v7.s4, v8.s4, v7.s4); dump();
umin(v7.s4, v16.s4, v7.s4); dump();
umin(v7.s4, v31.s4, v7.s4); dump();
umin(v7.s4, v7.s4, v7.s4); dump();
umin(v7.s4, v7.s4, v0.s4); dump();
umin(v7.s4, v7.s4, v1.s4); dump();
umin(v7.s4, v7.s4, v2.s4); dump();
umin(v7.s4, v7.s4, v4.s4); dump();
umin(v7.s4, v7.s4, v8.s4); dump();
umin(v7.s4, v7.s4, v16.s4); dump();
umin(v7.s4, v7.s4, v31.s4); dump();
urhadd(v7.s4, v7.s4, v7.s4); dump();
urhadd(v0.s4, v7.s4, v7.s4); dump();
urhadd(v1.s4, v7.s4, v7.s4); dump();
urhadd(v2.s4, v7.s4, v7.s4); dump();
urhadd(v4.s4, v7.s4, v7.s4); dump();
urhadd(v8.s4, v7.s4, v7.s4); dump();
urhadd(v16.s4, v7.s4, v7.s4); dump();
urhadd(v31.s4, v7.s4, v7.s4); dump();
urhadd(v7.s4, v7.s4, v7.s4); dump();
urhadd(v7.s4, v0.s4, v7.s4); dump();
urhadd(v7.s4, v1.s4, v7.s4); dump();
urhadd(v7.s4, v2.s4, v7.s4); dump();
urhadd(v7.s4, v4.s4, v7.s4); dump();
urhadd(v7.s4, v8.s4, v7.s4); dump();
urhadd(v7.s4, v16.s4, v7.s4); dump();
urhadd(v7.s4, v31.s4, v7.s4); dump();
urhadd(v7.s4, v7.s4, v7.s4); dump();
urhadd(v7.s4, v7.s4, v0.s4); dump();
urhadd(v7.s4, v7.s4, v1.s4); dump();
urhadd(v7.s4, v7.s4, v2.s4); dump();
urhadd(v7.s4, v7.s4, v4.s4); dump();
urhadd(v7.s4, v7.s4, v8.s4); dump();
urhadd(v7.s4, v7.s4, v16.s4); dump();
urhadd(v7.s4, v7.s4, v31.s4); dump();
//DataProcSimd_Arithmetic11:0
sqadd(b7, b7, b7); dump();
sqadd(b0, b7, b7); dump();
sqadd(b1, b7, b7); dump();
sqadd(b2, b7, b7); dump();
sqadd(b4, b7, b7); dump();
sqadd(b8, b7, b7); dump();
sqadd(b16, b7, b7); dump();
sqadd(b31, b7, b7); dump();
sqadd(b7, b7, b7); dump();
sqadd(b7, b0, b7); dump();
sqadd(b7, b1, b7); dump();
sqadd(b7, b2, b7); dump();
sqadd(b7, b4, b7); dump();
sqadd(b7, b8, b7); dump();
sqadd(b7, b16, b7); dump();
sqadd(b7, b31, b7); dump();
sqadd(b7, b7, b7); dump();
sqadd(b7, b7, b0); dump();
sqadd(b7, b7, b1); dump();
sqadd(b7, b7, b2); dump();
sqadd(b7, b7, b4); dump();
sqadd(b7, b7, b8); dump();
sqadd(b7, b7, b16); dump();
sqadd(b7, b7, b31); dump();
sqrshl(b7, b7, b7); dump();
sqrshl(b0, b7, b7); dump();
sqrshl(b1, b7, b7); dump();
sqrshl(b2, b7, b7); dump();
sqrshl(b4, b7, b7); dump();
sqrshl(b8, b7, b7); dump();
sqrshl(b16, b7, b7); dump();
sqrshl(b31, b7, b7); dump();
sqrshl(b7, b7, b7); dump();
sqrshl(b7, b0, b7); dump();
sqrshl(b7, b1, b7); dump();
sqrshl(b7, b2, b7); dump();
sqrshl(b7, b4, b7); dump();
sqrshl(b7, b8, b7); dump();
sqrshl(b7, b16, b7); dump();
sqrshl(b7, b31, b7); dump();
sqrshl(b7, b7, b7); dump();
sqrshl(b7, b7, b0); dump();
sqrshl(b7, b7, b1); dump();
sqrshl(b7, b7, b2); dump();
sqrshl(b7, b7, b4); dump();
sqrshl(b7, b7, b8); dump();
sqrshl(b7, b7, b16); dump();
sqrshl(b7, b7, b31); dump();
sqshl(b7, b7, b7); dump();
sqshl(b0, b7, b7); dump();
sqshl(b1, b7, b7); dump();
sqshl(b2, b7, b7); dump();
sqshl(b4, b7, b7); dump();
sqshl(b8, b7, b7); dump();
sqshl(b16, b7, b7); dump();
sqshl(b31, b7, b7); dump();
sqshl(b7, b7, b7); dump();
sqshl(b7, b0, b7); dump();
sqshl(b7, b1, b7); dump();
sqshl(b7, b2, b7); dump();
sqshl(b7, b4, b7); dump();
sqshl(b7, b8, b7); dump();
sqshl(b7, b16, b7); dump();
sqshl(b7, b31, b7); dump();
sqshl(b7, b7, b7); dump();
sqshl(b7, b7, b0); dump();
sqshl(b7, b7, b1); dump();
sqshl(b7, b7, b2); dump();
sqshl(b7, b7, b4); dump();
sqshl(b7, b7, b8); dump();
sqshl(b7, b7, b16); dump();
sqshl(b7, b7, b31); dump();
sqsub(b7, b7, b7); dump();
sqsub(b0, b7, b7); dump();
sqsub(b1, b7, b7); dump();
sqsub(b2, b7, b7); dump();
sqsub(b4, b7, b7); dump();
sqsub(b8, b7, b7); dump();
sqsub(b16, b7, b7); dump();
sqsub(b31, b7, b7); dump();
sqsub(b7, b7, b7); dump();
sqsub(b7, b0, b7); dump();
sqsub(b7, b1, b7); dump();
sqsub(b7, b2, b7); dump();
sqsub(b7, b4, b7); dump();
sqsub(b7, b8, b7); dump();
sqsub(b7, b16, b7); dump();
sqsub(b7, b31, b7); dump();
sqsub(b7, b7, b7); dump();
sqsub(b7, b7, b0); dump();
sqsub(b7, b7, b1); dump();
sqsub(b7, b7, b2); dump();
sqsub(b7, b7, b4); dump();
sqsub(b7, b7, b8); dump();
sqsub(b7, b7, b16); dump();
sqsub(b7, b7, b31); dump();
uqadd(b7, b7, b7); dump();
uqadd(b0, b7, b7); dump();
uqadd(b1, b7, b7); dump();
uqadd(b2, b7, b7); dump();
uqadd(b4, b7, b7); dump();
uqadd(b8, b7, b7); dump();
uqadd(b16, b7, b7); dump();
uqadd(b31, b7, b7); dump();
uqadd(b7, b7, b7); dump();
uqadd(b7, b0, b7); dump();
uqadd(b7, b1, b7); dump();
uqadd(b7, b2, b7); dump();
uqadd(b7, b4, b7); dump();
uqadd(b7, b8, b7); dump();
uqadd(b7, b16, b7); dump();
uqadd(b7, b31, b7); dump();
uqadd(b7, b7, b7); dump();
uqadd(b7, b7, b0); dump();
uqadd(b7, b7, b1); dump();
uqadd(b7, b7, b2); dump();
uqadd(b7, b7, b4); dump();
uqadd(b7, b7, b8); dump();
uqadd(b7, b7, b16); dump();
uqadd(b7, b7, b31); dump();
uqrshl(b7, b7, b7); dump();
uqrshl(b0, b7, b7); dump();
uqrshl(b1, b7, b7); dump();
uqrshl(b2, b7, b7); dump();
uqrshl(b4, b7, b7); dump();
uqrshl(b8, b7, b7); dump();
uqrshl(b16, b7, b7); dump();
uqrshl(b31, b7, b7); dump();
uqrshl(b7, b7, b7); dump();
uqrshl(b7, b0, b7); dump();
uqrshl(b7, b1, b7); dump();
uqrshl(b7, b2, b7); dump();
uqrshl(b7, b4, b7); dump();
uqrshl(b7, b8, b7); dump();
uqrshl(b7, b16, b7); dump();
uqrshl(b7, b31, b7); dump();
uqrshl(b7, b7, b7); dump();
uqrshl(b7, b7, b0); dump();
uqrshl(b7, b7, b1); dump();
uqrshl(b7, b7, b2); dump();
uqrshl(b7, b7, b4); dump();
uqrshl(b7, b7, b8); dump();
uqrshl(b7, b7, b16); dump();
uqrshl(b7, b7, b31); dump();
uqshl(b7, b7, b7); dump();
uqshl(b0, b7, b7); dump();
uqshl(b1, b7, b7); dump();
uqshl(b2, b7, b7); dump();
uqshl(b4, b7, b7); dump();
uqshl(b8, b7, b7); dump();
uqshl(b16, b7, b7); dump();
uqshl(b31, b7, b7); dump();
uqshl(b7, b7, b7); dump();
uqshl(b7, b0, b7); dump();
uqshl(b7, b1, b7); dump();
uqshl(b7, b2, b7); dump();
uqshl(b7, b4, b7); dump();
uqshl(b7, b8, b7); dump();
uqshl(b7, b16, b7); dump();
uqshl(b7, b31, b7); dump();
uqshl(b7, b7, b7); dump();
uqshl(b7, b7, b0); dump();
uqshl(b7, b7, b1); dump();
uqshl(b7, b7, b2); dump();
uqshl(b7, b7, b4); dump();
uqshl(b7, b7, b8); dump();
uqshl(b7, b7, b16); dump();
uqshl(b7, b7, b31); dump();
uqsub(b7, b7, b7); dump();
uqsub(b0, b7, b7); dump();
uqsub(b1, b7, b7); dump();
uqsub(b2, b7, b7); dump();
uqsub(b4, b7, b7); dump();
uqsub(b8, b7, b7); dump();
uqsub(b16, b7, b7); dump();
uqsub(b31, b7, b7); dump();
uqsub(b7, b7, b7); dump();
uqsub(b7, b0, b7); dump();
uqsub(b7, b1, b7); dump();
uqsub(b7, b2, b7); dump();
uqsub(b7, b4, b7); dump();
uqsub(b7, b8, b7); dump();
uqsub(b7, b16, b7); dump();
uqsub(b7, b31, b7); dump();
uqsub(b7, b7, b7); dump();
uqsub(b7, b7, b0); dump();
uqsub(b7, b7, b1); dump();
uqsub(b7, b7, b2); dump();
uqsub(b7, b7, b4); dump();
uqsub(b7, b7, b8); dump();
uqsub(b7, b7, b16); dump();
uqsub(b7, b7, b31); dump();
//DataProcSimd_Arithmetic11:1
sqadd(h7, h7, h7); dump();
sqadd(h0, h7, h7); dump();
sqadd(h1, h7, h7); dump();
sqadd(h2, h7, h7); dump();
sqadd(h4, h7, h7); dump();
sqadd(h8, h7, h7); dump();
sqadd(h16, h7, h7); dump();
sqadd(h31, h7, h7); dump();
sqadd(h7, h7, h7); dump();
sqadd(h7, h0, h7); dump();
sqadd(h7, h1, h7); dump();
sqadd(h7, h2, h7); dump();
sqadd(h7, h4, h7); dump();
sqadd(h7, h8, h7); dump();
sqadd(h7, h16, h7); dump();
sqadd(h7, h31, h7); dump();
sqadd(h7, h7, h7); dump();
sqadd(h7, h7, h0); dump();
sqadd(h7, h7, h1); dump();
sqadd(h7, h7, h2); dump();
sqadd(h7, h7, h4); dump();
sqadd(h7, h7, h8); dump();
sqadd(h7, h7, h16); dump();
sqadd(h7, h7, h31); dump();
sqrshl(h7, h7, h7); dump();
sqrshl(h0, h7, h7); dump();
sqrshl(h1, h7, h7); dump();
sqrshl(h2, h7, h7); dump();
sqrshl(h4, h7, h7); dump();
sqrshl(h8, h7, h7); dump();
sqrshl(h16, h7, h7); dump();
sqrshl(h31, h7, h7); dump();
sqrshl(h7, h7, h7); dump();
sqrshl(h7, h0, h7); dump();
sqrshl(h7, h1, h7); dump();
sqrshl(h7, h2, h7); dump();
sqrshl(h7, h4, h7); dump();
sqrshl(h7, h8, h7); dump();
sqrshl(h7, h16, h7); dump();
sqrshl(h7, h31, h7); dump();
sqrshl(h7, h7, h7); dump();
sqrshl(h7, h7, h0); dump();
sqrshl(h7, h7, h1); dump();
sqrshl(h7, h7, h2); dump();
sqrshl(h7, h7, h4); dump();
sqrshl(h7, h7, h8); dump();
sqrshl(h7, h7, h16); dump();
sqrshl(h7, h7, h31); dump();
sqshl(h7, h7, h7); dump();
sqshl(h0, h7, h7); dump();
sqshl(h1, h7, h7); dump();
sqshl(h2, h7, h7); dump();
sqshl(h4, h7, h7); dump();
sqshl(h8, h7, h7); dump();
sqshl(h16, h7, h7); dump();
sqshl(h31, h7, h7); dump();
sqshl(h7, h7, h7); dump();
sqshl(h7, h0, h7); dump();
sqshl(h7, h1, h7); dump();
sqshl(h7, h2, h7); dump();
sqshl(h7, h4, h7); dump();
sqshl(h7, h8, h7); dump();
sqshl(h7, h16, h7); dump();
sqshl(h7, h31, h7); dump();
sqshl(h7, h7, h7); dump();
sqshl(h7, h7, h0); dump();
sqshl(h7, h7, h1); dump();
sqshl(h7, h7, h2); dump();
sqshl(h7, h7, h4); dump();
sqshl(h7, h7, h8); dump();
sqshl(h7, h7, h16); dump();
sqshl(h7, h7, h31); dump();
sqsub(h7, h7, h7); dump();
sqsub(h0, h7, h7); dump();
sqsub(h1, h7, h7); dump();
sqsub(h2, h7, h7); dump();
sqsub(h4, h7, h7); dump();
sqsub(h8, h7, h7); dump();
sqsub(h16, h7, h7); dump();
sqsub(h31, h7, h7); dump();
sqsub(h7, h7, h7); dump();
sqsub(h7, h0, h7); dump();
sqsub(h7, h1, h7); dump();
sqsub(h7, h2, h7); dump();
sqsub(h7, h4, h7); dump();
sqsub(h7, h8, h7); dump();
sqsub(h7, h16, h7); dump();
sqsub(h7, h31, h7); dump();
sqsub(h7, h7, h7); dump();
sqsub(h7, h7, h0); dump();
sqsub(h7, h7, h1); dump();
sqsub(h7, h7, h2); dump();
sqsub(h7, h7, h4); dump();
sqsub(h7, h7, h8); dump();
sqsub(h7, h7, h16); dump();
sqsub(h7, h7, h31); dump();
uqadd(h7, h7, h7); dump();
uqadd(h0, h7, h7); dump();
uqadd(h1, h7, h7); dump();
uqadd(h2, h7, h7); dump();
uqadd(h4, h7, h7); dump();
uqadd(h8, h7, h7); dump();
uqadd(h16, h7, h7); dump();
uqadd(h31, h7, h7); dump();
uqadd(h7, h7, h7); dump();
uqadd(h7, h0, h7); dump();
uqadd(h7, h1, h7); dump();
uqadd(h7, h2, h7); dump();
uqadd(h7, h4, h7); dump();
uqadd(h7, h8, h7); dump();
uqadd(h7, h16, h7); dump();
uqadd(h7, h31, h7); dump();
uqadd(h7, h7, h7); dump();
uqadd(h7, h7, h0); dump();
uqadd(h7, h7, h1); dump();
uqadd(h7, h7, h2); dump();
uqadd(h7, h7, h4); dump();
uqadd(h7, h7, h8); dump();
uqadd(h7, h7, h16); dump();
uqadd(h7, h7, h31); dump();
uqrshl(h7, h7, h7); dump();
uqrshl(h0, h7, h7); dump();
uqrshl(h1, h7, h7); dump();
uqrshl(h2, h7, h7); dump();
uqrshl(h4, h7, h7); dump();
uqrshl(h8, h7, h7); dump();
uqrshl(h16, h7, h7); dump();
uqrshl(h31, h7, h7); dump();
uqrshl(h7, h7, h7); dump();
uqrshl(h7, h0, h7); dump();
uqrshl(h7, h1, h7); dump();
uqrshl(h7, h2, h7); dump();
uqrshl(h7, h4, h7); dump();
uqrshl(h7, h8, h7); dump();
uqrshl(h7, h16, h7); dump();
uqrshl(h7, h31, h7); dump();
uqrshl(h7, h7, h7); dump();
uqrshl(h7, h7, h0); dump();
uqrshl(h7, h7, h1); dump();
uqrshl(h7, h7, h2); dump();
uqrshl(h7, h7, h4); dump();
uqrshl(h7, h7, h8); dump();
uqrshl(h7, h7, h16); dump();
uqrshl(h7, h7, h31); dump();
uqshl(h7, h7, h7); dump();
uqshl(h0, h7, h7); dump();
uqshl(h1, h7, h7); dump();
uqshl(h2, h7, h7); dump();
uqshl(h4, h7, h7); dump();
uqshl(h8, h7, h7); dump();
uqshl(h16, h7, h7); dump();
uqshl(h31, h7, h7); dump();
uqshl(h7, h7, h7); dump();
uqshl(h7, h0, h7); dump();
uqshl(h7, h1, h7); dump();
uqshl(h7, h2, h7); dump();
uqshl(h7, h4, h7); dump();
uqshl(h7, h8, h7); dump();
uqshl(h7, h16, h7); dump();
uqshl(h7, h31, h7); dump();
uqshl(h7, h7, h7); dump();
uqshl(h7, h7, h0); dump();
uqshl(h7, h7, h1); dump();
uqshl(h7, h7, h2); dump();
uqshl(h7, h7, h4); dump();
uqshl(h7, h7, h8); dump();
uqshl(h7, h7, h16); dump();
uqshl(h7, h7, h31); dump();
uqsub(h7, h7, h7); dump();
uqsub(h0, h7, h7); dump();
uqsub(h1, h7, h7); dump();
uqsub(h2, h7, h7); dump();
uqsub(h4, h7, h7); dump();
uqsub(h8, h7, h7); dump();
uqsub(h16, h7, h7); dump();
uqsub(h31, h7, h7); dump();
uqsub(h7, h7, h7); dump();
uqsub(h7, h0, h7); dump();
uqsub(h7, h1, h7); dump();
uqsub(h7, h2, h7); dump();
uqsub(h7, h4, h7); dump();
uqsub(h7, h8, h7); dump();
uqsub(h7, h16, h7); dump();
uqsub(h7, h31, h7); dump();
uqsub(h7, h7, h7); dump();
uqsub(h7, h7, h0); dump();
uqsub(h7, h7, h1); dump();
uqsub(h7, h7, h2); dump();
uqsub(h7, h7, h4); dump();
uqsub(h7, h7, h8); dump();
uqsub(h7, h7, h16); dump();
uqsub(h7, h7, h31); dump();
//DataProcSimd_Arithmetic11:2
sqadd(s7, s7, s7); dump();
sqadd(s0, s7, s7); dump();
sqadd(s1, s7, s7); dump();
sqadd(s2, s7, s7); dump();
sqadd(s4, s7, s7); dump();
sqadd(s8, s7, s7); dump();
sqadd(s16, s7, s7); dump();
sqadd(s31, s7, s7); dump();
sqadd(s7, s7, s7); dump();
sqadd(s7, s0, s7); dump();
sqadd(s7, s1, s7); dump();
sqadd(s7, s2, s7); dump();
sqadd(s7, s4, s7); dump();
sqadd(s7, s8, s7); dump();
sqadd(s7, s16, s7); dump();
sqadd(s7, s31, s7); dump();
sqadd(s7, s7, s7); dump();
sqadd(s7, s7, s0); dump();
sqadd(s7, s7, s1); dump();
sqadd(s7, s7, s2); dump();
sqadd(s7, s7, s4); dump();
sqadd(s7, s7, s8); dump();
sqadd(s7, s7, s16); dump();
sqadd(s7, s7, s31); dump();
sqrshl(s7, s7, s7); dump();
sqrshl(s0, s7, s7); dump();
sqrshl(s1, s7, s7); dump();
sqrshl(s2, s7, s7); dump();
sqrshl(s4, s7, s7); dump();
sqrshl(s8, s7, s7); dump();
sqrshl(s16, s7, s7); dump();
sqrshl(s31, s7, s7); dump();
sqrshl(s7, s7, s7); dump();
sqrshl(s7, s0, s7); dump();
sqrshl(s7, s1, s7); dump();
sqrshl(s7, s2, s7); dump();
sqrshl(s7, s4, s7); dump();
sqrshl(s7, s8, s7); dump();
sqrshl(s7, s16, s7); dump();
sqrshl(s7, s31, s7); dump();
sqrshl(s7, s7, s7); dump();
sqrshl(s7, s7, s0); dump();
sqrshl(s7, s7, s1); dump();
sqrshl(s7, s7, s2); dump();
sqrshl(s7, s7, s4); dump();
sqrshl(s7, s7, s8); dump();
sqrshl(s7, s7, s16); dump();
sqrshl(s7, s7, s31); dump();
sqshl(s7, s7, s7); dump();
sqshl(s0, s7, s7); dump();
sqshl(s1, s7, s7); dump();
sqshl(s2, s7, s7); dump();
sqshl(s4, s7, s7); dump();
sqshl(s8, s7, s7); dump();
sqshl(s16, s7, s7); dump();
sqshl(s31, s7, s7); dump();
sqshl(s7, s7, s7); dump();
sqshl(s7, s0, s7); dump();
sqshl(s7, s1, s7); dump();
sqshl(s7, s2, s7); dump();
sqshl(s7, s4, s7); dump();
sqshl(s7, s8, s7); dump();
sqshl(s7, s16, s7); dump();
sqshl(s7, s31, s7); dump();
sqshl(s7, s7, s7); dump();
sqshl(s7, s7, s0); dump();
sqshl(s7, s7, s1); dump();
sqshl(s7, s7, s2); dump();
sqshl(s7, s7, s4); dump();
sqshl(s7, s7, s8); dump();
sqshl(s7, s7, s16); dump();
sqshl(s7, s7, s31); dump();
sqsub(s7, s7, s7); dump();
sqsub(s0, s7, s7); dump();
sqsub(s1, s7, s7); dump();
sqsub(s2, s7, s7); dump();
sqsub(s4, s7, s7); dump();
sqsub(s8, s7, s7); dump();
sqsub(s16, s7, s7); dump();
sqsub(s31, s7, s7); dump();
sqsub(s7, s7, s7); dump();
sqsub(s7, s0, s7); dump();
sqsub(s7, s1, s7); dump();
sqsub(s7, s2, s7); dump();
sqsub(s7, s4, s7); dump();
sqsub(s7, s8, s7); dump();
sqsub(s7, s16, s7); dump();
sqsub(s7, s31, s7); dump();
sqsub(s7, s7, s7); dump();
sqsub(s7, s7, s0); dump();
sqsub(s7, s7, s1); dump();
sqsub(s7, s7, s2); dump();
sqsub(s7, s7, s4); dump();
sqsub(s7, s7, s8); dump();
sqsub(s7, s7, s16); dump();
sqsub(s7, s7, s31); dump();
uqadd(s7, s7, s7); dump();
uqadd(s0, s7, s7); dump();
uqadd(s1, s7, s7); dump();
uqadd(s2, s7, s7); dump();
uqadd(s4, s7, s7); dump();
uqadd(s8, s7, s7); dump();
uqadd(s16, s7, s7); dump();
uqadd(s31, s7, s7); dump();
uqadd(s7, s7, s7); dump();
uqadd(s7, s0, s7); dump();
uqadd(s7, s1, s7); dump();
uqadd(s7, s2, s7); dump();
uqadd(s7, s4, s7); dump();
uqadd(s7, s8, s7); dump();
uqadd(s7, s16, s7); dump();
uqadd(s7, s31, s7); dump();
uqadd(s7, s7, s7); dump();
uqadd(s7, s7, s0); dump();
uqadd(s7, s7, s1); dump();
uqadd(s7, s7, s2); dump();
uqadd(s7, s7, s4); dump();
uqadd(s7, s7, s8); dump();
uqadd(s7, s7, s16); dump();
uqadd(s7, s7, s31); dump();
uqrshl(s7, s7, s7); dump();
uqrshl(s0, s7, s7); dump();
uqrshl(s1, s7, s7); dump();
uqrshl(s2, s7, s7); dump();
uqrshl(s4, s7, s7); dump();
uqrshl(s8, s7, s7); dump();
uqrshl(s16, s7, s7); dump();
uqrshl(s31, s7, s7); dump();
uqrshl(s7, s7, s7); dump();
uqrshl(s7, s0, s7); dump();
uqrshl(s7, s1, s7); dump();
uqrshl(s7, s2, s7); dump();
uqrshl(s7, s4, s7); dump();
uqrshl(s7, s8, s7); dump();
uqrshl(s7, s16, s7); dump();
uqrshl(s7, s31, s7); dump();
uqrshl(s7, s7, s7); dump();
uqrshl(s7, s7, s0); dump();
uqrshl(s7, s7, s1); dump();
uqrshl(s7, s7, s2); dump();
uqrshl(s7, s7, s4); dump();
uqrshl(s7, s7, s8); dump();
uqrshl(s7, s7, s16); dump();
uqrshl(s7, s7, s31); dump();
uqshl(s7, s7, s7); dump();
uqshl(s0, s7, s7); dump();
uqshl(s1, s7, s7); dump();
uqshl(s2, s7, s7); dump();
uqshl(s4, s7, s7); dump();
uqshl(s8, s7, s7); dump();
uqshl(s16, s7, s7); dump();
uqshl(s31, s7, s7); dump();
uqshl(s7, s7, s7); dump();
uqshl(s7, s0, s7); dump();
uqshl(s7, s1, s7); dump();
uqshl(s7, s2, s7); dump();
uqshl(s7, s4, s7); dump();
uqshl(s7, s8, s7); dump();
uqshl(s7, s16, s7); dump();
uqshl(s7, s31, s7); dump();
uqshl(s7, s7, s7); dump();
uqshl(s7, s7, s0); dump();
uqshl(s7, s7, s1); dump();
uqshl(s7, s7, s2); dump();
uqshl(s7, s7, s4); dump();
uqshl(s7, s7, s8); dump();
uqshl(s7, s7, s16); dump();
uqshl(s7, s7, s31); dump();
uqsub(s7, s7, s7); dump();
uqsub(s0, s7, s7); dump();
uqsub(s1, s7, s7); dump();
uqsub(s2, s7, s7); dump();
uqsub(s4, s7, s7); dump();
uqsub(s8, s7, s7); dump();
uqsub(s16, s7, s7); dump();
uqsub(s31, s7, s7); dump();
uqsub(s7, s7, s7); dump();
uqsub(s7, s0, s7); dump();
uqsub(s7, s1, s7); dump();
uqsub(s7, s2, s7); dump();
uqsub(s7, s4, s7); dump();
uqsub(s7, s8, s7); dump();
uqsub(s7, s16, s7); dump();
uqsub(s7, s31, s7); dump();
uqsub(s7, s7, s7); dump();
uqsub(s7, s7, s0); dump();
uqsub(s7, s7, s1); dump();
uqsub(s7, s7, s2); dump();
uqsub(s7, s7, s4); dump();
uqsub(s7, s7, s8); dump();
uqsub(s7, s7, s16); dump();
uqsub(s7, s7, s31); dump();
//DataProcSimd_Arithmetic11:3
sqadd(d7, d7, d7); dump();
sqadd(d0, d7, d7); dump();
sqadd(d1, d7, d7); dump();
sqadd(d2, d7, d7); dump();
sqadd(d4, d7, d7); dump();
sqadd(d8, d7, d7); dump();
sqadd(d16, d7, d7); dump();
sqadd(d31, d7, d7); dump();
sqadd(d7, d7, d7); dump();
sqadd(d7, d0, d7); dump();
sqadd(d7, d1, d7); dump();
sqadd(d7, d2, d7); dump();
sqadd(d7, d4, d7); dump();
sqadd(d7, d8, d7); dump();
sqadd(d7, d16, d7); dump();
sqadd(d7, d31, d7); dump();
sqadd(d7, d7, d7); dump();
sqadd(d7, d7, d0); dump();
sqadd(d7, d7, d1); dump();
sqadd(d7, d7, d2); dump();
sqadd(d7, d7, d4); dump();
sqadd(d7, d7, d8); dump();
sqadd(d7, d7, d16); dump();
sqadd(d7, d7, d31); dump();
sqrshl(d7, d7, d7); dump();
sqrshl(d0, d7, d7); dump();
sqrshl(d1, d7, d7); dump();
sqrshl(d2, d7, d7); dump();
sqrshl(d4, d7, d7); dump();
sqrshl(d8, d7, d7); dump();
sqrshl(d16, d7, d7); dump();
sqrshl(d31, d7, d7); dump();
sqrshl(d7, d7, d7); dump();
sqrshl(d7, d0, d7); dump();
sqrshl(d7, d1, d7); dump();
sqrshl(d7, d2, d7); dump();
sqrshl(d7, d4, d7); dump();
sqrshl(d7, d8, d7); dump();
sqrshl(d7, d16, d7); dump();
sqrshl(d7, d31, d7); dump();
sqrshl(d7, d7, d7); dump();
sqrshl(d7, d7, d0); dump();
sqrshl(d7, d7, d1); dump();
sqrshl(d7, d7, d2); dump();
sqrshl(d7, d7, d4); dump();
sqrshl(d7, d7, d8); dump();
sqrshl(d7, d7, d16); dump();
sqrshl(d7, d7, d31); dump();
sqshl(d7, d7, d7); dump();
sqshl(d0, d7, d7); dump();
sqshl(d1, d7, d7); dump();
sqshl(d2, d7, d7); dump();
sqshl(d4, d7, d7); dump();
sqshl(d8, d7, d7); dump();
sqshl(d16, d7, d7); dump();
sqshl(d31, d7, d7); dump();
sqshl(d7, d7, d7); dump();
sqshl(d7, d0, d7); dump();
sqshl(d7, d1, d7); dump();
sqshl(d7, d2, d7); dump();
sqshl(d7, d4, d7); dump();
sqshl(d7, d8, d7); dump();
sqshl(d7, d16, d7); dump();
sqshl(d7, d31, d7); dump();
sqshl(d7, d7, d7); dump();
sqshl(d7, d7, d0); dump();
sqshl(d7, d7, d1); dump();
sqshl(d7, d7, d2); dump();
sqshl(d7, d7, d4); dump();
sqshl(d7, d7, d8); dump();
sqshl(d7, d7, d16); dump();
sqshl(d7, d7, d31); dump();
sqsub(d7, d7, d7); dump();
sqsub(d0, d7, d7); dump();
sqsub(d1, d7, d7); dump();
sqsub(d2, d7, d7); dump();
sqsub(d4, d7, d7); dump();
sqsub(d8, d7, d7); dump();
sqsub(d16, d7, d7); dump();
sqsub(d31, d7, d7); dump();
sqsub(d7, d7, d7); dump();
sqsub(d7, d0, d7); dump();
sqsub(d7, d1, d7); dump();
sqsub(d7, d2, d7); dump();
sqsub(d7, d4, d7); dump();
sqsub(d7, d8, d7); dump();
sqsub(d7, d16, d7); dump();
sqsub(d7, d31, d7); dump();
sqsub(d7, d7, d7); dump();
sqsub(d7, d7, d0); dump();
sqsub(d7, d7, d1); dump();
sqsub(d7, d7, d2); dump();
sqsub(d7, d7, d4); dump();
sqsub(d7, d7, d8); dump();
sqsub(d7, d7, d16); dump();
sqsub(d7, d7, d31); dump();
uqadd(d7, d7, d7); dump();
uqadd(d0, d7, d7); dump();
uqadd(d1, d7, d7); dump();
uqadd(d2, d7, d7); dump();
uqadd(d4, d7, d7); dump();
uqadd(d8, d7, d7); dump();
uqadd(d16, d7, d7); dump();
uqadd(d31, d7, d7); dump();
uqadd(d7, d7, d7); dump();
uqadd(d7, d0, d7); dump();
uqadd(d7, d1, d7); dump();
uqadd(d7, d2, d7); dump();
uqadd(d7, d4, d7); dump();
uqadd(d7, d8, d7); dump();
uqadd(d7, d16, d7); dump();
uqadd(d7, d31, d7); dump();
uqadd(d7, d7, d7); dump();
uqadd(d7, d7, d0); dump();
uqadd(d7, d7, d1); dump();
uqadd(d7, d7, d2); dump();
uqadd(d7, d7, d4); dump();
uqadd(d7, d7, d8); dump();
uqadd(d7, d7, d16); dump();
uqadd(d7, d7, d31); dump();
uqrshl(d7, d7, d7); dump();
uqrshl(d0, d7, d7); dump();
uqrshl(d1, d7, d7); dump();
uqrshl(d2, d7, d7); dump();
uqrshl(d4, d7, d7); dump();
uqrshl(d8, d7, d7); dump();
uqrshl(d16, d7, d7); dump();
uqrshl(d31, d7, d7); dump();
uqrshl(d7, d7, d7); dump();
uqrshl(d7, d0, d7); dump();
uqrshl(d7, d1, d7); dump();
uqrshl(d7, d2, d7); dump();
uqrshl(d7, d4, d7); dump();
uqrshl(d7, d8, d7); dump();
uqrshl(d7, d16, d7); dump();
uqrshl(d7, d31, d7); dump();
uqrshl(d7, d7, d7); dump();
uqrshl(d7, d7, d0); dump();
uqrshl(d7, d7, d1); dump();
uqrshl(d7, d7, d2); dump();
uqrshl(d7, d7, d4); dump();
uqrshl(d7, d7, d8); dump();
uqrshl(d7, d7, d16); dump();
uqrshl(d7, d7, d31); dump();
uqshl(d7, d7, d7); dump();
uqshl(d0, d7, d7); dump();
uqshl(d1, d7, d7); dump();
uqshl(d2, d7, d7); dump();
uqshl(d4, d7, d7); dump();
uqshl(d8, d7, d7); dump();
uqshl(d16, d7, d7); dump();
uqshl(d31, d7, d7); dump();
uqshl(d7, d7, d7); dump();
uqshl(d7, d0, d7); dump();
uqshl(d7, d1, d7); dump();
uqshl(d7, d2, d7); dump();
uqshl(d7, d4, d7); dump();
uqshl(d7, d8, d7); dump();
uqshl(d7, d16, d7); dump();
uqshl(d7, d31, d7); dump();
uqshl(d7, d7, d7); dump();
uqshl(d7, d7, d0); dump();
uqshl(d7, d7, d1); dump();
uqshl(d7, d7, d2); dump();
uqshl(d7, d7, d4); dump();
uqshl(d7, d7, d8); dump();
uqshl(d7, d7, d16); dump();
uqshl(d7, d7, d31); dump();
uqsub(d7, d7, d7); dump();
uqsub(d0, d7, d7); dump();
uqsub(d1, d7, d7); dump();
uqsub(d2, d7, d7); dump();
uqsub(d4, d7, d7); dump();
uqsub(d8, d7, d7); dump();
uqsub(d16, d7, d7); dump();
uqsub(d31, d7, d7); dump();
uqsub(d7, d7, d7); dump();
uqsub(d7, d0, d7); dump();
uqsub(d7, d1, d7); dump();
uqsub(d7, d2, d7); dump();
uqsub(d7, d4, d7); dump();
uqsub(d7, d8, d7); dump();
uqsub(d7, d16, d7); dump();
uqsub(d7, d31, d7); dump();
uqsub(d7, d7, d7); dump();
uqsub(d7, d7, d0); dump();
uqsub(d7, d7, d1); dump();
uqsub(d7, d7, d2); dump();
uqsub(d7, d7, d4); dump();
uqsub(d7, d7, d8); dump();
uqsub(d7, d7, d16); dump();
uqsub(d7, d7, d31); dump();
//DataProcSimd_Arithmetic11:4
sqadd(v7.b8, v7.b8, v7.b8); dump();
sqadd(v0.b8, v7.b8, v7.b8); dump();
sqadd(v1.b8, v7.b8, v7.b8); dump();
sqadd(v2.b8, v7.b8, v7.b8); dump();
sqadd(v4.b8, v7.b8, v7.b8); dump();
sqadd(v8.b8, v7.b8, v7.b8); dump();
sqadd(v16.b8, v7.b8, v7.b8); dump();
sqadd(v31.b8, v7.b8, v7.b8); dump();
sqadd(v7.b8, v7.b8, v7.b8); dump();
sqadd(v7.b8, v0.b8, v7.b8); dump();
sqadd(v7.b8, v1.b8, v7.b8); dump();
sqadd(v7.b8, v2.b8, v7.b8); dump();
sqadd(v7.b8, v4.b8, v7.b8); dump();
sqadd(v7.b8, v8.b8, v7.b8); dump();
sqadd(v7.b8, v16.b8, v7.b8); dump();
sqadd(v7.b8, v31.b8, v7.b8); dump();
sqadd(v7.b8, v7.b8, v7.b8); dump();
sqadd(v7.b8, v7.b8, v0.b8); dump();
sqadd(v7.b8, v7.b8, v1.b8); dump();
sqadd(v7.b8, v7.b8, v2.b8); dump();
sqadd(v7.b8, v7.b8, v4.b8); dump();
sqadd(v7.b8, v7.b8, v8.b8); dump();
sqadd(v7.b8, v7.b8, v16.b8); dump();
sqadd(v7.b8, v7.b8, v31.b8); dump();
sqrshl(v7.b8, v7.b8, v7.b8); dump();
sqrshl(v0.b8, v7.b8, v7.b8); dump();
sqrshl(v1.b8, v7.b8, v7.b8); dump();
sqrshl(v2.b8, v7.b8, v7.b8); dump();
sqrshl(v4.b8, v7.b8, v7.b8); dump();
sqrshl(v8.b8, v7.b8, v7.b8); dump();
sqrshl(v16.b8, v7.b8, v7.b8); dump();
sqrshl(v31.b8, v7.b8, v7.b8); dump();
sqrshl(v7.b8, v7.b8, v7.b8); dump();
sqrshl(v7.b8, v0.b8, v7.b8); dump();
sqrshl(v7.b8, v1.b8, v7.b8); dump();
sqrshl(v7.b8, v2.b8, v7.b8); dump();
sqrshl(v7.b8, v4.b8, v7.b8); dump();
sqrshl(v7.b8, v8.b8, v7.b8); dump();
sqrshl(v7.b8, v16.b8, v7.b8); dump();
sqrshl(v7.b8, v31.b8, v7.b8); dump();
sqrshl(v7.b8, v7.b8, v7.b8); dump();
sqrshl(v7.b8, v7.b8, v0.b8); dump();
sqrshl(v7.b8, v7.b8, v1.b8); dump();
sqrshl(v7.b8, v7.b8, v2.b8); dump();
sqrshl(v7.b8, v7.b8, v4.b8); dump();
sqrshl(v7.b8, v7.b8, v8.b8); dump();
sqrshl(v7.b8, v7.b8, v16.b8); dump();
sqrshl(v7.b8, v7.b8, v31.b8); dump();
sqshl(v7.b8, v7.b8, v7.b8); dump();
sqshl(v0.b8, v7.b8, v7.b8); dump();
sqshl(v1.b8, v7.b8, v7.b8); dump();
sqshl(v2.b8, v7.b8, v7.b8); dump();
sqshl(v4.b8, v7.b8, v7.b8); dump();
sqshl(v8.b8, v7.b8, v7.b8); dump();
sqshl(v16.b8, v7.b8, v7.b8); dump();
sqshl(v31.b8, v7.b8, v7.b8); dump();
sqshl(v7.b8, v7.b8, v7.b8); dump();
sqshl(v7.b8, v0.b8, v7.b8); dump();
sqshl(v7.b8, v1.b8, v7.b8); dump();
sqshl(v7.b8, v2.b8, v7.b8); dump();
sqshl(v7.b8, v4.b8, v7.b8); dump();
sqshl(v7.b8, v8.b8, v7.b8); dump();
sqshl(v7.b8, v16.b8, v7.b8); dump();
sqshl(v7.b8, v31.b8, v7.b8); dump();
sqshl(v7.b8, v7.b8, v7.b8); dump();
sqshl(v7.b8, v7.b8, v0.b8); dump();
sqshl(v7.b8, v7.b8, v1.b8); dump();
sqshl(v7.b8, v7.b8, v2.b8); dump();
sqshl(v7.b8, v7.b8, v4.b8); dump();
sqshl(v7.b8, v7.b8, v8.b8); dump();
sqshl(v7.b8, v7.b8, v16.b8); dump();
sqshl(v7.b8, v7.b8, v31.b8); dump();
sqsub(v7.b8, v7.b8, v7.b8); dump();
sqsub(v0.b8, v7.b8, v7.b8); dump();
sqsub(v1.b8, v7.b8, v7.b8); dump();
sqsub(v2.b8, v7.b8, v7.b8); dump();
sqsub(v4.b8, v7.b8, v7.b8); dump();
sqsub(v8.b8, v7.b8, v7.b8); dump();
sqsub(v16.b8, v7.b8, v7.b8); dump();
sqsub(v31.b8, v7.b8, v7.b8); dump();
sqsub(v7.b8, v7.b8, v7.b8); dump();
sqsub(v7.b8, v0.b8, v7.b8); dump();
sqsub(v7.b8, v1.b8, v7.b8); dump();
sqsub(v7.b8, v2.b8, v7.b8); dump();
sqsub(v7.b8, v4.b8, v7.b8); dump();
sqsub(v7.b8, v8.b8, v7.b8); dump();
sqsub(v7.b8, v16.b8, v7.b8); dump();
sqsub(v7.b8, v31.b8, v7.b8); dump();
sqsub(v7.b8, v7.b8, v7.b8); dump();
sqsub(v7.b8, v7.b8, v0.b8); dump();
sqsub(v7.b8, v7.b8, v1.b8); dump();
sqsub(v7.b8, v7.b8, v2.b8); dump();
sqsub(v7.b8, v7.b8, v4.b8); dump();
sqsub(v7.b8, v7.b8, v8.b8); dump();
sqsub(v7.b8, v7.b8, v16.b8); dump();
sqsub(v7.b8, v7.b8, v31.b8); dump();
uqadd(v7.b8, v7.b8, v7.b8); dump();
uqadd(v0.b8, v7.b8, v7.b8); dump();
uqadd(v1.b8, v7.b8, v7.b8); dump();
uqadd(v2.b8, v7.b8, v7.b8); dump();
uqadd(v4.b8, v7.b8, v7.b8); dump();
uqadd(v8.b8, v7.b8, v7.b8); dump();
uqadd(v16.b8, v7.b8, v7.b8); dump();
uqadd(v31.b8, v7.b8, v7.b8); dump();
uqadd(v7.b8, v7.b8, v7.b8); dump();
uqadd(v7.b8, v0.b8, v7.b8); dump();
uqadd(v7.b8, v1.b8, v7.b8); dump();
uqadd(v7.b8, v2.b8, v7.b8); dump();
uqadd(v7.b8, v4.b8, v7.b8); dump();
uqadd(v7.b8, v8.b8, v7.b8); dump();
uqadd(v7.b8, v16.b8, v7.b8); dump();
uqadd(v7.b8, v31.b8, v7.b8); dump();
uqadd(v7.b8, v7.b8, v7.b8); dump();
uqadd(v7.b8, v7.b8, v0.b8); dump();
uqadd(v7.b8, v7.b8, v1.b8); dump();
uqadd(v7.b8, v7.b8, v2.b8); dump();
uqadd(v7.b8, v7.b8, v4.b8); dump();
uqadd(v7.b8, v7.b8, v8.b8); dump();
uqadd(v7.b8, v7.b8, v16.b8); dump();
uqadd(v7.b8, v7.b8, v31.b8); dump();
uqrshl(v7.b8, v7.b8, v7.b8); dump();
uqrshl(v0.b8, v7.b8, v7.b8); dump();
uqrshl(v1.b8, v7.b8, v7.b8); dump();
uqrshl(v2.b8, v7.b8, v7.b8); dump();
uqrshl(v4.b8, v7.b8, v7.b8); dump();
uqrshl(v8.b8, v7.b8, v7.b8); dump();
uqrshl(v16.b8, v7.b8, v7.b8); dump();
uqrshl(v31.b8, v7.b8, v7.b8); dump();
uqrshl(v7.b8, v7.b8, v7.b8); dump();
uqrshl(v7.b8, v0.b8, v7.b8); dump();
uqrshl(v7.b8, v1.b8, v7.b8); dump();
uqrshl(v7.b8, v2.b8, v7.b8); dump();
uqrshl(v7.b8, v4.b8, v7.b8); dump();
uqrshl(v7.b8, v8.b8, v7.b8); dump();
uqrshl(v7.b8, v16.b8, v7.b8); dump();
uqrshl(v7.b8, v31.b8, v7.b8); dump();
uqrshl(v7.b8, v7.b8, v7.b8); dump();
uqrshl(v7.b8, v7.b8, v0.b8); dump();
uqrshl(v7.b8, v7.b8, v1.b8); dump();
uqrshl(v7.b8, v7.b8, v2.b8); dump();
uqrshl(v7.b8, v7.b8, v4.b8); dump();
uqrshl(v7.b8, v7.b8, v8.b8); dump();
uqrshl(v7.b8, v7.b8, v16.b8); dump();
uqrshl(v7.b8, v7.b8, v31.b8); dump();
uqshl(v7.b8, v7.b8, v7.b8); dump();
uqshl(v0.b8, v7.b8, v7.b8); dump();
uqshl(v1.b8, v7.b8, v7.b8); dump();
uqshl(v2.b8, v7.b8, v7.b8); dump();
uqshl(v4.b8, v7.b8, v7.b8); dump();
uqshl(v8.b8, v7.b8, v7.b8); dump();
uqshl(v16.b8, v7.b8, v7.b8); dump();
uqshl(v31.b8, v7.b8, v7.b8); dump();
uqshl(v7.b8, v7.b8, v7.b8); dump();
uqshl(v7.b8, v0.b8, v7.b8); dump();
uqshl(v7.b8, v1.b8, v7.b8); dump();
uqshl(v7.b8, v2.b8, v7.b8); dump();
uqshl(v7.b8, v4.b8, v7.b8); dump();
uqshl(v7.b8, v8.b8, v7.b8); dump();
uqshl(v7.b8, v16.b8, v7.b8); dump();
uqshl(v7.b8, v31.b8, v7.b8); dump();
uqshl(v7.b8, v7.b8, v7.b8); dump();
uqshl(v7.b8, v7.b8, v0.b8); dump();
uqshl(v7.b8, v7.b8, v1.b8); dump();
uqshl(v7.b8, v7.b8, v2.b8); dump();
uqshl(v7.b8, v7.b8, v4.b8); dump();
uqshl(v7.b8, v7.b8, v8.b8); dump();
uqshl(v7.b8, v7.b8, v16.b8); dump();
uqshl(v7.b8, v7.b8, v31.b8); dump();
uqsub(v7.b8, v7.b8, v7.b8); dump();
uqsub(v0.b8, v7.b8, v7.b8); dump();
uqsub(v1.b8, v7.b8, v7.b8); dump();
uqsub(v2.b8, v7.b8, v7.b8); dump();
uqsub(v4.b8, v7.b8, v7.b8); dump();
uqsub(v8.b8, v7.b8, v7.b8); dump();
uqsub(v16.b8, v7.b8, v7.b8); dump();
uqsub(v31.b8, v7.b8, v7.b8); dump();
uqsub(v7.b8, v7.b8, v7.b8); dump();
uqsub(v7.b8, v0.b8, v7.b8); dump();
uqsub(v7.b8, v1.b8, v7.b8); dump();
uqsub(v7.b8, v2.b8, v7.b8); dump();
uqsub(v7.b8, v4.b8, v7.b8); dump();
uqsub(v7.b8, v8.b8, v7.b8); dump();
uqsub(v7.b8, v16.b8, v7.b8); dump();
uqsub(v7.b8, v31.b8, v7.b8); dump();
uqsub(v7.b8, v7.b8, v7.b8); dump();
uqsub(v7.b8, v7.b8, v0.b8); dump();
uqsub(v7.b8, v7.b8, v1.b8); dump();
uqsub(v7.b8, v7.b8, v2.b8); dump();
uqsub(v7.b8, v7.b8, v4.b8); dump();
uqsub(v7.b8, v7.b8, v8.b8); dump();
uqsub(v7.b8, v7.b8, v16.b8); dump();
uqsub(v7.b8, v7.b8, v31.b8); dump();
//DataProcSimd_Arithmetic11:5
sqadd(v7.b16, v7.b16, v7.b16); dump();
sqadd(v0.b16, v7.b16, v7.b16); dump();
sqadd(v1.b16, v7.b16, v7.b16); dump();
sqadd(v2.b16, v7.b16, v7.b16); dump();
sqadd(v4.b16, v7.b16, v7.b16); dump();
sqadd(v8.b16, v7.b16, v7.b16); dump();
sqadd(v16.b16, v7.b16, v7.b16); dump();
sqadd(v31.b16, v7.b16, v7.b16); dump();
sqadd(v7.b16, v7.b16, v7.b16); dump();
sqadd(v7.b16, v0.b16, v7.b16); dump();
sqadd(v7.b16, v1.b16, v7.b16); dump();
sqadd(v7.b16, v2.b16, v7.b16); dump();
sqadd(v7.b16, v4.b16, v7.b16); dump();
sqadd(v7.b16, v8.b16, v7.b16); dump();
sqadd(v7.b16, v16.b16, v7.b16); dump();
sqadd(v7.b16, v31.b16, v7.b16); dump();
sqadd(v7.b16, v7.b16, v7.b16); dump();
sqadd(v7.b16, v7.b16, v0.b16); dump();
sqadd(v7.b16, v7.b16, v1.b16); dump();
sqadd(v7.b16, v7.b16, v2.b16); dump();
sqadd(v7.b16, v7.b16, v4.b16); dump();
sqadd(v7.b16, v7.b16, v8.b16); dump();
sqadd(v7.b16, v7.b16, v16.b16); dump();
sqadd(v7.b16, v7.b16, v31.b16); dump();
sqrshl(v7.b16, v7.b16, v7.b16); dump();
sqrshl(v0.b16, v7.b16, v7.b16); dump();
sqrshl(v1.b16, v7.b16, v7.b16); dump();
sqrshl(v2.b16, v7.b16, v7.b16); dump();
sqrshl(v4.b16, v7.b16, v7.b16); dump();
sqrshl(v8.b16, v7.b16, v7.b16); dump();
sqrshl(v16.b16, v7.b16, v7.b16); dump();
sqrshl(v31.b16, v7.b16, v7.b16); dump();
sqrshl(v7.b16, v7.b16, v7.b16); dump();
sqrshl(v7.b16, v0.b16, v7.b16); dump();
sqrshl(v7.b16, v1.b16, v7.b16); dump();
sqrshl(v7.b16, v2.b16, v7.b16); dump();
sqrshl(v7.b16, v4.b16, v7.b16); dump();
sqrshl(v7.b16, v8.b16, v7.b16); dump();
sqrshl(v7.b16, v16.b16, v7.b16); dump();
sqrshl(v7.b16, v31.b16, v7.b16); dump();
sqrshl(v7.b16, v7.b16, v7.b16); dump();
sqrshl(v7.b16, v7.b16, v0.b16); dump();
sqrshl(v7.b16, v7.b16, v1.b16); dump();
sqrshl(v7.b16, v7.b16, v2.b16); dump();
sqrshl(v7.b16, v7.b16, v4.b16); dump();
sqrshl(v7.b16, v7.b16, v8.b16); dump();
sqrshl(v7.b16, v7.b16, v16.b16); dump();
sqrshl(v7.b16, v7.b16, v31.b16); dump();
sqshl(v7.b16, v7.b16, v7.b16); dump();
sqshl(v0.b16, v7.b16, v7.b16); dump();
sqshl(v1.b16, v7.b16, v7.b16); dump();
sqshl(v2.b16, v7.b16, v7.b16); dump();
sqshl(v4.b16, v7.b16, v7.b16); dump();
sqshl(v8.b16, v7.b16, v7.b16); dump();
sqshl(v16.b16, v7.b16, v7.b16); dump();
sqshl(v31.b16, v7.b16, v7.b16); dump();
sqshl(v7.b16, v7.b16, v7.b16); dump();
sqshl(v7.b16, v0.b16, v7.b16); dump();
sqshl(v7.b16, v1.b16, v7.b16); dump();
sqshl(v7.b16, v2.b16, v7.b16); dump();
sqshl(v7.b16, v4.b16, v7.b16); dump();
sqshl(v7.b16, v8.b16, v7.b16); dump();
sqshl(v7.b16, v16.b16, v7.b16); dump();
sqshl(v7.b16, v31.b16, v7.b16); dump();
sqshl(v7.b16, v7.b16, v7.b16); dump();
sqshl(v7.b16, v7.b16, v0.b16); dump();
sqshl(v7.b16, v7.b16, v1.b16); dump();
sqshl(v7.b16, v7.b16, v2.b16); dump();
sqshl(v7.b16, v7.b16, v4.b16); dump();
sqshl(v7.b16, v7.b16, v8.b16); dump();
sqshl(v7.b16, v7.b16, v16.b16); dump();
sqshl(v7.b16, v7.b16, v31.b16); dump();
sqsub(v7.b16, v7.b16, v7.b16); dump();
sqsub(v0.b16, v7.b16, v7.b16); dump();
sqsub(v1.b16, v7.b16, v7.b16); dump();
sqsub(v2.b16, v7.b16, v7.b16); dump();
sqsub(v4.b16, v7.b16, v7.b16); dump();
sqsub(v8.b16, v7.b16, v7.b16); dump();
sqsub(v16.b16, v7.b16, v7.b16); dump();
sqsub(v31.b16, v7.b16, v7.b16); dump();
sqsub(v7.b16, v7.b16, v7.b16); dump();
sqsub(v7.b16, v0.b16, v7.b16); dump();
sqsub(v7.b16, v1.b16, v7.b16); dump();
sqsub(v7.b16, v2.b16, v7.b16); dump();
sqsub(v7.b16, v4.b16, v7.b16); dump();
sqsub(v7.b16, v8.b16, v7.b16); dump();
sqsub(v7.b16, v16.b16, v7.b16); dump();
sqsub(v7.b16, v31.b16, v7.b16); dump();
sqsub(v7.b16, v7.b16, v7.b16); dump();
sqsub(v7.b16, v7.b16, v0.b16); dump();
sqsub(v7.b16, v7.b16, v1.b16); dump();
sqsub(v7.b16, v7.b16, v2.b16); dump();
sqsub(v7.b16, v7.b16, v4.b16); dump();
sqsub(v7.b16, v7.b16, v8.b16); dump();
sqsub(v7.b16, v7.b16, v16.b16); dump();
sqsub(v7.b16, v7.b16, v31.b16); dump();
uqadd(v7.b16, v7.b16, v7.b16); dump();
uqadd(v0.b16, v7.b16, v7.b16); dump();
uqadd(v1.b16, v7.b16, v7.b16); dump();
uqadd(v2.b16, v7.b16, v7.b16); dump();
uqadd(v4.b16, v7.b16, v7.b16); dump();
uqadd(v8.b16, v7.b16, v7.b16); dump();
uqadd(v16.b16, v7.b16, v7.b16); dump();
uqadd(v31.b16, v7.b16, v7.b16); dump();
uqadd(v7.b16, v7.b16, v7.b16); dump();
uqadd(v7.b16, v0.b16, v7.b16); dump();
uqadd(v7.b16, v1.b16, v7.b16); dump();
uqadd(v7.b16, v2.b16, v7.b16); dump();
uqadd(v7.b16, v4.b16, v7.b16); dump();
uqadd(v7.b16, v8.b16, v7.b16); dump();
uqadd(v7.b16, v16.b16, v7.b16); dump();
uqadd(v7.b16, v31.b16, v7.b16); dump();
uqadd(v7.b16, v7.b16, v7.b16); dump();
uqadd(v7.b16, v7.b16, v0.b16); dump();
uqadd(v7.b16, v7.b16, v1.b16); dump();
uqadd(v7.b16, v7.b16, v2.b16); dump();
uqadd(v7.b16, v7.b16, v4.b16); dump();
uqadd(v7.b16, v7.b16, v8.b16); dump();
uqadd(v7.b16, v7.b16, v16.b16); dump();
uqadd(v7.b16, v7.b16, v31.b16); dump();
uqrshl(v7.b16, v7.b16, v7.b16); dump();
uqrshl(v0.b16, v7.b16, v7.b16); dump();
uqrshl(v1.b16, v7.b16, v7.b16); dump();
uqrshl(v2.b16, v7.b16, v7.b16); dump();
uqrshl(v4.b16, v7.b16, v7.b16); dump();
uqrshl(v8.b16, v7.b16, v7.b16); dump();
uqrshl(v16.b16, v7.b16, v7.b16); dump();
uqrshl(v31.b16, v7.b16, v7.b16); dump();
uqrshl(v7.b16, v7.b16, v7.b16); dump();
uqrshl(v7.b16, v0.b16, v7.b16); dump();
uqrshl(v7.b16, v1.b16, v7.b16); dump();
uqrshl(v7.b16, v2.b16, v7.b16); dump();
uqrshl(v7.b16, v4.b16, v7.b16); dump();
uqrshl(v7.b16, v8.b16, v7.b16); dump();
uqrshl(v7.b16, v16.b16, v7.b16); dump();
uqrshl(v7.b16, v31.b16, v7.b16); dump();
uqrshl(v7.b16, v7.b16, v7.b16); dump();
uqrshl(v7.b16, v7.b16, v0.b16); dump();
uqrshl(v7.b16, v7.b16, v1.b16); dump();
uqrshl(v7.b16, v7.b16, v2.b16); dump();
uqrshl(v7.b16, v7.b16, v4.b16); dump();
uqrshl(v7.b16, v7.b16, v8.b16); dump();
uqrshl(v7.b16, v7.b16, v16.b16); dump();
uqrshl(v7.b16, v7.b16, v31.b16); dump();
uqshl(v7.b16, v7.b16, v7.b16); dump();
uqshl(v0.b16, v7.b16, v7.b16); dump();
uqshl(v1.b16, v7.b16, v7.b16); dump();
uqshl(v2.b16, v7.b16, v7.b16); dump();
uqshl(v4.b16, v7.b16, v7.b16); dump();
uqshl(v8.b16, v7.b16, v7.b16); dump();
uqshl(v16.b16, v7.b16, v7.b16); dump();
uqshl(v31.b16, v7.b16, v7.b16); dump();
uqshl(v7.b16, v7.b16, v7.b16); dump();
uqshl(v7.b16, v0.b16, v7.b16); dump();
uqshl(v7.b16, v1.b16, v7.b16); dump();
uqshl(v7.b16, v2.b16, v7.b16); dump();
uqshl(v7.b16, v4.b16, v7.b16); dump();
uqshl(v7.b16, v8.b16, v7.b16); dump();
uqshl(v7.b16, v16.b16, v7.b16); dump();
uqshl(v7.b16, v31.b16, v7.b16); dump();
uqshl(v7.b16, v7.b16, v7.b16); dump();
uqshl(v7.b16, v7.b16, v0.b16); dump();
uqshl(v7.b16, v7.b16, v1.b16); dump();
uqshl(v7.b16, v7.b16, v2.b16); dump();
uqshl(v7.b16, v7.b16, v4.b16); dump();
uqshl(v7.b16, v7.b16, v8.b16); dump();
uqshl(v7.b16, v7.b16, v16.b16); dump();
uqshl(v7.b16, v7.b16, v31.b16); dump();
uqsub(v7.b16, v7.b16, v7.b16); dump();
uqsub(v0.b16, v7.b16, v7.b16); dump();
uqsub(v1.b16, v7.b16, v7.b16); dump();
uqsub(v2.b16, v7.b16, v7.b16); dump();
uqsub(v4.b16, v7.b16, v7.b16); dump();
uqsub(v8.b16, v7.b16, v7.b16); dump();
uqsub(v16.b16, v7.b16, v7.b16); dump();
uqsub(v31.b16, v7.b16, v7.b16); dump();
uqsub(v7.b16, v7.b16, v7.b16); dump();
uqsub(v7.b16, v0.b16, v7.b16); dump();
uqsub(v7.b16, v1.b16, v7.b16); dump();
uqsub(v7.b16, v2.b16, v7.b16); dump();
uqsub(v7.b16, v4.b16, v7.b16); dump();
uqsub(v7.b16, v8.b16, v7.b16); dump();
uqsub(v7.b16, v16.b16, v7.b16); dump();
uqsub(v7.b16, v31.b16, v7.b16); dump();
uqsub(v7.b16, v7.b16, v7.b16); dump();
uqsub(v7.b16, v7.b16, v0.b16); dump();
uqsub(v7.b16, v7.b16, v1.b16); dump();
uqsub(v7.b16, v7.b16, v2.b16); dump();
uqsub(v7.b16, v7.b16, v4.b16); dump();
uqsub(v7.b16, v7.b16, v8.b16); dump();
uqsub(v7.b16, v7.b16, v16.b16); dump();
uqsub(v7.b16, v7.b16, v31.b16); dump();
//DataProcSimd_Arithmetic11:6
sqadd(v7.h4, v7.h4, v7.h4); dump();
sqadd(v0.h4, v7.h4, v7.h4); dump();
sqadd(v1.h4, v7.h4, v7.h4); dump();
sqadd(v2.h4, v7.h4, v7.h4); dump();
sqadd(v4.h4, v7.h4, v7.h4); dump();
sqadd(v8.h4, v7.h4, v7.h4); dump();
sqadd(v16.h4, v7.h4, v7.h4); dump();
sqadd(v31.h4, v7.h4, v7.h4); dump();
sqadd(v7.h4, v7.h4, v7.h4); dump();
sqadd(v7.h4, v0.h4, v7.h4); dump();
sqadd(v7.h4, v1.h4, v7.h4); dump();
sqadd(v7.h4, v2.h4, v7.h4); dump();
sqadd(v7.h4, v4.h4, v7.h4); dump();
sqadd(v7.h4, v8.h4, v7.h4); dump();
sqadd(v7.h4, v16.h4, v7.h4); dump();
sqadd(v7.h4, v31.h4, v7.h4); dump();
sqadd(v7.h4, v7.h4, v7.h4); dump();
sqadd(v7.h4, v7.h4, v0.h4); dump();
sqadd(v7.h4, v7.h4, v1.h4); dump();
sqadd(v7.h4, v7.h4, v2.h4); dump();
sqadd(v7.h4, v7.h4, v4.h4); dump();
sqadd(v7.h4, v7.h4, v8.h4); dump();
sqadd(v7.h4, v7.h4, v16.h4); dump();
sqadd(v7.h4, v7.h4, v31.h4); dump();
sqrshl(v7.h4, v7.h4, v7.h4); dump();
sqrshl(v0.h4, v7.h4, v7.h4); dump();
sqrshl(v1.h4, v7.h4, v7.h4); dump();
sqrshl(v2.h4, v7.h4, v7.h4); dump();
sqrshl(v4.h4, v7.h4, v7.h4); dump();
sqrshl(v8.h4, v7.h4, v7.h4); dump();
sqrshl(v16.h4, v7.h4, v7.h4); dump();
sqrshl(v31.h4, v7.h4, v7.h4); dump();
sqrshl(v7.h4, v7.h4, v7.h4); dump();
sqrshl(v7.h4, v0.h4, v7.h4); dump();
sqrshl(v7.h4, v1.h4, v7.h4); dump();
sqrshl(v7.h4, v2.h4, v7.h4); dump();
sqrshl(v7.h4, v4.h4, v7.h4); dump();
sqrshl(v7.h4, v8.h4, v7.h4); dump();
sqrshl(v7.h4, v16.h4, v7.h4); dump();
sqrshl(v7.h4, v31.h4, v7.h4); dump();
sqrshl(v7.h4, v7.h4, v7.h4); dump();
sqrshl(v7.h4, v7.h4, v0.h4); dump();
sqrshl(v7.h4, v7.h4, v1.h4); dump();
sqrshl(v7.h4, v7.h4, v2.h4); dump();
sqrshl(v7.h4, v7.h4, v4.h4); dump();
sqrshl(v7.h4, v7.h4, v8.h4); dump();
sqrshl(v7.h4, v7.h4, v16.h4); dump();
sqrshl(v7.h4, v7.h4, v31.h4); dump();
sqshl(v7.h4, v7.h4, v7.h4); dump();
sqshl(v0.h4, v7.h4, v7.h4); dump();
sqshl(v1.h4, v7.h4, v7.h4); dump();
sqshl(v2.h4, v7.h4, v7.h4); dump();
sqshl(v4.h4, v7.h4, v7.h4); dump();
sqshl(v8.h4, v7.h4, v7.h4); dump();
sqshl(v16.h4, v7.h4, v7.h4); dump();
sqshl(v31.h4, v7.h4, v7.h4); dump();
sqshl(v7.h4, v7.h4, v7.h4); dump();
sqshl(v7.h4, v0.h4, v7.h4); dump();
sqshl(v7.h4, v1.h4, v7.h4); dump();
sqshl(v7.h4, v2.h4, v7.h4); dump();
sqshl(v7.h4, v4.h4, v7.h4); dump();
sqshl(v7.h4, v8.h4, v7.h4); dump();
sqshl(v7.h4, v16.h4, v7.h4); dump();
sqshl(v7.h4, v31.h4, v7.h4); dump();
sqshl(v7.h4, v7.h4, v7.h4); dump();
sqshl(v7.h4, v7.h4, v0.h4); dump();
sqshl(v7.h4, v7.h4, v1.h4); dump();
sqshl(v7.h4, v7.h4, v2.h4); dump();
sqshl(v7.h4, v7.h4, v4.h4); dump();
sqshl(v7.h4, v7.h4, v8.h4); dump();
sqshl(v7.h4, v7.h4, v16.h4); dump();
sqshl(v7.h4, v7.h4, v31.h4); dump();
sqsub(v7.h4, v7.h4, v7.h4); dump();
sqsub(v0.h4, v7.h4, v7.h4); dump();
sqsub(v1.h4, v7.h4, v7.h4); dump();
sqsub(v2.h4, v7.h4, v7.h4); dump();
sqsub(v4.h4, v7.h4, v7.h4); dump();
sqsub(v8.h4, v7.h4, v7.h4); dump();
sqsub(v16.h4, v7.h4, v7.h4); dump();
sqsub(v31.h4, v7.h4, v7.h4); dump();
sqsub(v7.h4, v7.h4, v7.h4); dump();
sqsub(v7.h4, v0.h4, v7.h4); dump();
sqsub(v7.h4, v1.h4, v7.h4); dump();
sqsub(v7.h4, v2.h4, v7.h4); dump();
sqsub(v7.h4, v4.h4, v7.h4); dump();
sqsub(v7.h4, v8.h4, v7.h4); dump();
sqsub(v7.h4, v16.h4, v7.h4); dump();
sqsub(v7.h4, v31.h4, v7.h4); dump();
sqsub(v7.h4, v7.h4, v7.h4); dump();
sqsub(v7.h4, v7.h4, v0.h4); dump();
sqsub(v7.h4, v7.h4, v1.h4); dump();
sqsub(v7.h4, v7.h4, v2.h4); dump();
sqsub(v7.h4, v7.h4, v4.h4); dump();
sqsub(v7.h4, v7.h4, v8.h4); dump();
sqsub(v7.h4, v7.h4, v16.h4); dump();
sqsub(v7.h4, v7.h4, v31.h4); dump();
uqadd(v7.h4, v7.h4, v7.h4); dump();
uqadd(v0.h4, v7.h4, v7.h4); dump();
uqadd(v1.h4, v7.h4, v7.h4); dump();
uqadd(v2.h4, v7.h4, v7.h4); dump();
uqadd(v4.h4, v7.h4, v7.h4); dump();
uqadd(v8.h4, v7.h4, v7.h4); dump();
uqadd(v16.h4, v7.h4, v7.h4); dump();
uqadd(v31.h4, v7.h4, v7.h4); dump();
uqadd(v7.h4, v7.h4, v7.h4); dump();
uqadd(v7.h4, v0.h4, v7.h4); dump();
uqadd(v7.h4, v1.h4, v7.h4); dump();
uqadd(v7.h4, v2.h4, v7.h4); dump();
uqadd(v7.h4, v4.h4, v7.h4); dump();
uqadd(v7.h4, v8.h4, v7.h4); dump();
uqadd(v7.h4, v16.h4, v7.h4); dump();
uqadd(v7.h4, v31.h4, v7.h4); dump();
uqadd(v7.h4, v7.h4, v7.h4); dump();
uqadd(v7.h4, v7.h4, v0.h4); dump();
uqadd(v7.h4, v7.h4, v1.h4); dump();
uqadd(v7.h4, v7.h4, v2.h4); dump();
uqadd(v7.h4, v7.h4, v4.h4); dump();
uqadd(v7.h4, v7.h4, v8.h4); dump();
uqadd(v7.h4, v7.h4, v16.h4); dump();
uqadd(v7.h4, v7.h4, v31.h4); dump();
uqrshl(v7.h4, v7.h4, v7.h4); dump();
uqrshl(v0.h4, v7.h4, v7.h4); dump();
uqrshl(v1.h4, v7.h4, v7.h4); dump();
uqrshl(v2.h4, v7.h4, v7.h4); dump();
uqrshl(v4.h4, v7.h4, v7.h4); dump();
uqrshl(v8.h4, v7.h4, v7.h4); dump();
uqrshl(v16.h4, v7.h4, v7.h4); dump();
uqrshl(v31.h4, v7.h4, v7.h4); dump();
uqrshl(v7.h4, v7.h4, v7.h4); dump();
uqrshl(v7.h4, v0.h4, v7.h4); dump();
uqrshl(v7.h4, v1.h4, v7.h4); dump();
uqrshl(v7.h4, v2.h4, v7.h4); dump();
uqrshl(v7.h4, v4.h4, v7.h4); dump();
uqrshl(v7.h4, v8.h4, v7.h4); dump();
uqrshl(v7.h4, v16.h4, v7.h4); dump();
uqrshl(v7.h4, v31.h4, v7.h4); dump();
uqrshl(v7.h4, v7.h4, v7.h4); dump();
uqrshl(v7.h4, v7.h4, v0.h4); dump();
uqrshl(v7.h4, v7.h4, v1.h4); dump();
uqrshl(v7.h4, v7.h4, v2.h4); dump();
uqrshl(v7.h4, v7.h4, v4.h4); dump();
uqrshl(v7.h4, v7.h4, v8.h4); dump();
uqrshl(v7.h4, v7.h4, v16.h4); dump();
uqrshl(v7.h4, v7.h4, v31.h4); dump();
uqshl(v7.h4, v7.h4, v7.h4); dump();
uqshl(v0.h4, v7.h4, v7.h4); dump();
uqshl(v1.h4, v7.h4, v7.h4); dump();
uqshl(v2.h4, v7.h4, v7.h4); dump();
uqshl(v4.h4, v7.h4, v7.h4); dump();
uqshl(v8.h4, v7.h4, v7.h4); dump();
uqshl(v16.h4, v7.h4, v7.h4); dump();
uqshl(v31.h4, v7.h4, v7.h4); dump();
uqshl(v7.h4, v7.h4, v7.h4); dump();
uqshl(v7.h4, v0.h4, v7.h4); dump();
uqshl(v7.h4, v1.h4, v7.h4); dump();
uqshl(v7.h4, v2.h4, v7.h4); dump();
uqshl(v7.h4, v4.h4, v7.h4); dump();
uqshl(v7.h4, v8.h4, v7.h4); dump();
uqshl(v7.h4, v16.h4, v7.h4); dump();
uqshl(v7.h4, v31.h4, v7.h4); dump();
uqshl(v7.h4, v7.h4, v7.h4); dump();
uqshl(v7.h4, v7.h4, v0.h4); dump();
uqshl(v7.h4, v7.h4, v1.h4); dump();
uqshl(v7.h4, v7.h4, v2.h4); dump();
uqshl(v7.h4, v7.h4, v4.h4); dump();
uqshl(v7.h4, v7.h4, v8.h4); dump();
uqshl(v7.h4, v7.h4, v16.h4); dump();
uqshl(v7.h4, v7.h4, v31.h4); dump();
uqsub(v7.h4, v7.h4, v7.h4); dump();
uqsub(v0.h4, v7.h4, v7.h4); dump();
uqsub(v1.h4, v7.h4, v7.h4); dump();
uqsub(v2.h4, v7.h4, v7.h4); dump();
uqsub(v4.h4, v7.h4, v7.h4); dump();
uqsub(v8.h4, v7.h4, v7.h4); dump();
uqsub(v16.h4, v7.h4, v7.h4); dump();
uqsub(v31.h4, v7.h4, v7.h4); dump();
uqsub(v7.h4, v7.h4, v7.h4); dump();
uqsub(v7.h4, v0.h4, v7.h4); dump();
uqsub(v7.h4, v1.h4, v7.h4); dump();
uqsub(v7.h4, v2.h4, v7.h4); dump();
uqsub(v7.h4, v4.h4, v7.h4); dump();
uqsub(v7.h4, v8.h4, v7.h4); dump();
uqsub(v7.h4, v16.h4, v7.h4); dump();
uqsub(v7.h4, v31.h4, v7.h4); dump();
uqsub(v7.h4, v7.h4, v7.h4); dump();
uqsub(v7.h4, v7.h4, v0.h4); dump();
uqsub(v7.h4, v7.h4, v1.h4); dump();
uqsub(v7.h4, v7.h4, v2.h4); dump();
uqsub(v7.h4, v7.h4, v4.h4); dump();
uqsub(v7.h4, v7.h4, v8.h4); dump();
uqsub(v7.h4, v7.h4, v16.h4); dump();
uqsub(v7.h4, v7.h4, v31.h4); dump();
//DataProcSimd_Arithmetic11:7
sqadd(v7.h8, v7.h8, v7.h8); dump();
sqadd(v0.h8, v7.h8, v7.h8); dump();
sqadd(v1.h8, v7.h8, v7.h8); dump();
sqadd(v2.h8, v7.h8, v7.h8); dump();
sqadd(v4.h8, v7.h8, v7.h8); dump();
sqadd(v8.h8, v7.h8, v7.h8); dump();
sqadd(v16.h8, v7.h8, v7.h8); dump();
sqadd(v31.h8, v7.h8, v7.h8); dump();
sqadd(v7.h8, v7.h8, v7.h8); dump();
sqadd(v7.h8, v0.h8, v7.h8); dump();
sqadd(v7.h8, v1.h8, v7.h8); dump();
sqadd(v7.h8, v2.h8, v7.h8); dump();
sqadd(v7.h8, v4.h8, v7.h8); dump();
sqadd(v7.h8, v8.h8, v7.h8); dump();
sqadd(v7.h8, v16.h8, v7.h8); dump();
sqadd(v7.h8, v31.h8, v7.h8); dump();
sqadd(v7.h8, v7.h8, v7.h8); dump();
sqadd(v7.h8, v7.h8, v0.h8); dump();
sqadd(v7.h8, v7.h8, v1.h8); dump();
sqadd(v7.h8, v7.h8, v2.h8); dump();
sqadd(v7.h8, v7.h8, v4.h8); dump();
sqadd(v7.h8, v7.h8, v8.h8); dump();
sqadd(v7.h8, v7.h8, v16.h8); dump();
sqadd(v7.h8, v7.h8, v31.h8); dump();
sqrshl(v7.h8, v7.h8, v7.h8); dump();
sqrshl(v0.h8, v7.h8, v7.h8); dump();
sqrshl(v1.h8, v7.h8, v7.h8); dump();
sqrshl(v2.h8, v7.h8, v7.h8); dump();
sqrshl(v4.h8, v7.h8, v7.h8); dump();
sqrshl(v8.h8, v7.h8, v7.h8); dump();
sqrshl(v16.h8, v7.h8, v7.h8); dump();
sqrshl(v31.h8, v7.h8, v7.h8); dump();
sqrshl(v7.h8, v7.h8, v7.h8); dump();
sqrshl(v7.h8, v0.h8, v7.h8); dump();
sqrshl(v7.h8, v1.h8, v7.h8); dump();
sqrshl(v7.h8, v2.h8, v7.h8); dump();
sqrshl(v7.h8, v4.h8, v7.h8); dump();
sqrshl(v7.h8, v8.h8, v7.h8); dump();
sqrshl(v7.h8, v16.h8, v7.h8); dump();
sqrshl(v7.h8, v31.h8, v7.h8); dump();
sqrshl(v7.h8, v7.h8, v7.h8); dump();
sqrshl(v7.h8, v7.h8, v0.h8); dump();
sqrshl(v7.h8, v7.h8, v1.h8); dump();
sqrshl(v7.h8, v7.h8, v2.h8); dump();
sqrshl(v7.h8, v7.h8, v4.h8); dump();
sqrshl(v7.h8, v7.h8, v8.h8); dump();
sqrshl(v7.h8, v7.h8, v16.h8); dump();
sqrshl(v7.h8, v7.h8, v31.h8); dump();
sqshl(v7.h8, v7.h8, v7.h8); dump();
sqshl(v0.h8, v7.h8, v7.h8); dump();
sqshl(v1.h8, v7.h8, v7.h8); dump();
sqshl(v2.h8, v7.h8, v7.h8); dump();
sqshl(v4.h8, v7.h8, v7.h8); dump();
sqshl(v8.h8, v7.h8, v7.h8); dump();
sqshl(v16.h8, v7.h8, v7.h8); dump();
sqshl(v31.h8, v7.h8, v7.h8); dump();
sqshl(v7.h8, v7.h8, v7.h8); dump();
sqshl(v7.h8, v0.h8, v7.h8); dump();
sqshl(v7.h8, v1.h8, v7.h8); dump();
sqshl(v7.h8, v2.h8, v7.h8); dump();
sqshl(v7.h8, v4.h8, v7.h8); dump();
sqshl(v7.h8, v8.h8, v7.h8); dump();
sqshl(v7.h8, v16.h8, v7.h8); dump();
sqshl(v7.h8, v31.h8, v7.h8); dump();
sqshl(v7.h8, v7.h8, v7.h8); dump();
sqshl(v7.h8, v7.h8, v0.h8); dump();
sqshl(v7.h8, v7.h8, v1.h8); dump();
sqshl(v7.h8, v7.h8, v2.h8); dump();
sqshl(v7.h8, v7.h8, v4.h8); dump();
sqshl(v7.h8, v7.h8, v8.h8); dump();
sqshl(v7.h8, v7.h8, v16.h8); dump();
sqshl(v7.h8, v7.h8, v31.h8); dump();
sqsub(v7.h8, v7.h8, v7.h8); dump();
sqsub(v0.h8, v7.h8, v7.h8); dump();
sqsub(v1.h8, v7.h8, v7.h8); dump();
sqsub(v2.h8, v7.h8, v7.h8); dump();
sqsub(v4.h8, v7.h8, v7.h8); dump();
sqsub(v8.h8, v7.h8, v7.h8); dump();
sqsub(v16.h8, v7.h8, v7.h8); dump();
sqsub(v31.h8, v7.h8, v7.h8); dump();
sqsub(v7.h8, v7.h8, v7.h8); dump();
sqsub(v7.h8, v0.h8, v7.h8); dump();
sqsub(v7.h8, v1.h8, v7.h8); dump();
sqsub(v7.h8, v2.h8, v7.h8); dump();
sqsub(v7.h8, v4.h8, v7.h8); dump();
sqsub(v7.h8, v8.h8, v7.h8); dump();
sqsub(v7.h8, v16.h8, v7.h8); dump();
sqsub(v7.h8, v31.h8, v7.h8); dump();
sqsub(v7.h8, v7.h8, v7.h8); dump();
sqsub(v7.h8, v7.h8, v0.h8); dump();
sqsub(v7.h8, v7.h8, v1.h8); dump();
sqsub(v7.h8, v7.h8, v2.h8); dump();
sqsub(v7.h8, v7.h8, v4.h8); dump();
sqsub(v7.h8, v7.h8, v8.h8); dump();
sqsub(v7.h8, v7.h8, v16.h8); dump();
sqsub(v7.h8, v7.h8, v31.h8); dump();
uqadd(v7.h8, v7.h8, v7.h8); dump();
uqadd(v0.h8, v7.h8, v7.h8); dump();
uqadd(v1.h8, v7.h8, v7.h8); dump();
uqadd(v2.h8, v7.h8, v7.h8); dump();
uqadd(v4.h8, v7.h8, v7.h8); dump();
uqadd(v8.h8, v7.h8, v7.h8); dump();
uqadd(v16.h8, v7.h8, v7.h8); dump();
uqadd(v31.h8, v7.h8, v7.h8); dump();
uqadd(v7.h8, v7.h8, v7.h8); dump();
uqadd(v7.h8, v0.h8, v7.h8); dump();
uqadd(v7.h8, v1.h8, v7.h8); dump();
uqadd(v7.h8, v2.h8, v7.h8); dump();
uqadd(v7.h8, v4.h8, v7.h8); dump();
uqadd(v7.h8, v8.h8, v7.h8); dump();
uqadd(v7.h8, v16.h8, v7.h8); dump();
uqadd(v7.h8, v31.h8, v7.h8); dump();
uqadd(v7.h8, v7.h8, v7.h8); dump();
uqadd(v7.h8, v7.h8, v0.h8); dump();
uqadd(v7.h8, v7.h8, v1.h8); dump();
uqadd(v7.h8, v7.h8, v2.h8); dump();
uqadd(v7.h8, v7.h8, v4.h8); dump();
uqadd(v7.h8, v7.h8, v8.h8); dump();
uqadd(v7.h8, v7.h8, v16.h8); dump();
uqadd(v7.h8, v7.h8, v31.h8); dump();
uqrshl(v7.h8, v7.h8, v7.h8); dump();
uqrshl(v0.h8, v7.h8, v7.h8); dump();
uqrshl(v1.h8, v7.h8, v7.h8); dump();
uqrshl(v2.h8, v7.h8, v7.h8); dump();
uqrshl(v4.h8, v7.h8, v7.h8); dump();
uqrshl(v8.h8, v7.h8, v7.h8); dump();
uqrshl(v16.h8, v7.h8, v7.h8); dump();
uqrshl(v31.h8, v7.h8, v7.h8); dump();
uqrshl(v7.h8, v7.h8, v7.h8); dump();
uqrshl(v7.h8, v0.h8, v7.h8); dump();
uqrshl(v7.h8, v1.h8, v7.h8); dump();
uqrshl(v7.h8, v2.h8, v7.h8); dump();
uqrshl(v7.h8, v4.h8, v7.h8); dump();
uqrshl(v7.h8, v8.h8, v7.h8); dump();
uqrshl(v7.h8, v16.h8, v7.h8); dump();
uqrshl(v7.h8, v31.h8, v7.h8); dump();
uqrshl(v7.h8, v7.h8, v7.h8); dump();
uqrshl(v7.h8, v7.h8, v0.h8); dump();
uqrshl(v7.h8, v7.h8, v1.h8); dump();
uqrshl(v7.h8, v7.h8, v2.h8); dump();
uqrshl(v7.h8, v7.h8, v4.h8); dump();
uqrshl(v7.h8, v7.h8, v8.h8); dump();
uqrshl(v7.h8, v7.h8, v16.h8); dump();
uqrshl(v7.h8, v7.h8, v31.h8); dump();
uqshl(v7.h8, v7.h8, v7.h8); dump();
uqshl(v0.h8, v7.h8, v7.h8); dump();
uqshl(v1.h8, v7.h8, v7.h8); dump();
uqshl(v2.h8, v7.h8, v7.h8); dump();
uqshl(v4.h8, v7.h8, v7.h8); dump();
uqshl(v8.h8, v7.h8, v7.h8); dump();
uqshl(v16.h8, v7.h8, v7.h8); dump();
uqshl(v31.h8, v7.h8, v7.h8); dump();
uqshl(v7.h8, v7.h8, v7.h8); dump();
uqshl(v7.h8, v0.h8, v7.h8); dump();
uqshl(v7.h8, v1.h8, v7.h8); dump();
uqshl(v7.h8, v2.h8, v7.h8); dump();
uqshl(v7.h8, v4.h8, v7.h8); dump();
uqshl(v7.h8, v8.h8, v7.h8); dump();
uqshl(v7.h8, v16.h8, v7.h8); dump();
uqshl(v7.h8, v31.h8, v7.h8); dump();
uqshl(v7.h8, v7.h8, v7.h8); dump();
uqshl(v7.h8, v7.h8, v0.h8); dump();
uqshl(v7.h8, v7.h8, v1.h8); dump();
uqshl(v7.h8, v7.h8, v2.h8); dump();
uqshl(v7.h8, v7.h8, v4.h8); dump();
uqshl(v7.h8, v7.h8, v8.h8); dump();
uqshl(v7.h8, v7.h8, v16.h8); dump();
uqshl(v7.h8, v7.h8, v31.h8); dump();
uqsub(v7.h8, v7.h8, v7.h8); dump();
uqsub(v0.h8, v7.h8, v7.h8); dump();
uqsub(v1.h8, v7.h8, v7.h8); dump();
uqsub(v2.h8, v7.h8, v7.h8); dump();
uqsub(v4.h8, v7.h8, v7.h8); dump();
uqsub(v8.h8, v7.h8, v7.h8); dump();
uqsub(v16.h8, v7.h8, v7.h8); dump();
uqsub(v31.h8, v7.h8, v7.h8); dump();
uqsub(v7.h8, v7.h8, v7.h8); dump();
uqsub(v7.h8, v0.h8, v7.h8); dump();
uqsub(v7.h8, v1.h8, v7.h8); dump();
uqsub(v7.h8, v2.h8, v7.h8); dump();
uqsub(v7.h8, v4.h8, v7.h8); dump();
uqsub(v7.h8, v8.h8, v7.h8); dump();
uqsub(v7.h8, v16.h8, v7.h8); dump();
uqsub(v7.h8, v31.h8, v7.h8); dump();
uqsub(v7.h8, v7.h8, v7.h8); dump();
uqsub(v7.h8, v7.h8, v0.h8); dump();
uqsub(v7.h8, v7.h8, v1.h8); dump();
uqsub(v7.h8, v7.h8, v2.h8); dump();
uqsub(v7.h8, v7.h8, v4.h8); dump();
uqsub(v7.h8, v7.h8, v8.h8); dump();
uqsub(v7.h8, v7.h8, v16.h8); dump();
uqsub(v7.h8, v7.h8, v31.h8); dump();
//DataProcSimd_Arithmetic12:0
sqadd(v7.s2, v7.s2, v7.s2); dump();
sqadd(v0.s2, v7.s2, v7.s2); dump();
sqadd(v1.s2, v7.s2, v7.s2); dump();
sqadd(v2.s2, v7.s2, v7.s2); dump();
sqadd(v4.s2, v7.s2, v7.s2); dump();
sqadd(v8.s2, v7.s2, v7.s2); dump();
sqadd(v16.s2, v7.s2, v7.s2); dump();
sqadd(v31.s2, v7.s2, v7.s2); dump();
sqadd(v7.s2, v7.s2, v7.s2); dump();
sqadd(v7.s2, v0.s2, v7.s2); dump();
sqadd(v7.s2, v1.s2, v7.s2); dump();
sqadd(v7.s2, v2.s2, v7.s2); dump();
sqadd(v7.s2, v4.s2, v7.s2); dump();
sqadd(v7.s2, v8.s2, v7.s2); dump();
sqadd(v7.s2, v16.s2, v7.s2); dump();
sqadd(v7.s2, v31.s2, v7.s2); dump();
sqadd(v7.s2, v7.s2, v7.s2); dump();
sqadd(v7.s2, v7.s2, v0.s2); dump();
sqadd(v7.s2, v7.s2, v1.s2); dump();
sqadd(v7.s2, v7.s2, v2.s2); dump();
sqadd(v7.s2, v7.s2, v4.s2); dump();
sqadd(v7.s2, v7.s2, v8.s2); dump();
sqadd(v7.s2, v7.s2, v16.s2); dump();
sqadd(v7.s2, v7.s2, v31.s2); dump();
sqrshl(v7.s2, v7.s2, v7.s2); dump();
sqrshl(v0.s2, v7.s2, v7.s2); dump();
sqrshl(v1.s2, v7.s2, v7.s2); dump();
sqrshl(v2.s2, v7.s2, v7.s2); dump();
sqrshl(v4.s2, v7.s2, v7.s2); dump();
sqrshl(v8.s2, v7.s2, v7.s2); dump();
sqrshl(v16.s2, v7.s2, v7.s2); dump();
sqrshl(v31.s2, v7.s2, v7.s2); dump();
sqrshl(v7.s2, v7.s2, v7.s2); dump();
sqrshl(v7.s2, v0.s2, v7.s2); dump();
sqrshl(v7.s2, v1.s2, v7.s2); dump();
sqrshl(v7.s2, v2.s2, v7.s2); dump();
sqrshl(v7.s2, v4.s2, v7.s2); dump();
sqrshl(v7.s2, v8.s2, v7.s2); dump();
sqrshl(v7.s2, v16.s2, v7.s2); dump();
sqrshl(v7.s2, v31.s2, v7.s2); dump();
sqrshl(v7.s2, v7.s2, v7.s2); dump();
sqrshl(v7.s2, v7.s2, v0.s2); dump();
sqrshl(v7.s2, v7.s2, v1.s2); dump();
sqrshl(v7.s2, v7.s2, v2.s2); dump();
sqrshl(v7.s2, v7.s2, v4.s2); dump();
sqrshl(v7.s2, v7.s2, v8.s2); dump();
sqrshl(v7.s2, v7.s2, v16.s2); dump();
sqrshl(v7.s2, v7.s2, v31.s2); dump();
sqshl(v7.s2, v7.s2, v7.s2); dump();
sqshl(v0.s2, v7.s2, v7.s2); dump();
sqshl(v1.s2, v7.s2, v7.s2); dump();
sqshl(v2.s2, v7.s2, v7.s2); dump();
sqshl(v4.s2, v7.s2, v7.s2); dump();
sqshl(v8.s2, v7.s2, v7.s2); dump();
sqshl(v16.s2, v7.s2, v7.s2); dump();
sqshl(v31.s2, v7.s2, v7.s2); dump();
sqshl(v7.s2, v7.s2, v7.s2); dump();
sqshl(v7.s2, v0.s2, v7.s2); dump();
sqshl(v7.s2, v1.s2, v7.s2); dump();
sqshl(v7.s2, v2.s2, v7.s2); dump();
sqshl(v7.s2, v4.s2, v7.s2); dump();
sqshl(v7.s2, v8.s2, v7.s2); dump();
sqshl(v7.s2, v16.s2, v7.s2); dump();
sqshl(v7.s2, v31.s2, v7.s2); dump();
sqshl(v7.s2, v7.s2, v7.s2); dump();
sqshl(v7.s2, v7.s2, v0.s2); dump();
sqshl(v7.s2, v7.s2, v1.s2); dump();
sqshl(v7.s2, v7.s2, v2.s2); dump();
sqshl(v7.s2, v7.s2, v4.s2); dump();
sqshl(v7.s2, v7.s2, v8.s2); dump();
sqshl(v7.s2, v7.s2, v16.s2); dump();
sqshl(v7.s2, v7.s2, v31.s2); dump();
sqsub(v7.s2, v7.s2, v7.s2); dump();
sqsub(v0.s2, v7.s2, v7.s2); dump();
sqsub(v1.s2, v7.s2, v7.s2); dump();
sqsub(v2.s2, v7.s2, v7.s2); dump();
sqsub(v4.s2, v7.s2, v7.s2); dump();
sqsub(v8.s2, v7.s2, v7.s2); dump();
sqsub(v16.s2, v7.s2, v7.s2); dump();
sqsub(v31.s2, v7.s2, v7.s2); dump();
sqsub(v7.s2, v7.s2, v7.s2); dump();
sqsub(v7.s2, v0.s2, v7.s2); dump();
sqsub(v7.s2, v1.s2, v7.s2); dump();
sqsub(v7.s2, v2.s2, v7.s2); dump();
sqsub(v7.s2, v4.s2, v7.s2); dump();
sqsub(v7.s2, v8.s2, v7.s2); dump();
sqsub(v7.s2, v16.s2, v7.s2); dump();
sqsub(v7.s2, v31.s2, v7.s2); dump();
sqsub(v7.s2, v7.s2, v7.s2); dump();
sqsub(v7.s2, v7.s2, v0.s2); dump();
sqsub(v7.s2, v7.s2, v1.s2); dump();
sqsub(v7.s2, v7.s2, v2.s2); dump();
sqsub(v7.s2, v7.s2, v4.s2); dump();
sqsub(v7.s2, v7.s2, v8.s2); dump();
sqsub(v7.s2, v7.s2, v16.s2); dump();
sqsub(v7.s2, v7.s2, v31.s2); dump();
uqadd(v7.s2, v7.s2, v7.s2); dump();
uqadd(v0.s2, v7.s2, v7.s2); dump();
uqadd(v1.s2, v7.s2, v7.s2); dump();
uqadd(v2.s2, v7.s2, v7.s2); dump();
uqadd(v4.s2, v7.s2, v7.s2); dump();
uqadd(v8.s2, v7.s2, v7.s2); dump();
uqadd(v16.s2, v7.s2, v7.s2); dump();
uqadd(v31.s2, v7.s2, v7.s2); dump();
uqadd(v7.s2, v7.s2, v7.s2); dump();
uqadd(v7.s2, v0.s2, v7.s2); dump();
uqadd(v7.s2, v1.s2, v7.s2); dump();
uqadd(v7.s2, v2.s2, v7.s2); dump();
uqadd(v7.s2, v4.s2, v7.s2); dump();
uqadd(v7.s2, v8.s2, v7.s2); dump();
uqadd(v7.s2, v16.s2, v7.s2); dump();
uqadd(v7.s2, v31.s2, v7.s2); dump();
uqadd(v7.s2, v7.s2, v7.s2); dump();
uqadd(v7.s2, v7.s2, v0.s2); dump();
uqadd(v7.s2, v7.s2, v1.s2); dump();
uqadd(v7.s2, v7.s2, v2.s2); dump();
uqadd(v7.s2, v7.s2, v4.s2); dump();
uqadd(v7.s2, v7.s2, v8.s2); dump();
uqadd(v7.s2, v7.s2, v16.s2); dump();
uqadd(v7.s2, v7.s2, v31.s2); dump();
uqrshl(v7.s2, v7.s2, v7.s2); dump();
uqrshl(v0.s2, v7.s2, v7.s2); dump();
uqrshl(v1.s2, v7.s2, v7.s2); dump();
uqrshl(v2.s2, v7.s2, v7.s2); dump();
uqrshl(v4.s2, v7.s2, v7.s2); dump();
uqrshl(v8.s2, v7.s2, v7.s2); dump();
uqrshl(v16.s2, v7.s2, v7.s2); dump();
uqrshl(v31.s2, v7.s2, v7.s2); dump();
uqrshl(v7.s2, v7.s2, v7.s2); dump();
uqrshl(v7.s2, v0.s2, v7.s2); dump();
uqrshl(v7.s2, v1.s2, v7.s2); dump();
uqrshl(v7.s2, v2.s2, v7.s2); dump();
uqrshl(v7.s2, v4.s2, v7.s2); dump();
uqrshl(v7.s2, v8.s2, v7.s2); dump();
uqrshl(v7.s2, v16.s2, v7.s2); dump();
uqrshl(v7.s2, v31.s2, v7.s2); dump();
uqrshl(v7.s2, v7.s2, v7.s2); dump();
uqrshl(v7.s2, v7.s2, v0.s2); dump();
uqrshl(v7.s2, v7.s2, v1.s2); dump();
uqrshl(v7.s2, v7.s2, v2.s2); dump();
uqrshl(v7.s2, v7.s2, v4.s2); dump();
uqrshl(v7.s2, v7.s2, v8.s2); dump();
uqrshl(v7.s2, v7.s2, v16.s2); dump();
uqrshl(v7.s2, v7.s2, v31.s2); dump();
uqshl(v7.s2, v7.s2, v7.s2); dump();
uqshl(v0.s2, v7.s2, v7.s2); dump();
uqshl(v1.s2, v7.s2, v7.s2); dump();
uqshl(v2.s2, v7.s2, v7.s2); dump();
uqshl(v4.s2, v7.s2, v7.s2); dump();
uqshl(v8.s2, v7.s2, v7.s2); dump();
uqshl(v16.s2, v7.s2, v7.s2); dump();
uqshl(v31.s2, v7.s2, v7.s2); dump();
uqshl(v7.s2, v7.s2, v7.s2); dump();
uqshl(v7.s2, v0.s2, v7.s2); dump();
uqshl(v7.s2, v1.s2, v7.s2); dump();
uqshl(v7.s2, v2.s2, v7.s2); dump();
uqshl(v7.s2, v4.s2, v7.s2); dump();
uqshl(v7.s2, v8.s2, v7.s2); dump();
uqshl(v7.s2, v16.s2, v7.s2); dump();
uqshl(v7.s2, v31.s2, v7.s2); dump();
uqshl(v7.s2, v7.s2, v7.s2); dump();
uqshl(v7.s2, v7.s2, v0.s2); dump();
uqshl(v7.s2, v7.s2, v1.s2); dump();
uqshl(v7.s2, v7.s2, v2.s2); dump();
uqshl(v7.s2, v7.s2, v4.s2); dump();
uqshl(v7.s2, v7.s2, v8.s2); dump();
uqshl(v7.s2, v7.s2, v16.s2); dump();
uqshl(v7.s2, v7.s2, v31.s2); dump();
uqsub(v7.s2, v7.s2, v7.s2); dump();
uqsub(v0.s2, v7.s2, v7.s2); dump();
uqsub(v1.s2, v7.s2, v7.s2); dump();
uqsub(v2.s2, v7.s2, v7.s2); dump();
uqsub(v4.s2, v7.s2, v7.s2); dump();
uqsub(v8.s2, v7.s2, v7.s2); dump();
uqsub(v16.s2, v7.s2, v7.s2); dump();
uqsub(v31.s2, v7.s2, v7.s2); dump();
uqsub(v7.s2, v7.s2, v7.s2); dump();
uqsub(v7.s2, v0.s2, v7.s2); dump();
uqsub(v7.s2, v1.s2, v7.s2); dump();
uqsub(v7.s2, v2.s2, v7.s2); dump();
uqsub(v7.s2, v4.s2, v7.s2); dump();
uqsub(v7.s2, v8.s2, v7.s2); dump();
uqsub(v7.s2, v16.s2, v7.s2); dump();
uqsub(v7.s2, v31.s2, v7.s2); dump();
uqsub(v7.s2, v7.s2, v7.s2); dump();
uqsub(v7.s2, v7.s2, v0.s2); dump();
uqsub(v7.s2, v7.s2, v1.s2); dump();
uqsub(v7.s2, v7.s2, v2.s2); dump();
uqsub(v7.s2, v7.s2, v4.s2); dump();
uqsub(v7.s2, v7.s2, v8.s2); dump();
uqsub(v7.s2, v7.s2, v16.s2); dump();
uqsub(v7.s2, v7.s2, v31.s2); dump();
//DataProcSimd_Arithmetic12:1
sqadd(v7.s4, v7.s4, v7.s4); dump();
sqadd(v0.s4, v7.s4, v7.s4); dump();
sqadd(v1.s4, v7.s4, v7.s4); dump();
sqadd(v2.s4, v7.s4, v7.s4); dump();
sqadd(v4.s4, v7.s4, v7.s4); dump();
sqadd(v8.s4, v7.s4, v7.s4); dump();
sqadd(v16.s4, v7.s4, v7.s4); dump();
sqadd(v31.s4, v7.s4, v7.s4); dump();
sqadd(v7.s4, v7.s4, v7.s4); dump();
sqadd(v7.s4, v0.s4, v7.s4); dump();
sqadd(v7.s4, v1.s4, v7.s4); dump();
sqadd(v7.s4, v2.s4, v7.s4); dump();
sqadd(v7.s4, v4.s4, v7.s4); dump();
sqadd(v7.s4, v8.s4, v7.s4); dump();
sqadd(v7.s4, v16.s4, v7.s4); dump();
sqadd(v7.s4, v31.s4, v7.s4); dump();
sqadd(v7.s4, v7.s4, v7.s4); dump();
sqadd(v7.s4, v7.s4, v0.s4); dump();
sqadd(v7.s4, v7.s4, v1.s4); dump();
sqadd(v7.s4, v7.s4, v2.s4); dump();
sqadd(v7.s4, v7.s4, v4.s4); dump();
sqadd(v7.s4, v7.s4, v8.s4); dump();
sqadd(v7.s4, v7.s4, v16.s4); dump();
sqadd(v7.s4, v7.s4, v31.s4); dump();
sqrshl(v7.s4, v7.s4, v7.s4); dump();
sqrshl(v0.s4, v7.s4, v7.s4); dump();
sqrshl(v1.s4, v7.s4, v7.s4); dump();
sqrshl(v2.s4, v7.s4, v7.s4); dump();
sqrshl(v4.s4, v7.s4, v7.s4); dump();
sqrshl(v8.s4, v7.s4, v7.s4); dump();
sqrshl(v16.s4, v7.s4, v7.s4); dump();
sqrshl(v31.s4, v7.s4, v7.s4); dump();
sqrshl(v7.s4, v7.s4, v7.s4); dump();
sqrshl(v7.s4, v0.s4, v7.s4); dump();
sqrshl(v7.s4, v1.s4, v7.s4); dump();
sqrshl(v7.s4, v2.s4, v7.s4); dump();
sqrshl(v7.s4, v4.s4, v7.s4); dump();
sqrshl(v7.s4, v8.s4, v7.s4); dump();
sqrshl(v7.s4, v16.s4, v7.s4); dump();
sqrshl(v7.s4, v31.s4, v7.s4); dump();
sqrshl(v7.s4, v7.s4, v7.s4); dump();
sqrshl(v7.s4, v7.s4, v0.s4); dump();
sqrshl(v7.s4, v7.s4, v1.s4); dump();
sqrshl(v7.s4, v7.s4, v2.s4); dump();
sqrshl(v7.s4, v7.s4, v4.s4); dump();
sqrshl(v7.s4, v7.s4, v8.s4); dump();
sqrshl(v7.s4, v7.s4, v16.s4); dump();
sqrshl(v7.s4, v7.s4, v31.s4); dump();
sqshl(v7.s4, v7.s4, v7.s4); dump();
sqshl(v0.s4, v7.s4, v7.s4); dump();
sqshl(v1.s4, v7.s4, v7.s4); dump();
sqshl(v2.s4, v7.s4, v7.s4); dump();
sqshl(v4.s4, v7.s4, v7.s4); dump();
sqshl(v8.s4, v7.s4, v7.s4); dump();
sqshl(v16.s4, v7.s4, v7.s4); dump();
sqshl(v31.s4, v7.s4, v7.s4); dump();
sqshl(v7.s4, v7.s4, v7.s4); dump();
sqshl(v7.s4, v0.s4, v7.s4); dump();
sqshl(v7.s4, v1.s4, v7.s4); dump();
sqshl(v7.s4, v2.s4, v7.s4); dump();
sqshl(v7.s4, v4.s4, v7.s4); dump();
sqshl(v7.s4, v8.s4, v7.s4); dump();
sqshl(v7.s4, v16.s4, v7.s4); dump();
sqshl(v7.s4, v31.s4, v7.s4); dump();
sqshl(v7.s4, v7.s4, v7.s4); dump();
sqshl(v7.s4, v7.s4, v0.s4); dump();
sqshl(v7.s4, v7.s4, v1.s4); dump();
sqshl(v7.s4, v7.s4, v2.s4); dump();
sqshl(v7.s4, v7.s4, v4.s4); dump();
sqshl(v7.s4, v7.s4, v8.s4); dump();
sqshl(v7.s4, v7.s4, v16.s4); dump();
sqshl(v7.s4, v7.s4, v31.s4); dump();
sqsub(v7.s4, v7.s4, v7.s4); dump();
sqsub(v0.s4, v7.s4, v7.s4); dump();
sqsub(v1.s4, v7.s4, v7.s4); dump();
sqsub(v2.s4, v7.s4, v7.s4); dump();
sqsub(v4.s4, v7.s4, v7.s4); dump();
sqsub(v8.s4, v7.s4, v7.s4); dump();
sqsub(v16.s4, v7.s4, v7.s4); dump();
sqsub(v31.s4, v7.s4, v7.s4); dump();
sqsub(v7.s4, v7.s4, v7.s4); dump();
sqsub(v7.s4, v0.s4, v7.s4); dump();
sqsub(v7.s4, v1.s4, v7.s4); dump();
sqsub(v7.s4, v2.s4, v7.s4); dump();
sqsub(v7.s4, v4.s4, v7.s4); dump();
sqsub(v7.s4, v8.s4, v7.s4); dump();
sqsub(v7.s4, v16.s4, v7.s4); dump();
sqsub(v7.s4, v31.s4, v7.s4); dump();
sqsub(v7.s4, v7.s4, v7.s4); dump();
sqsub(v7.s4, v7.s4, v0.s4); dump();
sqsub(v7.s4, v7.s4, v1.s4); dump();
sqsub(v7.s4, v7.s4, v2.s4); dump();
sqsub(v7.s4, v7.s4, v4.s4); dump();
sqsub(v7.s4, v7.s4, v8.s4); dump();
sqsub(v7.s4, v7.s4, v16.s4); dump();
sqsub(v7.s4, v7.s4, v31.s4); dump();
uqadd(v7.s4, v7.s4, v7.s4); dump();
uqadd(v0.s4, v7.s4, v7.s4); dump();
uqadd(v1.s4, v7.s4, v7.s4); dump();
uqadd(v2.s4, v7.s4, v7.s4); dump();
uqadd(v4.s4, v7.s4, v7.s4); dump();
uqadd(v8.s4, v7.s4, v7.s4); dump();
uqadd(v16.s4, v7.s4, v7.s4); dump();
uqadd(v31.s4, v7.s4, v7.s4); dump();
uqadd(v7.s4, v7.s4, v7.s4); dump();
uqadd(v7.s4, v0.s4, v7.s4); dump();
uqadd(v7.s4, v1.s4, v7.s4); dump();
uqadd(v7.s4, v2.s4, v7.s4); dump();
uqadd(v7.s4, v4.s4, v7.s4); dump();
uqadd(v7.s4, v8.s4, v7.s4); dump();
uqadd(v7.s4, v16.s4, v7.s4); dump();
uqadd(v7.s4, v31.s4, v7.s4); dump();
uqadd(v7.s4, v7.s4, v7.s4); dump();
uqadd(v7.s4, v7.s4, v0.s4); dump();
uqadd(v7.s4, v7.s4, v1.s4); dump();
uqadd(v7.s4, v7.s4, v2.s4); dump();
uqadd(v7.s4, v7.s4, v4.s4); dump();
uqadd(v7.s4, v7.s4, v8.s4); dump();
uqadd(v7.s4, v7.s4, v16.s4); dump();
uqadd(v7.s4, v7.s4, v31.s4); dump();
uqrshl(v7.s4, v7.s4, v7.s4); dump();
uqrshl(v0.s4, v7.s4, v7.s4); dump();
uqrshl(v1.s4, v7.s4, v7.s4); dump();
uqrshl(v2.s4, v7.s4, v7.s4); dump();
uqrshl(v4.s4, v7.s4, v7.s4); dump();
uqrshl(v8.s4, v7.s4, v7.s4); dump();
uqrshl(v16.s4, v7.s4, v7.s4); dump();
uqrshl(v31.s4, v7.s4, v7.s4); dump();
uqrshl(v7.s4, v7.s4, v7.s4); dump();
uqrshl(v7.s4, v0.s4, v7.s4); dump();
uqrshl(v7.s4, v1.s4, v7.s4); dump();
uqrshl(v7.s4, v2.s4, v7.s4); dump();
uqrshl(v7.s4, v4.s4, v7.s4); dump();
uqrshl(v7.s4, v8.s4, v7.s4); dump();
uqrshl(v7.s4, v16.s4, v7.s4); dump();
uqrshl(v7.s4, v31.s4, v7.s4); dump();
uqrshl(v7.s4, v7.s4, v7.s4); dump();
uqrshl(v7.s4, v7.s4, v0.s4); dump();
uqrshl(v7.s4, v7.s4, v1.s4); dump();
uqrshl(v7.s4, v7.s4, v2.s4); dump();
uqrshl(v7.s4, v7.s4, v4.s4); dump();
uqrshl(v7.s4, v7.s4, v8.s4); dump();
uqrshl(v7.s4, v7.s4, v16.s4); dump();
uqrshl(v7.s4, v7.s4, v31.s4); dump();
uqshl(v7.s4, v7.s4, v7.s4); dump();
uqshl(v0.s4, v7.s4, v7.s4); dump();
uqshl(v1.s4, v7.s4, v7.s4); dump();
uqshl(v2.s4, v7.s4, v7.s4); dump();
uqshl(v4.s4, v7.s4, v7.s4); dump();
uqshl(v8.s4, v7.s4, v7.s4); dump();
uqshl(v16.s4, v7.s4, v7.s4); dump();
uqshl(v31.s4, v7.s4, v7.s4); dump();
uqshl(v7.s4, v7.s4, v7.s4); dump();
uqshl(v7.s4, v0.s4, v7.s4); dump();
uqshl(v7.s4, v1.s4, v7.s4); dump();
uqshl(v7.s4, v2.s4, v7.s4); dump();
uqshl(v7.s4, v4.s4, v7.s4); dump();
uqshl(v7.s4, v8.s4, v7.s4); dump();
uqshl(v7.s4, v16.s4, v7.s4); dump();
uqshl(v7.s4, v31.s4, v7.s4); dump();
uqshl(v7.s4, v7.s4, v7.s4); dump();
uqshl(v7.s4, v7.s4, v0.s4); dump();
uqshl(v7.s4, v7.s4, v1.s4); dump();
uqshl(v7.s4, v7.s4, v2.s4); dump();
uqshl(v7.s4, v7.s4, v4.s4); dump();
uqshl(v7.s4, v7.s4, v8.s4); dump();
uqshl(v7.s4, v7.s4, v16.s4); dump();
uqshl(v7.s4, v7.s4, v31.s4); dump();
uqsub(v7.s4, v7.s4, v7.s4); dump();
uqsub(v0.s4, v7.s4, v7.s4); dump();
uqsub(v1.s4, v7.s4, v7.s4); dump();
uqsub(v2.s4, v7.s4, v7.s4); dump();
uqsub(v4.s4, v7.s4, v7.s4); dump();
uqsub(v8.s4, v7.s4, v7.s4); dump();
uqsub(v16.s4, v7.s4, v7.s4); dump();
uqsub(v31.s4, v7.s4, v7.s4); dump();
uqsub(v7.s4, v7.s4, v7.s4); dump();
uqsub(v7.s4, v0.s4, v7.s4); dump();
uqsub(v7.s4, v1.s4, v7.s4); dump();
uqsub(v7.s4, v2.s4, v7.s4); dump();
uqsub(v7.s4, v4.s4, v7.s4); dump();
uqsub(v7.s4, v8.s4, v7.s4); dump();
uqsub(v7.s4, v16.s4, v7.s4); dump();
uqsub(v7.s4, v31.s4, v7.s4); dump();
uqsub(v7.s4, v7.s4, v7.s4); dump();
uqsub(v7.s4, v7.s4, v0.s4); dump();
uqsub(v7.s4, v7.s4, v1.s4); dump();
uqsub(v7.s4, v7.s4, v2.s4); dump();
uqsub(v7.s4, v7.s4, v4.s4); dump();
uqsub(v7.s4, v7.s4, v8.s4); dump();
uqsub(v7.s4, v7.s4, v16.s4); dump();
uqsub(v7.s4, v7.s4, v31.s4); dump();
//DataProcSimd_Arithmetic12:2
sqadd(v7.d2, v7.d2, v7.d2); dump();
sqadd(v0.d2, v7.d2, v7.d2); dump();
sqadd(v1.d2, v7.d2, v7.d2); dump();
sqadd(v2.d2, v7.d2, v7.d2); dump();
sqadd(v4.d2, v7.d2, v7.d2); dump();
sqadd(v8.d2, v7.d2, v7.d2); dump();
sqadd(v16.d2, v7.d2, v7.d2); dump();
sqadd(v31.d2, v7.d2, v7.d2); dump();
sqadd(v7.d2, v7.d2, v7.d2); dump();
sqadd(v7.d2, v0.d2, v7.d2); dump();
sqadd(v7.d2, v1.d2, v7.d2); dump();
sqadd(v7.d2, v2.d2, v7.d2); dump();
sqadd(v7.d2, v4.d2, v7.d2); dump();
sqadd(v7.d2, v8.d2, v7.d2); dump();
sqadd(v7.d2, v16.d2, v7.d2); dump();
sqadd(v7.d2, v31.d2, v7.d2); dump();
sqadd(v7.d2, v7.d2, v7.d2); dump();
sqadd(v7.d2, v7.d2, v0.d2); dump();
sqadd(v7.d2, v7.d2, v1.d2); dump();
sqadd(v7.d2, v7.d2, v2.d2); dump();
sqadd(v7.d2, v7.d2, v4.d2); dump();
sqadd(v7.d2, v7.d2, v8.d2); dump();
sqadd(v7.d2, v7.d2, v16.d2); dump();
sqadd(v7.d2, v7.d2, v31.d2); dump();
sqrshl(v7.d2, v7.d2, v7.d2); dump();
sqrshl(v0.d2, v7.d2, v7.d2); dump();
sqrshl(v1.d2, v7.d2, v7.d2); dump();
sqrshl(v2.d2, v7.d2, v7.d2); dump();
sqrshl(v4.d2, v7.d2, v7.d2); dump();
sqrshl(v8.d2, v7.d2, v7.d2); dump();
sqrshl(v16.d2, v7.d2, v7.d2); dump();
sqrshl(v31.d2, v7.d2, v7.d2); dump();
sqrshl(v7.d2, v7.d2, v7.d2); dump();
sqrshl(v7.d2, v0.d2, v7.d2); dump();
sqrshl(v7.d2, v1.d2, v7.d2); dump();
sqrshl(v7.d2, v2.d2, v7.d2); dump();
sqrshl(v7.d2, v4.d2, v7.d2); dump();
sqrshl(v7.d2, v8.d2, v7.d2); dump();
sqrshl(v7.d2, v16.d2, v7.d2); dump();
sqrshl(v7.d2, v31.d2, v7.d2); dump();
sqrshl(v7.d2, v7.d2, v7.d2); dump();
sqrshl(v7.d2, v7.d2, v0.d2); dump();
sqrshl(v7.d2, v7.d2, v1.d2); dump();
sqrshl(v7.d2, v7.d2, v2.d2); dump();
sqrshl(v7.d2, v7.d2, v4.d2); dump();
sqrshl(v7.d2, v7.d2, v8.d2); dump();
sqrshl(v7.d2, v7.d2, v16.d2); dump();
sqrshl(v7.d2, v7.d2, v31.d2); dump();
sqshl(v7.d2, v7.d2, v7.d2); dump();
sqshl(v0.d2, v7.d2, v7.d2); dump();
sqshl(v1.d2, v7.d2, v7.d2); dump();
sqshl(v2.d2, v7.d2, v7.d2); dump();
sqshl(v4.d2, v7.d2, v7.d2); dump();
sqshl(v8.d2, v7.d2, v7.d2); dump();
sqshl(v16.d2, v7.d2, v7.d2); dump();
sqshl(v31.d2, v7.d2, v7.d2); dump();
sqshl(v7.d2, v7.d2, v7.d2); dump();
sqshl(v7.d2, v0.d2, v7.d2); dump();
sqshl(v7.d2, v1.d2, v7.d2); dump();
sqshl(v7.d2, v2.d2, v7.d2); dump();
sqshl(v7.d2, v4.d2, v7.d2); dump();
sqshl(v7.d2, v8.d2, v7.d2); dump();
sqshl(v7.d2, v16.d2, v7.d2); dump();
sqshl(v7.d2, v31.d2, v7.d2); dump();
sqshl(v7.d2, v7.d2, v7.d2); dump();
sqshl(v7.d2, v7.d2, v0.d2); dump();
sqshl(v7.d2, v7.d2, v1.d2); dump();
sqshl(v7.d2, v7.d2, v2.d2); dump();
sqshl(v7.d2, v7.d2, v4.d2); dump();
sqshl(v7.d2, v7.d2, v8.d2); dump();
sqshl(v7.d2, v7.d2, v16.d2); dump();
sqshl(v7.d2, v7.d2, v31.d2); dump();
sqsub(v7.d2, v7.d2, v7.d2); dump();
sqsub(v0.d2, v7.d2, v7.d2); dump();
sqsub(v1.d2, v7.d2, v7.d2); dump();
sqsub(v2.d2, v7.d2, v7.d2); dump();
sqsub(v4.d2, v7.d2, v7.d2); dump();
sqsub(v8.d2, v7.d2, v7.d2); dump();
sqsub(v16.d2, v7.d2, v7.d2); dump();
sqsub(v31.d2, v7.d2, v7.d2); dump();
sqsub(v7.d2, v7.d2, v7.d2); dump();
sqsub(v7.d2, v0.d2, v7.d2); dump();
sqsub(v7.d2, v1.d2, v7.d2); dump();
sqsub(v7.d2, v2.d2, v7.d2); dump();
sqsub(v7.d2, v4.d2, v7.d2); dump();
sqsub(v7.d2, v8.d2, v7.d2); dump();
sqsub(v7.d2, v16.d2, v7.d2); dump();
sqsub(v7.d2, v31.d2, v7.d2); dump();
sqsub(v7.d2, v7.d2, v7.d2); dump();
sqsub(v7.d2, v7.d2, v0.d2); dump();
sqsub(v7.d2, v7.d2, v1.d2); dump();
sqsub(v7.d2, v7.d2, v2.d2); dump();
sqsub(v7.d2, v7.d2, v4.d2); dump();
sqsub(v7.d2, v7.d2, v8.d2); dump();
sqsub(v7.d2, v7.d2, v16.d2); dump();
sqsub(v7.d2, v7.d2, v31.d2); dump();
uqadd(v7.d2, v7.d2, v7.d2); dump();
uqadd(v0.d2, v7.d2, v7.d2); dump();
uqadd(v1.d2, v7.d2, v7.d2); dump();
uqadd(v2.d2, v7.d2, v7.d2); dump();
uqadd(v4.d2, v7.d2, v7.d2); dump();
uqadd(v8.d2, v7.d2, v7.d2); dump();
uqadd(v16.d2, v7.d2, v7.d2); dump();
uqadd(v31.d2, v7.d2, v7.d2); dump();
uqadd(v7.d2, v7.d2, v7.d2); dump();
uqadd(v7.d2, v0.d2, v7.d2); dump();
uqadd(v7.d2, v1.d2, v7.d2); dump();
uqadd(v7.d2, v2.d2, v7.d2); dump();
uqadd(v7.d2, v4.d2, v7.d2); dump();
uqadd(v7.d2, v8.d2, v7.d2); dump();
uqadd(v7.d2, v16.d2, v7.d2); dump();
uqadd(v7.d2, v31.d2, v7.d2); dump();
uqadd(v7.d2, v7.d2, v7.d2); dump();
uqadd(v7.d2, v7.d2, v0.d2); dump();
uqadd(v7.d2, v7.d2, v1.d2); dump();
uqadd(v7.d2, v7.d2, v2.d2); dump();
uqadd(v7.d2, v7.d2, v4.d2); dump();
uqadd(v7.d2, v7.d2, v8.d2); dump();
uqadd(v7.d2, v7.d2, v16.d2); dump();
uqadd(v7.d2, v7.d2, v31.d2); dump();
uqrshl(v7.d2, v7.d2, v7.d2); dump();
uqrshl(v0.d2, v7.d2, v7.d2); dump();
uqrshl(v1.d2, v7.d2, v7.d2); dump();
uqrshl(v2.d2, v7.d2, v7.d2); dump();
uqrshl(v4.d2, v7.d2, v7.d2); dump();
uqrshl(v8.d2, v7.d2, v7.d2); dump();
uqrshl(v16.d2, v7.d2, v7.d2); dump();
uqrshl(v31.d2, v7.d2, v7.d2); dump();
uqrshl(v7.d2, v7.d2, v7.d2); dump();
uqrshl(v7.d2, v0.d2, v7.d2); dump();
uqrshl(v7.d2, v1.d2, v7.d2); dump();
uqrshl(v7.d2, v2.d2, v7.d2); dump();
uqrshl(v7.d2, v4.d2, v7.d2); dump();
uqrshl(v7.d2, v8.d2, v7.d2); dump();
uqrshl(v7.d2, v16.d2, v7.d2); dump();
uqrshl(v7.d2, v31.d2, v7.d2); dump();
uqrshl(v7.d2, v7.d2, v7.d2); dump();
uqrshl(v7.d2, v7.d2, v0.d2); dump();
uqrshl(v7.d2, v7.d2, v1.d2); dump();
uqrshl(v7.d2, v7.d2, v2.d2); dump();
uqrshl(v7.d2, v7.d2, v4.d2); dump();
uqrshl(v7.d2, v7.d2, v8.d2); dump();
uqrshl(v7.d2, v7.d2, v16.d2); dump();
uqrshl(v7.d2, v7.d2, v31.d2); dump();
uqshl(v7.d2, v7.d2, v7.d2); dump();
uqshl(v0.d2, v7.d2, v7.d2); dump();
uqshl(v1.d2, v7.d2, v7.d2); dump();
uqshl(v2.d2, v7.d2, v7.d2); dump();
uqshl(v4.d2, v7.d2, v7.d2); dump();
uqshl(v8.d2, v7.d2, v7.d2); dump();
uqshl(v16.d2, v7.d2, v7.d2); dump();
uqshl(v31.d2, v7.d2, v7.d2); dump();
uqshl(v7.d2, v7.d2, v7.d2); dump();
uqshl(v7.d2, v0.d2, v7.d2); dump();
uqshl(v7.d2, v1.d2, v7.d2); dump();
uqshl(v7.d2, v2.d2, v7.d2); dump();
uqshl(v7.d2, v4.d2, v7.d2); dump();
uqshl(v7.d2, v8.d2, v7.d2); dump();
uqshl(v7.d2, v16.d2, v7.d2); dump();
uqshl(v7.d2, v31.d2, v7.d2); dump();
uqshl(v7.d2, v7.d2, v7.d2); dump();
uqshl(v7.d2, v7.d2, v0.d2); dump();
uqshl(v7.d2, v7.d2, v1.d2); dump();
uqshl(v7.d2, v7.d2, v2.d2); dump();
uqshl(v7.d2, v7.d2, v4.d2); dump();
uqshl(v7.d2, v7.d2, v8.d2); dump();
uqshl(v7.d2, v7.d2, v16.d2); dump();
uqshl(v7.d2, v7.d2, v31.d2); dump();
uqsub(v7.d2, v7.d2, v7.d2); dump();
uqsub(v0.d2, v7.d2, v7.d2); dump();
uqsub(v1.d2, v7.d2, v7.d2); dump();
uqsub(v2.d2, v7.d2, v7.d2); dump();
uqsub(v4.d2, v7.d2, v7.d2); dump();
uqsub(v8.d2, v7.d2, v7.d2); dump();
uqsub(v16.d2, v7.d2, v7.d2); dump();
uqsub(v31.d2, v7.d2, v7.d2); dump();
uqsub(v7.d2, v7.d2, v7.d2); dump();
uqsub(v7.d2, v0.d2, v7.d2); dump();
uqsub(v7.d2, v1.d2, v7.d2); dump();
uqsub(v7.d2, v2.d2, v7.d2); dump();
uqsub(v7.d2, v4.d2, v7.d2); dump();
uqsub(v7.d2, v8.d2, v7.d2); dump();
uqsub(v7.d2, v16.d2, v7.d2); dump();
uqsub(v7.d2, v31.d2, v7.d2); dump();
uqsub(v7.d2, v7.d2, v7.d2); dump();
uqsub(v7.d2, v7.d2, v0.d2); dump();
uqsub(v7.d2, v7.d2, v1.d2); dump();
uqsub(v7.d2, v7.d2, v2.d2); dump();
uqsub(v7.d2, v7.d2, v4.d2); dump();
uqsub(v7.d2, v7.d2, v8.d2); dump();
uqsub(v7.d2, v7.d2, v16.d2); dump();
uqsub(v7.d2, v7.d2, v31.d2); dump();
//DataProcSimd_Arithmetic13:0
sqdmulh(h7, h7, h7); dump();
sqdmulh(h0, h7, h7); dump();
sqdmulh(h1, h7, h7); dump();
sqdmulh(h2, h7, h7); dump();
sqdmulh(h4, h7, h7); dump();
sqdmulh(h8, h7, h7); dump();
sqdmulh(h16, h7, h7); dump();
sqdmulh(h31, h7, h7); dump();
sqdmulh(h7, h7, h7); dump();
sqdmulh(h7, h0, h7); dump();
sqdmulh(h7, h1, h7); dump();
sqdmulh(h7, h2, h7); dump();
sqdmulh(h7, h4, h7); dump();
sqdmulh(h7, h8, h7); dump();
sqdmulh(h7, h16, h7); dump();
sqdmulh(h7, h31, h7); dump();
sqdmulh(h7, h7, h7); dump();
sqdmulh(h7, h7, h0); dump();
sqdmulh(h7, h7, h1); dump();
sqdmulh(h7, h7, h2); dump();
sqdmulh(h7, h7, h4); dump();
sqdmulh(h7, h7, h8); dump();
sqdmulh(h7, h7, h16); dump();
sqdmulh(h7, h7, h31); dump();
sqrdmlah(h7, h7, h7); dump();
sqrdmlah(h0, h7, h7); dump();
sqrdmlah(h1, h7, h7); dump();
sqrdmlah(h2, h7, h7); dump();
sqrdmlah(h4, h7, h7); dump();
sqrdmlah(h8, h7, h7); dump();
sqrdmlah(h16, h7, h7); dump();
sqrdmlah(h31, h7, h7); dump();
sqrdmlah(h7, h7, h7); dump();
sqrdmlah(h7, h0, h7); dump();
sqrdmlah(h7, h1, h7); dump();
sqrdmlah(h7, h2, h7); dump();
sqrdmlah(h7, h4, h7); dump();
sqrdmlah(h7, h8, h7); dump();
sqrdmlah(h7, h16, h7); dump();
sqrdmlah(h7, h31, h7); dump();
sqrdmlah(h7, h7, h7); dump();
sqrdmlah(h7, h7, h0); dump();
sqrdmlah(h7, h7, h1); dump();
sqrdmlah(h7, h7, h2); dump();
sqrdmlah(h7, h7, h4); dump();
sqrdmlah(h7, h7, h8); dump();
sqrdmlah(h7, h7, h16); dump();
sqrdmlah(h7, h7, h31); dump();
sqrdmlsh(h7, h7, h7); dump();
sqrdmlsh(h0, h7, h7); dump();
sqrdmlsh(h1, h7, h7); dump();
sqrdmlsh(h2, h7, h7); dump();
sqrdmlsh(h4, h7, h7); dump();
sqrdmlsh(h8, h7, h7); dump();
sqrdmlsh(h16, h7, h7); dump();
sqrdmlsh(h31, h7, h7); dump();
sqrdmlsh(h7, h7, h7); dump();
sqrdmlsh(h7, h0, h7); dump();
sqrdmlsh(h7, h1, h7); dump();
sqrdmlsh(h7, h2, h7); dump();
sqrdmlsh(h7, h4, h7); dump();
sqrdmlsh(h7, h8, h7); dump();
sqrdmlsh(h7, h16, h7); dump();
sqrdmlsh(h7, h31, h7); dump();
sqrdmlsh(h7, h7, h7); dump();
sqrdmlsh(h7, h7, h0); dump();
sqrdmlsh(h7, h7, h1); dump();
sqrdmlsh(h7, h7, h2); dump();
sqrdmlsh(h7, h7, h4); dump();
sqrdmlsh(h7, h7, h8); dump();
sqrdmlsh(h7, h7, h16); dump();
sqrdmlsh(h7, h7, h31); dump();
sqrdmulh(h7, h7, h7); dump();
sqrdmulh(h0, h7, h7); dump();
sqrdmulh(h1, h7, h7); dump();
sqrdmulh(h2, h7, h7); dump();
sqrdmulh(h4, h7, h7); dump();
sqrdmulh(h8, h7, h7); dump();
sqrdmulh(h16, h7, h7); dump();
sqrdmulh(h31, h7, h7); dump();
sqrdmulh(h7, h7, h7); dump();
sqrdmulh(h7, h0, h7); dump();
sqrdmulh(h7, h1, h7); dump();
sqrdmulh(h7, h2, h7); dump();
sqrdmulh(h7, h4, h7); dump();
sqrdmulh(h7, h8, h7); dump();
sqrdmulh(h7, h16, h7); dump();
sqrdmulh(h7, h31, h7); dump();
sqrdmulh(h7, h7, h7); dump();
sqrdmulh(h7, h7, h0); dump();
sqrdmulh(h7, h7, h1); dump();
sqrdmulh(h7, h7, h2); dump();
sqrdmulh(h7, h7, h4); dump();
sqrdmulh(h7, h7, h8); dump();
sqrdmulh(h7, h7, h16); dump();
sqrdmulh(h7, h7, h31); dump();
//DataProcSimd_Arithmetic13:1
sqdmulh(s7, s7, s7); dump();
sqdmulh(s0, s7, s7); dump();
sqdmulh(s1, s7, s7); dump();
sqdmulh(s2, s7, s7); dump();
sqdmulh(s4, s7, s7); dump();
sqdmulh(s8, s7, s7); dump();
sqdmulh(s16, s7, s7); dump();
sqdmulh(s31, s7, s7); dump();
sqdmulh(s7, s7, s7); dump();
sqdmulh(s7, s0, s7); dump();
sqdmulh(s7, s1, s7); dump();
sqdmulh(s7, s2, s7); dump();
sqdmulh(s7, s4, s7); dump();
sqdmulh(s7, s8, s7); dump();
sqdmulh(s7, s16, s7); dump();
sqdmulh(s7, s31, s7); dump();
sqdmulh(s7, s7, s7); dump();
sqdmulh(s7, s7, s0); dump();
sqdmulh(s7, s7, s1); dump();
sqdmulh(s7, s7, s2); dump();
sqdmulh(s7, s7, s4); dump();
sqdmulh(s7, s7, s8); dump();
sqdmulh(s7, s7, s16); dump();
sqdmulh(s7, s7, s31); dump();
sqrdmlah(s7, s7, s7); dump();
sqrdmlah(s0, s7, s7); dump();
sqrdmlah(s1, s7, s7); dump();
sqrdmlah(s2, s7, s7); dump();
sqrdmlah(s4, s7, s7); dump();
sqrdmlah(s8, s7, s7); dump();
sqrdmlah(s16, s7, s7); dump();
sqrdmlah(s31, s7, s7); dump();
sqrdmlah(s7, s7, s7); dump();
sqrdmlah(s7, s0, s7); dump();
sqrdmlah(s7, s1, s7); dump();
sqrdmlah(s7, s2, s7); dump();
sqrdmlah(s7, s4, s7); dump();
sqrdmlah(s7, s8, s7); dump();
sqrdmlah(s7, s16, s7); dump();
sqrdmlah(s7, s31, s7); dump();
sqrdmlah(s7, s7, s7); dump();
sqrdmlah(s7, s7, s0); dump();
sqrdmlah(s7, s7, s1); dump();
sqrdmlah(s7, s7, s2); dump();
sqrdmlah(s7, s7, s4); dump();
sqrdmlah(s7, s7, s8); dump();
sqrdmlah(s7, s7, s16); dump();
sqrdmlah(s7, s7, s31); dump();
sqrdmlsh(s7, s7, s7); dump();
sqrdmlsh(s0, s7, s7); dump();
sqrdmlsh(s1, s7, s7); dump();
sqrdmlsh(s2, s7, s7); dump();
sqrdmlsh(s4, s7, s7); dump();
sqrdmlsh(s8, s7, s7); dump();
sqrdmlsh(s16, s7, s7); dump();
sqrdmlsh(s31, s7, s7); dump();
sqrdmlsh(s7, s7, s7); dump();
sqrdmlsh(s7, s0, s7); dump();
sqrdmlsh(s7, s1, s7); dump();
sqrdmlsh(s7, s2, s7); dump();
sqrdmlsh(s7, s4, s7); dump();
sqrdmlsh(s7, s8, s7); dump();
sqrdmlsh(s7, s16, s7); dump();
sqrdmlsh(s7, s31, s7); dump();
sqrdmlsh(s7, s7, s7); dump();
sqrdmlsh(s7, s7, s0); dump();
sqrdmlsh(s7, s7, s1); dump();
sqrdmlsh(s7, s7, s2); dump();
sqrdmlsh(s7, s7, s4); dump();
sqrdmlsh(s7, s7, s8); dump();
sqrdmlsh(s7, s7, s16); dump();
sqrdmlsh(s7, s7, s31); dump();
sqrdmulh(s7, s7, s7); dump();
sqrdmulh(s0, s7, s7); dump();
sqrdmulh(s1, s7, s7); dump();
sqrdmulh(s2, s7, s7); dump();
sqrdmulh(s4, s7, s7); dump();
sqrdmulh(s8, s7, s7); dump();
sqrdmulh(s16, s7, s7); dump();
sqrdmulh(s31, s7, s7); dump();
sqrdmulh(s7, s7, s7); dump();
sqrdmulh(s7, s0, s7); dump();
sqrdmulh(s7, s1, s7); dump();
sqrdmulh(s7, s2, s7); dump();
sqrdmulh(s7, s4, s7); dump();
sqrdmulh(s7, s8, s7); dump();
sqrdmulh(s7, s16, s7); dump();
sqrdmulh(s7, s31, s7); dump();
sqrdmulh(s7, s7, s7); dump();
sqrdmulh(s7, s7, s0); dump();
sqrdmulh(s7, s7, s1); dump();
sqrdmulh(s7, s7, s2); dump();
sqrdmulh(s7, s7, s4); dump();
sqrdmulh(s7, s7, s8); dump();
sqrdmulh(s7, s7, s16); dump();
sqrdmulh(s7, s7, s31); dump();
//DataProcSimd_Arithmetic13:2
sqdmulh(v7.h4, v7.h4, v7.h4); dump();
sqdmulh(v0.h4, v7.h4, v7.h4); dump();
sqdmulh(v1.h4, v7.h4, v7.h4); dump();
sqdmulh(v2.h4, v7.h4, v7.h4); dump();
sqdmulh(v4.h4, v7.h4, v7.h4); dump();
sqdmulh(v8.h4, v7.h4, v7.h4); dump();
sqdmulh(v16.h4, v7.h4, v7.h4); dump();
sqdmulh(v31.h4, v7.h4, v7.h4); dump();
sqdmulh(v7.h4, v7.h4, v7.h4); dump();
sqdmulh(v7.h4, v0.h4, v7.h4); dump();
sqdmulh(v7.h4, v1.h4, v7.h4); dump();
sqdmulh(v7.h4, v2.h4, v7.h4); dump();
sqdmulh(v7.h4, v4.h4, v7.h4); dump();
sqdmulh(v7.h4, v8.h4, v7.h4); dump();
sqdmulh(v7.h4, v16.h4, v7.h4); dump();
sqdmulh(v7.h4, v31.h4, v7.h4); dump();
sqdmulh(v7.h4, v7.h4, v7.h4); dump();
sqdmulh(v7.h4, v7.h4, v0.h4); dump();
sqdmulh(v7.h4, v7.h4, v1.h4); dump();
sqdmulh(v7.h4, v7.h4, v2.h4); dump();
sqdmulh(v7.h4, v7.h4, v4.h4); dump();
sqdmulh(v7.h4, v7.h4, v8.h4); dump();
sqdmulh(v7.h4, v7.h4, v16.h4); dump();
sqdmulh(v7.h4, v7.h4, v31.h4); dump();
sqrdmlah(v7.h4, v7.h4, v7.h4); dump();
sqrdmlah(v0.h4, v7.h4, v7.h4); dump();
sqrdmlah(v1.h4, v7.h4, v7.h4); dump();
sqrdmlah(v2.h4, v7.h4, v7.h4); dump();
sqrdmlah(v4.h4, v7.h4, v7.h4); dump();
sqrdmlah(v8.h4, v7.h4, v7.h4); dump();
sqrdmlah(v16.h4, v7.h4, v7.h4); dump();
sqrdmlah(v31.h4, v7.h4, v7.h4); dump();
sqrdmlah(v7.h4, v7.h4, v7.h4); dump();
sqrdmlah(v7.h4, v0.h4, v7.h4); dump();
sqrdmlah(v7.h4, v1.h4, v7.h4); dump();
sqrdmlah(v7.h4, v2.h4, v7.h4); dump();
sqrdmlah(v7.h4, v4.h4, v7.h4); dump();
sqrdmlah(v7.h4, v8.h4, v7.h4); dump();
sqrdmlah(v7.h4, v16.h4, v7.h4); dump();
sqrdmlah(v7.h4, v31.h4, v7.h4); dump();
sqrdmlah(v7.h4, v7.h4, v7.h4); dump();
sqrdmlah(v7.h4, v7.h4, v0.h4); dump();
sqrdmlah(v7.h4, v7.h4, v1.h4); dump();
sqrdmlah(v7.h4, v7.h4, v2.h4); dump();
sqrdmlah(v7.h4, v7.h4, v4.h4); dump();
sqrdmlah(v7.h4, v7.h4, v8.h4); dump();
sqrdmlah(v7.h4, v7.h4, v16.h4); dump();
sqrdmlah(v7.h4, v7.h4, v31.h4); dump();
sqrdmlsh(v7.h4, v7.h4, v7.h4); dump();
sqrdmlsh(v0.h4, v7.h4, v7.h4); dump();
sqrdmlsh(v1.h4, v7.h4, v7.h4); dump();
sqrdmlsh(v2.h4, v7.h4, v7.h4); dump();
sqrdmlsh(v4.h4, v7.h4, v7.h4); dump();
sqrdmlsh(v8.h4, v7.h4, v7.h4); dump();
sqrdmlsh(v16.h4, v7.h4, v7.h4); dump();
sqrdmlsh(v31.h4, v7.h4, v7.h4); dump();
sqrdmlsh(v7.h4, v7.h4, v7.h4); dump();
sqrdmlsh(v7.h4, v0.h4, v7.h4); dump();
sqrdmlsh(v7.h4, v1.h4, v7.h4); dump();
sqrdmlsh(v7.h4, v2.h4, v7.h4); dump();
sqrdmlsh(v7.h4, v4.h4, v7.h4); dump();
sqrdmlsh(v7.h4, v8.h4, v7.h4); dump();
sqrdmlsh(v7.h4, v16.h4, v7.h4); dump();
sqrdmlsh(v7.h4, v31.h4, v7.h4); dump();
sqrdmlsh(v7.h4, v7.h4, v7.h4); dump();
sqrdmlsh(v7.h4, v7.h4, v0.h4); dump();
sqrdmlsh(v7.h4, v7.h4, v1.h4); dump();
sqrdmlsh(v7.h4, v7.h4, v2.h4); dump();
sqrdmlsh(v7.h4, v7.h4, v4.h4); dump();
sqrdmlsh(v7.h4, v7.h4, v8.h4); dump();
sqrdmlsh(v7.h4, v7.h4, v16.h4); dump();
sqrdmlsh(v7.h4, v7.h4, v31.h4); dump();
sqrdmulh(v7.h4, v7.h4, v7.h4); dump();
sqrdmulh(v0.h4, v7.h4, v7.h4); dump();
sqrdmulh(v1.h4, v7.h4, v7.h4); dump();
sqrdmulh(v2.h4, v7.h4, v7.h4); dump();
sqrdmulh(v4.h4, v7.h4, v7.h4); dump();
sqrdmulh(v8.h4, v7.h4, v7.h4); dump();
sqrdmulh(v16.h4, v7.h4, v7.h4); dump();
sqrdmulh(v31.h4, v7.h4, v7.h4); dump();
sqrdmulh(v7.h4, v7.h4, v7.h4); dump();
sqrdmulh(v7.h4, v0.h4, v7.h4); dump();
sqrdmulh(v7.h4, v1.h4, v7.h4); dump();
sqrdmulh(v7.h4, v2.h4, v7.h4); dump();
sqrdmulh(v7.h4, v4.h4, v7.h4); dump();
sqrdmulh(v7.h4, v8.h4, v7.h4); dump();
sqrdmulh(v7.h4, v16.h4, v7.h4); dump();
sqrdmulh(v7.h4, v31.h4, v7.h4); dump();
sqrdmulh(v7.h4, v7.h4, v7.h4); dump();
sqrdmulh(v7.h4, v7.h4, v0.h4); dump();
sqrdmulh(v7.h4, v7.h4, v1.h4); dump();
sqrdmulh(v7.h4, v7.h4, v2.h4); dump();
sqrdmulh(v7.h4, v7.h4, v4.h4); dump();
sqrdmulh(v7.h4, v7.h4, v8.h4); dump();
sqrdmulh(v7.h4, v7.h4, v16.h4); dump();
sqrdmulh(v7.h4, v7.h4, v31.h4); dump();
//DataProcSimd_Arithmetic13:3
sqdmulh(v7.h8, v7.h8, v7.h8); dump();
sqdmulh(v0.h8, v7.h8, v7.h8); dump();
sqdmulh(v1.h8, v7.h8, v7.h8); dump();
sqdmulh(v2.h8, v7.h8, v7.h8); dump();
sqdmulh(v4.h8, v7.h8, v7.h8); dump();
sqdmulh(v8.h8, v7.h8, v7.h8); dump();
sqdmulh(v16.h8, v7.h8, v7.h8); dump();
sqdmulh(v31.h8, v7.h8, v7.h8); dump();
sqdmulh(v7.h8, v7.h8, v7.h8); dump();
sqdmulh(v7.h8, v0.h8, v7.h8); dump();
sqdmulh(v7.h8, v1.h8, v7.h8); dump();
sqdmulh(v7.h8, v2.h8, v7.h8); dump();
sqdmulh(v7.h8, v4.h8, v7.h8); dump();
sqdmulh(v7.h8, v8.h8, v7.h8); dump();
sqdmulh(v7.h8, v16.h8, v7.h8); dump();
sqdmulh(v7.h8, v31.h8, v7.h8); dump();
sqdmulh(v7.h8, v7.h8, v7.h8); dump();
sqdmulh(v7.h8, v7.h8, v0.h8); dump();
sqdmulh(v7.h8, v7.h8, v1.h8); dump();
sqdmulh(v7.h8, v7.h8, v2.h8); dump();
sqdmulh(v7.h8, v7.h8, v4.h8); dump();
sqdmulh(v7.h8, v7.h8, v8.h8); dump();
sqdmulh(v7.h8, v7.h8, v16.h8); dump();
sqdmulh(v7.h8, v7.h8, v31.h8); dump();
sqrdmlah(v7.h8, v7.h8, v7.h8); dump();
sqrdmlah(v0.h8, v7.h8, v7.h8); dump();
sqrdmlah(v1.h8, v7.h8, v7.h8); dump();
sqrdmlah(v2.h8, v7.h8, v7.h8); dump();
sqrdmlah(v4.h8, v7.h8, v7.h8); dump();
sqrdmlah(v8.h8, v7.h8, v7.h8); dump();
sqrdmlah(v16.h8, v7.h8, v7.h8); dump();
sqrdmlah(v31.h8, v7.h8, v7.h8); dump();
sqrdmlah(v7.h8, v7.h8, v7.h8); dump();
sqrdmlah(v7.h8, v0.h8, v7.h8); dump();
sqrdmlah(v7.h8, v1.h8, v7.h8); dump();
sqrdmlah(v7.h8, v2.h8, v7.h8); dump();
sqrdmlah(v7.h8, v4.h8, v7.h8); dump();
sqrdmlah(v7.h8, v8.h8, v7.h8); dump();
sqrdmlah(v7.h8, v16.h8, v7.h8); dump();
sqrdmlah(v7.h8, v31.h8, v7.h8); dump();
sqrdmlah(v7.h8, v7.h8, v7.h8); dump();
sqrdmlah(v7.h8, v7.h8, v0.h8); dump();
sqrdmlah(v7.h8, v7.h8, v1.h8); dump();
sqrdmlah(v7.h8, v7.h8, v2.h8); dump();
sqrdmlah(v7.h8, v7.h8, v4.h8); dump();
sqrdmlah(v7.h8, v7.h8, v8.h8); dump();
sqrdmlah(v7.h8, v7.h8, v16.h8); dump();
sqrdmlah(v7.h8, v7.h8, v31.h8); dump();
sqrdmlsh(v7.h8, v7.h8, v7.h8); dump();
sqrdmlsh(v0.h8, v7.h8, v7.h8); dump();
sqrdmlsh(v1.h8, v7.h8, v7.h8); dump();
sqrdmlsh(v2.h8, v7.h8, v7.h8); dump();
sqrdmlsh(v4.h8, v7.h8, v7.h8); dump();
sqrdmlsh(v8.h8, v7.h8, v7.h8); dump();
sqrdmlsh(v16.h8, v7.h8, v7.h8); dump();
sqrdmlsh(v31.h8, v7.h8, v7.h8); dump();
sqrdmlsh(v7.h8, v7.h8, v7.h8); dump();
sqrdmlsh(v7.h8, v0.h8, v7.h8); dump();
sqrdmlsh(v7.h8, v1.h8, v7.h8); dump();
sqrdmlsh(v7.h8, v2.h8, v7.h8); dump();
sqrdmlsh(v7.h8, v4.h8, v7.h8); dump();
sqrdmlsh(v7.h8, v8.h8, v7.h8); dump();
sqrdmlsh(v7.h8, v16.h8, v7.h8); dump();
sqrdmlsh(v7.h8, v31.h8, v7.h8); dump();
sqrdmlsh(v7.h8, v7.h8, v7.h8); dump();
sqrdmlsh(v7.h8, v7.h8, v0.h8); dump();
sqrdmlsh(v7.h8, v7.h8, v1.h8); dump();
sqrdmlsh(v7.h8, v7.h8, v2.h8); dump();
sqrdmlsh(v7.h8, v7.h8, v4.h8); dump();
sqrdmlsh(v7.h8, v7.h8, v8.h8); dump();
sqrdmlsh(v7.h8, v7.h8, v16.h8); dump();
sqrdmlsh(v7.h8, v7.h8, v31.h8); dump();
sqrdmulh(v7.h8, v7.h8, v7.h8); dump();
sqrdmulh(v0.h8, v7.h8, v7.h8); dump();
sqrdmulh(v1.h8, v7.h8, v7.h8); dump();
sqrdmulh(v2.h8, v7.h8, v7.h8); dump();
sqrdmulh(v4.h8, v7.h8, v7.h8); dump();
sqrdmulh(v8.h8, v7.h8, v7.h8); dump();
sqrdmulh(v16.h8, v7.h8, v7.h8); dump();
sqrdmulh(v31.h8, v7.h8, v7.h8); dump();
sqrdmulh(v7.h8, v7.h8, v7.h8); dump();
sqrdmulh(v7.h8, v0.h8, v7.h8); dump();
sqrdmulh(v7.h8, v1.h8, v7.h8); dump();
sqrdmulh(v7.h8, v2.h8, v7.h8); dump();
sqrdmulh(v7.h8, v4.h8, v7.h8); dump();
sqrdmulh(v7.h8, v8.h8, v7.h8); dump();
sqrdmulh(v7.h8, v16.h8, v7.h8); dump();
sqrdmulh(v7.h8, v31.h8, v7.h8); dump();
sqrdmulh(v7.h8, v7.h8, v7.h8); dump();
sqrdmulh(v7.h8, v7.h8, v0.h8); dump();
sqrdmulh(v7.h8, v7.h8, v1.h8); dump();
sqrdmulh(v7.h8, v7.h8, v2.h8); dump();
sqrdmulh(v7.h8, v7.h8, v4.h8); dump();
sqrdmulh(v7.h8, v7.h8, v8.h8); dump();
sqrdmulh(v7.h8, v7.h8, v16.h8); dump();
sqrdmulh(v7.h8, v7.h8, v31.h8); dump();
//DataProcSimd_Arithmetic13:4
sqdmulh(v7.s2, v7.s2, v7.s2); dump();
sqdmulh(v0.s2, v7.s2, v7.s2); dump();
sqdmulh(v1.s2, v7.s2, v7.s2); dump();
sqdmulh(v2.s2, v7.s2, v7.s2); dump();
sqdmulh(v4.s2, v7.s2, v7.s2); dump();
sqdmulh(v8.s2, v7.s2, v7.s2); dump();
sqdmulh(v16.s2, v7.s2, v7.s2); dump();
sqdmulh(v31.s2, v7.s2, v7.s2); dump();
sqdmulh(v7.s2, v7.s2, v7.s2); dump();
sqdmulh(v7.s2, v0.s2, v7.s2); dump();
sqdmulh(v7.s2, v1.s2, v7.s2); dump();
sqdmulh(v7.s2, v2.s2, v7.s2); dump();
sqdmulh(v7.s2, v4.s2, v7.s2); dump();
sqdmulh(v7.s2, v8.s2, v7.s2); dump();
sqdmulh(v7.s2, v16.s2, v7.s2); dump();
sqdmulh(v7.s2, v31.s2, v7.s2); dump();
sqdmulh(v7.s2, v7.s2, v7.s2); dump();
sqdmulh(v7.s2, v7.s2, v0.s2); dump();
sqdmulh(v7.s2, v7.s2, v1.s2); dump();
sqdmulh(v7.s2, v7.s2, v2.s2); dump();
sqdmulh(v7.s2, v7.s2, v4.s2); dump();
sqdmulh(v7.s2, v7.s2, v8.s2); dump();
sqdmulh(v7.s2, v7.s2, v16.s2); dump();
sqdmulh(v7.s2, v7.s2, v31.s2); dump();
sqrdmlah(v7.s2, v7.s2, v7.s2); dump();
sqrdmlah(v0.s2, v7.s2, v7.s2); dump();
sqrdmlah(v1.s2, v7.s2, v7.s2); dump();
sqrdmlah(v2.s2, v7.s2, v7.s2); dump();
sqrdmlah(v4.s2, v7.s2, v7.s2); dump();
sqrdmlah(v8.s2, v7.s2, v7.s2); dump();
sqrdmlah(v16.s2, v7.s2, v7.s2); dump();
sqrdmlah(v31.s2, v7.s2, v7.s2); dump();
sqrdmlah(v7.s2, v7.s2, v7.s2); dump();
sqrdmlah(v7.s2, v0.s2, v7.s2); dump();
sqrdmlah(v7.s2, v1.s2, v7.s2); dump();
sqrdmlah(v7.s2, v2.s2, v7.s2); dump();
sqrdmlah(v7.s2, v4.s2, v7.s2); dump();
sqrdmlah(v7.s2, v8.s2, v7.s2); dump();
sqrdmlah(v7.s2, v16.s2, v7.s2); dump();
sqrdmlah(v7.s2, v31.s2, v7.s2); dump();
sqrdmlah(v7.s2, v7.s2, v7.s2); dump();
sqrdmlah(v7.s2, v7.s2, v0.s2); dump();
sqrdmlah(v7.s2, v7.s2, v1.s2); dump();
sqrdmlah(v7.s2, v7.s2, v2.s2); dump();
sqrdmlah(v7.s2, v7.s2, v4.s2); dump();
sqrdmlah(v7.s2, v7.s2, v8.s2); dump();
sqrdmlah(v7.s2, v7.s2, v16.s2); dump();
sqrdmlah(v7.s2, v7.s2, v31.s2); dump();
sqrdmlsh(v7.s2, v7.s2, v7.s2); dump();
sqrdmlsh(v0.s2, v7.s2, v7.s2); dump();
sqrdmlsh(v1.s2, v7.s2, v7.s2); dump();
sqrdmlsh(v2.s2, v7.s2, v7.s2); dump();
sqrdmlsh(v4.s2, v7.s2, v7.s2); dump();
sqrdmlsh(v8.s2, v7.s2, v7.s2); dump();
sqrdmlsh(v16.s2, v7.s2, v7.s2); dump();
sqrdmlsh(v31.s2, v7.s2, v7.s2); dump();
sqrdmlsh(v7.s2, v7.s2, v7.s2); dump();
sqrdmlsh(v7.s2, v0.s2, v7.s2); dump();
sqrdmlsh(v7.s2, v1.s2, v7.s2); dump();
sqrdmlsh(v7.s2, v2.s2, v7.s2); dump();
sqrdmlsh(v7.s2, v4.s2, v7.s2); dump();
sqrdmlsh(v7.s2, v8.s2, v7.s2); dump();
sqrdmlsh(v7.s2, v16.s2, v7.s2); dump();
sqrdmlsh(v7.s2, v31.s2, v7.s2); dump();
sqrdmlsh(v7.s2, v7.s2, v7.s2); dump();
sqrdmlsh(v7.s2, v7.s2, v0.s2); dump();
sqrdmlsh(v7.s2, v7.s2, v1.s2); dump();
sqrdmlsh(v7.s2, v7.s2, v2.s2); dump();
sqrdmlsh(v7.s2, v7.s2, v4.s2); dump();
sqrdmlsh(v7.s2, v7.s2, v8.s2); dump();
sqrdmlsh(v7.s2, v7.s2, v16.s2); dump();
sqrdmlsh(v7.s2, v7.s2, v31.s2); dump();
sqrdmulh(v7.s2, v7.s2, v7.s2); dump();
sqrdmulh(v0.s2, v7.s2, v7.s2); dump();
sqrdmulh(v1.s2, v7.s2, v7.s2); dump();
sqrdmulh(v2.s2, v7.s2, v7.s2); dump();
sqrdmulh(v4.s2, v7.s2, v7.s2); dump();
sqrdmulh(v8.s2, v7.s2, v7.s2); dump();
sqrdmulh(v16.s2, v7.s2, v7.s2); dump();
sqrdmulh(v31.s2, v7.s2, v7.s2); dump();
sqrdmulh(v7.s2, v7.s2, v7.s2); dump();
sqrdmulh(v7.s2, v0.s2, v7.s2); dump();
sqrdmulh(v7.s2, v1.s2, v7.s2); dump();
sqrdmulh(v7.s2, v2.s2, v7.s2); dump();
sqrdmulh(v7.s2, v4.s2, v7.s2); dump();
sqrdmulh(v7.s2, v8.s2, v7.s2); dump();
sqrdmulh(v7.s2, v16.s2, v7.s2); dump();
sqrdmulh(v7.s2, v31.s2, v7.s2); dump();
sqrdmulh(v7.s2, v7.s2, v7.s2); dump();
sqrdmulh(v7.s2, v7.s2, v0.s2); dump();
sqrdmulh(v7.s2, v7.s2, v1.s2); dump();
sqrdmulh(v7.s2, v7.s2, v2.s2); dump();
sqrdmulh(v7.s2, v7.s2, v4.s2); dump();
sqrdmulh(v7.s2, v7.s2, v8.s2); dump();
sqrdmulh(v7.s2, v7.s2, v16.s2); dump();
sqrdmulh(v7.s2, v7.s2, v31.s2); dump();
//DataProcSimd_Arithmetic13:5
sqdmulh(v7.s4, v7.s4, v7.s4); dump();
sqdmulh(v0.s4, v7.s4, v7.s4); dump();
sqdmulh(v1.s4, v7.s4, v7.s4); dump();
sqdmulh(v2.s4, v7.s4, v7.s4); dump();
sqdmulh(v4.s4, v7.s4, v7.s4); dump();
sqdmulh(v8.s4, v7.s4, v7.s4); dump();
sqdmulh(v16.s4, v7.s4, v7.s4); dump();
sqdmulh(v31.s4, v7.s4, v7.s4); dump();
sqdmulh(v7.s4, v7.s4, v7.s4); dump();
sqdmulh(v7.s4, v0.s4, v7.s4); dump();
sqdmulh(v7.s4, v1.s4, v7.s4); dump();
sqdmulh(v7.s4, v2.s4, v7.s4); dump();
sqdmulh(v7.s4, v4.s4, v7.s4); dump();
sqdmulh(v7.s4, v8.s4, v7.s4); dump();
sqdmulh(v7.s4, v16.s4, v7.s4); dump();
sqdmulh(v7.s4, v31.s4, v7.s4); dump();
sqdmulh(v7.s4, v7.s4, v7.s4); dump();
sqdmulh(v7.s4, v7.s4, v0.s4); dump();
sqdmulh(v7.s4, v7.s4, v1.s4); dump();
sqdmulh(v7.s4, v7.s4, v2.s4); dump();
sqdmulh(v7.s4, v7.s4, v4.s4); dump();
sqdmulh(v7.s4, v7.s4, v8.s4); dump();
sqdmulh(v7.s4, v7.s4, v16.s4); dump();
sqdmulh(v7.s4, v7.s4, v31.s4); dump();
sqrdmlah(v7.s4, v7.s4, v7.s4); dump();
sqrdmlah(v0.s4, v7.s4, v7.s4); dump();
sqrdmlah(v1.s4, v7.s4, v7.s4); dump();
sqrdmlah(v2.s4, v7.s4, v7.s4); dump();
sqrdmlah(v4.s4, v7.s4, v7.s4); dump();
sqrdmlah(v8.s4, v7.s4, v7.s4); dump();
sqrdmlah(v16.s4, v7.s4, v7.s4); dump();
sqrdmlah(v31.s4, v7.s4, v7.s4); dump();
sqrdmlah(v7.s4, v7.s4, v7.s4); dump();
sqrdmlah(v7.s4, v0.s4, v7.s4); dump();
sqrdmlah(v7.s4, v1.s4, v7.s4); dump();
sqrdmlah(v7.s4, v2.s4, v7.s4); dump();
sqrdmlah(v7.s4, v4.s4, v7.s4); dump();
sqrdmlah(v7.s4, v8.s4, v7.s4); dump();
sqrdmlah(v7.s4, v16.s4, v7.s4); dump();
sqrdmlah(v7.s4, v31.s4, v7.s4); dump();
sqrdmlah(v7.s4, v7.s4, v7.s4); dump();
sqrdmlah(v7.s4, v7.s4, v0.s4); dump();
sqrdmlah(v7.s4, v7.s4, v1.s4); dump();
sqrdmlah(v7.s4, v7.s4, v2.s4); dump();
sqrdmlah(v7.s4, v7.s4, v4.s4); dump();
sqrdmlah(v7.s4, v7.s4, v8.s4); dump();
sqrdmlah(v7.s4, v7.s4, v16.s4); dump();
sqrdmlah(v7.s4, v7.s4, v31.s4); dump();
sqrdmlsh(v7.s4, v7.s4, v7.s4); dump();
sqrdmlsh(v0.s4, v7.s4, v7.s4); dump();
sqrdmlsh(v1.s4, v7.s4, v7.s4); dump();
sqrdmlsh(v2.s4, v7.s4, v7.s4); dump();
sqrdmlsh(v4.s4, v7.s4, v7.s4); dump();
sqrdmlsh(v8.s4, v7.s4, v7.s4); dump();
sqrdmlsh(v16.s4, v7.s4, v7.s4); dump();
sqrdmlsh(v31.s4, v7.s4, v7.s4); dump();
sqrdmlsh(v7.s4, v7.s4, v7.s4); dump();
sqrdmlsh(v7.s4, v0.s4, v7.s4); dump();
sqrdmlsh(v7.s4, v1.s4, v7.s4); dump();
sqrdmlsh(v7.s4, v2.s4, v7.s4); dump();
sqrdmlsh(v7.s4, v4.s4, v7.s4); dump();
sqrdmlsh(v7.s4, v8.s4, v7.s4); dump();
sqrdmlsh(v7.s4, v16.s4, v7.s4); dump();
sqrdmlsh(v7.s4, v31.s4, v7.s4); dump();
sqrdmlsh(v7.s4, v7.s4, v7.s4); dump();
sqrdmlsh(v7.s4, v7.s4, v0.s4); dump();
sqrdmlsh(v7.s4, v7.s4, v1.s4); dump();
sqrdmlsh(v7.s4, v7.s4, v2.s4); dump();
sqrdmlsh(v7.s4, v7.s4, v4.s4); dump();
sqrdmlsh(v7.s4, v7.s4, v8.s4); dump();
sqrdmlsh(v7.s4, v7.s4, v16.s4); dump();
sqrdmlsh(v7.s4, v7.s4, v31.s4); dump();
sqrdmulh(v7.s4, v7.s4, v7.s4); dump();
sqrdmulh(v0.s4, v7.s4, v7.s4); dump();
sqrdmulh(v1.s4, v7.s4, v7.s4); dump();
sqrdmulh(v2.s4, v7.s4, v7.s4); dump();
sqrdmulh(v4.s4, v7.s4, v7.s4); dump();
sqrdmulh(v8.s4, v7.s4, v7.s4); dump();
sqrdmulh(v16.s4, v7.s4, v7.s4); dump();
sqrdmulh(v31.s4, v7.s4, v7.s4); dump();
sqrdmulh(v7.s4, v7.s4, v7.s4); dump();
sqrdmulh(v7.s4, v0.s4, v7.s4); dump();
sqrdmulh(v7.s4, v1.s4, v7.s4); dump();
sqrdmulh(v7.s4, v2.s4, v7.s4); dump();
sqrdmulh(v7.s4, v4.s4, v7.s4); dump();
sqrdmulh(v7.s4, v8.s4, v7.s4); dump();
sqrdmulh(v7.s4, v16.s4, v7.s4); dump();
sqrdmulh(v7.s4, v31.s4, v7.s4); dump();
sqrdmulh(v7.s4, v7.s4, v7.s4); dump();
sqrdmulh(v7.s4, v7.s4, v0.s4); dump();
sqrdmulh(v7.s4, v7.s4, v1.s4); dump();
sqrdmulh(v7.s4, v7.s4, v2.s4); dump();
sqrdmulh(v7.s4, v7.s4, v4.s4); dump();
sqrdmulh(v7.s4, v7.s4, v8.s4); dump();
sqrdmulh(v7.s4, v7.s4, v16.s4); dump();
sqrdmulh(v7.s4, v7.s4, v31.s4); dump();
//DataProcSimd_Arithmetic14:0
srshl(d7, d7, d7); dump();
srshl(d0, d7, d7); dump();
srshl(d1, d7, d7); dump();
srshl(d2, d7, d7); dump();
srshl(d4, d7, d7); dump();
srshl(d8, d7, d7); dump();
srshl(d16, d7, d7); dump();
srshl(d31, d7, d7); dump();
srshl(d7, d7, d7); dump();
srshl(d7, d0, d7); dump();
srshl(d7, d1, d7); dump();
srshl(d7, d2, d7); dump();
srshl(d7, d4, d7); dump();
srshl(d7, d8, d7); dump();
srshl(d7, d16, d7); dump();
srshl(d7, d31, d7); dump();
srshl(d7, d7, d7); dump();
srshl(d7, d7, d0); dump();
srshl(d7, d7, d1); dump();
srshl(d7, d7, d2); dump();
srshl(d7, d7, d4); dump();
srshl(d7, d7, d8); dump();
srshl(d7, d7, d16); dump();
srshl(d7, d7, d31); dump();
sshl(d7, d7, d7); dump();
sshl(d0, d7, d7); dump();
sshl(d1, d7, d7); dump();
sshl(d2, d7, d7); dump();
sshl(d4, d7, d7); dump();
sshl(d8, d7, d7); dump();
sshl(d16, d7, d7); dump();
sshl(d31, d7, d7); dump();
sshl(d7, d7, d7); dump();
sshl(d7, d0, d7); dump();
sshl(d7, d1, d7); dump();
sshl(d7, d2, d7); dump();
sshl(d7, d4, d7); dump();
sshl(d7, d8, d7); dump();
sshl(d7, d16, d7); dump();
sshl(d7, d31, d7); dump();
sshl(d7, d7, d7); dump();
sshl(d7, d7, d0); dump();
sshl(d7, d7, d1); dump();
sshl(d7, d7, d2); dump();
sshl(d7, d7, d4); dump();
sshl(d7, d7, d8); dump();
sshl(d7, d7, d16); dump();
sshl(d7, d7, d31); dump();
sub(d7, d7, d7); dump();
sub(d0, d7, d7); dump();
sub(d1, d7, d7); dump();
sub(d2, d7, d7); dump();
sub(d4, d7, d7); dump();
sub(d8, d7, d7); dump();
sub(d16, d7, d7); dump();
sub(d31, d7, d7); dump();
sub(d7, d7, d7); dump();
sub(d7, d0, d7); dump();
sub(d7, d1, d7); dump();
sub(d7, d2, d7); dump();
sub(d7, d4, d7); dump();
sub(d7, d8, d7); dump();
sub(d7, d16, d7); dump();
sub(d7, d31, d7); dump();
sub(d7, d7, d7); dump();
sub(d7, d7, d0); dump();
sub(d7, d7, d1); dump();
sub(d7, d7, d2); dump();
sub(d7, d7, d4); dump();
sub(d7, d7, d8); dump();
sub(d7, d7, d16); dump();
sub(d7, d7, d31); dump();
urshl(d7, d7, d7); dump();
urshl(d0, d7, d7); dump();
urshl(d1, d7, d7); dump();
urshl(d2, d7, d7); dump();
urshl(d4, d7, d7); dump();
urshl(d8, d7, d7); dump();
urshl(d16, d7, d7); dump();
urshl(d31, d7, d7); dump();
urshl(d7, d7, d7); dump();
urshl(d7, d0, d7); dump();
urshl(d7, d1, d7); dump();
urshl(d7, d2, d7); dump();
urshl(d7, d4, d7); dump();
urshl(d7, d8, d7); dump();
urshl(d7, d16, d7); dump();
urshl(d7, d31, d7); dump();
urshl(d7, d7, d7); dump();
urshl(d7, d7, d0); dump();
urshl(d7, d7, d1); dump();
urshl(d7, d7, d2); dump();
urshl(d7, d7, d4); dump();
urshl(d7, d7, d8); dump();
urshl(d7, d7, d16); dump();
urshl(d7, d7, d31); dump();
ushl(d7, d7, d7); dump();
ushl(d0, d7, d7); dump();
ushl(d1, d7, d7); dump();
ushl(d2, d7, d7); dump();
ushl(d4, d7, d7); dump();
ushl(d8, d7, d7); dump();
ushl(d16, d7, d7); dump();
ushl(d31, d7, d7); dump();
ushl(d7, d7, d7); dump();
ushl(d7, d0, d7); dump();
ushl(d7, d1, d7); dump();
ushl(d7, d2, d7); dump();
ushl(d7, d4, d7); dump();
ushl(d7, d8, d7); dump();
ushl(d7, d16, d7); dump();
ushl(d7, d31, d7); dump();
ushl(d7, d7, d7); dump();
ushl(d7, d7, d0); dump();
ushl(d7, d7, d1); dump();
ushl(d7, d7, d2); dump();
ushl(d7, d7, d4); dump();
ushl(d7, d7, d8); dump();
ushl(d7, d7, d16); dump();
ushl(d7, d7, d31); dump();
//DataProcSimd_Arithmetic14:1
srshl(v7.b8, v7.b8, v7.b8); dump();
srshl(v0.b8, v7.b8, v7.b8); dump();
srshl(v1.b8, v7.b8, v7.b8); dump();
srshl(v2.b8, v7.b8, v7.b8); dump();
srshl(v4.b8, v7.b8, v7.b8); dump();
srshl(v8.b8, v7.b8, v7.b8); dump();
srshl(v16.b8, v7.b8, v7.b8); dump();
srshl(v31.b8, v7.b8, v7.b8); dump();
srshl(v7.b8, v7.b8, v7.b8); dump();
srshl(v7.b8, v0.b8, v7.b8); dump();
srshl(v7.b8, v1.b8, v7.b8); dump();
srshl(v7.b8, v2.b8, v7.b8); dump();
srshl(v7.b8, v4.b8, v7.b8); dump();
srshl(v7.b8, v8.b8, v7.b8); dump();
srshl(v7.b8, v16.b8, v7.b8); dump();
srshl(v7.b8, v31.b8, v7.b8); dump();
srshl(v7.b8, v7.b8, v7.b8); dump();
srshl(v7.b8, v7.b8, v0.b8); dump();
srshl(v7.b8, v7.b8, v1.b8); dump();
srshl(v7.b8, v7.b8, v2.b8); dump();
srshl(v7.b8, v7.b8, v4.b8); dump();
srshl(v7.b8, v7.b8, v8.b8); dump();
srshl(v7.b8, v7.b8, v16.b8); dump();
srshl(v7.b8, v7.b8, v31.b8); dump();
sshl(v7.b8, v7.b8, v7.b8); dump();
sshl(v0.b8, v7.b8, v7.b8); dump();
sshl(v1.b8, v7.b8, v7.b8); dump();
sshl(v2.b8, v7.b8, v7.b8); dump();
sshl(v4.b8, v7.b8, v7.b8); dump();
sshl(v8.b8, v7.b8, v7.b8); dump();
sshl(v16.b8, v7.b8, v7.b8); dump();
sshl(v31.b8, v7.b8, v7.b8); dump();
sshl(v7.b8, v7.b8, v7.b8); dump();
sshl(v7.b8, v0.b8, v7.b8); dump();
sshl(v7.b8, v1.b8, v7.b8); dump();
sshl(v7.b8, v2.b8, v7.b8); dump();
sshl(v7.b8, v4.b8, v7.b8); dump();
sshl(v7.b8, v8.b8, v7.b8); dump();
sshl(v7.b8, v16.b8, v7.b8); dump();
sshl(v7.b8, v31.b8, v7.b8); dump();
sshl(v7.b8, v7.b8, v7.b8); dump();
sshl(v7.b8, v7.b8, v0.b8); dump();
sshl(v7.b8, v7.b8, v1.b8); dump();
sshl(v7.b8, v7.b8, v2.b8); dump();
sshl(v7.b8, v7.b8, v4.b8); dump();
sshl(v7.b8, v7.b8, v8.b8); dump();
sshl(v7.b8, v7.b8, v16.b8); dump();
sshl(v7.b8, v7.b8, v31.b8); dump();
sub(v7.b8, v7.b8, v7.b8); dump();
sub(v0.b8, v7.b8, v7.b8); dump();
sub(v1.b8, v7.b8, v7.b8); dump();
sub(v2.b8, v7.b8, v7.b8); dump();
sub(v4.b8, v7.b8, v7.b8); dump();
sub(v8.b8, v7.b8, v7.b8); dump();
sub(v16.b8, v7.b8, v7.b8); dump();
sub(v31.b8, v7.b8, v7.b8); dump();
sub(v7.b8, v7.b8, v7.b8); dump();
sub(v7.b8, v0.b8, v7.b8); dump();
sub(v7.b8, v1.b8, v7.b8); dump();
sub(v7.b8, v2.b8, v7.b8); dump();
sub(v7.b8, v4.b8, v7.b8); dump();
sub(v7.b8, v8.b8, v7.b8); dump();
sub(v7.b8, v16.b8, v7.b8); dump();
sub(v7.b8, v31.b8, v7.b8); dump();
sub(v7.b8, v7.b8, v7.b8); dump();
sub(v7.b8, v7.b8, v0.b8); dump();
sub(v7.b8, v7.b8, v1.b8); dump();
sub(v7.b8, v7.b8, v2.b8); dump();
sub(v7.b8, v7.b8, v4.b8); dump();
sub(v7.b8, v7.b8, v8.b8); dump();
sub(v7.b8, v7.b8, v16.b8); dump();
sub(v7.b8, v7.b8, v31.b8); dump();
urshl(v7.b8, v7.b8, v7.b8); dump();
urshl(v0.b8, v7.b8, v7.b8); dump();
urshl(v1.b8, v7.b8, v7.b8); dump();
urshl(v2.b8, v7.b8, v7.b8); dump();
urshl(v4.b8, v7.b8, v7.b8); dump();
urshl(v8.b8, v7.b8, v7.b8); dump();
urshl(v16.b8, v7.b8, v7.b8); dump();
urshl(v31.b8, v7.b8, v7.b8); dump();
urshl(v7.b8, v7.b8, v7.b8); dump();
urshl(v7.b8, v0.b8, v7.b8); dump();
urshl(v7.b8, v1.b8, v7.b8); dump();
urshl(v7.b8, v2.b8, v7.b8); dump();
urshl(v7.b8, v4.b8, v7.b8); dump();
urshl(v7.b8, v8.b8, v7.b8); dump();
urshl(v7.b8, v16.b8, v7.b8); dump();
urshl(v7.b8, v31.b8, v7.b8); dump();
urshl(v7.b8, v7.b8, v7.b8); dump();
urshl(v7.b8, v7.b8, v0.b8); dump();
urshl(v7.b8, v7.b8, v1.b8); dump();
urshl(v7.b8, v7.b8, v2.b8); dump();
urshl(v7.b8, v7.b8, v4.b8); dump();
urshl(v7.b8, v7.b8, v8.b8); dump();
urshl(v7.b8, v7.b8, v16.b8); dump();
urshl(v7.b8, v7.b8, v31.b8); dump();
ushl(v7.b8, v7.b8, v7.b8); dump();
ushl(v0.b8, v7.b8, v7.b8); dump();
ushl(v1.b8, v7.b8, v7.b8); dump();
ushl(v2.b8, v7.b8, v7.b8); dump();
ushl(v4.b8, v7.b8, v7.b8); dump();
ushl(v8.b8, v7.b8, v7.b8); dump();
ushl(v16.b8, v7.b8, v7.b8); dump();
ushl(v31.b8, v7.b8, v7.b8); dump();
ushl(v7.b8, v7.b8, v7.b8); dump();
ushl(v7.b8, v0.b8, v7.b8); dump();
ushl(v7.b8, v1.b8, v7.b8); dump();
ushl(v7.b8, v2.b8, v7.b8); dump();
ushl(v7.b8, v4.b8, v7.b8); dump();
ushl(v7.b8, v8.b8, v7.b8); dump();
ushl(v7.b8, v16.b8, v7.b8); dump();
ushl(v7.b8, v31.b8, v7.b8); dump();
ushl(v7.b8, v7.b8, v7.b8); dump();
ushl(v7.b8, v7.b8, v0.b8); dump();
ushl(v7.b8, v7.b8, v1.b8); dump();
ushl(v7.b8, v7.b8, v2.b8); dump();
ushl(v7.b8, v7.b8, v4.b8); dump();
ushl(v7.b8, v7.b8, v8.b8); dump();
ushl(v7.b8, v7.b8, v16.b8); dump();
ushl(v7.b8, v7.b8, v31.b8); dump();
//DataProcSimd_Arithmetic14:2
srshl(v7.b16, v7.b16, v7.b16); dump();
srshl(v0.b16, v7.b16, v7.b16); dump();
srshl(v1.b16, v7.b16, v7.b16); dump();
srshl(v2.b16, v7.b16, v7.b16); dump();
srshl(v4.b16, v7.b16, v7.b16); dump();
srshl(v8.b16, v7.b16, v7.b16); dump();
srshl(v16.b16, v7.b16, v7.b16); dump();
srshl(v31.b16, v7.b16, v7.b16); dump();
srshl(v7.b16, v7.b16, v7.b16); dump();
srshl(v7.b16, v0.b16, v7.b16); dump();
srshl(v7.b16, v1.b16, v7.b16); dump();
srshl(v7.b16, v2.b16, v7.b16); dump();
srshl(v7.b16, v4.b16, v7.b16); dump();
srshl(v7.b16, v8.b16, v7.b16); dump();
srshl(v7.b16, v16.b16, v7.b16); dump();
srshl(v7.b16, v31.b16, v7.b16); dump();
srshl(v7.b16, v7.b16, v7.b16); dump();
srshl(v7.b16, v7.b16, v0.b16); dump();
srshl(v7.b16, v7.b16, v1.b16); dump();
srshl(v7.b16, v7.b16, v2.b16); dump();
srshl(v7.b16, v7.b16, v4.b16); dump();
srshl(v7.b16, v7.b16, v8.b16); dump();
srshl(v7.b16, v7.b16, v16.b16); dump();
srshl(v7.b16, v7.b16, v31.b16); dump();
sshl(v7.b16, v7.b16, v7.b16); dump();
sshl(v0.b16, v7.b16, v7.b16); dump();
sshl(v1.b16, v7.b16, v7.b16); dump();
sshl(v2.b16, v7.b16, v7.b16); dump();
sshl(v4.b16, v7.b16, v7.b16); dump();
sshl(v8.b16, v7.b16, v7.b16); dump();
sshl(v16.b16, v7.b16, v7.b16); dump();
sshl(v31.b16, v7.b16, v7.b16); dump();
sshl(v7.b16, v7.b16, v7.b16); dump();
sshl(v7.b16, v0.b16, v7.b16); dump();
sshl(v7.b16, v1.b16, v7.b16); dump();
sshl(v7.b16, v2.b16, v7.b16); dump();
sshl(v7.b16, v4.b16, v7.b16); dump();
sshl(v7.b16, v8.b16, v7.b16); dump();
sshl(v7.b16, v16.b16, v7.b16); dump();
sshl(v7.b16, v31.b16, v7.b16); dump();
sshl(v7.b16, v7.b16, v7.b16); dump();
sshl(v7.b16, v7.b16, v0.b16); dump();
sshl(v7.b16, v7.b16, v1.b16); dump();
sshl(v7.b16, v7.b16, v2.b16); dump();
sshl(v7.b16, v7.b16, v4.b16); dump();
sshl(v7.b16, v7.b16, v8.b16); dump();
sshl(v7.b16, v7.b16, v16.b16); dump();
sshl(v7.b16, v7.b16, v31.b16); dump();
sub(v7.b16, v7.b16, v7.b16); dump();
sub(v0.b16, v7.b16, v7.b16); dump();
sub(v1.b16, v7.b16, v7.b16); dump();
sub(v2.b16, v7.b16, v7.b16); dump();
sub(v4.b16, v7.b16, v7.b16); dump();
sub(v8.b16, v7.b16, v7.b16); dump();
sub(v16.b16, v7.b16, v7.b16); dump();
sub(v31.b16, v7.b16, v7.b16); dump();
sub(v7.b16, v7.b16, v7.b16); dump();
sub(v7.b16, v0.b16, v7.b16); dump();
sub(v7.b16, v1.b16, v7.b16); dump();
sub(v7.b16, v2.b16, v7.b16); dump();
sub(v7.b16, v4.b16, v7.b16); dump();
sub(v7.b16, v8.b16, v7.b16); dump();
sub(v7.b16, v16.b16, v7.b16); dump();
sub(v7.b16, v31.b16, v7.b16); dump();
sub(v7.b16, v7.b16, v7.b16); dump();
sub(v7.b16, v7.b16, v0.b16); dump();
sub(v7.b16, v7.b16, v1.b16); dump();
sub(v7.b16, v7.b16, v2.b16); dump();
sub(v7.b16, v7.b16, v4.b16); dump();
sub(v7.b16, v7.b16, v8.b16); dump();
sub(v7.b16, v7.b16, v16.b16); dump();
sub(v7.b16, v7.b16, v31.b16); dump();
urshl(v7.b16, v7.b16, v7.b16); dump();
urshl(v0.b16, v7.b16, v7.b16); dump();
urshl(v1.b16, v7.b16, v7.b16); dump();
urshl(v2.b16, v7.b16, v7.b16); dump();
urshl(v4.b16, v7.b16, v7.b16); dump();
urshl(v8.b16, v7.b16, v7.b16); dump();
urshl(v16.b16, v7.b16, v7.b16); dump();
urshl(v31.b16, v7.b16, v7.b16); dump();
urshl(v7.b16, v7.b16, v7.b16); dump();
urshl(v7.b16, v0.b16, v7.b16); dump();
urshl(v7.b16, v1.b16, v7.b16); dump();
urshl(v7.b16, v2.b16, v7.b16); dump();
urshl(v7.b16, v4.b16, v7.b16); dump();
urshl(v7.b16, v8.b16, v7.b16); dump();
urshl(v7.b16, v16.b16, v7.b16); dump();
urshl(v7.b16, v31.b16, v7.b16); dump();
urshl(v7.b16, v7.b16, v7.b16); dump();
urshl(v7.b16, v7.b16, v0.b16); dump();
urshl(v7.b16, v7.b16, v1.b16); dump();
urshl(v7.b16, v7.b16, v2.b16); dump();
urshl(v7.b16, v7.b16, v4.b16); dump();
urshl(v7.b16, v7.b16, v8.b16); dump();
urshl(v7.b16, v7.b16, v16.b16); dump();
urshl(v7.b16, v7.b16, v31.b16); dump();
ushl(v7.b16, v7.b16, v7.b16); dump();
ushl(v0.b16, v7.b16, v7.b16); dump();
ushl(v1.b16, v7.b16, v7.b16); dump();
ushl(v2.b16, v7.b16, v7.b16); dump();
ushl(v4.b16, v7.b16, v7.b16); dump();
ushl(v8.b16, v7.b16, v7.b16); dump();
ushl(v16.b16, v7.b16, v7.b16); dump();
ushl(v31.b16, v7.b16, v7.b16); dump();
ushl(v7.b16, v7.b16, v7.b16); dump();
ushl(v7.b16, v0.b16, v7.b16); dump();
ushl(v7.b16, v1.b16, v7.b16); dump();
ushl(v7.b16, v2.b16, v7.b16); dump();
ushl(v7.b16, v4.b16, v7.b16); dump();
ushl(v7.b16, v8.b16, v7.b16); dump();
ushl(v7.b16, v16.b16, v7.b16); dump();
ushl(v7.b16, v31.b16, v7.b16); dump();
ushl(v7.b16, v7.b16, v7.b16); dump();
ushl(v7.b16, v7.b16, v0.b16); dump();
ushl(v7.b16, v7.b16, v1.b16); dump();
ushl(v7.b16, v7.b16, v2.b16); dump();
ushl(v7.b16, v7.b16, v4.b16); dump();
ushl(v7.b16, v7.b16, v8.b16); dump();
ushl(v7.b16, v7.b16, v16.b16); dump();
ushl(v7.b16, v7.b16, v31.b16); dump();
//DataProcSimd_Arithmetic14:3
srshl(v7.h4, v7.h4, v7.h4); dump();
srshl(v0.h4, v7.h4, v7.h4); dump();
srshl(v1.h4, v7.h4, v7.h4); dump();
srshl(v2.h4, v7.h4, v7.h4); dump();
srshl(v4.h4, v7.h4, v7.h4); dump();
srshl(v8.h4, v7.h4, v7.h4); dump();
srshl(v16.h4, v7.h4, v7.h4); dump();
srshl(v31.h4, v7.h4, v7.h4); dump();
srshl(v7.h4, v7.h4, v7.h4); dump();
srshl(v7.h4, v0.h4, v7.h4); dump();
srshl(v7.h4, v1.h4, v7.h4); dump();
srshl(v7.h4, v2.h4, v7.h4); dump();
srshl(v7.h4, v4.h4, v7.h4); dump();
srshl(v7.h4, v8.h4, v7.h4); dump();
srshl(v7.h4, v16.h4, v7.h4); dump();
srshl(v7.h4, v31.h4, v7.h4); dump();
srshl(v7.h4, v7.h4, v7.h4); dump();
srshl(v7.h4, v7.h4, v0.h4); dump();
srshl(v7.h4, v7.h4, v1.h4); dump();
srshl(v7.h4, v7.h4, v2.h4); dump();
srshl(v7.h4, v7.h4, v4.h4); dump();
srshl(v7.h4, v7.h4, v8.h4); dump();
srshl(v7.h4, v7.h4, v16.h4); dump();
srshl(v7.h4, v7.h4, v31.h4); dump();
sshl(v7.h4, v7.h4, v7.h4); dump();
sshl(v0.h4, v7.h4, v7.h4); dump();
sshl(v1.h4, v7.h4, v7.h4); dump();
sshl(v2.h4, v7.h4, v7.h4); dump();
sshl(v4.h4, v7.h4, v7.h4); dump();
sshl(v8.h4, v7.h4, v7.h4); dump();
sshl(v16.h4, v7.h4, v7.h4); dump();
sshl(v31.h4, v7.h4, v7.h4); dump();
sshl(v7.h4, v7.h4, v7.h4); dump();
sshl(v7.h4, v0.h4, v7.h4); dump();
sshl(v7.h4, v1.h4, v7.h4); dump();
sshl(v7.h4, v2.h4, v7.h4); dump();
sshl(v7.h4, v4.h4, v7.h4); dump();
sshl(v7.h4, v8.h4, v7.h4); dump();
sshl(v7.h4, v16.h4, v7.h4); dump();
sshl(v7.h4, v31.h4, v7.h4); dump();
sshl(v7.h4, v7.h4, v7.h4); dump();
sshl(v7.h4, v7.h4, v0.h4); dump();
sshl(v7.h4, v7.h4, v1.h4); dump();
sshl(v7.h4, v7.h4, v2.h4); dump();
sshl(v7.h4, v7.h4, v4.h4); dump();
sshl(v7.h4, v7.h4, v8.h4); dump();
sshl(v7.h4, v7.h4, v16.h4); dump();
sshl(v7.h4, v7.h4, v31.h4); dump();
sub(v7.h4, v7.h4, v7.h4); dump();
sub(v0.h4, v7.h4, v7.h4); dump();
sub(v1.h4, v7.h4, v7.h4); dump();
sub(v2.h4, v7.h4, v7.h4); dump();
sub(v4.h4, v7.h4, v7.h4); dump();
sub(v8.h4, v7.h4, v7.h4); dump();
sub(v16.h4, v7.h4, v7.h4); dump();
sub(v31.h4, v7.h4, v7.h4); dump();
sub(v7.h4, v7.h4, v7.h4); dump();
sub(v7.h4, v0.h4, v7.h4); dump();
sub(v7.h4, v1.h4, v7.h4); dump();
sub(v7.h4, v2.h4, v7.h4); dump();
sub(v7.h4, v4.h4, v7.h4); dump();
sub(v7.h4, v8.h4, v7.h4); dump();
sub(v7.h4, v16.h4, v7.h4); dump();
sub(v7.h4, v31.h4, v7.h4); dump();
sub(v7.h4, v7.h4, v7.h4); dump();
sub(v7.h4, v7.h4, v0.h4); dump();
sub(v7.h4, v7.h4, v1.h4); dump();
sub(v7.h4, v7.h4, v2.h4); dump();
sub(v7.h4, v7.h4, v4.h4); dump();
sub(v7.h4, v7.h4, v8.h4); dump();
sub(v7.h4, v7.h4, v16.h4); dump();
sub(v7.h4, v7.h4, v31.h4); dump();
urshl(v7.h4, v7.h4, v7.h4); dump();
urshl(v0.h4, v7.h4, v7.h4); dump();
urshl(v1.h4, v7.h4, v7.h4); dump();
urshl(v2.h4, v7.h4, v7.h4); dump();
urshl(v4.h4, v7.h4, v7.h4); dump();
urshl(v8.h4, v7.h4, v7.h4); dump();
urshl(v16.h4, v7.h4, v7.h4); dump();
urshl(v31.h4, v7.h4, v7.h4); dump();
urshl(v7.h4, v7.h4, v7.h4); dump();
urshl(v7.h4, v0.h4, v7.h4); dump();
urshl(v7.h4, v1.h4, v7.h4); dump();
urshl(v7.h4, v2.h4, v7.h4); dump();
urshl(v7.h4, v4.h4, v7.h4); dump();
urshl(v7.h4, v8.h4, v7.h4); dump();
urshl(v7.h4, v16.h4, v7.h4); dump();
urshl(v7.h4, v31.h4, v7.h4); dump();
urshl(v7.h4, v7.h4, v7.h4); dump();
urshl(v7.h4, v7.h4, v0.h4); dump();
urshl(v7.h4, v7.h4, v1.h4); dump();
urshl(v7.h4, v7.h4, v2.h4); dump();
urshl(v7.h4, v7.h4, v4.h4); dump();
urshl(v7.h4, v7.h4, v8.h4); dump();
urshl(v7.h4, v7.h4, v16.h4); dump();
urshl(v7.h4, v7.h4, v31.h4); dump();
ushl(v7.h4, v7.h4, v7.h4); dump();
ushl(v0.h4, v7.h4, v7.h4); dump();
ushl(v1.h4, v7.h4, v7.h4); dump();
ushl(v2.h4, v7.h4, v7.h4); dump();
ushl(v4.h4, v7.h4, v7.h4); dump();
ushl(v8.h4, v7.h4, v7.h4); dump();
ushl(v16.h4, v7.h4, v7.h4); dump();
ushl(v31.h4, v7.h4, v7.h4); dump();
ushl(v7.h4, v7.h4, v7.h4); dump();
ushl(v7.h4, v0.h4, v7.h4); dump();
ushl(v7.h4, v1.h4, v7.h4); dump();
ushl(v7.h4, v2.h4, v7.h4); dump();
ushl(v7.h4, v4.h4, v7.h4); dump();
ushl(v7.h4, v8.h4, v7.h4); dump();
ushl(v7.h4, v16.h4, v7.h4); dump();
ushl(v7.h4, v31.h4, v7.h4); dump();
ushl(v7.h4, v7.h4, v7.h4); dump();
ushl(v7.h4, v7.h4, v0.h4); dump();
ushl(v7.h4, v7.h4, v1.h4); dump();
ushl(v7.h4, v7.h4, v2.h4); dump();
ushl(v7.h4, v7.h4, v4.h4); dump();
ushl(v7.h4, v7.h4, v8.h4); dump();
ushl(v7.h4, v7.h4, v16.h4); dump();
ushl(v7.h4, v7.h4, v31.h4); dump();
//DataProcSimd_Arithmetic14:4
srshl(v7.h8, v7.h8, v7.h8); dump();
srshl(v0.h8, v7.h8, v7.h8); dump();
srshl(v1.h8, v7.h8, v7.h8); dump();
srshl(v2.h8, v7.h8, v7.h8); dump();
srshl(v4.h8, v7.h8, v7.h8); dump();
srshl(v8.h8, v7.h8, v7.h8); dump();
srshl(v16.h8, v7.h8, v7.h8); dump();
srshl(v31.h8, v7.h8, v7.h8); dump();
srshl(v7.h8, v7.h8, v7.h8); dump();
srshl(v7.h8, v0.h8, v7.h8); dump();
srshl(v7.h8, v1.h8, v7.h8); dump();
srshl(v7.h8, v2.h8, v7.h8); dump();
srshl(v7.h8, v4.h8, v7.h8); dump();
srshl(v7.h8, v8.h8, v7.h8); dump();
srshl(v7.h8, v16.h8, v7.h8); dump();
srshl(v7.h8, v31.h8, v7.h8); dump();
srshl(v7.h8, v7.h8, v7.h8); dump();
srshl(v7.h8, v7.h8, v0.h8); dump();
srshl(v7.h8, v7.h8, v1.h8); dump();
srshl(v7.h8, v7.h8, v2.h8); dump();
srshl(v7.h8, v7.h8, v4.h8); dump();
srshl(v7.h8, v7.h8, v8.h8); dump();
srshl(v7.h8, v7.h8, v16.h8); dump();
srshl(v7.h8, v7.h8, v31.h8); dump();
sshl(v7.h8, v7.h8, v7.h8); dump();
sshl(v0.h8, v7.h8, v7.h8); dump();
sshl(v1.h8, v7.h8, v7.h8); dump();
sshl(v2.h8, v7.h8, v7.h8); dump();
sshl(v4.h8, v7.h8, v7.h8); dump();
sshl(v8.h8, v7.h8, v7.h8); dump();
sshl(v16.h8, v7.h8, v7.h8); dump();
sshl(v31.h8, v7.h8, v7.h8); dump();
sshl(v7.h8, v7.h8, v7.h8); dump();
sshl(v7.h8, v0.h8, v7.h8); dump();
sshl(v7.h8, v1.h8, v7.h8); dump();
sshl(v7.h8, v2.h8, v7.h8); dump();
sshl(v7.h8, v4.h8, v7.h8); dump();
sshl(v7.h8, v8.h8, v7.h8); dump();
sshl(v7.h8, v16.h8, v7.h8); dump();
sshl(v7.h8, v31.h8, v7.h8); dump();
sshl(v7.h8, v7.h8, v7.h8); dump();
sshl(v7.h8, v7.h8, v0.h8); dump();
sshl(v7.h8, v7.h8, v1.h8); dump();
sshl(v7.h8, v7.h8, v2.h8); dump();
sshl(v7.h8, v7.h8, v4.h8); dump();
sshl(v7.h8, v7.h8, v8.h8); dump();
sshl(v7.h8, v7.h8, v16.h8); dump();
sshl(v7.h8, v7.h8, v31.h8); dump();
sub(v7.h8, v7.h8, v7.h8); dump();
sub(v0.h8, v7.h8, v7.h8); dump();
sub(v1.h8, v7.h8, v7.h8); dump();
sub(v2.h8, v7.h8, v7.h8); dump();
sub(v4.h8, v7.h8, v7.h8); dump();
sub(v8.h8, v7.h8, v7.h8); dump();
sub(v16.h8, v7.h8, v7.h8); dump();
sub(v31.h8, v7.h8, v7.h8); dump();
sub(v7.h8, v7.h8, v7.h8); dump();
sub(v7.h8, v0.h8, v7.h8); dump();
sub(v7.h8, v1.h8, v7.h8); dump();
sub(v7.h8, v2.h8, v7.h8); dump();
sub(v7.h8, v4.h8, v7.h8); dump();
sub(v7.h8, v8.h8, v7.h8); dump();
sub(v7.h8, v16.h8, v7.h8); dump();
sub(v7.h8, v31.h8, v7.h8); dump();
sub(v7.h8, v7.h8, v7.h8); dump();
sub(v7.h8, v7.h8, v0.h8); dump();
sub(v7.h8, v7.h8, v1.h8); dump();
sub(v7.h8, v7.h8, v2.h8); dump();
sub(v7.h8, v7.h8, v4.h8); dump();
sub(v7.h8, v7.h8, v8.h8); dump();
sub(v7.h8, v7.h8, v16.h8); dump();
sub(v7.h8, v7.h8, v31.h8); dump();
urshl(v7.h8, v7.h8, v7.h8); dump();
urshl(v0.h8, v7.h8, v7.h8); dump();
urshl(v1.h8, v7.h8, v7.h8); dump();
urshl(v2.h8, v7.h8, v7.h8); dump();
urshl(v4.h8, v7.h8, v7.h8); dump();
urshl(v8.h8, v7.h8, v7.h8); dump();
urshl(v16.h8, v7.h8, v7.h8); dump();
urshl(v31.h8, v7.h8, v7.h8); dump();
urshl(v7.h8, v7.h8, v7.h8); dump();
urshl(v7.h8, v0.h8, v7.h8); dump();
urshl(v7.h8, v1.h8, v7.h8); dump();
urshl(v7.h8, v2.h8, v7.h8); dump();
urshl(v7.h8, v4.h8, v7.h8); dump();
urshl(v7.h8, v8.h8, v7.h8); dump();
urshl(v7.h8, v16.h8, v7.h8); dump();
urshl(v7.h8, v31.h8, v7.h8); dump();
urshl(v7.h8, v7.h8, v7.h8); dump();
urshl(v7.h8, v7.h8, v0.h8); dump();
urshl(v7.h8, v7.h8, v1.h8); dump();
urshl(v7.h8, v7.h8, v2.h8); dump();
urshl(v7.h8, v7.h8, v4.h8); dump();
urshl(v7.h8, v7.h8, v8.h8); dump();
urshl(v7.h8, v7.h8, v16.h8); dump();
urshl(v7.h8, v7.h8, v31.h8); dump();
ushl(v7.h8, v7.h8, v7.h8); dump();
ushl(v0.h8, v7.h8, v7.h8); dump();
ushl(v1.h8, v7.h8, v7.h8); dump();
ushl(v2.h8, v7.h8, v7.h8); dump();
ushl(v4.h8, v7.h8, v7.h8); dump();
ushl(v8.h8, v7.h8, v7.h8); dump();
ushl(v16.h8, v7.h8, v7.h8); dump();
ushl(v31.h8, v7.h8, v7.h8); dump();
ushl(v7.h8, v7.h8, v7.h8); dump();
ushl(v7.h8, v0.h8, v7.h8); dump();
ushl(v7.h8, v1.h8, v7.h8); dump();
ushl(v7.h8, v2.h8, v7.h8); dump();
ushl(v7.h8, v4.h8, v7.h8); dump();
ushl(v7.h8, v8.h8, v7.h8); dump();
ushl(v7.h8, v16.h8, v7.h8); dump();
ushl(v7.h8, v31.h8, v7.h8); dump();
ushl(v7.h8, v7.h8, v7.h8); dump();
ushl(v7.h8, v7.h8, v0.h8); dump();
ushl(v7.h8, v7.h8, v1.h8); dump();
ushl(v7.h8, v7.h8, v2.h8); dump();
ushl(v7.h8, v7.h8, v4.h8); dump();
ushl(v7.h8, v7.h8, v8.h8); dump();
ushl(v7.h8, v7.h8, v16.h8); dump();
ushl(v7.h8, v7.h8, v31.h8); dump();
//DataProcSimd_Arithmetic14:5
srshl(v7.s2, v7.s2, v7.s2); dump();
srshl(v0.s2, v7.s2, v7.s2); dump();
srshl(v1.s2, v7.s2, v7.s2); dump();
srshl(v2.s2, v7.s2, v7.s2); dump();
srshl(v4.s2, v7.s2, v7.s2); dump();
srshl(v8.s2, v7.s2, v7.s2); dump();
srshl(v16.s2, v7.s2, v7.s2); dump();
srshl(v31.s2, v7.s2, v7.s2); dump();
srshl(v7.s2, v7.s2, v7.s2); dump();
srshl(v7.s2, v0.s2, v7.s2); dump();
srshl(v7.s2, v1.s2, v7.s2); dump();
srshl(v7.s2, v2.s2, v7.s2); dump();
srshl(v7.s2, v4.s2, v7.s2); dump();
srshl(v7.s2, v8.s2, v7.s2); dump();
srshl(v7.s2, v16.s2, v7.s2); dump();
srshl(v7.s2, v31.s2, v7.s2); dump();
srshl(v7.s2, v7.s2, v7.s2); dump();
srshl(v7.s2, v7.s2, v0.s2); dump();
srshl(v7.s2, v7.s2, v1.s2); dump();
srshl(v7.s2, v7.s2, v2.s2); dump();
srshl(v7.s2, v7.s2, v4.s2); dump();
srshl(v7.s2, v7.s2, v8.s2); dump();
srshl(v7.s2, v7.s2, v16.s2); dump();
srshl(v7.s2, v7.s2, v31.s2); dump();
sshl(v7.s2, v7.s2, v7.s2); dump();
sshl(v0.s2, v7.s2, v7.s2); dump();
sshl(v1.s2, v7.s2, v7.s2); dump();
sshl(v2.s2, v7.s2, v7.s2); dump();
sshl(v4.s2, v7.s2, v7.s2); dump();
sshl(v8.s2, v7.s2, v7.s2); dump();
sshl(v16.s2, v7.s2, v7.s2); dump();
sshl(v31.s2, v7.s2, v7.s2); dump();
sshl(v7.s2, v7.s2, v7.s2); dump();
sshl(v7.s2, v0.s2, v7.s2); dump();
sshl(v7.s2, v1.s2, v7.s2); dump();
sshl(v7.s2, v2.s2, v7.s2); dump();
sshl(v7.s2, v4.s2, v7.s2); dump();
sshl(v7.s2, v8.s2, v7.s2); dump();
sshl(v7.s2, v16.s2, v7.s2); dump();
sshl(v7.s2, v31.s2, v7.s2); dump();
sshl(v7.s2, v7.s2, v7.s2); dump();
sshl(v7.s2, v7.s2, v0.s2); dump();
sshl(v7.s2, v7.s2, v1.s2); dump();
sshl(v7.s2, v7.s2, v2.s2); dump();
sshl(v7.s2, v7.s2, v4.s2); dump();
sshl(v7.s2, v7.s2, v8.s2); dump();
sshl(v7.s2, v7.s2, v16.s2); dump();
sshl(v7.s2, v7.s2, v31.s2); dump();
sub(v7.s2, v7.s2, v7.s2); dump();
sub(v0.s2, v7.s2, v7.s2); dump();
sub(v1.s2, v7.s2, v7.s2); dump();
sub(v2.s2, v7.s2, v7.s2); dump();
sub(v4.s2, v7.s2, v7.s2); dump();
sub(v8.s2, v7.s2, v7.s2); dump();
sub(v16.s2, v7.s2, v7.s2); dump();
sub(v31.s2, v7.s2, v7.s2); dump();
sub(v7.s2, v7.s2, v7.s2); dump();
sub(v7.s2, v0.s2, v7.s2); dump();
sub(v7.s2, v1.s2, v7.s2); dump();
sub(v7.s2, v2.s2, v7.s2); dump();
sub(v7.s2, v4.s2, v7.s2); dump();
sub(v7.s2, v8.s2, v7.s2); dump();
sub(v7.s2, v16.s2, v7.s2); dump();
sub(v7.s2, v31.s2, v7.s2); dump();
sub(v7.s2, v7.s2, v7.s2); dump();
sub(v7.s2, v7.s2, v0.s2); dump();
sub(v7.s2, v7.s2, v1.s2); dump();
sub(v7.s2, v7.s2, v2.s2); dump();
sub(v7.s2, v7.s2, v4.s2); dump();
sub(v7.s2, v7.s2, v8.s2); dump();
sub(v7.s2, v7.s2, v16.s2); dump();
sub(v7.s2, v7.s2, v31.s2); dump();
urshl(v7.s2, v7.s2, v7.s2); dump();
urshl(v0.s2, v7.s2, v7.s2); dump();
urshl(v1.s2, v7.s2, v7.s2); dump();
urshl(v2.s2, v7.s2, v7.s2); dump();
urshl(v4.s2, v7.s2, v7.s2); dump();
urshl(v8.s2, v7.s2, v7.s2); dump();
urshl(v16.s2, v7.s2, v7.s2); dump();
urshl(v31.s2, v7.s2, v7.s2); dump();
urshl(v7.s2, v7.s2, v7.s2); dump();
urshl(v7.s2, v0.s2, v7.s2); dump();
urshl(v7.s2, v1.s2, v7.s2); dump();
urshl(v7.s2, v2.s2, v7.s2); dump();
urshl(v7.s2, v4.s2, v7.s2); dump();
urshl(v7.s2, v8.s2, v7.s2); dump();
urshl(v7.s2, v16.s2, v7.s2); dump();
urshl(v7.s2, v31.s2, v7.s2); dump();
urshl(v7.s2, v7.s2, v7.s2); dump();
urshl(v7.s2, v7.s2, v0.s2); dump();
urshl(v7.s2, v7.s2, v1.s2); dump();
urshl(v7.s2, v7.s2, v2.s2); dump();
urshl(v7.s2, v7.s2, v4.s2); dump();
urshl(v7.s2, v7.s2, v8.s2); dump();
urshl(v7.s2, v7.s2, v16.s2); dump();
urshl(v7.s2, v7.s2, v31.s2); dump();
ushl(v7.s2, v7.s2, v7.s2); dump();
ushl(v0.s2, v7.s2, v7.s2); dump();
ushl(v1.s2, v7.s2, v7.s2); dump();
ushl(v2.s2, v7.s2, v7.s2); dump();
ushl(v4.s2, v7.s2, v7.s2); dump();
ushl(v8.s2, v7.s2, v7.s2); dump();
ushl(v16.s2, v7.s2, v7.s2); dump();
ushl(v31.s2, v7.s2, v7.s2); dump();
ushl(v7.s2, v7.s2, v7.s2); dump();
ushl(v7.s2, v0.s2, v7.s2); dump();
ushl(v7.s2, v1.s2, v7.s2); dump();
ushl(v7.s2, v2.s2, v7.s2); dump();
ushl(v7.s2, v4.s2, v7.s2); dump();
ushl(v7.s2, v8.s2, v7.s2); dump();
ushl(v7.s2, v16.s2, v7.s2); dump();
ushl(v7.s2, v31.s2, v7.s2); dump();
ushl(v7.s2, v7.s2, v7.s2); dump();
ushl(v7.s2, v7.s2, v0.s2); dump();
ushl(v7.s2, v7.s2, v1.s2); dump();
ushl(v7.s2, v7.s2, v2.s2); dump();
ushl(v7.s2, v7.s2, v4.s2); dump();
ushl(v7.s2, v7.s2, v8.s2); dump();
ushl(v7.s2, v7.s2, v16.s2); dump();
ushl(v7.s2, v7.s2, v31.s2); dump();
//DataProcSimd_Arithmetic14:6
srshl(v7.s4, v7.s4, v7.s4); dump();
srshl(v0.s4, v7.s4, v7.s4); dump();
srshl(v1.s4, v7.s4, v7.s4); dump();
srshl(v2.s4, v7.s4, v7.s4); dump();
srshl(v4.s4, v7.s4, v7.s4); dump();
srshl(v8.s4, v7.s4, v7.s4); dump();
srshl(v16.s4, v7.s4, v7.s4); dump();
srshl(v31.s4, v7.s4, v7.s4); dump();
srshl(v7.s4, v7.s4, v7.s4); dump();
srshl(v7.s4, v0.s4, v7.s4); dump();
srshl(v7.s4, v1.s4, v7.s4); dump();
srshl(v7.s4, v2.s4, v7.s4); dump();
srshl(v7.s4, v4.s4, v7.s4); dump();
srshl(v7.s4, v8.s4, v7.s4); dump();
srshl(v7.s4, v16.s4, v7.s4); dump();
srshl(v7.s4, v31.s4, v7.s4); dump();
srshl(v7.s4, v7.s4, v7.s4); dump();
srshl(v7.s4, v7.s4, v0.s4); dump();
srshl(v7.s4, v7.s4, v1.s4); dump();
srshl(v7.s4, v7.s4, v2.s4); dump();
srshl(v7.s4, v7.s4, v4.s4); dump();
srshl(v7.s4, v7.s4, v8.s4); dump();
srshl(v7.s4, v7.s4, v16.s4); dump();
srshl(v7.s4, v7.s4, v31.s4); dump();
sshl(v7.s4, v7.s4, v7.s4); dump();
sshl(v0.s4, v7.s4, v7.s4); dump();
sshl(v1.s4, v7.s4, v7.s4); dump();
sshl(v2.s4, v7.s4, v7.s4); dump();
sshl(v4.s4, v7.s4, v7.s4); dump();
sshl(v8.s4, v7.s4, v7.s4); dump();
sshl(v16.s4, v7.s4, v7.s4); dump();
sshl(v31.s4, v7.s4, v7.s4); dump();
sshl(v7.s4, v7.s4, v7.s4); dump();
sshl(v7.s4, v0.s4, v7.s4); dump();
sshl(v7.s4, v1.s4, v7.s4); dump();
sshl(v7.s4, v2.s4, v7.s4); dump();
sshl(v7.s4, v4.s4, v7.s4); dump();
sshl(v7.s4, v8.s4, v7.s4); dump();
sshl(v7.s4, v16.s4, v7.s4); dump();
sshl(v7.s4, v31.s4, v7.s4); dump();
sshl(v7.s4, v7.s4, v7.s4); dump();
sshl(v7.s4, v7.s4, v0.s4); dump();
sshl(v7.s4, v7.s4, v1.s4); dump();
sshl(v7.s4, v7.s4, v2.s4); dump();
sshl(v7.s4, v7.s4, v4.s4); dump();
sshl(v7.s4, v7.s4, v8.s4); dump();
sshl(v7.s4, v7.s4, v16.s4); dump();
sshl(v7.s4, v7.s4, v31.s4); dump();
sub(v7.s4, v7.s4, v7.s4); dump();
sub(v0.s4, v7.s4, v7.s4); dump();
sub(v1.s4, v7.s4, v7.s4); dump();
sub(v2.s4, v7.s4, v7.s4); dump();
sub(v4.s4, v7.s4, v7.s4); dump();
sub(v8.s4, v7.s4, v7.s4); dump();
sub(v16.s4, v7.s4, v7.s4); dump();
sub(v31.s4, v7.s4, v7.s4); dump();
sub(v7.s4, v7.s4, v7.s4); dump();
sub(v7.s4, v0.s4, v7.s4); dump();
sub(v7.s4, v1.s4, v7.s4); dump();
sub(v7.s4, v2.s4, v7.s4); dump();
sub(v7.s4, v4.s4, v7.s4); dump();
sub(v7.s4, v8.s4, v7.s4); dump();
sub(v7.s4, v16.s4, v7.s4); dump();
sub(v7.s4, v31.s4, v7.s4); dump();
sub(v7.s4, v7.s4, v7.s4); dump();
sub(v7.s4, v7.s4, v0.s4); dump();
sub(v7.s4, v7.s4, v1.s4); dump();
sub(v7.s4, v7.s4, v2.s4); dump();
sub(v7.s4, v7.s4, v4.s4); dump();
sub(v7.s4, v7.s4, v8.s4); dump();
sub(v7.s4, v7.s4, v16.s4); dump();
sub(v7.s4, v7.s4, v31.s4); dump();
urshl(v7.s4, v7.s4, v7.s4); dump();
urshl(v0.s4, v7.s4, v7.s4); dump();
urshl(v1.s4, v7.s4, v7.s4); dump();
urshl(v2.s4, v7.s4, v7.s4); dump();
urshl(v4.s4, v7.s4, v7.s4); dump();
urshl(v8.s4, v7.s4, v7.s4); dump();
urshl(v16.s4, v7.s4, v7.s4); dump();
urshl(v31.s4, v7.s4, v7.s4); dump();
urshl(v7.s4, v7.s4, v7.s4); dump();
urshl(v7.s4, v0.s4, v7.s4); dump();
urshl(v7.s4, v1.s4, v7.s4); dump();
urshl(v7.s4, v2.s4, v7.s4); dump();
urshl(v7.s4, v4.s4, v7.s4); dump();
urshl(v7.s4, v8.s4, v7.s4); dump();
urshl(v7.s4, v16.s4, v7.s4); dump();
urshl(v7.s4, v31.s4, v7.s4); dump();
urshl(v7.s4, v7.s4, v7.s4); dump();
urshl(v7.s4, v7.s4, v0.s4); dump();
urshl(v7.s4, v7.s4, v1.s4); dump();
urshl(v7.s4, v7.s4, v2.s4); dump();
urshl(v7.s4, v7.s4, v4.s4); dump();
urshl(v7.s4, v7.s4, v8.s4); dump();
urshl(v7.s4, v7.s4, v16.s4); dump();
urshl(v7.s4, v7.s4, v31.s4); dump();
ushl(v7.s4, v7.s4, v7.s4); dump();
ushl(v0.s4, v7.s4, v7.s4); dump();
ushl(v1.s4, v7.s4, v7.s4); dump();
ushl(v2.s4, v7.s4, v7.s4); dump();
ushl(v4.s4, v7.s4, v7.s4); dump();
ushl(v8.s4, v7.s4, v7.s4); dump();
ushl(v16.s4, v7.s4, v7.s4); dump();
ushl(v31.s4, v7.s4, v7.s4); dump();
ushl(v7.s4, v7.s4, v7.s4); dump();
ushl(v7.s4, v0.s4, v7.s4); dump();
ushl(v7.s4, v1.s4, v7.s4); dump();
ushl(v7.s4, v2.s4, v7.s4); dump();
ushl(v7.s4, v4.s4, v7.s4); dump();
ushl(v7.s4, v8.s4, v7.s4); dump();
ushl(v7.s4, v16.s4, v7.s4); dump();
ushl(v7.s4, v31.s4, v7.s4); dump();
ushl(v7.s4, v7.s4, v7.s4); dump();
ushl(v7.s4, v7.s4, v0.s4); dump();
ushl(v7.s4, v7.s4, v1.s4); dump();
ushl(v7.s4, v7.s4, v2.s4); dump();
ushl(v7.s4, v7.s4, v4.s4); dump();
ushl(v7.s4, v7.s4, v8.s4); dump();
ushl(v7.s4, v7.s4, v16.s4); dump();
ushl(v7.s4, v7.s4, v31.s4); dump();
//DataProcSimd_Arithmetic14:7
srshl(v7.d2, v7.d2, v7.d2); dump();
srshl(v0.d2, v7.d2, v7.d2); dump();
srshl(v1.d2, v7.d2, v7.d2); dump();
srshl(v2.d2, v7.d2, v7.d2); dump();
srshl(v4.d2, v7.d2, v7.d2); dump();
srshl(v8.d2, v7.d2, v7.d2); dump();
srshl(v16.d2, v7.d2, v7.d2); dump();
srshl(v31.d2, v7.d2, v7.d2); dump();
srshl(v7.d2, v7.d2, v7.d2); dump();
srshl(v7.d2, v0.d2, v7.d2); dump();
srshl(v7.d2, v1.d2, v7.d2); dump();
srshl(v7.d2, v2.d2, v7.d2); dump();
srshl(v7.d2, v4.d2, v7.d2); dump();
srshl(v7.d2, v8.d2, v7.d2); dump();
srshl(v7.d2, v16.d2, v7.d2); dump();
srshl(v7.d2, v31.d2, v7.d2); dump();
srshl(v7.d2, v7.d2, v7.d2); dump();
srshl(v7.d2, v7.d2, v0.d2); dump();
srshl(v7.d2, v7.d2, v1.d2); dump();
srshl(v7.d2, v7.d2, v2.d2); dump();
srshl(v7.d2, v7.d2, v4.d2); dump();
srshl(v7.d2, v7.d2, v8.d2); dump();
srshl(v7.d2, v7.d2, v16.d2); dump();
srshl(v7.d2, v7.d2, v31.d2); dump();
sshl(v7.d2, v7.d2, v7.d2); dump();
sshl(v0.d2, v7.d2, v7.d2); dump();
sshl(v1.d2, v7.d2, v7.d2); dump();
sshl(v2.d2, v7.d2, v7.d2); dump();
sshl(v4.d2, v7.d2, v7.d2); dump();
sshl(v8.d2, v7.d2, v7.d2); dump();
sshl(v16.d2, v7.d2, v7.d2); dump();
sshl(v31.d2, v7.d2, v7.d2); dump();
sshl(v7.d2, v7.d2, v7.d2); dump();
sshl(v7.d2, v0.d2, v7.d2); dump();
sshl(v7.d2, v1.d2, v7.d2); dump();
sshl(v7.d2, v2.d2, v7.d2); dump();
sshl(v7.d2, v4.d2, v7.d2); dump();
sshl(v7.d2, v8.d2, v7.d2); dump();
sshl(v7.d2, v16.d2, v7.d2); dump();
sshl(v7.d2, v31.d2, v7.d2); dump();
sshl(v7.d2, v7.d2, v7.d2); dump();
sshl(v7.d2, v7.d2, v0.d2); dump();
sshl(v7.d2, v7.d2, v1.d2); dump();
sshl(v7.d2, v7.d2, v2.d2); dump();
sshl(v7.d2, v7.d2, v4.d2); dump();
sshl(v7.d2, v7.d2, v8.d2); dump();
sshl(v7.d2, v7.d2, v16.d2); dump();
sshl(v7.d2, v7.d2, v31.d2); dump();
sub(v7.d2, v7.d2, v7.d2); dump();
sub(v0.d2, v7.d2, v7.d2); dump();
sub(v1.d2, v7.d2, v7.d2); dump();
sub(v2.d2, v7.d2, v7.d2); dump();
sub(v4.d2, v7.d2, v7.d2); dump();
sub(v8.d2, v7.d2, v7.d2); dump();
sub(v16.d2, v7.d2, v7.d2); dump();
sub(v31.d2, v7.d2, v7.d2); dump();
sub(v7.d2, v7.d2, v7.d2); dump();
sub(v7.d2, v0.d2, v7.d2); dump();
sub(v7.d2, v1.d2, v7.d2); dump();
sub(v7.d2, v2.d2, v7.d2); dump();
sub(v7.d2, v4.d2, v7.d2); dump();
sub(v7.d2, v8.d2, v7.d2); dump();
sub(v7.d2, v16.d2, v7.d2); dump();
sub(v7.d2, v31.d2, v7.d2); dump();
sub(v7.d2, v7.d2, v7.d2); dump();
sub(v7.d2, v7.d2, v0.d2); dump();
sub(v7.d2, v7.d2, v1.d2); dump();
sub(v7.d2, v7.d2, v2.d2); dump();
sub(v7.d2, v7.d2, v4.d2); dump();
sub(v7.d2, v7.d2, v8.d2); dump();
sub(v7.d2, v7.d2, v16.d2); dump();
sub(v7.d2, v7.d2, v31.d2); dump();
urshl(v7.d2, v7.d2, v7.d2); dump();
urshl(v0.d2, v7.d2, v7.d2); dump();
urshl(v1.d2, v7.d2, v7.d2); dump();
urshl(v2.d2, v7.d2, v7.d2); dump();
urshl(v4.d2, v7.d2, v7.d2); dump();
urshl(v8.d2, v7.d2, v7.d2); dump();
urshl(v16.d2, v7.d2, v7.d2); dump();
urshl(v31.d2, v7.d2, v7.d2); dump();
urshl(v7.d2, v7.d2, v7.d2); dump();
urshl(v7.d2, v0.d2, v7.d2); dump();
urshl(v7.d2, v1.d2, v7.d2); dump();
urshl(v7.d2, v2.d2, v7.d2); dump();
urshl(v7.d2, v4.d2, v7.d2); dump();
urshl(v7.d2, v8.d2, v7.d2); dump();
urshl(v7.d2, v16.d2, v7.d2); dump();
urshl(v7.d2, v31.d2, v7.d2); dump();
urshl(v7.d2, v7.d2, v7.d2); dump();
urshl(v7.d2, v7.d2, v0.d2); dump();
urshl(v7.d2, v7.d2, v1.d2); dump();
urshl(v7.d2, v7.d2, v2.d2); dump();
urshl(v7.d2, v7.d2, v4.d2); dump();
urshl(v7.d2, v7.d2, v8.d2); dump();
urshl(v7.d2, v7.d2, v16.d2); dump();
urshl(v7.d2, v7.d2, v31.d2); dump();
ushl(v7.d2, v7.d2, v7.d2); dump();
ushl(v0.d2, v7.d2, v7.d2); dump();
ushl(v1.d2, v7.d2, v7.d2); dump();
ushl(v2.d2, v7.d2, v7.d2); dump();
ushl(v4.d2, v7.d2, v7.d2); dump();
ushl(v8.d2, v7.d2, v7.d2); dump();
ushl(v16.d2, v7.d2, v7.d2); dump();
ushl(v31.d2, v7.d2, v7.d2); dump();
ushl(v7.d2, v7.d2, v7.d2); dump();
ushl(v7.d2, v0.d2, v7.d2); dump();
ushl(v7.d2, v1.d2, v7.d2); dump();
ushl(v7.d2, v2.d2, v7.d2); dump();
ushl(v7.d2, v4.d2, v7.d2); dump();
ushl(v7.d2, v8.d2, v7.d2); dump();
ushl(v7.d2, v16.d2, v7.d2); dump();
ushl(v7.d2, v31.d2, v7.d2); dump();
ushl(v7.d2, v7.d2, v7.d2); dump();
ushl(v7.d2, v7.d2, v0.d2); dump();
ushl(v7.d2, v7.d2, v1.d2); dump();
ushl(v7.d2, v7.d2, v2.d2); dump();
ushl(v7.d2, v7.d2, v4.d2); dump();
ushl(v7.d2, v7.d2, v8.d2); dump();
ushl(v7.d2, v7.d2, v16.d2); dump();
ushl(v7.d2, v7.d2, v31.d2); dump();
//DataProcSimd_Compare0:0
cmeq(d7, d7, d7); dump();
cmeq(d0, d7, d7); dump();
cmeq(d1, d7, d7); dump();
cmeq(d2, d7, d7); dump();
cmeq(d4, d7, d7); dump();
cmeq(d8, d7, d7); dump();
cmeq(d16, d7, d7); dump();
cmeq(d31, d7, d7); dump();
cmeq(d7, d7, d7); dump();
cmeq(d7, d0, d7); dump();
cmeq(d7, d1, d7); dump();
cmeq(d7, d2, d7); dump();
cmeq(d7, d4, d7); dump();
cmeq(d7, d8, d7); dump();
cmeq(d7, d16, d7); dump();
cmeq(d7, d31, d7); dump();
cmeq(d7, d7, d7); dump();
cmeq(d7, d7, d0); dump();
cmeq(d7, d7, d1); dump();
cmeq(d7, d7, d2); dump();
cmeq(d7, d7, d4); dump();
cmeq(d7, d7, d8); dump();
cmeq(d7, d7, d16); dump();
cmeq(d7, d7, d31); dump();
cmhs(d7, d7, d7); dump();
cmhs(d0, d7, d7); dump();
cmhs(d1, d7, d7); dump();
cmhs(d2, d7, d7); dump();
cmhs(d4, d7, d7); dump();
cmhs(d8, d7, d7); dump();
cmhs(d16, d7, d7); dump();
cmhs(d31, d7, d7); dump();
cmhs(d7, d7, d7); dump();
cmhs(d7, d0, d7); dump();
cmhs(d7, d1, d7); dump();
cmhs(d7, d2, d7); dump();
cmhs(d7, d4, d7); dump();
cmhs(d7, d8, d7); dump();
cmhs(d7, d16, d7); dump();
cmhs(d7, d31, d7); dump();
cmhs(d7, d7, d7); dump();
cmhs(d7, d7, d0); dump();
cmhs(d7, d7, d1); dump();
cmhs(d7, d7, d2); dump();
cmhs(d7, d7, d4); dump();
cmhs(d7, d7, d8); dump();
cmhs(d7, d7, d16); dump();
cmhs(d7, d7, d31); dump();
cmge(d7, d7, d7); dump();
cmge(d0, d7, d7); dump();
cmge(d1, d7, d7); dump();
cmge(d2, d7, d7); dump();
cmge(d4, d7, d7); dump();
cmge(d8, d7, d7); dump();
cmge(d16, d7, d7); dump();
cmge(d31, d7, d7); dump();
cmge(d7, d7, d7); dump();
cmge(d7, d0, d7); dump();
cmge(d7, d1, d7); dump();
cmge(d7, d2, d7); dump();
cmge(d7, d4, d7); dump();
cmge(d7, d8, d7); dump();
cmge(d7, d16, d7); dump();
cmge(d7, d31, d7); dump();
cmge(d7, d7, d7); dump();
cmge(d7, d7, d0); dump();
cmge(d7, d7, d1); dump();
cmge(d7, d7, d2); dump();
cmge(d7, d7, d4); dump();
cmge(d7, d7, d8); dump();
cmge(d7, d7, d16); dump();
cmge(d7, d7, d31); dump();
cmhi(d7, d7, d7); dump();
cmhi(d0, d7, d7); dump();
cmhi(d1, d7, d7); dump();
cmhi(d2, d7, d7); dump();
cmhi(d4, d7, d7); dump();
cmhi(d8, d7, d7); dump();
cmhi(d16, d7, d7); dump();
cmhi(d31, d7, d7); dump();
cmhi(d7, d7, d7); dump();
cmhi(d7, d0, d7); dump();
cmhi(d7, d1, d7); dump();
cmhi(d7, d2, d7); dump();
cmhi(d7, d4, d7); dump();
cmhi(d7, d8, d7); dump();
cmhi(d7, d16, d7); dump();
cmhi(d7, d31, d7); dump();
cmhi(d7, d7, d7); dump();
cmhi(d7, d7, d0); dump();
cmhi(d7, d7, d1); dump();
cmhi(d7, d7, d2); dump();
cmhi(d7, d7, d4); dump();
cmhi(d7, d7, d8); dump();
cmhi(d7, d7, d16); dump();
cmhi(d7, d7, d31); dump();
cmgt(d7, d7, d7); dump();
cmgt(d0, d7, d7); dump();
cmgt(d1, d7, d7); dump();
cmgt(d2, d7, d7); dump();
cmgt(d4, d7, d7); dump();
cmgt(d8, d7, d7); dump();
cmgt(d16, d7, d7); dump();
cmgt(d31, d7, d7); dump();
cmgt(d7, d7, d7); dump();
cmgt(d7, d0, d7); dump();
cmgt(d7, d1, d7); dump();
cmgt(d7, d2, d7); dump();
cmgt(d7, d4, d7); dump();
cmgt(d7, d8, d7); dump();
cmgt(d7, d16, d7); dump();
cmgt(d7, d31, d7); dump();
cmgt(d7, d7, d7); dump();
cmgt(d7, d7, d0); dump();
cmgt(d7, d7, d1); dump();
cmgt(d7, d7, d2); dump();
cmgt(d7, d7, d4); dump();
cmgt(d7, d7, d8); dump();
cmgt(d7, d7, d16); dump();
cmgt(d7, d7, d31); dump();
cmtst(d7, d7, d7); dump();
cmtst(d0, d7, d7); dump();
cmtst(d1, d7, d7); dump();
cmtst(d2, d7, d7); dump();
cmtst(d4, d7, d7); dump();
cmtst(d8, d7, d7); dump();
cmtst(d16, d7, d7); dump();
cmtst(d31, d7, d7); dump();
cmtst(d7, d7, d7); dump();
cmtst(d7, d0, d7); dump();
cmtst(d7, d1, d7); dump();
cmtst(d7, d2, d7); dump();
cmtst(d7, d4, d7); dump();
cmtst(d7, d8, d7); dump();
cmtst(d7, d16, d7); dump();
cmtst(d7, d31, d7); dump();
cmtst(d7, d7, d7); dump();
cmtst(d7, d7, d0); dump();
cmtst(d7, d7, d1); dump();
cmtst(d7, d7, d2); dump();
cmtst(d7, d7, d4); dump();
cmtst(d7, d7, d8); dump();
cmtst(d7, d7, d16); dump();
cmtst(d7, d7, d31); dump();
//DataProcSimd_Compare0:1
cmeq(v7.b8, v7.b8, v7.b8); dump();
cmeq(v0.b8, v7.b8, v7.b8); dump();
cmeq(v1.b8, v7.b8, v7.b8); dump();
cmeq(v2.b8, v7.b8, v7.b8); dump();
cmeq(v4.b8, v7.b8, v7.b8); dump();
cmeq(v8.b8, v7.b8, v7.b8); dump();
cmeq(v16.b8, v7.b8, v7.b8); dump();
cmeq(v31.b8, v7.b8, v7.b8); dump();
cmeq(v7.b8, v7.b8, v7.b8); dump();
cmeq(v7.b8, v0.b8, v7.b8); dump();
cmeq(v7.b8, v1.b8, v7.b8); dump();
cmeq(v7.b8, v2.b8, v7.b8); dump();
cmeq(v7.b8, v4.b8, v7.b8); dump();
cmeq(v7.b8, v8.b8, v7.b8); dump();
cmeq(v7.b8, v16.b8, v7.b8); dump();
cmeq(v7.b8, v31.b8, v7.b8); dump();
cmeq(v7.b8, v7.b8, v7.b8); dump();
cmeq(v7.b8, v7.b8, v0.b8); dump();
cmeq(v7.b8, v7.b8, v1.b8); dump();
cmeq(v7.b8, v7.b8, v2.b8); dump();
cmeq(v7.b8, v7.b8, v4.b8); dump();
cmeq(v7.b8, v7.b8, v8.b8); dump();
cmeq(v7.b8, v7.b8, v16.b8); dump();
cmeq(v7.b8, v7.b8, v31.b8); dump();
cmhs(v7.b8, v7.b8, v7.b8); dump();
cmhs(v0.b8, v7.b8, v7.b8); dump();
cmhs(v1.b8, v7.b8, v7.b8); dump();
cmhs(v2.b8, v7.b8, v7.b8); dump();
cmhs(v4.b8, v7.b8, v7.b8); dump();
cmhs(v8.b8, v7.b8, v7.b8); dump();
cmhs(v16.b8, v7.b8, v7.b8); dump();
cmhs(v31.b8, v7.b8, v7.b8); dump();
cmhs(v7.b8, v7.b8, v7.b8); dump();
cmhs(v7.b8, v0.b8, v7.b8); dump();
cmhs(v7.b8, v1.b8, v7.b8); dump();
cmhs(v7.b8, v2.b8, v7.b8); dump();
cmhs(v7.b8, v4.b8, v7.b8); dump();
cmhs(v7.b8, v8.b8, v7.b8); dump();
cmhs(v7.b8, v16.b8, v7.b8); dump();
cmhs(v7.b8, v31.b8, v7.b8); dump();
cmhs(v7.b8, v7.b8, v7.b8); dump();
cmhs(v7.b8, v7.b8, v0.b8); dump();
cmhs(v7.b8, v7.b8, v1.b8); dump();
cmhs(v7.b8, v7.b8, v2.b8); dump();
cmhs(v7.b8, v7.b8, v4.b8); dump();
cmhs(v7.b8, v7.b8, v8.b8); dump();
cmhs(v7.b8, v7.b8, v16.b8); dump();
cmhs(v7.b8, v7.b8, v31.b8); dump();
cmge(v7.b8, v7.b8, v7.b8); dump();
cmge(v0.b8, v7.b8, v7.b8); dump();
cmge(v1.b8, v7.b8, v7.b8); dump();
cmge(v2.b8, v7.b8, v7.b8); dump();
cmge(v4.b8, v7.b8, v7.b8); dump();
cmge(v8.b8, v7.b8, v7.b8); dump();
cmge(v16.b8, v7.b8, v7.b8); dump();
cmge(v31.b8, v7.b8, v7.b8); dump();
cmge(v7.b8, v7.b8, v7.b8); dump();
cmge(v7.b8, v0.b8, v7.b8); dump();
cmge(v7.b8, v1.b8, v7.b8); dump();
cmge(v7.b8, v2.b8, v7.b8); dump();
cmge(v7.b8, v4.b8, v7.b8); dump();
cmge(v7.b8, v8.b8, v7.b8); dump();
cmge(v7.b8, v16.b8, v7.b8); dump();
cmge(v7.b8, v31.b8, v7.b8); dump();
cmge(v7.b8, v7.b8, v7.b8); dump();
cmge(v7.b8, v7.b8, v0.b8); dump();
cmge(v7.b8, v7.b8, v1.b8); dump();
cmge(v7.b8, v7.b8, v2.b8); dump();
cmge(v7.b8, v7.b8, v4.b8); dump();
cmge(v7.b8, v7.b8, v8.b8); dump();
cmge(v7.b8, v7.b8, v16.b8); dump();
cmge(v7.b8, v7.b8, v31.b8); dump();
cmhi(v7.b8, v7.b8, v7.b8); dump();
cmhi(v0.b8, v7.b8, v7.b8); dump();
cmhi(v1.b8, v7.b8, v7.b8); dump();
cmhi(v2.b8, v7.b8, v7.b8); dump();
cmhi(v4.b8, v7.b8, v7.b8); dump();
cmhi(v8.b8, v7.b8, v7.b8); dump();
cmhi(v16.b8, v7.b8, v7.b8); dump();
cmhi(v31.b8, v7.b8, v7.b8); dump();
cmhi(v7.b8, v7.b8, v7.b8); dump();
cmhi(v7.b8, v0.b8, v7.b8); dump();
cmhi(v7.b8, v1.b8, v7.b8); dump();
cmhi(v7.b8, v2.b8, v7.b8); dump();
cmhi(v7.b8, v4.b8, v7.b8); dump();
cmhi(v7.b8, v8.b8, v7.b8); dump();
cmhi(v7.b8, v16.b8, v7.b8); dump();
cmhi(v7.b8, v31.b8, v7.b8); dump();
cmhi(v7.b8, v7.b8, v7.b8); dump();
cmhi(v7.b8, v7.b8, v0.b8); dump();
cmhi(v7.b8, v7.b8, v1.b8); dump();
cmhi(v7.b8, v7.b8, v2.b8); dump();
cmhi(v7.b8, v7.b8, v4.b8); dump();
cmhi(v7.b8, v7.b8, v8.b8); dump();
cmhi(v7.b8, v7.b8, v16.b8); dump();
cmhi(v7.b8, v7.b8, v31.b8); dump();
cmgt(v7.b8, v7.b8, v7.b8); dump();
cmgt(v0.b8, v7.b8, v7.b8); dump();
cmgt(v1.b8, v7.b8, v7.b8); dump();
cmgt(v2.b8, v7.b8, v7.b8); dump();
cmgt(v4.b8, v7.b8, v7.b8); dump();
cmgt(v8.b8, v7.b8, v7.b8); dump();
cmgt(v16.b8, v7.b8, v7.b8); dump();
cmgt(v31.b8, v7.b8, v7.b8); dump();
cmgt(v7.b8, v7.b8, v7.b8); dump();
cmgt(v7.b8, v0.b8, v7.b8); dump();
cmgt(v7.b8, v1.b8, v7.b8); dump();
cmgt(v7.b8, v2.b8, v7.b8); dump();
cmgt(v7.b8, v4.b8, v7.b8); dump();
cmgt(v7.b8, v8.b8, v7.b8); dump();
cmgt(v7.b8, v16.b8, v7.b8); dump();
cmgt(v7.b8, v31.b8, v7.b8); dump();
cmgt(v7.b8, v7.b8, v7.b8); dump();
cmgt(v7.b8, v7.b8, v0.b8); dump();
cmgt(v7.b8, v7.b8, v1.b8); dump();
cmgt(v7.b8, v7.b8, v2.b8); dump();
cmgt(v7.b8, v7.b8, v4.b8); dump();
cmgt(v7.b8, v7.b8, v8.b8); dump();
cmgt(v7.b8, v7.b8, v16.b8); dump();
cmgt(v7.b8, v7.b8, v31.b8); dump();
cmtst(v7.b8, v7.b8, v7.b8); dump();
cmtst(v0.b8, v7.b8, v7.b8); dump();
cmtst(v1.b8, v7.b8, v7.b8); dump();
cmtst(v2.b8, v7.b8, v7.b8); dump();
cmtst(v4.b8, v7.b8, v7.b8); dump();
cmtst(v8.b8, v7.b8, v7.b8); dump();
cmtst(v16.b8, v7.b8, v7.b8); dump();
cmtst(v31.b8, v7.b8, v7.b8); dump();
cmtst(v7.b8, v7.b8, v7.b8); dump();
cmtst(v7.b8, v0.b8, v7.b8); dump();
cmtst(v7.b8, v1.b8, v7.b8); dump();
cmtst(v7.b8, v2.b8, v7.b8); dump();
cmtst(v7.b8, v4.b8, v7.b8); dump();
cmtst(v7.b8, v8.b8, v7.b8); dump();
cmtst(v7.b8, v16.b8, v7.b8); dump();
cmtst(v7.b8, v31.b8, v7.b8); dump();
cmtst(v7.b8, v7.b8, v7.b8); dump();
cmtst(v7.b8, v7.b8, v0.b8); dump();
cmtst(v7.b8, v7.b8, v1.b8); dump();
cmtst(v7.b8, v7.b8, v2.b8); dump();
cmtst(v7.b8, v7.b8, v4.b8); dump();
cmtst(v7.b8, v7.b8, v8.b8); dump();
cmtst(v7.b8, v7.b8, v16.b8); dump();
cmtst(v7.b8, v7.b8, v31.b8); dump();
//DataProcSimd_Compare0:2
cmeq(v7.b16, v7.b16, v7.b16); dump();
cmeq(v0.b16, v7.b16, v7.b16); dump();
cmeq(v1.b16, v7.b16, v7.b16); dump();
cmeq(v2.b16, v7.b16, v7.b16); dump();
cmeq(v4.b16, v7.b16, v7.b16); dump();
cmeq(v8.b16, v7.b16, v7.b16); dump();
cmeq(v16.b16, v7.b16, v7.b16); dump();
cmeq(v31.b16, v7.b16, v7.b16); dump();
cmeq(v7.b16, v7.b16, v7.b16); dump();
cmeq(v7.b16, v0.b16, v7.b16); dump();
cmeq(v7.b16, v1.b16, v7.b16); dump();
cmeq(v7.b16, v2.b16, v7.b16); dump();
cmeq(v7.b16, v4.b16, v7.b16); dump();
cmeq(v7.b16, v8.b16, v7.b16); dump();
cmeq(v7.b16, v16.b16, v7.b16); dump();
cmeq(v7.b16, v31.b16, v7.b16); dump();
cmeq(v7.b16, v7.b16, v7.b16); dump();
cmeq(v7.b16, v7.b16, v0.b16); dump();
cmeq(v7.b16, v7.b16, v1.b16); dump();
cmeq(v7.b16, v7.b16, v2.b16); dump();
cmeq(v7.b16, v7.b16, v4.b16); dump();
cmeq(v7.b16, v7.b16, v8.b16); dump();
cmeq(v7.b16, v7.b16, v16.b16); dump();
cmeq(v7.b16, v7.b16, v31.b16); dump();
cmhs(v7.b16, v7.b16, v7.b16); dump();
cmhs(v0.b16, v7.b16, v7.b16); dump();
cmhs(v1.b16, v7.b16, v7.b16); dump();
cmhs(v2.b16, v7.b16, v7.b16); dump();
cmhs(v4.b16, v7.b16, v7.b16); dump();
cmhs(v8.b16, v7.b16, v7.b16); dump();
cmhs(v16.b16, v7.b16, v7.b16); dump();
cmhs(v31.b16, v7.b16, v7.b16); dump();
cmhs(v7.b16, v7.b16, v7.b16); dump();
cmhs(v7.b16, v0.b16, v7.b16); dump();
cmhs(v7.b16, v1.b16, v7.b16); dump();
cmhs(v7.b16, v2.b16, v7.b16); dump();
cmhs(v7.b16, v4.b16, v7.b16); dump();
cmhs(v7.b16, v8.b16, v7.b16); dump();
cmhs(v7.b16, v16.b16, v7.b16); dump();
cmhs(v7.b16, v31.b16, v7.b16); dump();
cmhs(v7.b16, v7.b16, v7.b16); dump();
cmhs(v7.b16, v7.b16, v0.b16); dump();
cmhs(v7.b16, v7.b16, v1.b16); dump();
cmhs(v7.b16, v7.b16, v2.b16); dump();
cmhs(v7.b16, v7.b16, v4.b16); dump();
cmhs(v7.b16, v7.b16, v8.b16); dump();
cmhs(v7.b16, v7.b16, v16.b16); dump();
cmhs(v7.b16, v7.b16, v31.b16); dump();
cmge(v7.b16, v7.b16, v7.b16); dump();
cmge(v0.b16, v7.b16, v7.b16); dump();
cmge(v1.b16, v7.b16, v7.b16); dump();
cmge(v2.b16, v7.b16, v7.b16); dump();
cmge(v4.b16, v7.b16, v7.b16); dump();
cmge(v8.b16, v7.b16, v7.b16); dump();
cmge(v16.b16, v7.b16, v7.b16); dump();
cmge(v31.b16, v7.b16, v7.b16); dump();
cmge(v7.b16, v7.b16, v7.b16); dump();
cmge(v7.b16, v0.b16, v7.b16); dump();
cmge(v7.b16, v1.b16, v7.b16); dump();
cmge(v7.b16, v2.b16, v7.b16); dump();
cmge(v7.b16, v4.b16, v7.b16); dump();
cmge(v7.b16, v8.b16, v7.b16); dump();
cmge(v7.b16, v16.b16, v7.b16); dump();
cmge(v7.b16, v31.b16, v7.b16); dump();
cmge(v7.b16, v7.b16, v7.b16); dump();
cmge(v7.b16, v7.b16, v0.b16); dump();
cmge(v7.b16, v7.b16, v1.b16); dump();
cmge(v7.b16, v7.b16, v2.b16); dump();
cmge(v7.b16, v7.b16, v4.b16); dump();
cmge(v7.b16, v7.b16, v8.b16); dump();
cmge(v7.b16, v7.b16, v16.b16); dump();
cmge(v7.b16, v7.b16, v31.b16); dump();
cmhi(v7.b16, v7.b16, v7.b16); dump();
cmhi(v0.b16, v7.b16, v7.b16); dump();
cmhi(v1.b16, v7.b16, v7.b16); dump();
cmhi(v2.b16, v7.b16, v7.b16); dump();
cmhi(v4.b16, v7.b16, v7.b16); dump();
cmhi(v8.b16, v7.b16, v7.b16); dump();
cmhi(v16.b16, v7.b16, v7.b16); dump();
cmhi(v31.b16, v7.b16, v7.b16); dump();
cmhi(v7.b16, v7.b16, v7.b16); dump();
cmhi(v7.b16, v0.b16, v7.b16); dump();
cmhi(v7.b16, v1.b16, v7.b16); dump();
cmhi(v7.b16, v2.b16, v7.b16); dump();
cmhi(v7.b16, v4.b16, v7.b16); dump();
cmhi(v7.b16, v8.b16, v7.b16); dump();
cmhi(v7.b16, v16.b16, v7.b16); dump();
cmhi(v7.b16, v31.b16, v7.b16); dump();
cmhi(v7.b16, v7.b16, v7.b16); dump();
cmhi(v7.b16, v7.b16, v0.b16); dump();
cmhi(v7.b16, v7.b16, v1.b16); dump();
cmhi(v7.b16, v7.b16, v2.b16); dump();
cmhi(v7.b16, v7.b16, v4.b16); dump();
cmhi(v7.b16, v7.b16, v8.b16); dump();
cmhi(v7.b16, v7.b16, v16.b16); dump();
cmhi(v7.b16, v7.b16, v31.b16); dump();
cmgt(v7.b16, v7.b16, v7.b16); dump();
cmgt(v0.b16, v7.b16, v7.b16); dump();
cmgt(v1.b16, v7.b16, v7.b16); dump();
cmgt(v2.b16, v7.b16, v7.b16); dump();
cmgt(v4.b16, v7.b16, v7.b16); dump();
cmgt(v8.b16, v7.b16, v7.b16); dump();
cmgt(v16.b16, v7.b16, v7.b16); dump();
cmgt(v31.b16, v7.b16, v7.b16); dump();
cmgt(v7.b16, v7.b16, v7.b16); dump();
cmgt(v7.b16, v0.b16, v7.b16); dump();
cmgt(v7.b16, v1.b16, v7.b16); dump();
cmgt(v7.b16, v2.b16, v7.b16); dump();
cmgt(v7.b16, v4.b16, v7.b16); dump();
cmgt(v7.b16, v8.b16, v7.b16); dump();
cmgt(v7.b16, v16.b16, v7.b16); dump();
cmgt(v7.b16, v31.b16, v7.b16); dump();
cmgt(v7.b16, v7.b16, v7.b16); dump();
cmgt(v7.b16, v7.b16, v0.b16); dump();
cmgt(v7.b16, v7.b16, v1.b16); dump();
cmgt(v7.b16, v7.b16, v2.b16); dump();
cmgt(v7.b16, v7.b16, v4.b16); dump();
cmgt(v7.b16, v7.b16, v8.b16); dump();
cmgt(v7.b16, v7.b16, v16.b16); dump();
cmgt(v7.b16, v7.b16, v31.b16); dump();
cmtst(v7.b16, v7.b16, v7.b16); dump();
cmtst(v0.b16, v7.b16, v7.b16); dump();
cmtst(v1.b16, v7.b16, v7.b16); dump();
cmtst(v2.b16, v7.b16, v7.b16); dump();
cmtst(v4.b16, v7.b16, v7.b16); dump();
cmtst(v8.b16, v7.b16, v7.b16); dump();
cmtst(v16.b16, v7.b16, v7.b16); dump();
cmtst(v31.b16, v7.b16, v7.b16); dump();
cmtst(v7.b16, v7.b16, v7.b16); dump();
cmtst(v7.b16, v0.b16, v7.b16); dump();
cmtst(v7.b16, v1.b16, v7.b16); dump();
cmtst(v7.b16, v2.b16, v7.b16); dump();
cmtst(v7.b16, v4.b16, v7.b16); dump();
cmtst(v7.b16, v8.b16, v7.b16); dump();
cmtst(v7.b16, v16.b16, v7.b16); dump();
cmtst(v7.b16, v31.b16, v7.b16); dump();
cmtst(v7.b16, v7.b16, v7.b16); dump();
cmtst(v7.b16, v7.b16, v0.b16); dump();
cmtst(v7.b16, v7.b16, v1.b16); dump();
cmtst(v7.b16, v7.b16, v2.b16); dump();
cmtst(v7.b16, v7.b16, v4.b16); dump();
cmtst(v7.b16, v7.b16, v8.b16); dump();
cmtst(v7.b16, v7.b16, v16.b16); dump();
cmtst(v7.b16, v7.b16, v31.b16); dump();
//DataProcSimd_Compare0:3
cmeq(v7.h4, v7.h4, v7.h4); dump();
cmeq(v0.h4, v7.h4, v7.h4); dump();
cmeq(v1.h4, v7.h4, v7.h4); dump();
cmeq(v2.h4, v7.h4, v7.h4); dump();
cmeq(v4.h4, v7.h4, v7.h4); dump();
cmeq(v8.h4, v7.h4, v7.h4); dump();
cmeq(v16.h4, v7.h4, v7.h4); dump();
cmeq(v31.h4, v7.h4, v7.h4); dump();
cmeq(v7.h4, v7.h4, v7.h4); dump();
cmeq(v7.h4, v0.h4, v7.h4); dump();
cmeq(v7.h4, v1.h4, v7.h4); dump();
cmeq(v7.h4, v2.h4, v7.h4); dump();
cmeq(v7.h4, v4.h4, v7.h4); dump();
cmeq(v7.h4, v8.h4, v7.h4); dump();
cmeq(v7.h4, v16.h4, v7.h4); dump();
cmeq(v7.h4, v31.h4, v7.h4); dump();
cmeq(v7.h4, v7.h4, v7.h4); dump();
cmeq(v7.h4, v7.h4, v0.h4); dump();
cmeq(v7.h4, v7.h4, v1.h4); dump();
cmeq(v7.h4, v7.h4, v2.h4); dump();
cmeq(v7.h4, v7.h4, v4.h4); dump();
cmeq(v7.h4, v7.h4, v8.h4); dump();
cmeq(v7.h4, v7.h4, v16.h4); dump();
cmeq(v7.h4, v7.h4, v31.h4); dump();
cmhs(v7.h4, v7.h4, v7.h4); dump();
cmhs(v0.h4, v7.h4, v7.h4); dump();
cmhs(v1.h4, v7.h4, v7.h4); dump();
cmhs(v2.h4, v7.h4, v7.h4); dump();
cmhs(v4.h4, v7.h4, v7.h4); dump();
cmhs(v8.h4, v7.h4, v7.h4); dump();
cmhs(v16.h4, v7.h4, v7.h4); dump();
cmhs(v31.h4, v7.h4, v7.h4); dump();
cmhs(v7.h4, v7.h4, v7.h4); dump();
cmhs(v7.h4, v0.h4, v7.h4); dump();
cmhs(v7.h4, v1.h4, v7.h4); dump();
cmhs(v7.h4, v2.h4, v7.h4); dump();
cmhs(v7.h4, v4.h4, v7.h4); dump();
cmhs(v7.h4, v8.h4, v7.h4); dump();
cmhs(v7.h4, v16.h4, v7.h4); dump();
cmhs(v7.h4, v31.h4, v7.h4); dump();
cmhs(v7.h4, v7.h4, v7.h4); dump();
cmhs(v7.h4, v7.h4, v0.h4); dump();
cmhs(v7.h4, v7.h4, v1.h4); dump();
cmhs(v7.h4, v7.h4, v2.h4); dump();
cmhs(v7.h4, v7.h4, v4.h4); dump();
cmhs(v7.h4, v7.h4, v8.h4); dump();
cmhs(v7.h4, v7.h4, v16.h4); dump();
cmhs(v7.h4, v7.h4, v31.h4); dump();
cmge(v7.h4, v7.h4, v7.h4); dump();
cmge(v0.h4, v7.h4, v7.h4); dump();
cmge(v1.h4, v7.h4, v7.h4); dump();
cmge(v2.h4, v7.h4, v7.h4); dump();
cmge(v4.h4, v7.h4, v7.h4); dump();
cmge(v8.h4, v7.h4, v7.h4); dump();
cmge(v16.h4, v7.h4, v7.h4); dump();
cmge(v31.h4, v7.h4, v7.h4); dump();
cmge(v7.h4, v7.h4, v7.h4); dump();
cmge(v7.h4, v0.h4, v7.h4); dump();
cmge(v7.h4, v1.h4, v7.h4); dump();
cmge(v7.h4, v2.h4, v7.h4); dump();
cmge(v7.h4, v4.h4, v7.h4); dump();
cmge(v7.h4, v8.h4, v7.h4); dump();
cmge(v7.h4, v16.h4, v7.h4); dump();
cmge(v7.h4, v31.h4, v7.h4); dump();
cmge(v7.h4, v7.h4, v7.h4); dump();
cmge(v7.h4, v7.h4, v0.h4); dump();
cmge(v7.h4, v7.h4, v1.h4); dump();
cmge(v7.h4, v7.h4, v2.h4); dump();
cmge(v7.h4, v7.h4, v4.h4); dump();
cmge(v7.h4, v7.h4, v8.h4); dump();
cmge(v7.h4, v7.h4, v16.h4); dump();
cmge(v7.h4, v7.h4, v31.h4); dump();
cmhi(v7.h4, v7.h4, v7.h4); dump();
cmhi(v0.h4, v7.h4, v7.h4); dump();
cmhi(v1.h4, v7.h4, v7.h4); dump();
cmhi(v2.h4, v7.h4, v7.h4); dump();
cmhi(v4.h4, v7.h4, v7.h4); dump();
cmhi(v8.h4, v7.h4, v7.h4); dump();
cmhi(v16.h4, v7.h4, v7.h4); dump();
cmhi(v31.h4, v7.h4, v7.h4); dump();
cmhi(v7.h4, v7.h4, v7.h4); dump();
cmhi(v7.h4, v0.h4, v7.h4); dump();
cmhi(v7.h4, v1.h4, v7.h4); dump();
cmhi(v7.h4, v2.h4, v7.h4); dump();
cmhi(v7.h4, v4.h4, v7.h4); dump();
cmhi(v7.h4, v8.h4, v7.h4); dump();
cmhi(v7.h4, v16.h4, v7.h4); dump();
cmhi(v7.h4, v31.h4, v7.h4); dump();
cmhi(v7.h4, v7.h4, v7.h4); dump();
cmhi(v7.h4, v7.h4, v0.h4); dump();
cmhi(v7.h4, v7.h4, v1.h4); dump();
cmhi(v7.h4, v7.h4, v2.h4); dump();
cmhi(v7.h4, v7.h4, v4.h4); dump();
cmhi(v7.h4, v7.h4, v8.h4); dump();
cmhi(v7.h4, v7.h4, v16.h4); dump();
cmhi(v7.h4, v7.h4, v31.h4); dump();
cmgt(v7.h4, v7.h4, v7.h4); dump();
cmgt(v0.h4, v7.h4, v7.h4); dump();
cmgt(v1.h4, v7.h4, v7.h4); dump();
cmgt(v2.h4, v7.h4, v7.h4); dump();
cmgt(v4.h4, v7.h4, v7.h4); dump();
cmgt(v8.h4, v7.h4, v7.h4); dump();
cmgt(v16.h4, v7.h4, v7.h4); dump();
cmgt(v31.h4, v7.h4, v7.h4); dump();
cmgt(v7.h4, v7.h4, v7.h4); dump();
cmgt(v7.h4, v0.h4, v7.h4); dump();
cmgt(v7.h4, v1.h4, v7.h4); dump();
cmgt(v7.h4, v2.h4, v7.h4); dump();
cmgt(v7.h4, v4.h4, v7.h4); dump();
cmgt(v7.h4, v8.h4, v7.h4); dump();
cmgt(v7.h4, v16.h4, v7.h4); dump();
cmgt(v7.h4, v31.h4, v7.h4); dump();
cmgt(v7.h4, v7.h4, v7.h4); dump();
cmgt(v7.h4, v7.h4, v0.h4); dump();
cmgt(v7.h4, v7.h4, v1.h4); dump();
cmgt(v7.h4, v7.h4, v2.h4); dump();
cmgt(v7.h4, v7.h4, v4.h4); dump();
cmgt(v7.h4, v7.h4, v8.h4); dump();
cmgt(v7.h4, v7.h4, v16.h4); dump();
cmgt(v7.h4, v7.h4, v31.h4); dump();
cmtst(v7.h4, v7.h4, v7.h4); dump();
cmtst(v0.h4, v7.h4, v7.h4); dump();
cmtst(v1.h4, v7.h4, v7.h4); dump();
cmtst(v2.h4, v7.h4, v7.h4); dump();
cmtst(v4.h4, v7.h4, v7.h4); dump();
cmtst(v8.h4, v7.h4, v7.h4); dump();
cmtst(v16.h4, v7.h4, v7.h4); dump();
cmtst(v31.h4, v7.h4, v7.h4); dump();
cmtst(v7.h4, v7.h4, v7.h4); dump();
cmtst(v7.h4, v0.h4, v7.h4); dump();
cmtst(v7.h4, v1.h4, v7.h4); dump();
cmtst(v7.h4, v2.h4, v7.h4); dump();
cmtst(v7.h4, v4.h4, v7.h4); dump();
cmtst(v7.h4, v8.h4, v7.h4); dump();
cmtst(v7.h4, v16.h4, v7.h4); dump();
cmtst(v7.h4, v31.h4, v7.h4); dump();
cmtst(v7.h4, v7.h4, v7.h4); dump();
cmtst(v7.h4, v7.h4, v0.h4); dump();
cmtst(v7.h4, v7.h4, v1.h4); dump();
cmtst(v7.h4, v7.h4, v2.h4); dump();
cmtst(v7.h4, v7.h4, v4.h4); dump();
cmtst(v7.h4, v7.h4, v8.h4); dump();
cmtst(v7.h4, v7.h4, v16.h4); dump();
cmtst(v7.h4, v7.h4, v31.h4); dump();
//DataProcSimd_Compare0:4
cmeq(v7.h8, v7.h8, v7.h8); dump();
cmeq(v0.h8, v7.h8, v7.h8); dump();
cmeq(v1.h8, v7.h8, v7.h8); dump();
cmeq(v2.h8, v7.h8, v7.h8); dump();
cmeq(v4.h8, v7.h8, v7.h8); dump();
cmeq(v8.h8, v7.h8, v7.h8); dump();
cmeq(v16.h8, v7.h8, v7.h8); dump();
cmeq(v31.h8, v7.h8, v7.h8); dump();
cmeq(v7.h8, v7.h8, v7.h8); dump();
cmeq(v7.h8, v0.h8, v7.h8); dump();
cmeq(v7.h8, v1.h8, v7.h8); dump();
cmeq(v7.h8, v2.h8, v7.h8); dump();
cmeq(v7.h8, v4.h8, v7.h8); dump();
cmeq(v7.h8, v8.h8, v7.h8); dump();
cmeq(v7.h8, v16.h8, v7.h8); dump();
cmeq(v7.h8, v31.h8, v7.h8); dump();
cmeq(v7.h8, v7.h8, v7.h8); dump();
cmeq(v7.h8, v7.h8, v0.h8); dump();
cmeq(v7.h8, v7.h8, v1.h8); dump();
cmeq(v7.h8, v7.h8, v2.h8); dump();
cmeq(v7.h8, v7.h8, v4.h8); dump();
cmeq(v7.h8, v7.h8, v8.h8); dump();
cmeq(v7.h8, v7.h8, v16.h8); dump();
cmeq(v7.h8, v7.h8, v31.h8); dump();
cmhs(v7.h8, v7.h8, v7.h8); dump();
cmhs(v0.h8, v7.h8, v7.h8); dump();
cmhs(v1.h8, v7.h8, v7.h8); dump();
cmhs(v2.h8, v7.h8, v7.h8); dump();
cmhs(v4.h8, v7.h8, v7.h8); dump();
cmhs(v8.h8, v7.h8, v7.h8); dump();
cmhs(v16.h8, v7.h8, v7.h8); dump();
cmhs(v31.h8, v7.h8, v7.h8); dump();
cmhs(v7.h8, v7.h8, v7.h8); dump();
cmhs(v7.h8, v0.h8, v7.h8); dump();
cmhs(v7.h8, v1.h8, v7.h8); dump();
cmhs(v7.h8, v2.h8, v7.h8); dump();
cmhs(v7.h8, v4.h8, v7.h8); dump();
cmhs(v7.h8, v8.h8, v7.h8); dump();
cmhs(v7.h8, v16.h8, v7.h8); dump();
cmhs(v7.h8, v31.h8, v7.h8); dump();
cmhs(v7.h8, v7.h8, v7.h8); dump();
cmhs(v7.h8, v7.h8, v0.h8); dump();
cmhs(v7.h8, v7.h8, v1.h8); dump();
cmhs(v7.h8, v7.h8, v2.h8); dump();
cmhs(v7.h8, v7.h8, v4.h8); dump();
cmhs(v7.h8, v7.h8, v8.h8); dump();
cmhs(v7.h8, v7.h8, v16.h8); dump();
cmhs(v7.h8, v7.h8, v31.h8); dump();
cmge(v7.h8, v7.h8, v7.h8); dump();
cmge(v0.h8, v7.h8, v7.h8); dump();
cmge(v1.h8, v7.h8, v7.h8); dump();
cmge(v2.h8, v7.h8, v7.h8); dump();
cmge(v4.h8, v7.h8, v7.h8); dump();
cmge(v8.h8, v7.h8, v7.h8); dump();
cmge(v16.h8, v7.h8, v7.h8); dump();
cmge(v31.h8, v7.h8, v7.h8); dump();
cmge(v7.h8, v7.h8, v7.h8); dump();
cmge(v7.h8, v0.h8, v7.h8); dump();
cmge(v7.h8, v1.h8, v7.h8); dump();
cmge(v7.h8, v2.h8, v7.h8); dump();
cmge(v7.h8, v4.h8, v7.h8); dump();
cmge(v7.h8, v8.h8, v7.h8); dump();
cmge(v7.h8, v16.h8, v7.h8); dump();
cmge(v7.h8, v31.h8, v7.h8); dump();
cmge(v7.h8, v7.h8, v7.h8); dump();
cmge(v7.h8, v7.h8, v0.h8); dump();
cmge(v7.h8, v7.h8, v1.h8); dump();
cmge(v7.h8, v7.h8, v2.h8); dump();
cmge(v7.h8, v7.h8, v4.h8); dump();
cmge(v7.h8, v7.h8, v8.h8); dump();
cmge(v7.h8, v7.h8, v16.h8); dump();
cmge(v7.h8, v7.h8, v31.h8); dump();
cmhi(v7.h8, v7.h8, v7.h8); dump();
cmhi(v0.h8, v7.h8, v7.h8); dump();
cmhi(v1.h8, v7.h8, v7.h8); dump();
cmhi(v2.h8, v7.h8, v7.h8); dump();
cmhi(v4.h8, v7.h8, v7.h8); dump();
cmhi(v8.h8, v7.h8, v7.h8); dump();
cmhi(v16.h8, v7.h8, v7.h8); dump();
cmhi(v31.h8, v7.h8, v7.h8); dump();
cmhi(v7.h8, v7.h8, v7.h8); dump();
cmhi(v7.h8, v0.h8, v7.h8); dump();
cmhi(v7.h8, v1.h8, v7.h8); dump();
cmhi(v7.h8, v2.h8, v7.h8); dump();
cmhi(v7.h8, v4.h8, v7.h8); dump();
cmhi(v7.h8, v8.h8, v7.h8); dump();
cmhi(v7.h8, v16.h8, v7.h8); dump();
cmhi(v7.h8, v31.h8, v7.h8); dump();
cmhi(v7.h8, v7.h8, v7.h8); dump();
cmhi(v7.h8, v7.h8, v0.h8); dump();
cmhi(v7.h8, v7.h8, v1.h8); dump();
cmhi(v7.h8, v7.h8, v2.h8); dump();
cmhi(v7.h8, v7.h8, v4.h8); dump();
cmhi(v7.h8, v7.h8, v8.h8); dump();
cmhi(v7.h8, v7.h8, v16.h8); dump();
cmhi(v7.h8, v7.h8, v31.h8); dump();
cmgt(v7.h8, v7.h8, v7.h8); dump();
cmgt(v0.h8, v7.h8, v7.h8); dump();
cmgt(v1.h8, v7.h8, v7.h8); dump();
cmgt(v2.h8, v7.h8, v7.h8); dump();
cmgt(v4.h8, v7.h8, v7.h8); dump();
cmgt(v8.h8, v7.h8, v7.h8); dump();
cmgt(v16.h8, v7.h8, v7.h8); dump();
cmgt(v31.h8, v7.h8, v7.h8); dump();
cmgt(v7.h8, v7.h8, v7.h8); dump();
cmgt(v7.h8, v0.h8, v7.h8); dump();
cmgt(v7.h8, v1.h8, v7.h8); dump();
cmgt(v7.h8, v2.h8, v7.h8); dump();
cmgt(v7.h8, v4.h8, v7.h8); dump();
cmgt(v7.h8, v8.h8, v7.h8); dump();
cmgt(v7.h8, v16.h8, v7.h8); dump();
cmgt(v7.h8, v31.h8, v7.h8); dump();
cmgt(v7.h8, v7.h8, v7.h8); dump();
cmgt(v7.h8, v7.h8, v0.h8); dump();
cmgt(v7.h8, v7.h8, v1.h8); dump();
cmgt(v7.h8, v7.h8, v2.h8); dump();
cmgt(v7.h8, v7.h8, v4.h8); dump();
cmgt(v7.h8, v7.h8, v8.h8); dump();
cmgt(v7.h8, v7.h8, v16.h8); dump();
cmgt(v7.h8, v7.h8, v31.h8); dump();
cmtst(v7.h8, v7.h8, v7.h8); dump();
cmtst(v0.h8, v7.h8, v7.h8); dump();
cmtst(v1.h8, v7.h8, v7.h8); dump();
cmtst(v2.h8, v7.h8, v7.h8); dump();
cmtst(v4.h8, v7.h8, v7.h8); dump();
cmtst(v8.h8, v7.h8, v7.h8); dump();
cmtst(v16.h8, v7.h8, v7.h8); dump();
cmtst(v31.h8, v7.h8, v7.h8); dump();
cmtst(v7.h8, v7.h8, v7.h8); dump();
cmtst(v7.h8, v0.h8, v7.h8); dump();
cmtst(v7.h8, v1.h8, v7.h8); dump();
cmtst(v7.h8, v2.h8, v7.h8); dump();
cmtst(v7.h8, v4.h8, v7.h8); dump();
cmtst(v7.h8, v8.h8, v7.h8); dump();
cmtst(v7.h8, v16.h8, v7.h8); dump();
cmtst(v7.h8, v31.h8, v7.h8); dump();
cmtst(v7.h8, v7.h8, v7.h8); dump();
cmtst(v7.h8, v7.h8, v0.h8); dump();
cmtst(v7.h8, v7.h8, v1.h8); dump();
cmtst(v7.h8, v7.h8, v2.h8); dump();
cmtst(v7.h8, v7.h8, v4.h8); dump();
cmtst(v7.h8, v7.h8, v8.h8); dump();
cmtst(v7.h8, v7.h8, v16.h8); dump();
cmtst(v7.h8, v7.h8, v31.h8); dump();
//DataProcSimd_Compare0:5
cmeq(v7.s2, v7.s2, v7.s2); dump();
cmeq(v0.s2, v7.s2, v7.s2); dump();
cmeq(v1.s2, v7.s2, v7.s2); dump();
cmeq(v2.s2, v7.s2, v7.s2); dump();
cmeq(v4.s2, v7.s2, v7.s2); dump();
cmeq(v8.s2, v7.s2, v7.s2); dump();
cmeq(v16.s2, v7.s2, v7.s2); dump();
cmeq(v31.s2, v7.s2, v7.s2); dump();
cmeq(v7.s2, v7.s2, v7.s2); dump();
cmeq(v7.s2, v0.s2, v7.s2); dump();
cmeq(v7.s2, v1.s2, v7.s2); dump();
cmeq(v7.s2, v2.s2, v7.s2); dump();
cmeq(v7.s2, v4.s2, v7.s2); dump();
cmeq(v7.s2, v8.s2, v7.s2); dump();
cmeq(v7.s2, v16.s2, v7.s2); dump();
cmeq(v7.s2, v31.s2, v7.s2); dump();
cmeq(v7.s2, v7.s2, v7.s2); dump();
cmeq(v7.s2, v7.s2, v0.s2); dump();
cmeq(v7.s2, v7.s2, v1.s2); dump();
cmeq(v7.s2, v7.s2, v2.s2); dump();
cmeq(v7.s2, v7.s2, v4.s2); dump();
cmeq(v7.s2, v7.s2, v8.s2); dump();
cmeq(v7.s2, v7.s2, v16.s2); dump();
cmeq(v7.s2, v7.s2, v31.s2); dump();
cmhs(v7.s2, v7.s2, v7.s2); dump();
cmhs(v0.s2, v7.s2, v7.s2); dump();
cmhs(v1.s2, v7.s2, v7.s2); dump();
cmhs(v2.s2, v7.s2, v7.s2); dump();
cmhs(v4.s2, v7.s2, v7.s2); dump();
cmhs(v8.s2, v7.s2, v7.s2); dump();
cmhs(v16.s2, v7.s2, v7.s2); dump();
cmhs(v31.s2, v7.s2, v7.s2); dump();
cmhs(v7.s2, v7.s2, v7.s2); dump();
cmhs(v7.s2, v0.s2, v7.s2); dump();
cmhs(v7.s2, v1.s2, v7.s2); dump();
cmhs(v7.s2, v2.s2, v7.s2); dump();
cmhs(v7.s2, v4.s2, v7.s2); dump();
cmhs(v7.s2, v8.s2, v7.s2); dump();
cmhs(v7.s2, v16.s2, v7.s2); dump();
cmhs(v7.s2, v31.s2, v7.s2); dump();
cmhs(v7.s2, v7.s2, v7.s2); dump();
cmhs(v7.s2, v7.s2, v0.s2); dump();
cmhs(v7.s2, v7.s2, v1.s2); dump();
cmhs(v7.s2, v7.s2, v2.s2); dump();
cmhs(v7.s2, v7.s2, v4.s2); dump();
cmhs(v7.s2, v7.s2, v8.s2); dump();
cmhs(v7.s2, v7.s2, v16.s2); dump();
cmhs(v7.s2, v7.s2, v31.s2); dump();
cmge(v7.s2, v7.s2, v7.s2); dump();
cmge(v0.s2, v7.s2, v7.s2); dump();
cmge(v1.s2, v7.s2, v7.s2); dump();
cmge(v2.s2, v7.s2, v7.s2); dump();
cmge(v4.s2, v7.s2, v7.s2); dump();
cmge(v8.s2, v7.s2, v7.s2); dump();
cmge(v16.s2, v7.s2, v7.s2); dump();
cmge(v31.s2, v7.s2, v7.s2); dump();
cmge(v7.s2, v7.s2, v7.s2); dump();
cmge(v7.s2, v0.s2, v7.s2); dump();
cmge(v7.s2, v1.s2, v7.s2); dump();
cmge(v7.s2, v2.s2, v7.s2); dump();
cmge(v7.s2, v4.s2, v7.s2); dump();
cmge(v7.s2, v8.s2, v7.s2); dump();
cmge(v7.s2, v16.s2, v7.s2); dump();
cmge(v7.s2, v31.s2, v7.s2); dump();
cmge(v7.s2, v7.s2, v7.s2); dump();
cmge(v7.s2, v7.s2, v0.s2); dump();
cmge(v7.s2, v7.s2, v1.s2); dump();
cmge(v7.s2, v7.s2, v2.s2); dump();
cmge(v7.s2, v7.s2, v4.s2); dump();
cmge(v7.s2, v7.s2, v8.s2); dump();
cmge(v7.s2, v7.s2, v16.s2); dump();
cmge(v7.s2, v7.s2, v31.s2); dump();
cmhi(v7.s2, v7.s2, v7.s2); dump();
cmhi(v0.s2, v7.s2, v7.s2); dump();
cmhi(v1.s2, v7.s2, v7.s2); dump();
cmhi(v2.s2, v7.s2, v7.s2); dump();
cmhi(v4.s2, v7.s2, v7.s2); dump();
cmhi(v8.s2, v7.s2, v7.s2); dump();
cmhi(v16.s2, v7.s2, v7.s2); dump();
cmhi(v31.s2, v7.s2, v7.s2); dump();
cmhi(v7.s2, v7.s2, v7.s2); dump();
cmhi(v7.s2, v0.s2, v7.s2); dump();
cmhi(v7.s2, v1.s2, v7.s2); dump();
cmhi(v7.s2, v2.s2, v7.s2); dump();
cmhi(v7.s2, v4.s2, v7.s2); dump();
cmhi(v7.s2, v8.s2, v7.s2); dump();
cmhi(v7.s2, v16.s2, v7.s2); dump();
cmhi(v7.s2, v31.s2, v7.s2); dump();
cmhi(v7.s2, v7.s2, v7.s2); dump();
cmhi(v7.s2, v7.s2, v0.s2); dump();
cmhi(v7.s2, v7.s2, v1.s2); dump();
cmhi(v7.s2, v7.s2, v2.s2); dump();
cmhi(v7.s2, v7.s2, v4.s2); dump();
cmhi(v7.s2, v7.s2, v8.s2); dump();
cmhi(v7.s2, v7.s2, v16.s2); dump();
cmhi(v7.s2, v7.s2, v31.s2); dump();
cmgt(v7.s2, v7.s2, v7.s2); dump();
cmgt(v0.s2, v7.s2, v7.s2); dump();
cmgt(v1.s2, v7.s2, v7.s2); dump();
cmgt(v2.s2, v7.s2, v7.s2); dump();
cmgt(v4.s2, v7.s2, v7.s2); dump();
cmgt(v8.s2, v7.s2, v7.s2); dump();
cmgt(v16.s2, v7.s2, v7.s2); dump();
cmgt(v31.s2, v7.s2, v7.s2); dump();
cmgt(v7.s2, v7.s2, v7.s2); dump();
cmgt(v7.s2, v0.s2, v7.s2); dump();
cmgt(v7.s2, v1.s2, v7.s2); dump();
cmgt(v7.s2, v2.s2, v7.s2); dump();
cmgt(v7.s2, v4.s2, v7.s2); dump();
cmgt(v7.s2, v8.s2, v7.s2); dump();
cmgt(v7.s2, v16.s2, v7.s2); dump();
cmgt(v7.s2, v31.s2, v7.s2); dump();
cmgt(v7.s2, v7.s2, v7.s2); dump();
cmgt(v7.s2, v7.s2, v0.s2); dump();
cmgt(v7.s2, v7.s2, v1.s2); dump();
cmgt(v7.s2, v7.s2, v2.s2); dump();
cmgt(v7.s2, v7.s2, v4.s2); dump();
cmgt(v7.s2, v7.s2, v8.s2); dump();
cmgt(v7.s2, v7.s2, v16.s2); dump();
cmgt(v7.s2, v7.s2, v31.s2); dump();
cmtst(v7.s2, v7.s2, v7.s2); dump();
cmtst(v0.s2, v7.s2, v7.s2); dump();
cmtst(v1.s2, v7.s2, v7.s2); dump();
cmtst(v2.s2, v7.s2, v7.s2); dump();
cmtst(v4.s2, v7.s2, v7.s2); dump();
cmtst(v8.s2, v7.s2, v7.s2); dump();
cmtst(v16.s2, v7.s2, v7.s2); dump();
cmtst(v31.s2, v7.s2, v7.s2); dump();
cmtst(v7.s2, v7.s2, v7.s2); dump();
cmtst(v7.s2, v0.s2, v7.s2); dump();
cmtst(v7.s2, v1.s2, v7.s2); dump();
cmtst(v7.s2, v2.s2, v7.s2); dump();
cmtst(v7.s2, v4.s2, v7.s2); dump();
cmtst(v7.s2, v8.s2, v7.s2); dump();
cmtst(v7.s2, v16.s2, v7.s2); dump();
cmtst(v7.s2, v31.s2, v7.s2); dump();
cmtst(v7.s2, v7.s2, v7.s2); dump();
cmtst(v7.s2, v7.s2, v0.s2); dump();
cmtst(v7.s2, v7.s2, v1.s2); dump();
cmtst(v7.s2, v7.s2, v2.s2); dump();
cmtst(v7.s2, v7.s2, v4.s2); dump();
cmtst(v7.s2, v7.s2, v8.s2); dump();
cmtst(v7.s2, v7.s2, v16.s2); dump();
cmtst(v7.s2, v7.s2, v31.s2); dump();
//DataProcSimd_Compare0:6
cmeq(v7.s4, v7.s4, v7.s4); dump();
cmeq(v0.s4, v7.s4, v7.s4); dump();
cmeq(v1.s4, v7.s4, v7.s4); dump();
cmeq(v2.s4, v7.s4, v7.s4); dump();
cmeq(v4.s4, v7.s4, v7.s4); dump();
cmeq(v8.s4, v7.s4, v7.s4); dump();
cmeq(v16.s4, v7.s4, v7.s4); dump();
cmeq(v31.s4, v7.s4, v7.s4); dump();
cmeq(v7.s4, v7.s4, v7.s4); dump();
cmeq(v7.s4, v0.s4, v7.s4); dump();
cmeq(v7.s4, v1.s4, v7.s4); dump();
cmeq(v7.s4, v2.s4, v7.s4); dump();
cmeq(v7.s4, v4.s4, v7.s4); dump();
cmeq(v7.s4, v8.s4, v7.s4); dump();
cmeq(v7.s4, v16.s4, v7.s4); dump();
cmeq(v7.s4, v31.s4, v7.s4); dump();
cmeq(v7.s4, v7.s4, v7.s4); dump();
cmeq(v7.s4, v7.s4, v0.s4); dump();
cmeq(v7.s4, v7.s4, v1.s4); dump();
cmeq(v7.s4, v7.s4, v2.s4); dump();
cmeq(v7.s4, v7.s4, v4.s4); dump();
cmeq(v7.s4, v7.s4, v8.s4); dump();
cmeq(v7.s4, v7.s4, v16.s4); dump();
cmeq(v7.s4, v7.s4, v31.s4); dump();
cmhs(v7.s4, v7.s4, v7.s4); dump();
cmhs(v0.s4, v7.s4, v7.s4); dump();
cmhs(v1.s4, v7.s4, v7.s4); dump();
cmhs(v2.s4, v7.s4, v7.s4); dump();
cmhs(v4.s4, v7.s4, v7.s4); dump();
cmhs(v8.s4, v7.s4, v7.s4); dump();
cmhs(v16.s4, v7.s4, v7.s4); dump();
cmhs(v31.s4, v7.s4, v7.s4); dump();
cmhs(v7.s4, v7.s4, v7.s4); dump();
cmhs(v7.s4, v0.s4, v7.s4); dump();
cmhs(v7.s4, v1.s4, v7.s4); dump();
cmhs(v7.s4, v2.s4, v7.s4); dump();
cmhs(v7.s4, v4.s4, v7.s4); dump();
cmhs(v7.s4, v8.s4, v7.s4); dump();
cmhs(v7.s4, v16.s4, v7.s4); dump();
cmhs(v7.s4, v31.s4, v7.s4); dump();
cmhs(v7.s4, v7.s4, v7.s4); dump();
cmhs(v7.s4, v7.s4, v0.s4); dump();
cmhs(v7.s4, v7.s4, v1.s4); dump();
cmhs(v7.s4, v7.s4, v2.s4); dump();
cmhs(v7.s4, v7.s4, v4.s4); dump();
cmhs(v7.s4, v7.s4, v8.s4); dump();
cmhs(v7.s4, v7.s4, v16.s4); dump();
cmhs(v7.s4, v7.s4, v31.s4); dump();
cmge(v7.s4, v7.s4, v7.s4); dump();
cmge(v0.s4, v7.s4, v7.s4); dump();
cmge(v1.s4, v7.s4, v7.s4); dump();
cmge(v2.s4, v7.s4, v7.s4); dump();
cmge(v4.s4, v7.s4, v7.s4); dump();
cmge(v8.s4, v7.s4, v7.s4); dump();
cmge(v16.s4, v7.s4, v7.s4); dump();
cmge(v31.s4, v7.s4, v7.s4); dump();
cmge(v7.s4, v7.s4, v7.s4); dump();
cmge(v7.s4, v0.s4, v7.s4); dump();
cmge(v7.s4, v1.s4, v7.s4); dump();
cmge(v7.s4, v2.s4, v7.s4); dump();
cmge(v7.s4, v4.s4, v7.s4); dump();
cmge(v7.s4, v8.s4, v7.s4); dump();
cmge(v7.s4, v16.s4, v7.s4); dump();
cmge(v7.s4, v31.s4, v7.s4); dump();
cmge(v7.s4, v7.s4, v7.s4); dump();
cmge(v7.s4, v7.s4, v0.s4); dump();
cmge(v7.s4, v7.s4, v1.s4); dump();
cmge(v7.s4, v7.s4, v2.s4); dump();
cmge(v7.s4, v7.s4, v4.s4); dump();
cmge(v7.s4, v7.s4, v8.s4); dump();
cmge(v7.s4, v7.s4, v16.s4); dump();
cmge(v7.s4, v7.s4, v31.s4); dump();
cmhi(v7.s4, v7.s4, v7.s4); dump();
cmhi(v0.s4, v7.s4, v7.s4); dump();
cmhi(v1.s4, v7.s4, v7.s4); dump();
cmhi(v2.s4, v7.s4, v7.s4); dump();
cmhi(v4.s4, v7.s4, v7.s4); dump();
cmhi(v8.s4, v7.s4, v7.s4); dump();
cmhi(v16.s4, v7.s4, v7.s4); dump();
cmhi(v31.s4, v7.s4, v7.s4); dump();
cmhi(v7.s4, v7.s4, v7.s4); dump();
cmhi(v7.s4, v0.s4, v7.s4); dump();
cmhi(v7.s4, v1.s4, v7.s4); dump();
cmhi(v7.s4, v2.s4, v7.s4); dump();
cmhi(v7.s4, v4.s4, v7.s4); dump();
cmhi(v7.s4, v8.s4, v7.s4); dump();
cmhi(v7.s4, v16.s4, v7.s4); dump();
cmhi(v7.s4, v31.s4, v7.s4); dump();
cmhi(v7.s4, v7.s4, v7.s4); dump();
cmhi(v7.s4, v7.s4, v0.s4); dump();
cmhi(v7.s4, v7.s4, v1.s4); dump();
cmhi(v7.s4, v7.s4, v2.s4); dump();
cmhi(v7.s4, v7.s4, v4.s4); dump();
cmhi(v7.s4, v7.s4, v8.s4); dump();
cmhi(v7.s4, v7.s4, v16.s4); dump();
cmhi(v7.s4, v7.s4, v31.s4); dump();
cmgt(v7.s4, v7.s4, v7.s4); dump();
cmgt(v0.s4, v7.s4, v7.s4); dump();
cmgt(v1.s4, v7.s4, v7.s4); dump();
cmgt(v2.s4, v7.s4, v7.s4); dump();
cmgt(v4.s4, v7.s4, v7.s4); dump();
cmgt(v8.s4, v7.s4, v7.s4); dump();
cmgt(v16.s4, v7.s4, v7.s4); dump();
cmgt(v31.s4, v7.s4, v7.s4); dump();
cmgt(v7.s4, v7.s4, v7.s4); dump();
cmgt(v7.s4, v0.s4, v7.s4); dump();
cmgt(v7.s4, v1.s4, v7.s4); dump();
cmgt(v7.s4, v2.s4, v7.s4); dump();
cmgt(v7.s4, v4.s4, v7.s4); dump();
cmgt(v7.s4, v8.s4, v7.s4); dump();
cmgt(v7.s4, v16.s4, v7.s4); dump();
cmgt(v7.s4, v31.s4, v7.s4); dump();
cmgt(v7.s4, v7.s4, v7.s4); dump();
cmgt(v7.s4, v7.s4, v0.s4); dump();
cmgt(v7.s4, v7.s4, v1.s4); dump();
cmgt(v7.s4, v7.s4, v2.s4); dump();
cmgt(v7.s4, v7.s4, v4.s4); dump();
cmgt(v7.s4, v7.s4, v8.s4); dump();
cmgt(v7.s4, v7.s4, v16.s4); dump();
cmgt(v7.s4, v7.s4, v31.s4); dump();
cmtst(v7.s4, v7.s4, v7.s4); dump();
cmtst(v0.s4, v7.s4, v7.s4); dump();
cmtst(v1.s4, v7.s4, v7.s4); dump();
cmtst(v2.s4, v7.s4, v7.s4); dump();
cmtst(v4.s4, v7.s4, v7.s4); dump();
cmtst(v8.s4, v7.s4, v7.s4); dump();
cmtst(v16.s4, v7.s4, v7.s4); dump();
cmtst(v31.s4, v7.s4, v7.s4); dump();
cmtst(v7.s4, v7.s4, v7.s4); dump();
cmtst(v7.s4, v0.s4, v7.s4); dump();
cmtst(v7.s4, v1.s4, v7.s4); dump();
cmtst(v7.s4, v2.s4, v7.s4); dump();
cmtst(v7.s4, v4.s4, v7.s4); dump();
cmtst(v7.s4, v8.s4, v7.s4); dump();
cmtst(v7.s4, v16.s4, v7.s4); dump();
cmtst(v7.s4, v31.s4, v7.s4); dump();
cmtst(v7.s4, v7.s4, v7.s4); dump();
cmtst(v7.s4, v7.s4, v0.s4); dump();
cmtst(v7.s4, v7.s4, v1.s4); dump();
cmtst(v7.s4, v7.s4, v2.s4); dump();
cmtst(v7.s4, v7.s4, v4.s4); dump();
cmtst(v7.s4, v7.s4, v8.s4); dump();
cmtst(v7.s4, v7.s4, v16.s4); dump();
cmtst(v7.s4, v7.s4, v31.s4); dump();
//DataProcSimd_Compare0:7
cmeq(v7.d2, v7.d2, v7.d2); dump();
cmeq(v0.d2, v7.d2, v7.d2); dump();
cmeq(v1.d2, v7.d2, v7.d2); dump();
cmeq(v2.d2, v7.d2, v7.d2); dump();
cmeq(v4.d2, v7.d2, v7.d2); dump();
cmeq(v8.d2, v7.d2, v7.d2); dump();
cmeq(v16.d2, v7.d2, v7.d2); dump();
cmeq(v31.d2, v7.d2, v7.d2); dump();
cmeq(v7.d2, v7.d2, v7.d2); dump();
cmeq(v7.d2, v0.d2, v7.d2); dump();
cmeq(v7.d2, v1.d2, v7.d2); dump();
cmeq(v7.d2, v2.d2, v7.d2); dump();
cmeq(v7.d2, v4.d2, v7.d2); dump();
cmeq(v7.d2, v8.d2, v7.d2); dump();
cmeq(v7.d2, v16.d2, v7.d2); dump();
cmeq(v7.d2, v31.d2, v7.d2); dump();
cmeq(v7.d2, v7.d2, v7.d2); dump();
cmeq(v7.d2, v7.d2, v0.d2); dump();
cmeq(v7.d2, v7.d2, v1.d2); dump();
cmeq(v7.d2, v7.d2, v2.d2); dump();
cmeq(v7.d2, v7.d2, v4.d2); dump();
cmeq(v7.d2, v7.d2, v8.d2); dump();
cmeq(v7.d2, v7.d2, v16.d2); dump();
cmeq(v7.d2, v7.d2, v31.d2); dump();
cmhs(v7.d2, v7.d2, v7.d2); dump();
cmhs(v0.d2, v7.d2, v7.d2); dump();
cmhs(v1.d2, v7.d2, v7.d2); dump();
cmhs(v2.d2, v7.d2, v7.d2); dump();
cmhs(v4.d2, v7.d2, v7.d2); dump();
cmhs(v8.d2, v7.d2, v7.d2); dump();
cmhs(v16.d2, v7.d2, v7.d2); dump();
cmhs(v31.d2, v7.d2, v7.d2); dump();
cmhs(v7.d2, v7.d2, v7.d2); dump();
cmhs(v7.d2, v0.d2, v7.d2); dump();
cmhs(v7.d2, v1.d2, v7.d2); dump();
cmhs(v7.d2, v2.d2, v7.d2); dump();
cmhs(v7.d2, v4.d2, v7.d2); dump();
cmhs(v7.d2, v8.d2, v7.d2); dump();
cmhs(v7.d2, v16.d2, v7.d2); dump();
cmhs(v7.d2, v31.d2, v7.d2); dump();
cmhs(v7.d2, v7.d2, v7.d2); dump();
cmhs(v7.d2, v7.d2, v0.d2); dump();
cmhs(v7.d2, v7.d2, v1.d2); dump();
cmhs(v7.d2, v7.d2, v2.d2); dump();
cmhs(v7.d2, v7.d2, v4.d2); dump();
cmhs(v7.d2, v7.d2, v8.d2); dump();
cmhs(v7.d2, v7.d2, v16.d2); dump();
cmhs(v7.d2, v7.d2, v31.d2); dump();
cmge(v7.d2, v7.d2, v7.d2); dump();
cmge(v0.d2, v7.d2, v7.d2); dump();
cmge(v1.d2, v7.d2, v7.d2); dump();
cmge(v2.d2, v7.d2, v7.d2); dump();
cmge(v4.d2, v7.d2, v7.d2); dump();
cmge(v8.d2, v7.d2, v7.d2); dump();
cmge(v16.d2, v7.d2, v7.d2); dump();
cmge(v31.d2, v7.d2, v7.d2); dump();
cmge(v7.d2, v7.d2, v7.d2); dump();
cmge(v7.d2, v0.d2, v7.d2); dump();
cmge(v7.d2, v1.d2, v7.d2); dump();
cmge(v7.d2, v2.d2, v7.d2); dump();
cmge(v7.d2, v4.d2, v7.d2); dump();
cmge(v7.d2, v8.d2, v7.d2); dump();
cmge(v7.d2, v16.d2, v7.d2); dump();
cmge(v7.d2, v31.d2, v7.d2); dump();
cmge(v7.d2, v7.d2, v7.d2); dump();
cmge(v7.d2, v7.d2, v0.d2); dump();
cmge(v7.d2, v7.d2, v1.d2); dump();
cmge(v7.d2, v7.d2, v2.d2); dump();
cmge(v7.d2, v7.d2, v4.d2); dump();
cmge(v7.d2, v7.d2, v8.d2); dump();
cmge(v7.d2, v7.d2, v16.d2); dump();
cmge(v7.d2, v7.d2, v31.d2); dump();
cmhi(v7.d2, v7.d2, v7.d2); dump();
cmhi(v0.d2, v7.d2, v7.d2); dump();
cmhi(v1.d2, v7.d2, v7.d2); dump();
cmhi(v2.d2, v7.d2, v7.d2); dump();
cmhi(v4.d2, v7.d2, v7.d2); dump();
cmhi(v8.d2, v7.d2, v7.d2); dump();
cmhi(v16.d2, v7.d2, v7.d2); dump();
cmhi(v31.d2, v7.d2, v7.d2); dump();
cmhi(v7.d2, v7.d2, v7.d2); dump();
cmhi(v7.d2, v0.d2, v7.d2); dump();
cmhi(v7.d2, v1.d2, v7.d2); dump();
cmhi(v7.d2, v2.d2, v7.d2); dump();
cmhi(v7.d2, v4.d2, v7.d2); dump();
cmhi(v7.d2, v8.d2, v7.d2); dump();
cmhi(v7.d2, v16.d2, v7.d2); dump();
cmhi(v7.d2, v31.d2, v7.d2); dump();
cmhi(v7.d2, v7.d2, v7.d2); dump();
cmhi(v7.d2, v7.d2, v0.d2); dump();
cmhi(v7.d2, v7.d2, v1.d2); dump();
cmhi(v7.d2, v7.d2, v2.d2); dump();
cmhi(v7.d2, v7.d2, v4.d2); dump();
cmhi(v7.d2, v7.d2, v8.d2); dump();
cmhi(v7.d2, v7.d2, v16.d2); dump();
cmhi(v7.d2, v7.d2, v31.d2); dump();
cmgt(v7.d2, v7.d2, v7.d2); dump();
cmgt(v0.d2, v7.d2, v7.d2); dump();
cmgt(v1.d2, v7.d2, v7.d2); dump();
cmgt(v2.d2, v7.d2, v7.d2); dump();
cmgt(v4.d2, v7.d2, v7.d2); dump();
cmgt(v8.d2, v7.d2, v7.d2); dump();
cmgt(v16.d2, v7.d2, v7.d2); dump();
cmgt(v31.d2, v7.d2, v7.d2); dump();
cmgt(v7.d2, v7.d2, v7.d2); dump();
cmgt(v7.d2, v0.d2, v7.d2); dump();
cmgt(v7.d2, v1.d2, v7.d2); dump();
cmgt(v7.d2, v2.d2, v7.d2); dump();
cmgt(v7.d2, v4.d2, v7.d2); dump();
cmgt(v7.d2, v8.d2, v7.d2); dump();
cmgt(v7.d2, v16.d2, v7.d2); dump();
cmgt(v7.d2, v31.d2, v7.d2); dump();
cmgt(v7.d2, v7.d2, v7.d2); dump();
cmgt(v7.d2, v7.d2, v0.d2); dump();
cmgt(v7.d2, v7.d2, v1.d2); dump();
cmgt(v7.d2, v7.d2, v2.d2); dump();
cmgt(v7.d2, v7.d2, v4.d2); dump();
cmgt(v7.d2, v7.d2, v8.d2); dump();
cmgt(v7.d2, v7.d2, v16.d2); dump();
cmgt(v7.d2, v7.d2, v31.d2); dump();
cmtst(v7.d2, v7.d2, v7.d2); dump();
cmtst(v0.d2, v7.d2, v7.d2); dump();
cmtst(v1.d2, v7.d2, v7.d2); dump();
cmtst(v2.d2, v7.d2, v7.d2); dump();
cmtst(v4.d2, v7.d2, v7.d2); dump();
cmtst(v8.d2, v7.d2, v7.d2); dump();
cmtst(v16.d2, v7.d2, v7.d2); dump();
cmtst(v31.d2, v7.d2, v7.d2); dump();
cmtst(v7.d2, v7.d2, v7.d2); dump();
cmtst(v7.d2, v0.d2, v7.d2); dump();
cmtst(v7.d2, v1.d2, v7.d2); dump();
cmtst(v7.d2, v2.d2, v7.d2); dump();
cmtst(v7.d2, v4.d2, v7.d2); dump();
cmtst(v7.d2, v8.d2, v7.d2); dump();
cmtst(v7.d2, v16.d2, v7.d2); dump();
cmtst(v7.d2, v31.d2, v7.d2); dump();
cmtst(v7.d2, v7.d2, v7.d2); dump();
cmtst(v7.d2, v7.d2, v0.d2); dump();
cmtst(v7.d2, v7.d2, v1.d2); dump();
cmtst(v7.d2, v7.d2, v2.d2); dump();
cmtst(v7.d2, v7.d2, v4.d2); dump();
cmtst(v7.d2, v7.d2, v8.d2); dump();
cmtst(v7.d2, v7.d2, v16.d2); dump();
cmtst(v7.d2, v7.d2, v31.d2); dump();
//DataProcSimd_Compare1:0
cmeq(d7, d7, 0); dump();
cmeq(d0, d7, 0); dump();
cmeq(d1, d7, 0); dump();
cmeq(d2, d7, 0); dump();
cmeq(d4, d7, 0); dump();
cmeq(d8, d7, 0); dump();
cmeq(d16, d7, 0); dump();
cmeq(d31, d7, 0); dump();
cmeq(d7, d7, 0); dump();
cmeq(d7, d0, 0); dump();
cmeq(d7, d1, 0); dump();
cmeq(d7, d2, 0); dump();
cmeq(d7, d4, 0); dump();
cmeq(d7, d8, 0); dump();
cmeq(d7, d16, 0); dump();
cmeq(d7, d31, 0); dump();
cmeq(d7, d7, 0); dump();
cmge(d7, d7, 0); dump();
cmge(d0, d7, 0); dump();
cmge(d1, d7, 0); dump();
cmge(d2, d7, 0); dump();
cmge(d4, d7, 0); dump();
cmge(d8, d7, 0); dump();
cmge(d16, d7, 0); dump();
cmge(d31, d7, 0); dump();
cmge(d7, d7, 0); dump();
cmge(d7, d0, 0); dump();
cmge(d7, d1, 0); dump();
cmge(d7, d2, 0); dump();
cmge(d7, d4, 0); dump();
cmge(d7, d8, 0); dump();
cmge(d7, d16, 0); dump();
cmge(d7, d31, 0); dump();
cmge(d7, d7, 0); dump();
cmgt(d7, d7, 0); dump();
cmgt(d0, d7, 0); dump();
cmgt(d1, d7, 0); dump();
cmgt(d2, d7, 0); dump();
cmgt(d4, d7, 0); dump();
cmgt(d8, d7, 0); dump();
cmgt(d16, d7, 0); dump();
cmgt(d31, d7, 0); dump();
cmgt(d7, d7, 0); dump();
cmgt(d7, d0, 0); dump();
cmgt(d7, d1, 0); dump();
cmgt(d7, d2, 0); dump();
cmgt(d7, d4, 0); dump();
cmgt(d7, d8, 0); dump();
cmgt(d7, d16, 0); dump();
cmgt(d7, d31, 0); dump();
cmgt(d7, d7, 0); dump();
cmle(d7, d7, 0); dump();
cmle(d0, d7, 0); dump();
cmle(d1, d7, 0); dump();
cmle(d2, d7, 0); dump();
cmle(d4, d7, 0); dump();
cmle(d8, d7, 0); dump();
cmle(d16, d7, 0); dump();
cmle(d31, d7, 0); dump();
cmle(d7, d7, 0); dump();
cmle(d7, d0, 0); dump();
cmle(d7, d1, 0); dump();
cmle(d7, d2, 0); dump();
cmle(d7, d4, 0); dump();
cmle(d7, d8, 0); dump();
cmle(d7, d16, 0); dump();
cmle(d7, d31, 0); dump();
cmle(d7, d7, 0); dump();
cmlt(d7, d7, 0); dump();
cmlt(d0, d7, 0); dump();
cmlt(d1, d7, 0); dump();
cmlt(d2, d7, 0); dump();
cmlt(d4, d7, 0); dump();
cmlt(d8, d7, 0); dump();
cmlt(d16, d7, 0); dump();
cmlt(d31, d7, 0); dump();
cmlt(d7, d7, 0); dump();
cmlt(d7, d0, 0); dump();
cmlt(d7, d1, 0); dump();
cmlt(d7, d2, 0); dump();
cmlt(d7, d4, 0); dump();
cmlt(d7, d8, 0); dump();
cmlt(d7, d16, 0); dump();
cmlt(d7, d31, 0); dump();
cmlt(d7, d7, 0); dump();
//DataProcSimd_Compare1:1
cmeq(v7.b8, v7.b8, 0); dump();
cmeq(v0.b8, v7.b8, 0); dump();
cmeq(v1.b8, v7.b8, 0); dump();
cmeq(v2.b8, v7.b8, 0); dump();
cmeq(v4.b8, v7.b8, 0); dump();
cmeq(v8.b8, v7.b8, 0); dump();
cmeq(v16.b8, v7.b8, 0); dump();
cmeq(v31.b8, v7.b8, 0); dump();
cmeq(v7.b8, v7.b8, 0); dump();
cmeq(v7.b8, v0.b8, 0); dump();
cmeq(v7.b8, v1.b8, 0); dump();
cmeq(v7.b8, v2.b8, 0); dump();
cmeq(v7.b8, v4.b8, 0); dump();
cmeq(v7.b8, v8.b8, 0); dump();
cmeq(v7.b8, v16.b8, 0); dump();
cmeq(v7.b8, v31.b8, 0); dump();
cmeq(v7.b8, v7.b8, 0); dump();
cmge(v7.b8, v7.b8, 0); dump();
cmge(v0.b8, v7.b8, 0); dump();
cmge(v1.b8, v7.b8, 0); dump();
cmge(v2.b8, v7.b8, 0); dump();
cmge(v4.b8, v7.b8, 0); dump();
cmge(v8.b8, v7.b8, 0); dump();
cmge(v16.b8, v7.b8, 0); dump();
cmge(v31.b8, v7.b8, 0); dump();
cmge(v7.b8, v7.b8, 0); dump();
cmge(v7.b8, v0.b8, 0); dump();
cmge(v7.b8, v1.b8, 0); dump();
cmge(v7.b8, v2.b8, 0); dump();
cmge(v7.b8, v4.b8, 0); dump();
cmge(v7.b8, v8.b8, 0); dump();
cmge(v7.b8, v16.b8, 0); dump();
cmge(v7.b8, v31.b8, 0); dump();
cmge(v7.b8, v7.b8, 0); dump();
cmgt(v7.b8, v7.b8, 0); dump();
cmgt(v0.b8, v7.b8, 0); dump();
cmgt(v1.b8, v7.b8, 0); dump();
cmgt(v2.b8, v7.b8, 0); dump();
cmgt(v4.b8, v7.b8, 0); dump();
cmgt(v8.b8, v7.b8, 0); dump();
cmgt(v16.b8, v7.b8, 0); dump();
cmgt(v31.b8, v7.b8, 0); dump();
cmgt(v7.b8, v7.b8, 0); dump();
cmgt(v7.b8, v0.b8, 0); dump();
cmgt(v7.b8, v1.b8, 0); dump();
cmgt(v7.b8, v2.b8, 0); dump();
cmgt(v7.b8, v4.b8, 0); dump();
cmgt(v7.b8, v8.b8, 0); dump();
cmgt(v7.b8, v16.b8, 0); dump();
cmgt(v7.b8, v31.b8, 0); dump();
cmgt(v7.b8, v7.b8, 0); dump();
cmle(v7.b8, v7.b8, 0); dump();
cmle(v0.b8, v7.b8, 0); dump();
cmle(v1.b8, v7.b8, 0); dump();
cmle(v2.b8, v7.b8, 0); dump();
cmle(v4.b8, v7.b8, 0); dump();
cmle(v8.b8, v7.b8, 0); dump();
cmle(v16.b8, v7.b8, 0); dump();
cmle(v31.b8, v7.b8, 0); dump();
cmle(v7.b8, v7.b8, 0); dump();
cmle(v7.b8, v0.b8, 0); dump();
cmle(v7.b8, v1.b8, 0); dump();
cmle(v7.b8, v2.b8, 0); dump();
cmle(v7.b8, v4.b8, 0); dump();
cmle(v7.b8, v8.b8, 0); dump();
cmle(v7.b8, v16.b8, 0); dump();
cmle(v7.b8, v31.b8, 0); dump();
cmle(v7.b8, v7.b8, 0); dump();
cmlt(v7.b8, v7.b8, 0); dump();
cmlt(v0.b8, v7.b8, 0); dump();
cmlt(v1.b8, v7.b8, 0); dump();
cmlt(v2.b8, v7.b8, 0); dump();
cmlt(v4.b8, v7.b8, 0); dump();
cmlt(v8.b8, v7.b8, 0); dump();
cmlt(v16.b8, v7.b8, 0); dump();
cmlt(v31.b8, v7.b8, 0); dump();
cmlt(v7.b8, v7.b8, 0); dump();
cmlt(v7.b8, v0.b8, 0); dump();
cmlt(v7.b8, v1.b8, 0); dump();
cmlt(v7.b8, v2.b8, 0); dump();
cmlt(v7.b8, v4.b8, 0); dump();
cmlt(v7.b8, v8.b8, 0); dump();
cmlt(v7.b8, v16.b8, 0); dump();
cmlt(v7.b8, v31.b8, 0); dump();
cmlt(v7.b8, v7.b8, 0); dump();
//DataProcSimd_Compare1:2
cmeq(v7.b16, v7.b16, 0); dump();
cmeq(v0.b16, v7.b16, 0); dump();
cmeq(v1.b16, v7.b16, 0); dump();
cmeq(v2.b16, v7.b16, 0); dump();
cmeq(v4.b16, v7.b16, 0); dump();
cmeq(v8.b16, v7.b16, 0); dump();
cmeq(v16.b16, v7.b16, 0); dump();
cmeq(v31.b16, v7.b16, 0); dump();
cmeq(v7.b16, v7.b16, 0); dump();
cmeq(v7.b16, v0.b16, 0); dump();
cmeq(v7.b16, v1.b16, 0); dump();
cmeq(v7.b16, v2.b16, 0); dump();
cmeq(v7.b16, v4.b16, 0); dump();
cmeq(v7.b16, v8.b16, 0); dump();
cmeq(v7.b16, v16.b16, 0); dump();
cmeq(v7.b16, v31.b16, 0); dump();
cmeq(v7.b16, v7.b16, 0); dump();
cmge(v7.b16, v7.b16, 0); dump();
cmge(v0.b16, v7.b16, 0); dump();
cmge(v1.b16, v7.b16, 0); dump();
cmge(v2.b16, v7.b16, 0); dump();
cmge(v4.b16, v7.b16, 0); dump();
cmge(v8.b16, v7.b16, 0); dump();
cmge(v16.b16, v7.b16, 0); dump();
cmge(v31.b16, v7.b16, 0); dump();
cmge(v7.b16, v7.b16, 0); dump();
cmge(v7.b16, v0.b16, 0); dump();
cmge(v7.b16, v1.b16, 0); dump();
cmge(v7.b16, v2.b16, 0); dump();
cmge(v7.b16, v4.b16, 0); dump();
cmge(v7.b16, v8.b16, 0); dump();
cmge(v7.b16, v16.b16, 0); dump();
cmge(v7.b16, v31.b16, 0); dump();
cmge(v7.b16, v7.b16, 0); dump();
cmgt(v7.b16, v7.b16, 0); dump();
cmgt(v0.b16, v7.b16, 0); dump();
cmgt(v1.b16, v7.b16, 0); dump();
cmgt(v2.b16, v7.b16, 0); dump();
cmgt(v4.b16, v7.b16, 0); dump();
cmgt(v8.b16, v7.b16, 0); dump();
cmgt(v16.b16, v7.b16, 0); dump();
cmgt(v31.b16, v7.b16, 0); dump();
cmgt(v7.b16, v7.b16, 0); dump();
cmgt(v7.b16, v0.b16, 0); dump();
cmgt(v7.b16, v1.b16, 0); dump();
cmgt(v7.b16, v2.b16, 0); dump();
cmgt(v7.b16, v4.b16, 0); dump();
cmgt(v7.b16, v8.b16, 0); dump();
cmgt(v7.b16, v16.b16, 0); dump();
cmgt(v7.b16, v31.b16, 0); dump();
cmgt(v7.b16, v7.b16, 0); dump();
cmle(v7.b16, v7.b16, 0); dump();
cmle(v0.b16, v7.b16, 0); dump();
cmle(v1.b16, v7.b16, 0); dump();
cmle(v2.b16, v7.b16, 0); dump();
cmle(v4.b16, v7.b16, 0); dump();
cmle(v8.b16, v7.b16, 0); dump();
cmle(v16.b16, v7.b16, 0); dump();
cmle(v31.b16, v7.b16, 0); dump();
cmle(v7.b16, v7.b16, 0); dump();
cmle(v7.b16, v0.b16, 0); dump();
cmle(v7.b16, v1.b16, 0); dump();
cmle(v7.b16, v2.b16, 0); dump();
cmle(v7.b16, v4.b16, 0); dump();
cmle(v7.b16, v8.b16, 0); dump();
cmle(v7.b16, v16.b16, 0); dump();
cmle(v7.b16, v31.b16, 0); dump();
cmle(v7.b16, v7.b16, 0); dump();
cmlt(v7.b16, v7.b16, 0); dump();
cmlt(v0.b16, v7.b16, 0); dump();
cmlt(v1.b16, v7.b16, 0); dump();
cmlt(v2.b16, v7.b16, 0); dump();
cmlt(v4.b16, v7.b16, 0); dump();
cmlt(v8.b16, v7.b16, 0); dump();
cmlt(v16.b16, v7.b16, 0); dump();
cmlt(v31.b16, v7.b16, 0); dump();
cmlt(v7.b16, v7.b16, 0); dump();
cmlt(v7.b16, v0.b16, 0); dump();
cmlt(v7.b16, v1.b16, 0); dump();
cmlt(v7.b16, v2.b16, 0); dump();
cmlt(v7.b16, v4.b16, 0); dump();
cmlt(v7.b16, v8.b16, 0); dump();
cmlt(v7.b16, v16.b16, 0); dump();
cmlt(v7.b16, v31.b16, 0); dump();
cmlt(v7.b16, v7.b16, 0); dump();
//DataProcSimd_Compare1:3
cmeq(v7.h4, v7.h4, 0); dump();
cmeq(v0.h4, v7.h4, 0); dump();
cmeq(v1.h4, v7.h4, 0); dump();
cmeq(v2.h4, v7.h4, 0); dump();
cmeq(v4.h4, v7.h4, 0); dump();
cmeq(v8.h4, v7.h4, 0); dump();
cmeq(v16.h4, v7.h4, 0); dump();
cmeq(v31.h4, v7.h4, 0); dump();
cmeq(v7.h4, v7.h4, 0); dump();
cmeq(v7.h4, v0.h4, 0); dump();
cmeq(v7.h4, v1.h4, 0); dump();
cmeq(v7.h4, v2.h4, 0); dump();
cmeq(v7.h4, v4.h4, 0); dump();
cmeq(v7.h4, v8.h4, 0); dump();
cmeq(v7.h4, v16.h4, 0); dump();
cmeq(v7.h4, v31.h4, 0); dump();
cmeq(v7.h4, v7.h4, 0); dump();
cmge(v7.h4, v7.h4, 0); dump();
cmge(v0.h4, v7.h4, 0); dump();
cmge(v1.h4, v7.h4, 0); dump();
cmge(v2.h4, v7.h4, 0); dump();
cmge(v4.h4, v7.h4, 0); dump();
cmge(v8.h4, v7.h4, 0); dump();
cmge(v16.h4, v7.h4, 0); dump();
cmge(v31.h4, v7.h4, 0); dump();
cmge(v7.h4, v7.h4, 0); dump();
cmge(v7.h4, v0.h4, 0); dump();
cmge(v7.h4, v1.h4, 0); dump();
cmge(v7.h4, v2.h4, 0); dump();
cmge(v7.h4, v4.h4, 0); dump();
cmge(v7.h4, v8.h4, 0); dump();
cmge(v7.h4, v16.h4, 0); dump();
cmge(v7.h4, v31.h4, 0); dump();
cmge(v7.h4, v7.h4, 0); dump();
cmgt(v7.h4, v7.h4, 0); dump();
cmgt(v0.h4, v7.h4, 0); dump();
cmgt(v1.h4, v7.h4, 0); dump();
cmgt(v2.h4, v7.h4, 0); dump();
cmgt(v4.h4, v7.h4, 0); dump();
cmgt(v8.h4, v7.h4, 0); dump();
cmgt(v16.h4, v7.h4, 0); dump();
cmgt(v31.h4, v7.h4, 0); dump();
cmgt(v7.h4, v7.h4, 0); dump();
cmgt(v7.h4, v0.h4, 0); dump();
cmgt(v7.h4, v1.h4, 0); dump();
cmgt(v7.h4, v2.h4, 0); dump();
cmgt(v7.h4, v4.h4, 0); dump();
cmgt(v7.h4, v8.h4, 0); dump();
cmgt(v7.h4, v16.h4, 0); dump();
cmgt(v7.h4, v31.h4, 0); dump();
cmgt(v7.h4, v7.h4, 0); dump();
cmle(v7.h4, v7.h4, 0); dump();
cmle(v0.h4, v7.h4, 0); dump();
cmle(v1.h4, v7.h4, 0); dump();
cmle(v2.h4, v7.h4, 0); dump();
cmle(v4.h4, v7.h4, 0); dump();
cmle(v8.h4, v7.h4, 0); dump();
cmle(v16.h4, v7.h4, 0); dump();
cmle(v31.h4, v7.h4, 0); dump();
cmle(v7.h4, v7.h4, 0); dump();
cmle(v7.h4, v0.h4, 0); dump();
cmle(v7.h4, v1.h4, 0); dump();
cmle(v7.h4, v2.h4, 0); dump();
cmle(v7.h4, v4.h4, 0); dump();
cmle(v7.h4, v8.h4, 0); dump();
cmle(v7.h4, v16.h4, 0); dump();
cmle(v7.h4, v31.h4, 0); dump();
cmle(v7.h4, v7.h4, 0); dump();
cmlt(v7.h4, v7.h4, 0); dump();
cmlt(v0.h4, v7.h4, 0); dump();
cmlt(v1.h4, v7.h4, 0); dump();
cmlt(v2.h4, v7.h4, 0); dump();
cmlt(v4.h4, v7.h4, 0); dump();
cmlt(v8.h4, v7.h4, 0); dump();
cmlt(v16.h4, v7.h4, 0); dump();
cmlt(v31.h4, v7.h4, 0); dump();
cmlt(v7.h4, v7.h4, 0); dump();
cmlt(v7.h4, v0.h4, 0); dump();
cmlt(v7.h4, v1.h4, 0); dump();
cmlt(v7.h4, v2.h4, 0); dump();
cmlt(v7.h4, v4.h4, 0); dump();
cmlt(v7.h4, v8.h4, 0); dump();
cmlt(v7.h4, v16.h4, 0); dump();
cmlt(v7.h4, v31.h4, 0); dump();
cmlt(v7.h4, v7.h4, 0); dump();
//DataProcSimd_Compare1:4
cmeq(v7.h8, v7.h8, 0); dump();
cmeq(v0.h8, v7.h8, 0); dump();
cmeq(v1.h8, v7.h8, 0); dump();
cmeq(v2.h8, v7.h8, 0); dump();
cmeq(v4.h8, v7.h8, 0); dump();
cmeq(v8.h8, v7.h8, 0); dump();
cmeq(v16.h8, v7.h8, 0); dump();
cmeq(v31.h8, v7.h8, 0); dump();
cmeq(v7.h8, v7.h8, 0); dump();
cmeq(v7.h8, v0.h8, 0); dump();
cmeq(v7.h8, v1.h8, 0); dump();
cmeq(v7.h8, v2.h8, 0); dump();
cmeq(v7.h8, v4.h8, 0); dump();
cmeq(v7.h8, v8.h8, 0); dump();
cmeq(v7.h8, v16.h8, 0); dump();
cmeq(v7.h8, v31.h8, 0); dump();
cmeq(v7.h8, v7.h8, 0); dump();
cmge(v7.h8, v7.h8, 0); dump();
cmge(v0.h8, v7.h8, 0); dump();
cmge(v1.h8, v7.h8, 0); dump();
cmge(v2.h8, v7.h8, 0); dump();
cmge(v4.h8, v7.h8, 0); dump();
cmge(v8.h8, v7.h8, 0); dump();
cmge(v16.h8, v7.h8, 0); dump();
cmge(v31.h8, v7.h8, 0); dump();
cmge(v7.h8, v7.h8, 0); dump();
cmge(v7.h8, v0.h8, 0); dump();
cmge(v7.h8, v1.h8, 0); dump();
cmge(v7.h8, v2.h8, 0); dump();
cmge(v7.h8, v4.h8, 0); dump();
cmge(v7.h8, v8.h8, 0); dump();
cmge(v7.h8, v16.h8, 0); dump();
cmge(v7.h8, v31.h8, 0); dump();
cmge(v7.h8, v7.h8, 0); dump();
cmgt(v7.h8, v7.h8, 0); dump();
cmgt(v0.h8, v7.h8, 0); dump();
cmgt(v1.h8, v7.h8, 0); dump();
cmgt(v2.h8, v7.h8, 0); dump();
cmgt(v4.h8, v7.h8, 0); dump();
cmgt(v8.h8, v7.h8, 0); dump();
cmgt(v16.h8, v7.h8, 0); dump();
cmgt(v31.h8, v7.h8, 0); dump();
cmgt(v7.h8, v7.h8, 0); dump();
cmgt(v7.h8, v0.h8, 0); dump();
cmgt(v7.h8, v1.h8, 0); dump();
cmgt(v7.h8, v2.h8, 0); dump();
cmgt(v7.h8, v4.h8, 0); dump();
cmgt(v7.h8, v8.h8, 0); dump();
cmgt(v7.h8, v16.h8, 0); dump();
cmgt(v7.h8, v31.h8, 0); dump();
cmgt(v7.h8, v7.h8, 0); dump();
cmle(v7.h8, v7.h8, 0); dump();
cmle(v0.h8, v7.h8, 0); dump();
cmle(v1.h8, v7.h8, 0); dump();
cmle(v2.h8, v7.h8, 0); dump();
cmle(v4.h8, v7.h8, 0); dump();
cmle(v8.h8, v7.h8, 0); dump();
cmle(v16.h8, v7.h8, 0); dump();
cmle(v31.h8, v7.h8, 0); dump();
cmle(v7.h8, v7.h8, 0); dump();
cmle(v7.h8, v0.h8, 0); dump();
cmle(v7.h8, v1.h8, 0); dump();
cmle(v7.h8, v2.h8, 0); dump();
cmle(v7.h8, v4.h8, 0); dump();
cmle(v7.h8, v8.h8, 0); dump();
cmle(v7.h8, v16.h8, 0); dump();
cmle(v7.h8, v31.h8, 0); dump();
cmle(v7.h8, v7.h8, 0); dump();
cmlt(v7.h8, v7.h8, 0); dump();
cmlt(v0.h8, v7.h8, 0); dump();
cmlt(v1.h8, v7.h8, 0); dump();
cmlt(v2.h8, v7.h8, 0); dump();
cmlt(v4.h8, v7.h8, 0); dump();
cmlt(v8.h8, v7.h8, 0); dump();
cmlt(v16.h8, v7.h8, 0); dump();
cmlt(v31.h8, v7.h8, 0); dump();
cmlt(v7.h8, v7.h8, 0); dump();
cmlt(v7.h8, v0.h8, 0); dump();
cmlt(v7.h8, v1.h8, 0); dump();
cmlt(v7.h8, v2.h8, 0); dump();
cmlt(v7.h8, v4.h8, 0); dump();
cmlt(v7.h8, v8.h8, 0); dump();
cmlt(v7.h8, v16.h8, 0); dump();
cmlt(v7.h8, v31.h8, 0); dump();
cmlt(v7.h8, v7.h8, 0); dump();
//DataProcSimd_Compare1:5
cmeq(v7.s2, v7.s2, 0); dump();
cmeq(v0.s2, v7.s2, 0); dump();
cmeq(v1.s2, v7.s2, 0); dump();
cmeq(v2.s2, v7.s2, 0); dump();
cmeq(v4.s2, v7.s2, 0); dump();
cmeq(v8.s2, v7.s2, 0); dump();
cmeq(v16.s2, v7.s2, 0); dump();
cmeq(v31.s2, v7.s2, 0); dump();
cmeq(v7.s2, v7.s2, 0); dump();
cmeq(v7.s2, v0.s2, 0); dump();
cmeq(v7.s2, v1.s2, 0); dump();
cmeq(v7.s2, v2.s2, 0); dump();
cmeq(v7.s2, v4.s2, 0); dump();
cmeq(v7.s2, v8.s2, 0); dump();
cmeq(v7.s2, v16.s2, 0); dump();
cmeq(v7.s2, v31.s2, 0); dump();
cmeq(v7.s2, v7.s2, 0); dump();
cmge(v7.s2, v7.s2, 0); dump();
cmge(v0.s2, v7.s2, 0); dump();
cmge(v1.s2, v7.s2, 0); dump();
cmge(v2.s2, v7.s2, 0); dump();
cmge(v4.s2, v7.s2, 0); dump();
cmge(v8.s2, v7.s2, 0); dump();
cmge(v16.s2, v7.s2, 0); dump();
cmge(v31.s2, v7.s2, 0); dump();
cmge(v7.s2, v7.s2, 0); dump();
cmge(v7.s2, v0.s2, 0); dump();
cmge(v7.s2, v1.s2, 0); dump();
cmge(v7.s2, v2.s2, 0); dump();
cmge(v7.s2, v4.s2, 0); dump();
cmge(v7.s2, v8.s2, 0); dump();
cmge(v7.s2, v16.s2, 0); dump();
cmge(v7.s2, v31.s2, 0); dump();
cmge(v7.s2, v7.s2, 0); dump();
cmgt(v7.s2, v7.s2, 0); dump();
cmgt(v0.s2, v7.s2, 0); dump();
cmgt(v1.s2, v7.s2, 0); dump();
cmgt(v2.s2, v7.s2, 0); dump();
cmgt(v4.s2, v7.s2, 0); dump();
cmgt(v8.s2, v7.s2, 0); dump();
cmgt(v16.s2, v7.s2, 0); dump();
cmgt(v31.s2, v7.s2, 0); dump();
cmgt(v7.s2, v7.s2, 0); dump();
cmgt(v7.s2, v0.s2, 0); dump();
cmgt(v7.s2, v1.s2, 0); dump();
cmgt(v7.s2, v2.s2, 0); dump();
cmgt(v7.s2, v4.s2, 0); dump();
cmgt(v7.s2, v8.s2, 0); dump();
cmgt(v7.s2, v16.s2, 0); dump();
cmgt(v7.s2, v31.s2, 0); dump();
cmgt(v7.s2, v7.s2, 0); dump();
cmle(v7.s2, v7.s2, 0); dump();
cmle(v0.s2, v7.s2, 0); dump();
cmle(v1.s2, v7.s2, 0); dump();
cmle(v2.s2, v7.s2, 0); dump();
cmle(v4.s2, v7.s2, 0); dump();
cmle(v8.s2, v7.s2, 0); dump();
cmle(v16.s2, v7.s2, 0); dump();
cmle(v31.s2, v7.s2, 0); dump();
cmle(v7.s2, v7.s2, 0); dump();
cmle(v7.s2, v0.s2, 0); dump();
cmle(v7.s2, v1.s2, 0); dump();
cmle(v7.s2, v2.s2, 0); dump();
cmle(v7.s2, v4.s2, 0); dump();
cmle(v7.s2, v8.s2, 0); dump();
cmle(v7.s2, v16.s2, 0); dump();
cmle(v7.s2, v31.s2, 0); dump();
cmle(v7.s2, v7.s2, 0); dump();
cmlt(v7.s2, v7.s2, 0); dump();
cmlt(v0.s2, v7.s2, 0); dump();
cmlt(v1.s2, v7.s2, 0); dump();
cmlt(v2.s2, v7.s2, 0); dump();
cmlt(v4.s2, v7.s2, 0); dump();
cmlt(v8.s2, v7.s2, 0); dump();
cmlt(v16.s2, v7.s2, 0); dump();
cmlt(v31.s2, v7.s2, 0); dump();
cmlt(v7.s2, v7.s2, 0); dump();
cmlt(v7.s2, v0.s2, 0); dump();
cmlt(v7.s2, v1.s2, 0); dump();
cmlt(v7.s2, v2.s2, 0); dump();
cmlt(v7.s2, v4.s2, 0); dump();
cmlt(v7.s2, v8.s2, 0); dump();
cmlt(v7.s2, v16.s2, 0); dump();
cmlt(v7.s2, v31.s2, 0); dump();
cmlt(v7.s2, v7.s2, 0); dump();
//DataProcSimd_Compare1:6
cmeq(v7.s4, v7.s4, 0); dump();
cmeq(v0.s4, v7.s4, 0); dump();
cmeq(v1.s4, v7.s4, 0); dump();
cmeq(v2.s4, v7.s4, 0); dump();
cmeq(v4.s4, v7.s4, 0); dump();
cmeq(v8.s4, v7.s4, 0); dump();
cmeq(v16.s4, v7.s4, 0); dump();
cmeq(v31.s4, v7.s4, 0); dump();
cmeq(v7.s4, v7.s4, 0); dump();
cmeq(v7.s4, v0.s4, 0); dump();
cmeq(v7.s4, v1.s4, 0); dump();
cmeq(v7.s4, v2.s4, 0); dump();
cmeq(v7.s4, v4.s4, 0); dump();
cmeq(v7.s4, v8.s4, 0); dump();
cmeq(v7.s4, v16.s4, 0); dump();
cmeq(v7.s4, v31.s4, 0); dump();
cmeq(v7.s4, v7.s4, 0); dump();
cmge(v7.s4, v7.s4, 0); dump();
cmge(v0.s4, v7.s4, 0); dump();
cmge(v1.s4, v7.s4, 0); dump();
cmge(v2.s4, v7.s4, 0); dump();
cmge(v4.s4, v7.s4, 0); dump();
cmge(v8.s4, v7.s4, 0); dump();
cmge(v16.s4, v7.s4, 0); dump();
cmge(v31.s4, v7.s4, 0); dump();
cmge(v7.s4, v7.s4, 0); dump();
cmge(v7.s4, v0.s4, 0); dump();
cmge(v7.s4, v1.s4, 0); dump();
cmge(v7.s4, v2.s4, 0); dump();
cmge(v7.s4, v4.s4, 0); dump();
cmge(v7.s4, v8.s4, 0); dump();
cmge(v7.s4, v16.s4, 0); dump();
cmge(v7.s4, v31.s4, 0); dump();
cmge(v7.s4, v7.s4, 0); dump();
cmgt(v7.s4, v7.s4, 0); dump();
cmgt(v0.s4, v7.s4, 0); dump();
cmgt(v1.s4, v7.s4, 0); dump();
cmgt(v2.s4, v7.s4, 0); dump();
cmgt(v4.s4, v7.s4, 0); dump();
cmgt(v8.s4, v7.s4, 0); dump();
cmgt(v16.s4, v7.s4, 0); dump();
cmgt(v31.s4, v7.s4, 0); dump();
cmgt(v7.s4, v7.s4, 0); dump();
cmgt(v7.s4, v0.s4, 0); dump();
cmgt(v7.s4, v1.s4, 0); dump();
cmgt(v7.s4, v2.s4, 0); dump();
cmgt(v7.s4, v4.s4, 0); dump();
cmgt(v7.s4, v8.s4, 0); dump();
cmgt(v7.s4, v16.s4, 0); dump();
cmgt(v7.s4, v31.s4, 0); dump();
cmgt(v7.s4, v7.s4, 0); dump();
cmle(v7.s4, v7.s4, 0); dump();
cmle(v0.s4, v7.s4, 0); dump();
cmle(v1.s4, v7.s4, 0); dump();
cmle(v2.s4, v7.s4, 0); dump();
cmle(v4.s4, v7.s4, 0); dump();
cmle(v8.s4, v7.s4, 0); dump();
cmle(v16.s4, v7.s4, 0); dump();
cmle(v31.s4, v7.s4, 0); dump();
cmle(v7.s4, v7.s4, 0); dump();
cmle(v7.s4, v0.s4, 0); dump();
cmle(v7.s4, v1.s4, 0); dump();
cmle(v7.s4, v2.s4, 0); dump();
cmle(v7.s4, v4.s4, 0); dump();
cmle(v7.s4, v8.s4, 0); dump();
cmle(v7.s4, v16.s4, 0); dump();
cmle(v7.s4, v31.s4, 0); dump();
cmle(v7.s4, v7.s4, 0); dump();
cmlt(v7.s4, v7.s4, 0); dump();
cmlt(v0.s4, v7.s4, 0); dump();
cmlt(v1.s4, v7.s4, 0); dump();
cmlt(v2.s4, v7.s4, 0); dump();
cmlt(v4.s4, v7.s4, 0); dump();
cmlt(v8.s4, v7.s4, 0); dump();
cmlt(v16.s4, v7.s4, 0); dump();
cmlt(v31.s4, v7.s4, 0); dump();
cmlt(v7.s4, v7.s4, 0); dump();
cmlt(v7.s4, v0.s4, 0); dump();
cmlt(v7.s4, v1.s4, 0); dump();
cmlt(v7.s4, v2.s4, 0); dump();
cmlt(v7.s4, v4.s4, 0); dump();
cmlt(v7.s4, v8.s4, 0); dump();
cmlt(v7.s4, v16.s4, 0); dump();
cmlt(v7.s4, v31.s4, 0); dump();
cmlt(v7.s4, v7.s4, 0); dump();
//DataProcSimd_Compare1:7
cmeq(v7.d2, v7.d2, 0); dump();
cmeq(v0.d2, v7.d2, 0); dump();
cmeq(v1.d2, v7.d2, 0); dump();
cmeq(v2.d2, v7.d2, 0); dump();
cmeq(v4.d2, v7.d2, 0); dump();
cmeq(v8.d2, v7.d2, 0); dump();
cmeq(v16.d2, v7.d2, 0); dump();
cmeq(v31.d2, v7.d2, 0); dump();
cmeq(v7.d2, v7.d2, 0); dump();
cmeq(v7.d2, v0.d2, 0); dump();
cmeq(v7.d2, v1.d2, 0); dump();
cmeq(v7.d2, v2.d2, 0); dump();
cmeq(v7.d2, v4.d2, 0); dump();
cmeq(v7.d2, v8.d2, 0); dump();
cmeq(v7.d2, v16.d2, 0); dump();
cmeq(v7.d2, v31.d2, 0); dump();
cmeq(v7.d2, v7.d2, 0); dump();
cmge(v7.d2, v7.d2, 0); dump();
cmge(v0.d2, v7.d2, 0); dump();
cmge(v1.d2, v7.d2, 0); dump();
cmge(v2.d2, v7.d2, 0); dump();
cmge(v4.d2, v7.d2, 0); dump();
cmge(v8.d2, v7.d2, 0); dump();
cmge(v16.d2, v7.d2, 0); dump();
cmge(v31.d2, v7.d2, 0); dump();
cmge(v7.d2, v7.d2, 0); dump();
cmge(v7.d2, v0.d2, 0); dump();
cmge(v7.d2, v1.d2, 0); dump();
cmge(v7.d2, v2.d2, 0); dump();
cmge(v7.d2, v4.d2, 0); dump();
cmge(v7.d2, v8.d2, 0); dump();
cmge(v7.d2, v16.d2, 0); dump();
cmge(v7.d2, v31.d2, 0); dump();
cmge(v7.d2, v7.d2, 0); dump();
cmgt(v7.d2, v7.d2, 0); dump();
cmgt(v0.d2, v7.d2, 0); dump();
cmgt(v1.d2, v7.d2, 0); dump();
cmgt(v2.d2, v7.d2, 0); dump();
cmgt(v4.d2, v7.d2, 0); dump();
cmgt(v8.d2, v7.d2, 0); dump();
cmgt(v16.d2, v7.d2, 0); dump();
cmgt(v31.d2, v7.d2, 0); dump();
cmgt(v7.d2, v7.d2, 0); dump();
cmgt(v7.d2, v0.d2, 0); dump();
cmgt(v7.d2, v1.d2, 0); dump();
cmgt(v7.d2, v2.d2, 0); dump();
cmgt(v7.d2, v4.d2, 0); dump();
cmgt(v7.d2, v8.d2, 0); dump();
cmgt(v7.d2, v16.d2, 0); dump();
cmgt(v7.d2, v31.d2, 0); dump();
cmgt(v7.d2, v7.d2, 0); dump();
cmle(v7.d2, v7.d2, 0); dump();
cmle(v0.d2, v7.d2, 0); dump();
cmle(v1.d2, v7.d2, 0); dump();
cmle(v2.d2, v7.d2, 0); dump();
cmle(v4.d2, v7.d2, 0); dump();
cmle(v8.d2, v7.d2, 0); dump();
cmle(v16.d2, v7.d2, 0); dump();
cmle(v31.d2, v7.d2, 0); dump();
cmle(v7.d2, v7.d2, 0); dump();
cmle(v7.d2, v0.d2, 0); dump();
cmle(v7.d2, v1.d2, 0); dump();
cmle(v7.d2, v2.d2, 0); dump();
cmle(v7.d2, v4.d2, 0); dump();
cmle(v7.d2, v8.d2, 0); dump();
cmle(v7.d2, v16.d2, 0); dump();
cmle(v7.d2, v31.d2, 0); dump();
cmle(v7.d2, v7.d2, 0); dump();
cmlt(v7.d2, v7.d2, 0); dump();
cmlt(v0.d2, v7.d2, 0); dump();
cmlt(v1.d2, v7.d2, 0); dump();
cmlt(v2.d2, v7.d2, 0); dump();
cmlt(v4.d2, v7.d2, 0); dump();
cmlt(v8.d2, v7.d2, 0); dump();
cmlt(v16.d2, v7.d2, 0); dump();
cmlt(v31.d2, v7.d2, 0); dump();
cmlt(v7.d2, v7.d2, 0); dump();
cmlt(v7.d2, v0.d2, 0); dump();
cmlt(v7.d2, v1.d2, 0); dump();
cmlt(v7.d2, v2.d2, 0); dump();
cmlt(v7.d2, v4.d2, 0); dump();
cmlt(v7.d2, v8.d2, 0); dump();
cmlt(v7.d2, v16.d2, 0); dump();
cmlt(v7.d2, v31.d2, 0); dump();
cmlt(v7.d2, v7.d2, 0); dump();
//DataProcSimd_Compare2:0
fcmeq(h7, h7, h7); dump();
fcmeq(h0, h7, h7); dump();
fcmeq(h1, h7, h7); dump();
fcmeq(h2, h7, h7); dump();
fcmeq(h4, h7, h7); dump();
fcmeq(h8, h7, h7); dump();
fcmeq(h16, h7, h7); dump();
fcmeq(h31, h7, h7); dump();
fcmeq(h7, h7, h7); dump();
fcmeq(h7, h0, h7); dump();
fcmeq(h7, h1, h7); dump();
fcmeq(h7, h2, h7); dump();
fcmeq(h7, h4, h7); dump();
fcmeq(h7, h8, h7); dump();
fcmeq(h7, h16, h7); dump();
fcmeq(h7, h31, h7); dump();
fcmeq(h7, h7, h7); dump();
fcmeq(h7, h7, h0); dump();
fcmeq(h7, h7, h1); dump();
fcmeq(h7, h7, h2); dump();
fcmeq(h7, h7, h4); dump();
fcmeq(h7, h7, h8); dump();
fcmeq(h7, h7, h16); dump();
fcmeq(h7, h7, h31); dump();
fcmge(h7, h7, h7); dump();
fcmge(h0, h7, h7); dump();
fcmge(h1, h7, h7); dump();
fcmge(h2, h7, h7); dump();
fcmge(h4, h7, h7); dump();
fcmge(h8, h7, h7); dump();
fcmge(h16, h7, h7); dump();
fcmge(h31, h7, h7); dump();
fcmge(h7, h7, h7); dump();
fcmge(h7, h0, h7); dump();
fcmge(h7, h1, h7); dump();
fcmge(h7, h2, h7); dump();
fcmge(h7, h4, h7); dump();
fcmge(h7, h8, h7); dump();
fcmge(h7, h16, h7); dump();
fcmge(h7, h31, h7); dump();
fcmge(h7, h7, h7); dump();
fcmge(h7, h7, h0); dump();
fcmge(h7, h7, h1); dump();
fcmge(h7, h7, h2); dump();
fcmge(h7, h7, h4); dump();
fcmge(h7, h7, h8); dump();
fcmge(h7, h7, h16); dump();
fcmge(h7, h7, h31); dump();
fcmgt(h7, h7, h7); dump();
fcmgt(h0, h7, h7); dump();
fcmgt(h1, h7, h7); dump();
fcmgt(h2, h7, h7); dump();
fcmgt(h4, h7, h7); dump();
fcmgt(h8, h7, h7); dump();
fcmgt(h16, h7, h7); dump();
fcmgt(h31, h7, h7); dump();
fcmgt(h7, h7, h7); dump();
fcmgt(h7, h0, h7); dump();
fcmgt(h7, h1, h7); dump();
fcmgt(h7, h2, h7); dump();
fcmgt(h7, h4, h7); dump();
fcmgt(h7, h8, h7); dump();
fcmgt(h7, h16, h7); dump();
fcmgt(h7, h31, h7); dump();
fcmgt(h7, h7, h7); dump();
fcmgt(h7, h7, h0); dump();
fcmgt(h7, h7, h1); dump();
fcmgt(h7, h7, h2); dump();
fcmgt(h7, h7, h4); dump();
fcmgt(h7, h7, h8); dump();
fcmgt(h7, h7, h16); dump();
fcmgt(h7, h7, h31); dump();
facge(h7, h7, h7); dump();
facge(h0, h7, h7); dump();
facge(h1, h7, h7); dump();
facge(h2, h7, h7); dump();
facge(h4, h7, h7); dump();
facge(h8, h7, h7); dump();
facge(h16, h7, h7); dump();
facge(h31, h7, h7); dump();
facge(h7, h7, h7); dump();
facge(h7, h0, h7); dump();
facge(h7, h1, h7); dump();
facge(h7, h2, h7); dump();
facge(h7, h4, h7); dump();
facge(h7, h8, h7); dump();
facge(h7, h16, h7); dump();
facge(h7, h31, h7); dump();
facge(h7, h7, h7); dump();
facge(h7, h7, h0); dump();
facge(h7, h7, h1); dump();
facge(h7, h7, h2); dump();
facge(h7, h7, h4); dump();
facge(h7, h7, h8); dump();
facge(h7, h7, h16); dump();
facge(h7, h7, h31); dump();
facgt(h7, h7, h7); dump();
facgt(h0, h7, h7); dump();
facgt(h1, h7, h7); dump();
facgt(h2, h7, h7); dump();
facgt(h4, h7, h7); dump();
facgt(h8, h7, h7); dump();
facgt(h16, h7, h7); dump();
facgt(h31, h7, h7); dump();
facgt(h7, h7, h7); dump();
facgt(h7, h0, h7); dump();
facgt(h7, h1, h7); dump();
facgt(h7, h2, h7); dump();
facgt(h7, h4, h7); dump();
facgt(h7, h8, h7); dump();
facgt(h7, h16, h7); dump();
facgt(h7, h31, h7); dump();
facgt(h7, h7, h7); dump();
facgt(h7, h7, h0); dump();
facgt(h7, h7, h1); dump();
facgt(h7, h7, h2); dump();
facgt(h7, h7, h4); dump();
facgt(h7, h7, h8); dump();
facgt(h7, h7, h16); dump();
facgt(h7, h7, h31); dump();
//DataProcSimd_Compare2:1
fcmeq(s7, s7, s7); dump();
fcmeq(s0, s7, s7); dump();
fcmeq(s1, s7, s7); dump();
fcmeq(s2, s7, s7); dump();
fcmeq(s4, s7, s7); dump();
fcmeq(s8, s7, s7); dump();
fcmeq(s16, s7, s7); dump();
fcmeq(s31, s7, s7); dump();
fcmeq(s7, s7, s7); dump();
fcmeq(s7, s0, s7); dump();
fcmeq(s7, s1, s7); dump();
fcmeq(s7, s2, s7); dump();
fcmeq(s7, s4, s7); dump();
fcmeq(s7, s8, s7); dump();
fcmeq(s7, s16, s7); dump();
fcmeq(s7, s31, s7); dump();
fcmeq(s7, s7, s7); dump();
fcmeq(s7, s7, s0); dump();
fcmeq(s7, s7, s1); dump();
fcmeq(s7, s7, s2); dump();
fcmeq(s7, s7, s4); dump();
fcmeq(s7, s7, s8); dump();
fcmeq(s7, s7, s16); dump();
fcmeq(s7, s7, s31); dump();
fcmge(s7, s7, s7); dump();
fcmge(s0, s7, s7); dump();
fcmge(s1, s7, s7); dump();
fcmge(s2, s7, s7); dump();
fcmge(s4, s7, s7); dump();
fcmge(s8, s7, s7); dump();
fcmge(s16, s7, s7); dump();
fcmge(s31, s7, s7); dump();
fcmge(s7, s7, s7); dump();
fcmge(s7, s0, s7); dump();
fcmge(s7, s1, s7); dump();
fcmge(s7, s2, s7); dump();
fcmge(s7, s4, s7); dump();
fcmge(s7, s8, s7); dump();
fcmge(s7, s16, s7); dump();
fcmge(s7, s31, s7); dump();
fcmge(s7, s7, s7); dump();
fcmge(s7, s7, s0); dump();
fcmge(s7, s7, s1); dump();
fcmge(s7, s7, s2); dump();
fcmge(s7, s7, s4); dump();
fcmge(s7, s7, s8); dump();
fcmge(s7, s7, s16); dump();
fcmge(s7, s7, s31); dump();
fcmgt(s7, s7, s7); dump();
fcmgt(s0, s7, s7); dump();
fcmgt(s1, s7, s7); dump();
fcmgt(s2, s7, s7); dump();
fcmgt(s4, s7, s7); dump();
fcmgt(s8, s7, s7); dump();
fcmgt(s16, s7, s7); dump();
fcmgt(s31, s7, s7); dump();
fcmgt(s7, s7, s7); dump();
fcmgt(s7, s0, s7); dump();
fcmgt(s7, s1, s7); dump();
fcmgt(s7, s2, s7); dump();
fcmgt(s7, s4, s7); dump();
fcmgt(s7, s8, s7); dump();
fcmgt(s7, s16, s7); dump();
fcmgt(s7, s31, s7); dump();
fcmgt(s7, s7, s7); dump();
fcmgt(s7, s7, s0); dump();
fcmgt(s7, s7, s1); dump();
fcmgt(s7, s7, s2); dump();
fcmgt(s7, s7, s4); dump();
fcmgt(s7, s7, s8); dump();
fcmgt(s7, s7, s16); dump();
fcmgt(s7, s7, s31); dump();
facge(s7, s7, s7); dump();
facge(s0, s7, s7); dump();
facge(s1, s7, s7); dump();
facge(s2, s7, s7); dump();
facge(s4, s7, s7); dump();
facge(s8, s7, s7); dump();
facge(s16, s7, s7); dump();
facge(s31, s7, s7); dump();
facge(s7, s7, s7); dump();
facge(s7, s0, s7); dump();
facge(s7, s1, s7); dump();
facge(s7, s2, s7); dump();
facge(s7, s4, s7); dump();
facge(s7, s8, s7); dump();
facge(s7, s16, s7); dump();
facge(s7, s31, s7); dump();
facge(s7, s7, s7); dump();
facge(s7, s7, s0); dump();
facge(s7, s7, s1); dump();
facge(s7, s7, s2); dump();
facge(s7, s7, s4); dump();
facge(s7, s7, s8); dump();
facge(s7, s7, s16); dump();
facge(s7, s7, s31); dump();
facgt(s7, s7, s7); dump();
facgt(s0, s7, s7); dump();
facgt(s1, s7, s7); dump();
facgt(s2, s7, s7); dump();
facgt(s4, s7, s7); dump();
facgt(s8, s7, s7); dump();
facgt(s16, s7, s7); dump();
facgt(s31, s7, s7); dump();
facgt(s7, s7, s7); dump();
facgt(s7, s0, s7); dump();
facgt(s7, s1, s7); dump();
facgt(s7, s2, s7); dump();
facgt(s7, s4, s7); dump();
facgt(s7, s8, s7); dump();
facgt(s7, s16, s7); dump();
facgt(s7, s31, s7); dump();
facgt(s7, s7, s7); dump();
facgt(s7, s7, s0); dump();
facgt(s7, s7, s1); dump();
facgt(s7, s7, s2); dump();
facgt(s7, s7, s4); dump();
facgt(s7, s7, s8); dump();
facgt(s7, s7, s16); dump();
facgt(s7, s7, s31); dump();
//DataProcSimd_Compare2:2
fcmeq(d7, d7, d7); dump();
fcmeq(d0, d7, d7); dump();
fcmeq(d1, d7, d7); dump();
fcmeq(d2, d7, d7); dump();
fcmeq(d4, d7, d7); dump();
fcmeq(d8, d7, d7); dump();
fcmeq(d16, d7, d7); dump();
fcmeq(d31, d7, d7); dump();
fcmeq(d7, d7, d7); dump();
fcmeq(d7, d0, d7); dump();
fcmeq(d7, d1, d7); dump();
fcmeq(d7, d2, d7); dump();
fcmeq(d7, d4, d7); dump();
fcmeq(d7, d8, d7); dump();
fcmeq(d7, d16, d7); dump();
fcmeq(d7, d31, d7); dump();
fcmeq(d7, d7, d7); dump();
fcmeq(d7, d7, d0); dump();
fcmeq(d7, d7, d1); dump();
fcmeq(d7, d7, d2); dump();
fcmeq(d7, d7, d4); dump();
fcmeq(d7, d7, d8); dump();
fcmeq(d7, d7, d16); dump();
fcmeq(d7, d7, d31); dump();
fcmge(d7, d7, d7); dump();
fcmge(d0, d7, d7); dump();
fcmge(d1, d7, d7); dump();
fcmge(d2, d7, d7); dump();
fcmge(d4, d7, d7); dump();
fcmge(d8, d7, d7); dump();
fcmge(d16, d7, d7); dump();
fcmge(d31, d7, d7); dump();
fcmge(d7, d7, d7); dump();
fcmge(d7, d0, d7); dump();
fcmge(d7, d1, d7); dump();
fcmge(d7, d2, d7); dump();
fcmge(d7, d4, d7); dump();
fcmge(d7, d8, d7); dump();
fcmge(d7, d16, d7); dump();
fcmge(d7, d31, d7); dump();
fcmge(d7, d7, d7); dump();
fcmge(d7, d7, d0); dump();
fcmge(d7, d7, d1); dump();
fcmge(d7, d7, d2); dump();
fcmge(d7, d7, d4); dump();
fcmge(d7, d7, d8); dump();
fcmge(d7, d7, d16); dump();
fcmge(d7, d7, d31); dump();
fcmgt(d7, d7, d7); dump();
fcmgt(d0, d7, d7); dump();
fcmgt(d1, d7, d7); dump();
fcmgt(d2, d7, d7); dump();
fcmgt(d4, d7, d7); dump();
fcmgt(d8, d7, d7); dump();
fcmgt(d16, d7, d7); dump();
fcmgt(d31, d7, d7); dump();
fcmgt(d7, d7, d7); dump();
fcmgt(d7, d0, d7); dump();
fcmgt(d7, d1, d7); dump();
fcmgt(d7, d2, d7); dump();
fcmgt(d7, d4, d7); dump();
fcmgt(d7, d8, d7); dump();
fcmgt(d7, d16, d7); dump();
fcmgt(d7, d31, d7); dump();
fcmgt(d7, d7, d7); dump();
fcmgt(d7, d7, d0); dump();
fcmgt(d7, d7, d1); dump();
fcmgt(d7, d7, d2); dump();
fcmgt(d7, d7, d4); dump();
fcmgt(d7, d7, d8); dump();
fcmgt(d7, d7, d16); dump();
fcmgt(d7, d7, d31); dump();
facge(d7, d7, d7); dump();
facge(d0, d7, d7); dump();
facge(d1, d7, d7); dump();
facge(d2, d7, d7); dump();
facge(d4, d7, d7); dump();
facge(d8, d7, d7); dump();
facge(d16, d7, d7); dump();
facge(d31, d7, d7); dump();
facge(d7, d7, d7); dump();
facge(d7, d0, d7); dump();
facge(d7, d1, d7); dump();
facge(d7, d2, d7); dump();
facge(d7, d4, d7); dump();
facge(d7, d8, d7); dump();
facge(d7, d16, d7); dump();
facge(d7, d31, d7); dump();
facge(d7, d7, d7); dump();
facge(d7, d7, d0); dump();
facge(d7, d7, d1); dump();
facge(d7, d7, d2); dump();
facge(d7, d7, d4); dump();
facge(d7, d7, d8); dump();
facge(d7, d7, d16); dump();
facge(d7, d7, d31); dump();
facgt(d7, d7, d7); dump();
facgt(d0, d7, d7); dump();
facgt(d1, d7, d7); dump();
facgt(d2, d7, d7); dump();
facgt(d4, d7, d7); dump();
facgt(d8, d7, d7); dump();
facgt(d16, d7, d7); dump();
facgt(d31, d7, d7); dump();
facgt(d7, d7, d7); dump();
facgt(d7, d0, d7); dump();
facgt(d7, d1, d7); dump();
facgt(d7, d2, d7); dump();
facgt(d7, d4, d7); dump();
facgt(d7, d8, d7); dump();
facgt(d7, d16, d7); dump();
facgt(d7, d31, d7); dump();
facgt(d7, d7, d7); dump();
facgt(d7, d7, d0); dump();
facgt(d7, d7, d1); dump();
facgt(d7, d7, d2); dump();
facgt(d7, d7, d4); dump();
facgt(d7, d7, d8); dump();
facgt(d7, d7, d16); dump();
facgt(d7, d7, d31); dump();
//DataProcSimd_Compare2:3
fcmeq(v7.h8, v7.h8, v7.h8); dump();
fcmeq(v0.h8, v7.h8, v7.h8); dump();
fcmeq(v1.h8, v7.h8, v7.h8); dump();
fcmeq(v2.h8, v7.h8, v7.h8); dump();
fcmeq(v4.h8, v7.h8, v7.h8); dump();
fcmeq(v8.h8, v7.h8, v7.h8); dump();
fcmeq(v16.h8, v7.h8, v7.h8); dump();
fcmeq(v31.h8, v7.h8, v7.h8); dump();
fcmeq(v7.h8, v7.h8, v7.h8); dump();
fcmeq(v7.h8, v0.h8, v7.h8); dump();
fcmeq(v7.h8, v1.h8, v7.h8); dump();
fcmeq(v7.h8, v2.h8, v7.h8); dump();
fcmeq(v7.h8, v4.h8, v7.h8); dump();
fcmeq(v7.h8, v8.h8, v7.h8); dump();
fcmeq(v7.h8, v16.h8, v7.h8); dump();
fcmeq(v7.h8, v31.h8, v7.h8); dump();
fcmeq(v7.h8, v7.h8, v7.h8); dump();
fcmeq(v7.h8, v7.h8, v0.h8); dump();
fcmeq(v7.h8, v7.h8, v1.h8); dump();
fcmeq(v7.h8, v7.h8, v2.h8); dump();
fcmeq(v7.h8, v7.h8, v4.h8); dump();
fcmeq(v7.h8, v7.h8, v8.h8); dump();
fcmeq(v7.h8, v7.h8, v16.h8); dump();
fcmeq(v7.h8, v7.h8, v31.h8); dump();
fcmge(v7.h8, v7.h8, v7.h8); dump();
fcmge(v0.h8, v7.h8, v7.h8); dump();
fcmge(v1.h8, v7.h8, v7.h8); dump();
fcmge(v2.h8, v7.h8, v7.h8); dump();
fcmge(v4.h8, v7.h8, v7.h8); dump();
fcmge(v8.h8, v7.h8, v7.h8); dump();
fcmge(v16.h8, v7.h8, v7.h8); dump();
fcmge(v31.h8, v7.h8, v7.h8); dump();
fcmge(v7.h8, v7.h8, v7.h8); dump();
fcmge(v7.h8, v0.h8, v7.h8); dump();
fcmge(v7.h8, v1.h8, v7.h8); dump();
fcmge(v7.h8, v2.h8, v7.h8); dump();
fcmge(v7.h8, v4.h8, v7.h8); dump();
fcmge(v7.h8, v8.h8, v7.h8); dump();
fcmge(v7.h8, v16.h8, v7.h8); dump();
fcmge(v7.h8, v31.h8, v7.h8); dump();
fcmge(v7.h8, v7.h8, v7.h8); dump();
fcmge(v7.h8, v7.h8, v0.h8); dump();
fcmge(v7.h8, v7.h8, v1.h8); dump();
fcmge(v7.h8, v7.h8, v2.h8); dump();
fcmge(v7.h8, v7.h8, v4.h8); dump();
fcmge(v7.h8, v7.h8, v8.h8); dump();
fcmge(v7.h8, v7.h8, v16.h8); dump();
fcmge(v7.h8, v7.h8, v31.h8); dump();
fcmgt(v7.h8, v7.h8, v7.h8); dump();
fcmgt(v0.h8, v7.h8, v7.h8); dump();
fcmgt(v1.h8, v7.h8, v7.h8); dump();
fcmgt(v2.h8, v7.h8, v7.h8); dump();
fcmgt(v4.h8, v7.h8, v7.h8); dump();
fcmgt(v8.h8, v7.h8, v7.h8); dump();
fcmgt(v16.h8, v7.h8, v7.h8); dump();
fcmgt(v31.h8, v7.h8, v7.h8); dump();
fcmgt(v7.h8, v7.h8, v7.h8); dump();
fcmgt(v7.h8, v0.h8, v7.h8); dump();
fcmgt(v7.h8, v1.h8, v7.h8); dump();
fcmgt(v7.h8, v2.h8, v7.h8); dump();
fcmgt(v7.h8, v4.h8, v7.h8); dump();
fcmgt(v7.h8, v8.h8, v7.h8); dump();
fcmgt(v7.h8, v16.h8, v7.h8); dump();
fcmgt(v7.h8, v31.h8, v7.h8); dump();
fcmgt(v7.h8, v7.h8, v7.h8); dump();
fcmgt(v7.h8, v7.h8, v0.h8); dump();
fcmgt(v7.h8, v7.h8, v1.h8); dump();
fcmgt(v7.h8, v7.h8, v2.h8); dump();
fcmgt(v7.h8, v7.h8, v4.h8); dump();
fcmgt(v7.h8, v7.h8, v8.h8); dump();
fcmgt(v7.h8, v7.h8, v16.h8); dump();
fcmgt(v7.h8, v7.h8, v31.h8); dump();
facge(v7.h8, v7.h8, v7.h8); dump();
facge(v0.h8, v7.h8, v7.h8); dump();
facge(v1.h8, v7.h8, v7.h8); dump();
facge(v2.h8, v7.h8, v7.h8); dump();
facge(v4.h8, v7.h8, v7.h8); dump();
facge(v8.h8, v7.h8, v7.h8); dump();
facge(v16.h8, v7.h8, v7.h8); dump();
facge(v31.h8, v7.h8, v7.h8); dump();
facge(v7.h8, v7.h8, v7.h8); dump();
facge(v7.h8, v0.h8, v7.h8); dump();
facge(v7.h8, v1.h8, v7.h8); dump();
facge(v7.h8, v2.h8, v7.h8); dump();
facge(v7.h8, v4.h8, v7.h8); dump();
facge(v7.h8, v8.h8, v7.h8); dump();
facge(v7.h8, v16.h8, v7.h8); dump();
facge(v7.h8, v31.h8, v7.h8); dump();
facge(v7.h8, v7.h8, v7.h8); dump();
facge(v7.h8, v7.h8, v0.h8); dump();
facge(v7.h8, v7.h8, v1.h8); dump();
facge(v7.h8, v7.h8, v2.h8); dump();
facge(v7.h8, v7.h8, v4.h8); dump();
facge(v7.h8, v7.h8, v8.h8); dump();
facge(v7.h8, v7.h8, v16.h8); dump();
facge(v7.h8, v7.h8, v31.h8); dump();
facgt(v7.h8, v7.h8, v7.h8); dump();
facgt(v0.h8, v7.h8, v7.h8); dump();
facgt(v1.h8, v7.h8, v7.h8); dump();
facgt(v2.h8, v7.h8, v7.h8); dump();
facgt(v4.h8, v7.h8, v7.h8); dump();
facgt(v8.h8, v7.h8, v7.h8); dump();
facgt(v16.h8, v7.h8, v7.h8); dump();
facgt(v31.h8, v7.h8, v7.h8); dump();
facgt(v7.h8, v7.h8, v7.h8); dump();
facgt(v7.h8, v0.h8, v7.h8); dump();
facgt(v7.h8, v1.h8, v7.h8); dump();
facgt(v7.h8, v2.h8, v7.h8); dump();
facgt(v7.h8, v4.h8, v7.h8); dump();
facgt(v7.h8, v8.h8, v7.h8); dump();
facgt(v7.h8, v16.h8, v7.h8); dump();
facgt(v7.h8, v31.h8, v7.h8); dump();
facgt(v7.h8, v7.h8, v7.h8); dump();
facgt(v7.h8, v7.h8, v0.h8); dump();
facgt(v7.h8, v7.h8, v1.h8); dump();
facgt(v7.h8, v7.h8, v2.h8); dump();
facgt(v7.h8, v7.h8, v4.h8); dump();
facgt(v7.h8, v7.h8, v8.h8); dump();
facgt(v7.h8, v7.h8, v16.h8); dump();
facgt(v7.h8, v7.h8, v31.h8); dump();
//DataProcSimd_Compare2:4
fcmeq(v7.h4, v7.h4, v7.h4); dump();
fcmeq(v0.h4, v7.h4, v7.h4); dump();
fcmeq(v1.h4, v7.h4, v7.h4); dump();
fcmeq(v2.h4, v7.h4, v7.h4); dump();
fcmeq(v4.h4, v7.h4, v7.h4); dump();
fcmeq(v8.h4, v7.h4, v7.h4); dump();
fcmeq(v16.h4, v7.h4, v7.h4); dump();
fcmeq(v31.h4, v7.h4, v7.h4); dump();
fcmeq(v7.h4, v7.h4, v7.h4); dump();
fcmeq(v7.h4, v0.h4, v7.h4); dump();
fcmeq(v7.h4, v1.h4, v7.h4); dump();
fcmeq(v7.h4, v2.h4, v7.h4); dump();
fcmeq(v7.h4, v4.h4, v7.h4); dump();
fcmeq(v7.h4, v8.h4, v7.h4); dump();
fcmeq(v7.h4, v16.h4, v7.h4); dump();
fcmeq(v7.h4, v31.h4, v7.h4); dump();
fcmeq(v7.h4, v7.h4, v7.h4); dump();
fcmeq(v7.h4, v7.h4, v0.h4); dump();
fcmeq(v7.h4, v7.h4, v1.h4); dump();
fcmeq(v7.h4, v7.h4, v2.h4); dump();
fcmeq(v7.h4, v7.h4, v4.h4); dump();
fcmeq(v7.h4, v7.h4, v8.h4); dump();
fcmeq(v7.h4, v7.h4, v16.h4); dump();
fcmeq(v7.h4, v7.h4, v31.h4); dump();
fcmge(v7.h4, v7.h4, v7.h4); dump();
fcmge(v0.h4, v7.h4, v7.h4); dump();
fcmge(v1.h4, v7.h4, v7.h4); dump();
fcmge(v2.h4, v7.h4, v7.h4); dump();
fcmge(v4.h4, v7.h4, v7.h4); dump();
fcmge(v8.h4, v7.h4, v7.h4); dump();
fcmge(v16.h4, v7.h4, v7.h4); dump();
fcmge(v31.h4, v7.h4, v7.h4); dump();
fcmge(v7.h4, v7.h4, v7.h4); dump();
fcmge(v7.h4, v0.h4, v7.h4); dump();
fcmge(v7.h4, v1.h4, v7.h4); dump();
fcmge(v7.h4, v2.h4, v7.h4); dump();
fcmge(v7.h4, v4.h4, v7.h4); dump();
fcmge(v7.h4, v8.h4, v7.h4); dump();
fcmge(v7.h4, v16.h4, v7.h4); dump();
fcmge(v7.h4, v31.h4, v7.h4); dump();
fcmge(v7.h4, v7.h4, v7.h4); dump();
fcmge(v7.h4, v7.h4, v0.h4); dump();
fcmge(v7.h4, v7.h4, v1.h4); dump();
fcmge(v7.h4, v7.h4, v2.h4); dump();
fcmge(v7.h4, v7.h4, v4.h4); dump();
fcmge(v7.h4, v7.h4, v8.h4); dump();
fcmge(v7.h4, v7.h4, v16.h4); dump();
fcmge(v7.h4, v7.h4, v31.h4); dump();
fcmgt(v7.h4, v7.h4, v7.h4); dump();
fcmgt(v0.h4, v7.h4, v7.h4); dump();
fcmgt(v1.h4, v7.h4, v7.h4); dump();
fcmgt(v2.h4, v7.h4, v7.h4); dump();
fcmgt(v4.h4, v7.h4, v7.h4); dump();
fcmgt(v8.h4, v7.h4, v7.h4); dump();
fcmgt(v16.h4, v7.h4, v7.h4); dump();
fcmgt(v31.h4, v7.h4, v7.h4); dump();
fcmgt(v7.h4, v7.h4, v7.h4); dump();
fcmgt(v7.h4, v0.h4, v7.h4); dump();
fcmgt(v7.h4, v1.h4, v7.h4); dump();
fcmgt(v7.h4, v2.h4, v7.h4); dump();
fcmgt(v7.h4, v4.h4, v7.h4); dump();
fcmgt(v7.h4, v8.h4, v7.h4); dump();
fcmgt(v7.h4, v16.h4, v7.h4); dump();
fcmgt(v7.h4, v31.h4, v7.h4); dump();
fcmgt(v7.h4, v7.h4, v7.h4); dump();
fcmgt(v7.h4, v7.h4, v0.h4); dump();
fcmgt(v7.h4, v7.h4, v1.h4); dump();
fcmgt(v7.h4, v7.h4, v2.h4); dump();
fcmgt(v7.h4, v7.h4, v4.h4); dump();
fcmgt(v7.h4, v7.h4, v8.h4); dump();
fcmgt(v7.h4, v7.h4, v16.h4); dump();
fcmgt(v7.h4, v7.h4, v31.h4); dump();
facge(v7.h4, v7.h4, v7.h4); dump();
facge(v0.h4, v7.h4, v7.h4); dump();
facge(v1.h4, v7.h4, v7.h4); dump();
facge(v2.h4, v7.h4, v7.h4); dump();
facge(v4.h4, v7.h4, v7.h4); dump();
facge(v8.h4, v7.h4, v7.h4); dump();
facge(v16.h4, v7.h4, v7.h4); dump();
facge(v31.h4, v7.h4, v7.h4); dump();
facge(v7.h4, v7.h4, v7.h4); dump();
facge(v7.h4, v0.h4, v7.h4); dump();
facge(v7.h4, v1.h4, v7.h4); dump();
facge(v7.h4, v2.h4, v7.h4); dump();
facge(v7.h4, v4.h4, v7.h4); dump();
facge(v7.h4, v8.h4, v7.h4); dump();
facge(v7.h4, v16.h4, v7.h4); dump();
facge(v7.h4, v31.h4, v7.h4); dump();
facge(v7.h4, v7.h4, v7.h4); dump();
facge(v7.h4, v7.h4, v0.h4); dump();
facge(v7.h4, v7.h4, v1.h4); dump();
facge(v7.h4, v7.h4, v2.h4); dump();
facge(v7.h4, v7.h4, v4.h4); dump();
facge(v7.h4, v7.h4, v8.h4); dump();
facge(v7.h4, v7.h4, v16.h4); dump();
facge(v7.h4, v7.h4, v31.h4); dump();
facgt(v7.h4, v7.h4, v7.h4); dump();
facgt(v0.h4, v7.h4, v7.h4); dump();
facgt(v1.h4, v7.h4, v7.h4); dump();
facgt(v2.h4, v7.h4, v7.h4); dump();
facgt(v4.h4, v7.h4, v7.h4); dump();
facgt(v8.h4, v7.h4, v7.h4); dump();
facgt(v16.h4, v7.h4, v7.h4); dump();
facgt(v31.h4, v7.h4, v7.h4); dump();
facgt(v7.h4, v7.h4, v7.h4); dump();
facgt(v7.h4, v0.h4, v7.h4); dump();
facgt(v7.h4, v1.h4, v7.h4); dump();
facgt(v7.h4, v2.h4, v7.h4); dump();
facgt(v7.h4, v4.h4, v7.h4); dump();
facgt(v7.h4, v8.h4, v7.h4); dump();
facgt(v7.h4, v16.h4, v7.h4); dump();
facgt(v7.h4, v31.h4, v7.h4); dump();
facgt(v7.h4, v7.h4, v7.h4); dump();
facgt(v7.h4, v7.h4, v0.h4); dump();
facgt(v7.h4, v7.h4, v1.h4); dump();
facgt(v7.h4, v7.h4, v2.h4); dump();
facgt(v7.h4, v7.h4, v4.h4); dump();
facgt(v7.h4, v7.h4, v8.h4); dump();
facgt(v7.h4, v7.h4, v16.h4); dump();
facgt(v7.h4, v7.h4, v31.h4); dump();
//DataProcSimd_Compare2:5
fcmeq(v7.s4, v7.s4, v7.s4); dump();
fcmeq(v0.s4, v7.s4, v7.s4); dump();
fcmeq(v1.s4, v7.s4, v7.s4); dump();
fcmeq(v2.s4, v7.s4, v7.s4); dump();
fcmeq(v4.s4, v7.s4, v7.s4); dump();
fcmeq(v8.s4, v7.s4, v7.s4); dump();
fcmeq(v16.s4, v7.s4, v7.s4); dump();
fcmeq(v31.s4, v7.s4, v7.s4); dump();
fcmeq(v7.s4, v7.s4, v7.s4); dump();
fcmeq(v7.s4, v0.s4, v7.s4); dump();
fcmeq(v7.s4, v1.s4, v7.s4); dump();
fcmeq(v7.s4, v2.s4, v7.s4); dump();
fcmeq(v7.s4, v4.s4, v7.s4); dump();
fcmeq(v7.s4, v8.s4, v7.s4); dump();
fcmeq(v7.s4, v16.s4, v7.s4); dump();
fcmeq(v7.s4, v31.s4, v7.s4); dump();
fcmeq(v7.s4, v7.s4, v7.s4); dump();
fcmeq(v7.s4, v7.s4, v0.s4); dump();
fcmeq(v7.s4, v7.s4, v1.s4); dump();
fcmeq(v7.s4, v7.s4, v2.s4); dump();
fcmeq(v7.s4, v7.s4, v4.s4); dump();
fcmeq(v7.s4, v7.s4, v8.s4); dump();
fcmeq(v7.s4, v7.s4, v16.s4); dump();
fcmeq(v7.s4, v7.s4, v31.s4); dump();
fcmge(v7.s4, v7.s4, v7.s4); dump();
fcmge(v0.s4, v7.s4, v7.s4); dump();
fcmge(v1.s4, v7.s4, v7.s4); dump();
fcmge(v2.s4, v7.s4, v7.s4); dump();
fcmge(v4.s4, v7.s4, v7.s4); dump();
fcmge(v8.s4, v7.s4, v7.s4); dump();
fcmge(v16.s4, v7.s4, v7.s4); dump();
fcmge(v31.s4, v7.s4, v7.s4); dump();
fcmge(v7.s4, v7.s4, v7.s4); dump();
fcmge(v7.s4, v0.s4, v7.s4); dump();
fcmge(v7.s4, v1.s4, v7.s4); dump();
fcmge(v7.s4, v2.s4, v7.s4); dump();
fcmge(v7.s4, v4.s4, v7.s4); dump();
fcmge(v7.s4, v8.s4, v7.s4); dump();
fcmge(v7.s4, v16.s4, v7.s4); dump();
fcmge(v7.s4, v31.s4, v7.s4); dump();
fcmge(v7.s4, v7.s4, v7.s4); dump();
fcmge(v7.s4, v7.s4, v0.s4); dump();
fcmge(v7.s4, v7.s4, v1.s4); dump();
fcmge(v7.s4, v7.s4, v2.s4); dump();
fcmge(v7.s4, v7.s4, v4.s4); dump();
fcmge(v7.s4, v7.s4, v8.s4); dump();
fcmge(v7.s4, v7.s4, v16.s4); dump();
fcmge(v7.s4, v7.s4, v31.s4); dump();
fcmgt(v7.s4, v7.s4, v7.s4); dump();
fcmgt(v0.s4, v7.s4, v7.s4); dump();
fcmgt(v1.s4, v7.s4, v7.s4); dump();
fcmgt(v2.s4, v7.s4, v7.s4); dump();
fcmgt(v4.s4, v7.s4, v7.s4); dump();
fcmgt(v8.s4, v7.s4, v7.s4); dump();
fcmgt(v16.s4, v7.s4, v7.s4); dump();
fcmgt(v31.s4, v7.s4, v7.s4); dump();
fcmgt(v7.s4, v7.s4, v7.s4); dump();
fcmgt(v7.s4, v0.s4, v7.s4); dump();
fcmgt(v7.s4, v1.s4, v7.s4); dump();
fcmgt(v7.s4, v2.s4, v7.s4); dump();
fcmgt(v7.s4, v4.s4, v7.s4); dump();
fcmgt(v7.s4, v8.s4, v7.s4); dump();
fcmgt(v7.s4, v16.s4, v7.s4); dump();
fcmgt(v7.s4, v31.s4, v7.s4); dump();
fcmgt(v7.s4, v7.s4, v7.s4); dump();
fcmgt(v7.s4, v7.s4, v0.s4); dump();
fcmgt(v7.s4, v7.s4, v1.s4); dump();
fcmgt(v7.s4, v7.s4, v2.s4); dump();
fcmgt(v7.s4, v7.s4, v4.s4); dump();
fcmgt(v7.s4, v7.s4, v8.s4); dump();
fcmgt(v7.s4, v7.s4, v16.s4); dump();
fcmgt(v7.s4, v7.s4, v31.s4); dump();
facge(v7.s4, v7.s4, v7.s4); dump();
facge(v0.s4, v7.s4, v7.s4); dump();
facge(v1.s4, v7.s4, v7.s4); dump();
facge(v2.s4, v7.s4, v7.s4); dump();
facge(v4.s4, v7.s4, v7.s4); dump();
facge(v8.s4, v7.s4, v7.s4); dump();
facge(v16.s4, v7.s4, v7.s4); dump();
facge(v31.s4, v7.s4, v7.s4); dump();
facge(v7.s4, v7.s4, v7.s4); dump();
facge(v7.s4, v0.s4, v7.s4); dump();
facge(v7.s4, v1.s4, v7.s4); dump();
facge(v7.s4, v2.s4, v7.s4); dump();
facge(v7.s4, v4.s4, v7.s4); dump();
facge(v7.s4, v8.s4, v7.s4); dump();
facge(v7.s4, v16.s4, v7.s4); dump();
facge(v7.s4, v31.s4, v7.s4); dump();
facge(v7.s4, v7.s4, v7.s4); dump();
facge(v7.s4, v7.s4, v0.s4); dump();
facge(v7.s4, v7.s4, v1.s4); dump();
facge(v7.s4, v7.s4, v2.s4); dump();
facge(v7.s4, v7.s4, v4.s4); dump();
facge(v7.s4, v7.s4, v8.s4); dump();
facge(v7.s4, v7.s4, v16.s4); dump();
facge(v7.s4, v7.s4, v31.s4); dump();
facgt(v7.s4, v7.s4, v7.s4); dump();
facgt(v0.s4, v7.s4, v7.s4); dump();
facgt(v1.s4, v7.s4, v7.s4); dump();
facgt(v2.s4, v7.s4, v7.s4); dump();
facgt(v4.s4, v7.s4, v7.s4); dump();
facgt(v8.s4, v7.s4, v7.s4); dump();
facgt(v16.s4, v7.s4, v7.s4); dump();
facgt(v31.s4, v7.s4, v7.s4); dump();
facgt(v7.s4, v7.s4, v7.s4); dump();
facgt(v7.s4, v0.s4, v7.s4); dump();
facgt(v7.s4, v1.s4, v7.s4); dump();
facgt(v7.s4, v2.s4, v7.s4); dump();
facgt(v7.s4, v4.s4, v7.s4); dump();
facgt(v7.s4, v8.s4, v7.s4); dump();
facgt(v7.s4, v16.s4, v7.s4); dump();
facgt(v7.s4, v31.s4, v7.s4); dump();
facgt(v7.s4, v7.s4, v7.s4); dump();
facgt(v7.s4, v7.s4, v0.s4); dump();
facgt(v7.s4, v7.s4, v1.s4); dump();
facgt(v7.s4, v7.s4, v2.s4); dump();
facgt(v7.s4, v7.s4, v4.s4); dump();
facgt(v7.s4, v7.s4, v8.s4); dump();
facgt(v7.s4, v7.s4, v16.s4); dump();
facgt(v7.s4, v7.s4, v31.s4); dump();
//DataProcSimd_Compare2:6
fcmeq(v7.s2, v7.s2, v7.s2); dump();
fcmeq(v0.s2, v7.s2, v7.s2); dump();
fcmeq(v1.s2, v7.s2, v7.s2); dump();
fcmeq(v2.s2, v7.s2, v7.s2); dump();
fcmeq(v4.s2, v7.s2, v7.s2); dump();
fcmeq(v8.s2, v7.s2, v7.s2); dump();
fcmeq(v16.s2, v7.s2, v7.s2); dump();
fcmeq(v31.s2, v7.s2, v7.s2); dump();
fcmeq(v7.s2, v7.s2, v7.s2); dump();
fcmeq(v7.s2, v0.s2, v7.s2); dump();
fcmeq(v7.s2, v1.s2, v7.s2); dump();
fcmeq(v7.s2, v2.s2, v7.s2); dump();
fcmeq(v7.s2, v4.s2, v7.s2); dump();
fcmeq(v7.s2, v8.s2, v7.s2); dump();
fcmeq(v7.s2, v16.s2, v7.s2); dump();
fcmeq(v7.s2, v31.s2, v7.s2); dump();
fcmeq(v7.s2, v7.s2, v7.s2); dump();
fcmeq(v7.s2, v7.s2, v0.s2); dump();
fcmeq(v7.s2, v7.s2, v1.s2); dump();
fcmeq(v7.s2, v7.s2, v2.s2); dump();
fcmeq(v7.s2, v7.s2, v4.s2); dump();
fcmeq(v7.s2, v7.s2, v8.s2); dump();
fcmeq(v7.s2, v7.s2, v16.s2); dump();
fcmeq(v7.s2, v7.s2, v31.s2); dump();
fcmge(v7.s2, v7.s2, v7.s2); dump();
fcmge(v0.s2, v7.s2, v7.s2); dump();
fcmge(v1.s2, v7.s2, v7.s2); dump();
fcmge(v2.s2, v7.s2, v7.s2); dump();
fcmge(v4.s2, v7.s2, v7.s2); dump();
fcmge(v8.s2, v7.s2, v7.s2); dump();
fcmge(v16.s2, v7.s2, v7.s2); dump();
fcmge(v31.s2, v7.s2, v7.s2); dump();
fcmge(v7.s2, v7.s2, v7.s2); dump();
fcmge(v7.s2, v0.s2, v7.s2); dump();
fcmge(v7.s2, v1.s2, v7.s2); dump();
fcmge(v7.s2, v2.s2, v7.s2); dump();
fcmge(v7.s2, v4.s2, v7.s2); dump();
fcmge(v7.s2, v8.s2, v7.s2); dump();
fcmge(v7.s2, v16.s2, v7.s2); dump();
fcmge(v7.s2, v31.s2, v7.s2); dump();
fcmge(v7.s2, v7.s2, v7.s2); dump();
fcmge(v7.s2, v7.s2, v0.s2); dump();
fcmge(v7.s2, v7.s2, v1.s2); dump();
fcmge(v7.s2, v7.s2, v2.s2); dump();
fcmge(v7.s2, v7.s2, v4.s2); dump();
fcmge(v7.s2, v7.s2, v8.s2); dump();
fcmge(v7.s2, v7.s2, v16.s2); dump();
fcmge(v7.s2, v7.s2, v31.s2); dump();
fcmgt(v7.s2, v7.s2, v7.s2); dump();
fcmgt(v0.s2, v7.s2, v7.s2); dump();
fcmgt(v1.s2, v7.s2, v7.s2); dump();
fcmgt(v2.s2, v7.s2, v7.s2); dump();
fcmgt(v4.s2, v7.s2, v7.s2); dump();
fcmgt(v8.s2, v7.s2, v7.s2); dump();
fcmgt(v16.s2, v7.s2, v7.s2); dump();
fcmgt(v31.s2, v7.s2, v7.s2); dump();
fcmgt(v7.s2, v7.s2, v7.s2); dump();
fcmgt(v7.s2, v0.s2, v7.s2); dump();
fcmgt(v7.s2, v1.s2, v7.s2); dump();
fcmgt(v7.s2, v2.s2, v7.s2); dump();
fcmgt(v7.s2, v4.s2, v7.s2); dump();
fcmgt(v7.s2, v8.s2, v7.s2); dump();
fcmgt(v7.s2, v16.s2, v7.s2); dump();
fcmgt(v7.s2, v31.s2, v7.s2); dump();
fcmgt(v7.s2, v7.s2, v7.s2); dump();
fcmgt(v7.s2, v7.s2, v0.s2); dump();
fcmgt(v7.s2, v7.s2, v1.s2); dump();
fcmgt(v7.s2, v7.s2, v2.s2); dump();
fcmgt(v7.s2, v7.s2, v4.s2); dump();
fcmgt(v7.s2, v7.s2, v8.s2); dump();
fcmgt(v7.s2, v7.s2, v16.s2); dump();
fcmgt(v7.s2, v7.s2, v31.s2); dump();
facge(v7.s2, v7.s2, v7.s2); dump();
facge(v0.s2, v7.s2, v7.s2); dump();
facge(v1.s2, v7.s2, v7.s2); dump();
facge(v2.s2, v7.s2, v7.s2); dump();
facge(v4.s2, v7.s2, v7.s2); dump();
facge(v8.s2, v7.s2, v7.s2); dump();
facge(v16.s2, v7.s2, v7.s2); dump();
facge(v31.s2, v7.s2, v7.s2); dump();
facge(v7.s2, v7.s2, v7.s2); dump();
facge(v7.s2, v0.s2, v7.s2); dump();
facge(v7.s2, v1.s2, v7.s2); dump();
facge(v7.s2, v2.s2, v7.s2); dump();
facge(v7.s2, v4.s2, v7.s2); dump();
facge(v7.s2, v8.s2, v7.s2); dump();
facge(v7.s2, v16.s2, v7.s2); dump();
facge(v7.s2, v31.s2, v7.s2); dump();
facge(v7.s2, v7.s2, v7.s2); dump();
facge(v7.s2, v7.s2, v0.s2); dump();
facge(v7.s2, v7.s2, v1.s2); dump();
facge(v7.s2, v7.s2, v2.s2); dump();
facge(v7.s2, v7.s2, v4.s2); dump();
facge(v7.s2, v7.s2, v8.s2); dump();
facge(v7.s2, v7.s2, v16.s2); dump();
facge(v7.s2, v7.s2, v31.s2); dump();
facgt(v7.s2, v7.s2, v7.s2); dump();
facgt(v0.s2, v7.s2, v7.s2); dump();
facgt(v1.s2, v7.s2, v7.s2); dump();
facgt(v2.s2, v7.s2, v7.s2); dump();
facgt(v4.s2, v7.s2, v7.s2); dump();
facgt(v8.s2, v7.s2, v7.s2); dump();
facgt(v16.s2, v7.s2, v7.s2); dump();
facgt(v31.s2, v7.s2, v7.s2); dump();
facgt(v7.s2, v7.s2, v7.s2); dump();
facgt(v7.s2, v0.s2, v7.s2); dump();
facgt(v7.s2, v1.s2, v7.s2); dump();
facgt(v7.s2, v2.s2, v7.s2); dump();
facgt(v7.s2, v4.s2, v7.s2); dump();
facgt(v7.s2, v8.s2, v7.s2); dump();
facgt(v7.s2, v16.s2, v7.s2); dump();
facgt(v7.s2, v31.s2, v7.s2); dump();
facgt(v7.s2, v7.s2, v7.s2); dump();
facgt(v7.s2, v7.s2, v0.s2); dump();
facgt(v7.s2, v7.s2, v1.s2); dump();
facgt(v7.s2, v7.s2, v2.s2); dump();
facgt(v7.s2, v7.s2, v4.s2); dump();
facgt(v7.s2, v7.s2, v8.s2); dump();
facgt(v7.s2, v7.s2, v16.s2); dump();
facgt(v7.s2, v7.s2, v31.s2); dump();
//DataProcSimd_Compare2:7
fcmeq(v7.d2, v7.d2, v7.d2); dump();
fcmeq(v0.d2, v7.d2, v7.d2); dump();
fcmeq(v1.d2, v7.d2, v7.d2); dump();
fcmeq(v2.d2, v7.d2, v7.d2); dump();
fcmeq(v4.d2, v7.d2, v7.d2); dump();
fcmeq(v8.d2, v7.d2, v7.d2); dump();
fcmeq(v16.d2, v7.d2, v7.d2); dump();
fcmeq(v31.d2, v7.d2, v7.d2); dump();
fcmeq(v7.d2, v7.d2, v7.d2); dump();
fcmeq(v7.d2, v0.d2, v7.d2); dump();
fcmeq(v7.d2, v1.d2, v7.d2); dump();
fcmeq(v7.d2, v2.d2, v7.d2); dump();
fcmeq(v7.d2, v4.d2, v7.d2); dump();
fcmeq(v7.d2, v8.d2, v7.d2); dump();
fcmeq(v7.d2, v16.d2, v7.d2); dump();
fcmeq(v7.d2, v31.d2, v7.d2); dump();
fcmeq(v7.d2, v7.d2, v7.d2); dump();
fcmeq(v7.d2, v7.d2, v0.d2); dump();
fcmeq(v7.d2, v7.d2, v1.d2); dump();
fcmeq(v7.d2, v7.d2, v2.d2); dump();
fcmeq(v7.d2, v7.d2, v4.d2); dump();
fcmeq(v7.d2, v7.d2, v8.d2); dump();
fcmeq(v7.d2, v7.d2, v16.d2); dump();
fcmeq(v7.d2, v7.d2, v31.d2); dump();
fcmge(v7.d2, v7.d2, v7.d2); dump();
fcmge(v0.d2, v7.d2, v7.d2); dump();
fcmge(v1.d2, v7.d2, v7.d2); dump();
fcmge(v2.d2, v7.d2, v7.d2); dump();
fcmge(v4.d2, v7.d2, v7.d2); dump();
fcmge(v8.d2, v7.d2, v7.d2); dump();
fcmge(v16.d2, v7.d2, v7.d2); dump();
fcmge(v31.d2, v7.d2, v7.d2); dump();
fcmge(v7.d2, v7.d2, v7.d2); dump();
fcmge(v7.d2, v0.d2, v7.d2); dump();
fcmge(v7.d2, v1.d2, v7.d2); dump();
fcmge(v7.d2, v2.d2, v7.d2); dump();
fcmge(v7.d2, v4.d2, v7.d2); dump();
fcmge(v7.d2, v8.d2, v7.d2); dump();
fcmge(v7.d2, v16.d2, v7.d2); dump();
fcmge(v7.d2, v31.d2, v7.d2); dump();
fcmge(v7.d2, v7.d2, v7.d2); dump();
fcmge(v7.d2, v7.d2, v0.d2); dump();
fcmge(v7.d2, v7.d2, v1.d2); dump();
fcmge(v7.d2, v7.d2, v2.d2); dump();
fcmge(v7.d2, v7.d2, v4.d2); dump();
fcmge(v7.d2, v7.d2, v8.d2); dump();
fcmge(v7.d2, v7.d2, v16.d2); dump();
fcmge(v7.d2, v7.d2, v31.d2); dump();
fcmgt(v7.d2, v7.d2, v7.d2); dump();
fcmgt(v0.d2, v7.d2, v7.d2); dump();
fcmgt(v1.d2, v7.d2, v7.d2); dump();
fcmgt(v2.d2, v7.d2, v7.d2); dump();
fcmgt(v4.d2, v7.d2, v7.d2); dump();
fcmgt(v8.d2, v7.d2, v7.d2); dump();
fcmgt(v16.d2, v7.d2, v7.d2); dump();
fcmgt(v31.d2, v7.d2, v7.d2); dump();
fcmgt(v7.d2, v7.d2, v7.d2); dump();
fcmgt(v7.d2, v0.d2, v7.d2); dump();
fcmgt(v7.d2, v1.d2, v7.d2); dump();
fcmgt(v7.d2, v2.d2, v7.d2); dump();
fcmgt(v7.d2, v4.d2, v7.d2); dump();
fcmgt(v7.d2, v8.d2, v7.d2); dump();
fcmgt(v7.d2, v16.d2, v7.d2); dump();
fcmgt(v7.d2, v31.d2, v7.d2); dump();
fcmgt(v7.d2, v7.d2, v7.d2); dump();
fcmgt(v7.d2, v7.d2, v0.d2); dump();
fcmgt(v7.d2, v7.d2, v1.d2); dump();
fcmgt(v7.d2, v7.d2, v2.d2); dump();
fcmgt(v7.d2, v7.d2, v4.d2); dump();
fcmgt(v7.d2, v7.d2, v8.d2); dump();
fcmgt(v7.d2, v7.d2, v16.d2); dump();
fcmgt(v7.d2, v7.d2, v31.d2); dump();
facge(v7.d2, v7.d2, v7.d2); dump();
facge(v0.d2, v7.d2, v7.d2); dump();
facge(v1.d2, v7.d2, v7.d2); dump();
facge(v2.d2, v7.d2, v7.d2); dump();
facge(v4.d2, v7.d2, v7.d2); dump();
facge(v8.d2, v7.d2, v7.d2); dump();
facge(v16.d2, v7.d2, v7.d2); dump();
facge(v31.d2, v7.d2, v7.d2); dump();
facge(v7.d2, v7.d2, v7.d2); dump();
facge(v7.d2, v0.d2, v7.d2); dump();
facge(v7.d2, v1.d2, v7.d2); dump();
facge(v7.d2, v2.d2, v7.d2); dump();
facge(v7.d2, v4.d2, v7.d2); dump();
facge(v7.d2, v8.d2, v7.d2); dump();
facge(v7.d2, v16.d2, v7.d2); dump();
facge(v7.d2, v31.d2, v7.d2); dump();
facge(v7.d2, v7.d2, v7.d2); dump();
facge(v7.d2, v7.d2, v0.d2); dump();
facge(v7.d2, v7.d2, v1.d2); dump();
facge(v7.d2, v7.d2, v2.d2); dump();
facge(v7.d2, v7.d2, v4.d2); dump();
facge(v7.d2, v7.d2, v8.d2); dump();
facge(v7.d2, v7.d2, v16.d2); dump();
facge(v7.d2, v7.d2, v31.d2); dump();
facgt(v7.d2, v7.d2, v7.d2); dump();
facgt(v0.d2, v7.d2, v7.d2); dump();
facgt(v1.d2, v7.d2, v7.d2); dump();
facgt(v2.d2, v7.d2, v7.d2); dump();
facgt(v4.d2, v7.d2, v7.d2); dump();
facgt(v8.d2, v7.d2, v7.d2); dump();
facgt(v16.d2, v7.d2, v7.d2); dump();
facgt(v31.d2, v7.d2, v7.d2); dump();
facgt(v7.d2, v7.d2, v7.d2); dump();
facgt(v7.d2, v0.d2, v7.d2); dump();
facgt(v7.d2, v1.d2, v7.d2); dump();
facgt(v7.d2, v2.d2, v7.d2); dump();
facgt(v7.d2, v4.d2, v7.d2); dump();
facgt(v7.d2, v8.d2, v7.d2); dump();
facgt(v7.d2, v16.d2, v7.d2); dump();
facgt(v7.d2, v31.d2, v7.d2); dump();
facgt(v7.d2, v7.d2, v7.d2); dump();
facgt(v7.d2, v7.d2, v0.d2); dump();
facgt(v7.d2, v7.d2, v1.d2); dump();
facgt(v7.d2, v7.d2, v2.d2); dump();
facgt(v7.d2, v7.d2, v4.d2); dump();
facgt(v7.d2, v7.d2, v8.d2); dump();
facgt(v7.d2, v7.d2, v16.d2); dump();
facgt(v7.d2, v7.d2, v31.d2); dump();
//DataProcSimd_Compare3:0
fcmeq(h7, h7, 0); dump();
fcmeq(h0, h7, 0); dump();
fcmeq(h1, h7, 0); dump();
fcmeq(h2, h7, 0); dump();
fcmeq(h4, h7, 0); dump();
fcmeq(h8, h7, 0); dump();
fcmeq(h16, h7, 0); dump();
fcmeq(h31, h7, 0); dump();
fcmeq(h7, h7, 0); dump();
fcmeq(h7, h0, 0); dump();
fcmeq(h7, h1, 0); dump();
fcmeq(h7, h2, 0); dump();
fcmeq(h7, h4, 0); dump();
fcmeq(h7, h8, 0); dump();
fcmeq(h7, h16, 0); dump();
fcmeq(h7, h31, 0); dump();
fcmeq(h7, h7, 0); dump();
fcmge(h7, h7, 0); dump();
fcmge(h0, h7, 0); dump();
fcmge(h1, h7, 0); dump();
fcmge(h2, h7, 0); dump();
fcmge(h4, h7, 0); dump();
fcmge(h8, h7, 0); dump();
fcmge(h16, h7, 0); dump();
fcmge(h31, h7, 0); dump();
fcmge(h7, h7, 0); dump();
fcmge(h7, h0, 0); dump();
fcmge(h7, h1, 0); dump();
fcmge(h7, h2, 0); dump();
fcmge(h7, h4, 0); dump();
fcmge(h7, h8, 0); dump();
fcmge(h7, h16, 0); dump();
fcmge(h7, h31, 0); dump();
fcmge(h7, h7, 0); dump();
fcmgt(h7, h7, 0); dump();
fcmgt(h0, h7, 0); dump();
fcmgt(h1, h7, 0); dump();
fcmgt(h2, h7, 0); dump();
fcmgt(h4, h7, 0); dump();
fcmgt(h8, h7, 0); dump();
fcmgt(h16, h7, 0); dump();
fcmgt(h31, h7, 0); dump();
fcmgt(h7, h7, 0); dump();
fcmgt(h7, h0, 0); dump();
fcmgt(h7, h1, 0); dump();
fcmgt(h7, h2, 0); dump();
fcmgt(h7, h4, 0); dump();
fcmgt(h7, h8, 0); dump();
fcmgt(h7, h16, 0); dump();
fcmgt(h7, h31, 0); dump();
fcmgt(h7, h7, 0); dump();
fcmle(h7, h7, 0); dump();
fcmle(h0, h7, 0); dump();
fcmle(h1, h7, 0); dump();
fcmle(h2, h7, 0); dump();
fcmle(h4, h7, 0); dump();
fcmle(h8, h7, 0); dump();
fcmle(h16, h7, 0); dump();
fcmle(h31, h7, 0); dump();
fcmle(h7, h7, 0); dump();
fcmle(h7, h0, 0); dump();
fcmle(h7, h1, 0); dump();
fcmle(h7, h2, 0); dump();
fcmle(h7, h4, 0); dump();
fcmle(h7, h8, 0); dump();
fcmle(h7, h16, 0); dump();
fcmle(h7, h31, 0); dump();
fcmle(h7, h7, 0); dump();
fcmlt(h7, h7, 0); dump();
fcmlt(h0, h7, 0); dump();
fcmlt(h1, h7, 0); dump();
fcmlt(h2, h7, 0); dump();
fcmlt(h4, h7, 0); dump();
fcmlt(h8, h7, 0); dump();
fcmlt(h16, h7, 0); dump();
fcmlt(h31, h7, 0); dump();
fcmlt(h7, h7, 0); dump();
fcmlt(h7, h0, 0); dump();
fcmlt(h7, h1, 0); dump();
fcmlt(h7, h2, 0); dump();
fcmlt(h7, h4, 0); dump();
fcmlt(h7, h8, 0); dump();
fcmlt(h7, h16, 0); dump();
fcmlt(h7, h31, 0); dump();
fcmlt(h7, h7, 0); dump();
//DataProcSimd_Compare3:1
fcmeq(s7, s7, 0); dump();
fcmeq(s0, s7, 0); dump();
fcmeq(s1, s7, 0); dump();
fcmeq(s2, s7, 0); dump();
fcmeq(s4, s7, 0); dump();
fcmeq(s8, s7, 0); dump();
fcmeq(s16, s7, 0); dump();
fcmeq(s31, s7, 0); dump();
fcmeq(s7, s7, 0); dump();
fcmeq(s7, s0, 0); dump();
fcmeq(s7, s1, 0); dump();
fcmeq(s7, s2, 0); dump();
fcmeq(s7, s4, 0); dump();
fcmeq(s7, s8, 0); dump();
fcmeq(s7, s16, 0); dump();
fcmeq(s7, s31, 0); dump();
fcmeq(s7, s7, 0); dump();
fcmge(s7, s7, 0); dump();
fcmge(s0, s7, 0); dump();
fcmge(s1, s7, 0); dump();
fcmge(s2, s7, 0); dump();
fcmge(s4, s7, 0); dump();
fcmge(s8, s7, 0); dump();
fcmge(s16, s7, 0); dump();
fcmge(s31, s7, 0); dump();
fcmge(s7, s7, 0); dump();
fcmge(s7, s0, 0); dump();
fcmge(s7, s1, 0); dump();
fcmge(s7, s2, 0); dump();
fcmge(s7, s4, 0); dump();
fcmge(s7, s8, 0); dump();
fcmge(s7, s16, 0); dump();
fcmge(s7, s31, 0); dump();
fcmge(s7, s7, 0); dump();
fcmgt(s7, s7, 0); dump();
fcmgt(s0, s7, 0); dump();
fcmgt(s1, s7, 0); dump();
fcmgt(s2, s7, 0); dump();
fcmgt(s4, s7, 0); dump();
fcmgt(s8, s7, 0); dump();
fcmgt(s16, s7, 0); dump();
fcmgt(s31, s7, 0); dump();
fcmgt(s7, s7, 0); dump();
fcmgt(s7, s0, 0); dump();
fcmgt(s7, s1, 0); dump();
fcmgt(s7, s2, 0); dump();
fcmgt(s7, s4, 0); dump();
fcmgt(s7, s8, 0); dump();
fcmgt(s7, s16, 0); dump();
fcmgt(s7, s31, 0); dump();
fcmgt(s7, s7, 0); dump();
fcmle(s7, s7, 0); dump();
fcmle(s0, s7, 0); dump();
fcmle(s1, s7, 0); dump();
fcmle(s2, s7, 0); dump();
fcmle(s4, s7, 0); dump();
fcmle(s8, s7, 0); dump();
fcmle(s16, s7, 0); dump();
fcmle(s31, s7, 0); dump();
fcmle(s7, s7, 0); dump();
fcmle(s7, s0, 0); dump();
fcmle(s7, s1, 0); dump();
fcmle(s7, s2, 0); dump();
fcmle(s7, s4, 0); dump();
fcmle(s7, s8, 0); dump();
fcmle(s7, s16, 0); dump();
fcmle(s7, s31, 0); dump();
fcmle(s7, s7, 0); dump();
fcmlt(s7, s7, 0); dump();
fcmlt(s0, s7, 0); dump();
fcmlt(s1, s7, 0); dump();
fcmlt(s2, s7, 0); dump();
fcmlt(s4, s7, 0); dump();
fcmlt(s8, s7, 0); dump();
fcmlt(s16, s7, 0); dump();
fcmlt(s31, s7, 0); dump();
fcmlt(s7, s7, 0); dump();
fcmlt(s7, s0, 0); dump();
fcmlt(s7, s1, 0); dump();
fcmlt(s7, s2, 0); dump();
fcmlt(s7, s4, 0); dump();
fcmlt(s7, s8, 0); dump();
fcmlt(s7, s16, 0); dump();
fcmlt(s7, s31, 0); dump();
fcmlt(s7, s7, 0); dump();
//DataProcSimd_Compare3:2
fcmeq(d7, d7, 0); dump();
fcmeq(d0, d7, 0); dump();
fcmeq(d1, d7, 0); dump();
fcmeq(d2, d7, 0); dump();
fcmeq(d4, d7, 0); dump();
fcmeq(d8, d7, 0); dump();
fcmeq(d16, d7, 0); dump();
fcmeq(d31, d7, 0); dump();
fcmeq(d7, d7, 0); dump();
fcmeq(d7, d0, 0); dump();
fcmeq(d7, d1, 0); dump();
fcmeq(d7, d2, 0); dump();
fcmeq(d7, d4, 0); dump();
fcmeq(d7, d8, 0); dump();
fcmeq(d7, d16, 0); dump();
fcmeq(d7, d31, 0); dump();
fcmeq(d7, d7, 0); dump();
fcmge(d7, d7, 0); dump();
fcmge(d0, d7, 0); dump();
fcmge(d1, d7, 0); dump();
fcmge(d2, d7, 0); dump();
fcmge(d4, d7, 0); dump();
fcmge(d8, d7, 0); dump();
fcmge(d16, d7, 0); dump();
fcmge(d31, d7, 0); dump();
fcmge(d7, d7, 0); dump();
fcmge(d7, d0, 0); dump();
fcmge(d7, d1, 0); dump();
fcmge(d7, d2, 0); dump();
fcmge(d7, d4, 0); dump();
fcmge(d7, d8, 0); dump();
fcmge(d7, d16, 0); dump();
fcmge(d7, d31, 0); dump();
fcmge(d7, d7, 0); dump();
fcmgt(d7, d7, 0); dump();
fcmgt(d0, d7, 0); dump();
fcmgt(d1, d7, 0); dump();
fcmgt(d2, d7, 0); dump();
fcmgt(d4, d7, 0); dump();
fcmgt(d8, d7, 0); dump();
fcmgt(d16, d7, 0); dump();
fcmgt(d31, d7, 0); dump();
fcmgt(d7, d7, 0); dump();
fcmgt(d7, d0, 0); dump();
fcmgt(d7, d1, 0); dump();
fcmgt(d7, d2, 0); dump();
fcmgt(d7, d4, 0); dump();
fcmgt(d7, d8, 0); dump();
fcmgt(d7, d16, 0); dump();
fcmgt(d7, d31, 0); dump();
fcmgt(d7, d7, 0); dump();
fcmle(d7, d7, 0); dump();
fcmle(d0, d7, 0); dump();
fcmle(d1, d7, 0); dump();
fcmle(d2, d7, 0); dump();
fcmle(d4, d7, 0); dump();
fcmle(d8, d7, 0); dump();
fcmle(d16, d7, 0); dump();
fcmle(d31, d7, 0); dump();
fcmle(d7, d7, 0); dump();
fcmle(d7, d0, 0); dump();
fcmle(d7, d1, 0); dump();
fcmle(d7, d2, 0); dump();
fcmle(d7, d4, 0); dump();
fcmle(d7, d8, 0); dump();
fcmle(d7, d16, 0); dump();
fcmle(d7, d31, 0); dump();
fcmle(d7, d7, 0); dump();
fcmlt(d7, d7, 0); dump();
fcmlt(d0, d7, 0); dump();
fcmlt(d1, d7, 0); dump();
fcmlt(d2, d7, 0); dump();
fcmlt(d4, d7, 0); dump();
fcmlt(d8, d7, 0); dump();
fcmlt(d16, d7, 0); dump();
fcmlt(d31, d7, 0); dump();
fcmlt(d7, d7, 0); dump();
fcmlt(d7, d0, 0); dump();
fcmlt(d7, d1, 0); dump();
fcmlt(d7, d2, 0); dump();
fcmlt(d7, d4, 0); dump();
fcmlt(d7, d8, 0); dump();
fcmlt(d7, d16, 0); dump();
fcmlt(d7, d31, 0); dump();
fcmlt(d7, d7, 0); dump();
//DataProcSimd_Compare3:3
fcmeq(v7.h8, v7.h8, 0); dump();
fcmeq(v0.h8, v7.h8, 0); dump();
fcmeq(v1.h8, v7.h8, 0); dump();
fcmeq(v2.h8, v7.h8, 0); dump();
fcmeq(v4.h8, v7.h8, 0); dump();
fcmeq(v8.h8, v7.h8, 0); dump();
fcmeq(v16.h8, v7.h8, 0); dump();
fcmeq(v31.h8, v7.h8, 0); dump();
fcmeq(v7.h8, v7.h8, 0); dump();
fcmeq(v7.h8, v0.h8, 0); dump();
fcmeq(v7.h8, v1.h8, 0); dump();
fcmeq(v7.h8, v2.h8, 0); dump();
fcmeq(v7.h8, v4.h8, 0); dump();
fcmeq(v7.h8, v8.h8, 0); dump();
fcmeq(v7.h8, v16.h8, 0); dump();
fcmeq(v7.h8, v31.h8, 0); dump();
fcmeq(v7.h8, v7.h8, 0); dump();
fcmge(v7.h8, v7.h8, 0); dump();
fcmge(v0.h8, v7.h8, 0); dump();
fcmge(v1.h8, v7.h8, 0); dump();
fcmge(v2.h8, v7.h8, 0); dump();
fcmge(v4.h8, v7.h8, 0); dump();
fcmge(v8.h8, v7.h8, 0); dump();
fcmge(v16.h8, v7.h8, 0); dump();
fcmge(v31.h8, v7.h8, 0); dump();
fcmge(v7.h8, v7.h8, 0); dump();
fcmge(v7.h8, v0.h8, 0); dump();
fcmge(v7.h8, v1.h8, 0); dump();
fcmge(v7.h8, v2.h8, 0); dump();
fcmge(v7.h8, v4.h8, 0); dump();
fcmge(v7.h8, v8.h8, 0); dump();
fcmge(v7.h8, v16.h8, 0); dump();
fcmge(v7.h8, v31.h8, 0); dump();
fcmge(v7.h8, v7.h8, 0); dump();
fcmgt(v7.h8, v7.h8, 0); dump();
fcmgt(v0.h8, v7.h8, 0); dump();
fcmgt(v1.h8, v7.h8, 0); dump();
fcmgt(v2.h8, v7.h8, 0); dump();
fcmgt(v4.h8, v7.h8, 0); dump();
fcmgt(v8.h8, v7.h8, 0); dump();
fcmgt(v16.h8, v7.h8, 0); dump();
fcmgt(v31.h8, v7.h8, 0); dump();
fcmgt(v7.h8, v7.h8, 0); dump();
fcmgt(v7.h8, v0.h8, 0); dump();
fcmgt(v7.h8, v1.h8, 0); dump();
fcmgt(v7.h8, v2.h8, 0); dump();
fcmgt(v7.h8, v4.h8, 0); dump();
fcmgt(v7.h8, v8.h8, 0); dump();
fcmgt(v7.h8, v16.h8, 0); dump();
fcmgt(v7.h8, v31.h8, 0); dump();
fcmgt(v7.h8, v7.h8, 0); dump();
fcmle(v7.h8, v7.h8, 0); dump();
fcmle(v0.h8, v7.h8, 0); dump();
fcmle(v1.h8, v7.h8, 0); dump();
fcmle(v2.h8, v7.h8, 0); dump();
fcmle(v4.h8, v7.h8, 0); dump();
fcmle(v8.h8, v7.h8, 0); dump();
fcmle(v16.h8, v7.h8, 0); dump();
fcmle(v31.h8, v7.h8, 0); dump();
fcmle(v7.h8, v7.h8, 0); dump();
fcmle(v7.h8, v0.h8, 0); dump();
fcmle(v7.h8, v1.h8, 0); dump();
fcmle(v7.h8, v2.h8, 0); dump();
fcmle(v7.h8, v4.h8, 0); dump();
fcmle(v7.h8, v8.h8, 0); dump();
fcmle(v7.h8, v16.h8, 0); dump();
fcmle(v7.h8, v31.h8, 0); dump();
fcmle(v7.h8, v7.h8, 0); dump();
fcmlt(v7.h8, v7.h8, 0); dump();
fcmlt(v0.h8, v7.h8, 0); dump();
fcmlt(v1.h8, v7.h8, 0); dump();
fcmlt(v2.h8, v7.h8, 0); dump();
fcmlt(v4.h8, v7.h8, 0); dump();
fcmlt(v8.h8, v7.h8, 0); dump();
fcmlt(v16.h8, v7.h8, 0); dump();
fcmlt(v31.h8, v7.h8, 0); dump();
fcmlt(v7.h8, v7.h8, 0); dump();
fcmlt(v7.h8, v0.h8, 0); dump();
fcmlt(v7.h8, v1.h8, 0); dump();
fcmlt(v7.h8, v2.h8, 0); dump();
fcmlt(v7.h8, v4.h8, 0); dump();
fcmlt(v7.h8, v8.h8, 0); dump();
fcmlt(v7.h8, v16.h8, 0); dump();
fcmlt(v7.h8, v31.h8, 0); dump();
fcmlt(v7.h8, v7.h8, 0); dump();
//DataProcSimd_Compare3:4
fcmeq(v7.h4, v7.h4, 0); dump();
fcmeq(v0.h4, v7.h4, 0); dump();
fcmeq(v1.h4, v7.h4, 0); dump();
fcmeq(v2.h4, v7.h4, 0); dump();
fcmeq(v4.h4, v7.h4, 0); dump();
fcmeq(v8.h4, v7.h4, 0); dump();
fcmeq(v16.h4, v7.h4, 0); dump();
fcmeq(v31.h4, v7.h4, 0); dump();
fcmeq(v7.h4, v7.h4, 0); dump();
fcmeq(v7.h4, v0.h4, 0); dump();
fcmeq(v7.h4, v1.h4, 0); dump();
fcmeq(v7.h4, v2.h4, 0); dump();
fcmeq(v7.h4, v4.h4, 0); dump();
fcmeq(v7.h4, v8.h4, 0); dump();
fcmeq(v7.h4, v16.h4, 0); dump();
fcmeq(v7.h4, v31.h4, 0); dump();
fcmeq(v7.h4, v7.h4, 0); dump();
fcmge(v7.h4, v7.h4, 0); dump();
fcmge(v0.h4, v7.h4, 0); dump();
fcmge(v1.h4, v7.h4, 0); dump();
fcmge(v2.h4, v7.h4, 0); dump();
fcmge(v4.h4, v7.h4, 0); dump();
fcmge(v8.h4, v7.h4, 0); dump();
fcmge(v16.h4, v7.h4, 0); dump();
fcmge(v31.h4, v7.h4, 0); dump();
fcmge(v7.h4, v7.h4, 0); dump();
fcmge(v7.h4, v0.h4, 0); dump();
fcmge(v7.h4, v1.h4, 0); dump();
fcmge(v7.h4, v2.h4, 0); dump();
fcmge(v7.h4, v4.h4, 0); dump();
fcmge(v7.h4, v8.h4, 0); dump();
fcmge(v7.h4, v16.h4, 0); dump();
fcmge(v7.h4, v31.h4, 0); dump();
fcmge(v7.h4, v7.h4, 0); dump();
fcmgt(v7.h4, v7.h4, 0); dump();
fcmgt(v0.h4, v7.h4, 0); dump();
fcmgt(v1.h4, v7.h4, 0); dump();
fcmgt(v2.h4, v7.h4, 0); dump();
fcmgt(v4.h4, v7.h4, 0); dump();
fcmgt(v8.h4, v7.h4, 0); dump();
fcmgt(v16.h4, v7.h4, 0); dump();
fcmgt(v31.h4, v7.h4, 0); dump();
fcmgt(v7.h4, v7.h4, 0); dump();
fcmgt(v7.h4, v0.h4, 0); dump();
fcmgt(v7.h4, v1.h4, 0); dump();
fcmgt(v7.h4, v2.h4, 0); dump();
fcmgt(v7.h4, v4.h4, 0); dump();
fcmgt(v7.h4, v8.h4, 0); dump();
fcmgt(v7.h4, v16.h4, 0); dump();
fcmgt(v7.h4, v31.h4, 0); dump();
fcmgt(v7.h4, v7.h4, 0); dump();
fcmle(v7.h4, v7.h4, 0); dump();
fcmle(v0.h4, v7.h4, 0); dump();
fcmle(v1.h4, v7.h4, 0); dump();
fcmle(v2.h4, v7.h4, 0); dump();
fcmle(v4.h4, v7.h4, 0); dump();
fcmle(v8.h4, v7.h4, 0); dump();
fcmle(v16.h4, v7.h4, 0); dump();
fcmle(v31.h4, v7.h4, 0); dump();
fcmle(v7.h4, v7.h4, 0); dump();
fcmle(v7.h4, v0.h4, 0); dump();
fcmle(v7.h4, v1.h4, 0); dump();
fcmle(v7.h4, v2.h4, 0); dump();
fcmle(v7.h4, v4.h4, 0); dump();
fcmle(v7.h4, v8.h4, 0); dump();
fcmle(v7.h4, v16.h4, 0); dump();
fcmle(v7.h4, v31.h4, 0); dump();
fcmle(v7.h4, v7.h4, 0); dump();
fcmlt(v7.h4, v7.h4, 0); dump();
fcmlt(v0.h4, v7.h4, 0); dump();
fcmlt(v1.h4, v7.h4, 0); dump();
fcmlt(v2.h4, v7.h4, 0); dump();
fcmlt(v4.h4, v7.h4, 0); dump();
fcmlt(v8.h4, v7.h4, 0); dump();
fcmlt(v16.h4, v7.h4, 0); dump();
fcmlt(v31.h4, v7.h4, 0); dump();
fcmlt(v7.h4, v7.h4, 0); dump();
fcmlt(v7.h4, v0.h4, 0); dump();
fcmlt(v7.h4, v1.h4, 0); dump();
fcmlt(v7.h4, v2.h4, 0); dump();
fcmlt(v7.h4, v4.h4, 0); dump();
fcmlt(v7.h4, v8.h4, 0); dump();
fcmlt(v7.h4, v16.h4, 0); dump();
fcmlt(v7.h4, v31.h4, 0); dump();
fcmlt(v7.h4, v7.h4, 0); dump();
//DataProcSimd_Compare3:5
fcmeq(v7.s4, v7.s4, 0); dump();
fcmeq(v0.s4, v7.s4, 0); dump();
fcmeq(v1.s4, v7.s4, 0); dump();
fcmeq(v2.s4, v7.s4, 0); dump();
fcmeq(v4.s4, v7.s4, 0); dump();
fcmeq(v8.s4, v7.s4, 0); dump();
fcmeq(v16.s4, v7.s4, 0); dump();
fcmeq(v31.s4, v7.s4, 0); dump();
fcmeq(v7.s4, v7.s4, 0); dump();
fcmeq(v7.s4, v0.s4, 0); dump();
fcmeq(v7.s4, v1.s4, 0); dump();
fcmeq(v7.s4, v2.s4, 0); dump();
fcmeq(v7.s4, v4.s4, 0); dump();
fcmeq(v7.s4, v8.s4, 0); dump();
fcmeq(v7.s4, v16.s4, 0); dump();
fcmeq(v7.s4, v31.s4, 0); dump();
fcmeq(v7.s4, v7.s4, 0); dump();
fcmge(v7.s4, v7.s4, 0); dump();
fcmge(v0.s4, v7.s4, 0); dump();
fcmge(v1.s4, v7.s4, 0); dump();
fcmge(v2.s4, v7.s4, 0); dump();
fcmge(v4.s4, v7.s4, 0); dump();
fcmge(v8.s4, v7.s4, 0); dump();
fcmge(v16.s4, v7.s4, 0); dump();
fcmge(v31.s4, v7.s4, 0); dump();
fcmge(v7.s4, v7.s4, 0); dump();
fcmge(v7.s4, v0.s4, 0); dump();
fcmge(v7.s4, v1.s4, 0); dump();
fcmge(v7.s4, v2.s4, 0); dump();
fcmge(v7.s4, v4.s4, 0); dump();
fcmge(v7.s4, v8.s4, 0); dump();
fcmge(v7.s4, v16.s4, 0); dump();
fcmge(v7.s4, v31.s4, 0); dump();
fcmge(v7.s4, v7.s4, 0); dump();
fcmgt(v7.s4, v7.s4, 0); dump();
fcmgt(v0.s4, v7.s4, 0); dump();
fcmgt(v1.s4, v7.s4, 0); dump();
fcmgt(v2.s4, v7.s4, 0); dump();
fcmgt(v4.s4, v7.s4, 0); dump();
fcmgt(v8.s4, v7.s4, 0); dump();
fcmgt(v16.s4, v7.s4, 0); dump();
fcmgt(v31.s4, v7.s4, 0); dump();
fcmgt(v7.s4, v7.s4, 0); dump();
fcmgt(v7.s4, v0.s4, 0); dump();
fcmgt(v7.s4, v1.s4, 0); dump();
fcmgt(v7.s4, v2.s4, 0); dump();
fcmgt(v7.s4, v4.s4, 0); dump();
fcmgt(v7.s4, v8.s4, 0); dump();
fcmgt(v7.s4, v16.s4, 0); dump();
fcmgt(v7.s4, v31.s4, 0); dump();
fcmgt(v7.s4, v7.s4, 0); dump();
fcmle(v7.s4, v7.s4, 0); dump();
fcmle(v0.s4, v7.s4, 0); dump();
fcmle(v1.s4, v7.s4, 0); dump();
fcmle(v2.s4, v7.s4, 0); dump();
fcmle(v4.s4, v7.s4, 0); dump();
fcmle(v8.s4, v7.s4, 0); dump();
fcmle(v16.s4, v7.s4, 0); dump();
fcmle(v31.s4, v7.s4, 0); dump();
fcmle(v7.s4, v7.s4, 0); dump();
fcmle(v7.s4, v0.s4, 0); dump();
fcmle(v7.s4, v1.s4, 0); dump();
fcmle(v7.s4, v2.s4, 0); dump();
fcmle(v7.s4, v4.s4, 0); dump();
fcmle(v7.s4, v8.s4, 0); dump();
fcmle(v7.s4, v16.s4, 0); dump();
fcmle(v7.s4, v31.s4, 0); dump();
fcmle(v7.s4, v7.s4, 0); dump();
fcmlt(v7.s4, v7.s4, 0); dump();
fcmlt(v0.s4, v7.s4, 0); dump();
fcmlt(v1.s4, v7.s4, 0); dump();
fcmlt(v2.s4, v7.s4, 0); dump();
fcmlt(v4.s4, v7.s4, 0); dump();
fcmlt(v8.s4, v7.s4, 0); dump();
fcmlt(v16.s4, v7.s4, 0); dump();
fcmlt(v31.s4, v7.s4, 0); dump();
fcmlt(v7.s4, v7.s4, 0); dump();
fcmlt(v7.s4, v0.s4, 0); dump();
fcmlt(v7.s4, v1.s4, 0); dump();
fcmlt(v7.s4, v2.s4, 0); dump();
fcmlt(v7.s4, v4.s4, 0); dump();
fcmlt(v7.s4, v8.s4, 0); dump();
fcmlt(v7.s4, v16.s4, 0); dump();
fcmlt(v7.s4, v31.s4, 0); dump();
fcmlt(v7.s4, v7.s4, 0); dump();
//DataProcSimd_Compare3:6
fcmeq(v7.s2, v7.s2, 0); dump();
fcmeq(v0.s2, v7.s2, 0); dump();
fcmeq(v1.s2, v7.s2, 0); dump();
fcmeq(v2.s2, v7.s2, 0); dump();
fcmeq(v4.s2, v7.s2, 0); dump();
fcmeq(v8.s2, v7.s2, 0); dump();
fcmeq(v16.s2, v7.s2, 0); dump();
fcmeq(v31.s2, v7.s2, 0); dump();
fcmeq(v7.s2, v7.s2, 0); dump();
fcmeq(v7.s2, v0.s2, 0); dump();
fcmeq(v7.s2, v1.s2, 0); dump();
fcmeq(v7.s2, v2.s2, 0); dump();
fcmeq(v7.s2, v4.s2, 0); dump();
fcmeq(v7.s2, v8.s2, 0); dump();
fcmeq(v7.s2, v16.s2, 0); dump();
fcmeq(v7.s2, v31.s2, 0); dump();
fcmeq(v7.s2, v7.s2, 0); dump();
fcmge(v7.s2, v7.s2, 0); dump();
fcmge(v0.s2, v7.s2, 0); dump();
fcmge(v1.s2, v7.s2, 0); dump();
fcmge(v2.s2, v7.s2, 0); dump();
fcmge(v4.s2, v7.s2, 0); dump();
fcmge(v8.s2, v7.s2, 0); dump();
fcmge(v16.s2, v7.s2, 0); dump();
fcmge(v31.s2, v7.s2, 0); dump();
fcmge(v7.s2, v7.s2, 0); dump();
fcmge(v7.s2, v0.s2, 0); dump();
fcmge(v7.s2, v1.s2, 0); dump();
fcmge(v7.s2, v2.s2, 0); dump();
fcmge(v7.s2, v4.s2, 0); dump();
fcmge(v7.s2, v8.s2, 0); dump();
fcmge(v7.s2, v16.s2, 0); dump();
fcmge(v7.s2, v31.s2, 0); dump();
fcmge(v7.s2, v7.s2, 0); dump();
fcmgt(v7.s2, v7.s2, 0); dump();
fcmgt(v0.s2, v7.s2, 0); dump();
fcmgt(v1.s2, v7.s2, 0); dump();
fcmgt(v2.s2, v7.s2, 0); dump();
fcmgt(v4.s2, v7.s2, 0); dump();
fcmgt(v8.s2, v7.s2, 0); dump();
fcmgt(v16.s2, v7.s2, 0); dump();
fcmgt(v31.s2, v7.s2, 0); dump();
fcmgt(v7.s2, v7.s2, 0); dump();
fcmgt(v7.s2, v0.s2, 0); dump();
fcmgt(v7.s2, v1.s2, 0); dump();
fcmgt(v7.s2, v2.s2, 0); dump();
fcmgt(v7.s2, v4.s2, 0); dump();
fcmgt(v7.s2, v8.s2, 0); dump();
fcmgt(v7.s2, v16.s2, 0); dump();
fcmgt(v7.s2, v31.s2, 0); dump();
fcmgt(v7.s2, v7.s2, 0); dump();
fcmle(v7.s2, v7.s2, 0); dump();
fcmle(v0.s2, v7.s2, 0); dump();
fcmle(v1.s2, v7.s2, 0); dump();
fcmle(v2.s2, v7.s2, 0); dump();
fcmle(v4.s2, v7.s2, 0); dump();
fcmle(v8.s2, v7.s2, 0); dump();
fcmle(v16.s2, v7.s2, 0); dump();
fcmle(v31.s2, v7.s2, 0); dump();
fcmle(v7.s2, v7.s2, 0); dump();
fcmle(v7.s2, v0.s2, 0); dump();
fcmle(v7.s2, v1.s2, 0); dump();
fcmle(v7.s2, v2.s2, 0); dump();
fcmle(v7.s2, v4.s2, 0); dump();
fcmle(v7.s2, v8.s2, 0); dump();
fcmle(v7.s2, v16.s2, 0); dump();
fcmle(v7.s2, v31.s2, 0); dump();
fcmle(v7.s2, v7.s2, 0); dump();
fcmlt(v7.s2, v7.s2, 0); dump();
fcmlt(v0.s2, v7.s2, 0); dump();
fcmlt(v1.s2, v7.s2, 0); dump();
fcmlt(v2.s2, v7.s2, 0); dump();
fcmlt(v4.s2, v7.s2, 0); dump();
fcmlt(v8.s2, v7.s2, 0); dump();
fcmlt(v16.s2, v7.s2, 0); dump();
fcmlt(v31.s2, v7.s2, 0); dump();
fcmlt(v7.s2, v7.s2, 0); dump();
fcmlt(v7.s2, v0.s2, 0); dump();
fcmlt(v7.s2, v1.s2, 0); dump();
fcmlt(v7.s2, v2.s2, 0); dump();
fcmlt(v7.s2, v4.s2, 0); dump();
fcmlt(v7.s2, v8.s2, 0); dump();
fcmlt(v7.s2, v16.s2, 0); dump();
fcmlt(v7.s2, v31.s2, 0); dump();
fcmlt(v7.s2, v7.s2, 0); dump();
//DataProcSimd_Compare3:7
fcmeq(v7.d2, v7.d2, 0); dump();
fcmeq(v0.d2, v7.d2, 0); dump();
fcmeq(v1.d2, v7.d2, 0); dump();
fcmeq(v2.d2, v7.d2, 0); dump();
fcmeq(v4.d2, v7.d2, 0); dump();
fcmeq(v8.d2, v7.d2, 0); dump();
fcmeq(v16.d2, v7.d2, 0); dump();
fcmeq(v31.d2, v7.d2, 0); dump();
fcmeq(v7.d2, v7.d2, 0); dump();
fcmeq(v7.d2, v0.d2, 0); dump();
fcmeq(v7.d2, v1.d2, 0); dump();
fcmeq(v7.d2, v2.d2, 0); dump();
fcmeq(v7.d2, v4.d2, 0); dump();
fcmeq(v7.d2, v8.d2, 0); dump();
fcmeq(v7.d2, v16.d2, 0); dump();
fcmeq(v7.d2, v31.d2, 0); dump();
fcmeq(v7.d2, v7.d2, 0); dump();
fcmge(v7.d2, v7.d2, 0); dump();
fcmge(v0.d2, v7.d2, 0); dump();
fcmge(v1.d2, v7.d2, 0); dump();
fcmge(v2.d2, v7.d2, 0); dump();
fcmge(v4.d2, v7.d2, 0); dump();
fcmge(v8.d2, v7.d2, 0); dump();
fcmge(v16.d2, v7.d2, 0); dump();
fcmge(v31.d2, v7.d2, 0); dump();
fcmge(v7.d2, v7.d2, 0); dump();
fcmge(v7.d2, v0.d2, 0); dump();
fcmge(v7.d2, v1.d2, 0); dump();
fcmge(v7.d2, v2.d2, 0); dump();
fcmge(v7.d2, v4.d2, 0); dump();
fcmge(v7.d2, v8.d2, 0); dump();
fcmge(v7.d2, v16.d2, 0); dump();
fcmge(v7.d2, v31.d2, 0); dump();
fcmge(v7.d2, v7.d2, 0); dump();
fcmgt(v7.d2, v7.d2, 0); dump();
fcmgt(v0.d2, v7.d2, 0); dump();
fcmgt(v1.d2, v7.d2, 0); dump();
fcmgt(v2.d2, v7.d2, 0); dump();
fcmgt(v4.d2, v7.d2, 0); dump();
fcmgt(v8.d2, v7.d2, 0); dump();
fcmgt(v16.d2, v7.d2, 0); dump();
fcmgt(v31.d2, v7.d2, 0); dump();
fcmgt(v7.d2, v7.d2, 0); dump();
fcmgt(v7.d2, v0.d2, 0); dump();
fcmgt(v7.d2, v1.d2, 0); dump();
fcmgt(v7.d2, v2.d2, 0); dump();
fcmgt(v7.d2, v4.d2, 0); dump();
fcmgt(v7.d2, v8.d2, 0); dump();
fcmgt(v7.d2, v16.d2, 0); dump();
fcmgt(v7.d2, v31.d2, 0); dump();
fcmgt(v7.d2, v7.d2, 0); dump();
fcmle(v7.d2, v7.d2, 0); dump();
fcmle(v0.d2, v7.d2, 0); dump();
fcmle(v1.d2, v7.d2, 0); dump();
fcmle(v2.d2, v7.d2, 0); dump();
fcmle(v4.d2, v7.d2, 0); dump();
fcmle(v8.d2, v7.d2, 0); dump();
fcmle(v16.d2, v7.d2, 0); dump();
fcmle(v31.d2, v7.d2, 0); dump();
fcmle(v7.d2, v7.d2, 0); dump();
fcmle(v7.d2, v0.d2, 0); dump();
fcmle(v7.d2, v1.d2, 0); dump();
fcmle(v7.d2, v2.d2, 0); dump();
fcmle(v7.d2, v4.d2, 0); dump();
fcmle(v7.d2, v8.d2, 0); dump();
fcmle(v7.d2, v16.d2, 0); dump();
fcmle(v7.d2, v31.d2, 0); dump();
fcmle(v7.d2, v7.d2, 0); dump();
fcmlt(v7.d2, v7.d2, 0); dump();
fcmlt(v0.d2, v7.d2, 0); dump();
fcmlt(v1.d2, v7.d2, 0); dump();
fcmlt(v2.d2, v7.d2, 0); dump();
fcmlt(v4.d2, v7.d2, 0); dump();
fcmlt(v8.d2, v7.d2, 0); dump();
fcmlt(v16.d2, v7.d2, 0); dump();
fcmlt(v31.d2, v7.d2, 0); dump();
fcmlt(v7.d2, v7.d2, 0); dump();
fcmlt(v7.d2, v0.d2, 0); dump();
fcmlt(v7.d2, v1.d2, 0); dump();
fcmlt(v7.d2, v2.d2, 0); dump();
fcmlt(v7.d2, v4.d2, 0); dump();
fcmlt(v7.d2, v8.d2, 0); dump();
fcmlt(v7.d2, v16.d2, 0); dump();
fcmlt(v7.d2, v31.d2, 0); dump();
fcmlt(v7.d2, v7.d2, 0); dump();
//DataProcSimd_WideningAndNarrowingArithmetic0:0
addhn(v7.b8, v7.h8, v7.h8); dump();
addhn(v0.b8, v7.h8, v7.h8); dump();
addhn(v1.b8, v7.h8, v7.h8); dump();
addhn(v2.b8, v7.h8, v7.h8); dump();
addhn(v4.b8, v7.h8, v7.h8); dump();
addhn(v8.b8, v7.h8, v7.h8); dump();
addhn(v16.b8, v7.h8, v7.h8); dump();
addhn(v31.b8, v7.h8, v7.h8); dump();
addhn(v7.b8, v7.h8, v7.h8); dump();
addhn(v7.b8, v0.h8, v7.h8); dump();
addhn(v7.b8, v1.h8, v7.h8); dump();
addhn(v7.b8, v2.h8, v7.h8); dump();
addhn(v7.b8, v4.h8, v7.h8); dump();
addhn(v7.b8, v8.h8, v7.h8); dump();
addhn(v7.b8, v16.h8, v7.h8); dump();
addhn(v7.b8, v31.h8, v7.h8); dump();
addhn(v7.b8, v7.h8, v7.h8); dump();
addhn(v7.b8, v7.h8, v0.h8); dump();
addhn(v7.b8, v7.h8, v1.h8); dump();
addhn(v7.b8, v7.h8, v2.h8); dump();
addhn(v7.b8, v7.h8, v4.h8); dump();
addhn(v7.b8, v7.h8, v8.h8); dump();
addhn(v7.b8, v7.h8, v16.h8); dump();
addhn(v7.b8, v7.h8, v31.h8); dump();
raddhn(v7.b8, v7.h8, v7.h8); dump();
raddhn(v0.b8, v7.h8, v7.h8); dump();
raddhn(v1.b8, v7.h8, v7.h8); dump();
raddhn(v2.b8, v7.h8, v7.h8); dump();
raddhn(v4.b8, v7.h8, v7.h8); dump();
raddhn(v8.b8, v7.h8, v7.h8); dump();
raddhn(v16.b8, v7.h8, v7.h8); dump();
raddhn(v31.b8, v7.h8, v7.h8); dump();
raddhn(v7.b8, v7.h8, v7.h8); dump();
raddhn(v7.b8, v0.h8, v7.h8); dump();
raddhn(v7.b8, v1.h8, v7.h8); dump();
raddhn(v7.b8, v2.h8, v7.h8); dump();
raddhn(v7.b8, v4.h8, v7.h8); dump();
raddhn(v7.b8, v8.h8, v7.h8); dump();
raddhn(v7.b8, v16.h8, v7.h8); dump();
raddhn(v7.b8, v31.h8, v7.h8); dump();
raddhn(v7.b8, v7.h8, v7.h8); dump();
raddhn(v7.b8, v7.h8, v0.h8); dump();
raddhn(v7.b8, v7.h8, v1.h8); dump();
raddhn(v7.b8, v7.h8, v2.h8); dump();
raddhn(v7.b8, v7.h8, v4.h8); dump();
raddhn(v7.b8, v7.h8, v8.h8); dump();
raddhn(v7.b8, v7.h8, v16.h8); dump();
raddhn(v7.b8, v7.h8, v31.h8); dump();
rsubhn(v7.b8, v7.h8, v7.h8); dump();
rsubhn(v0.b8, v7.h8, v7.h8); dump();
rsubhn(v1.b8, v7.h8, v7.h8); dump();
rsubhn(v2.b8, v7.h8, v7.h8); dump();
rsubhn(v4.b8, v7.h8, v7.h8); dump();
rsubhn(v8.b8, v7.h8, v7.h8); dump();
rsubhn(v16.b8, v7.h8, v7.h8); dump();
rsubhn(v31.b8, v7.h8, v7.h8); dump();
rsubhn(v7.b8, v7.h8, v7.h8); dump();
rsubhn(v7.b8, v0.h8, v7.h8); dump();
rsubhn(v7.b8, v1.h8, v7.h8); dump();
rsubhn(v7.b8, v2.h8, v7.h8); dump();
rsubhn(v7.b8, v4.h8, v7.h8); dump();
rsubhn(v7.b8, v8.h8, v7.h8); dump();
rsubhn(v7.b8, v16.h8, v7.h8); dump();
rsubhn(v7.b8, v31.h8, v7.h8); dump();
rsubhn(v7.b8, v7.h8, v7.h8); dump();
rsubhn(v7.b8, v7.h8, v0.h8); dump();
rsubhn(v7.b8, v7.h8, v1.h8); dump();
rsubhn(v7.b8, v7.h8, v2.h8); dump();
rsubhn(v7.b8, v7.h8, v4.h8); dump();
rsubhn(v7.b8, v7.h8, v8.h8); dump();
rsubhn(v7.b8, v7.h8, v16.h8); dump();
rsubhn(v7.b8, v7.h8, v31.h8); dump();
subhn(v7.b8, v7.h8, v7.h8); dump();
subhn(v0.b8, v7.h8, v7.h8); dump();
subhn(v1.b8, v7.h8, v7.h8); dump();
subhn(v2.b8, v7.h8, v7.h8); dump();
subhn(v4.b8, v7.h8, v7.h8); dump();
subhn(v8.b8, v7.h8, v7.h8); dump();
subhn(v16.b8, v7.h8, v7.h8); dump();
subhn(v31.b8, v7.h8, v7.h8); dump();
subhn(v7.b8, v7.h8, v7.h8); dump();
subhn(v7.b8, v0.h8, v7.h8); dump();
subhn(v7.b8, v1.h8, v7.h8); dump();
subhn(v7.b8, v2.h8, v7.h8); dump();
subhn(v7.b8, v4.h8, v7.h8); dump();
subhn(v7.b8, v8.h8, v7.h8); dump();
subhn(v7.b8, v16.h8, v7.h8); dump();
subhn(v7.b8, v31.h8, v7.h8); dump();
subhn(v7.b8, v7.h8, v7.h8); dump();
subhn(v7.b8, v7.h8, v0.h8); dump();
subhn(v7.b8, v7.h8, v1.h8); dump();
subhn(v7.b8, v7.h8, v2.h8); dump();
subhn(v7.b8, v7.h8, v4.h8); dump();
subhn(v7.b8, v7.h8, v8.h8); dump();
subhn(v7.b8, v7.h8, v16.h8); dump();
subhn(v7.b8, v7.h8, v31.h8); dump();
//DataProcSimd_WideningAndNarrowingArithmetic0:1
addhn(v7.h4, v7.s4, v7.s4); dump();
addhn(v0.h4, v7.s4, v7.s4); dump();
addhn(v1.h4, v7.s4, v7.s4); dump();
addhn(v2.h4, v7.s4, v7.s4); dump();
addhn(v4.h4, v7.s4, v7.s4); dump();
addhn(v8.h4, v7.s4, v7.s4); dump();
addhn(v16.h4, v7.s4, v7.s4); dump();
addhn(v31.h4, v7.s4, v7.s4); dump();
addhn(v7.h4, v7.s4, v7.s4); dump();
addhn(v7.h4, v0.s4, v7.s4); dump();
addhn(v7.h4, v1.s4, v7.s4); dump();
addhn(v7.h4, v2.s4, v7.s4); dump();
addhn(v7.h4, v4.s4, v7.s4); dump();
addhn(v7.h4, v8.s4, v7.s4); dump();
addhn(v7.h4, v16.s4, v7.s4); dump();
addhn(v7.h4, v31.s4, v7.s4); dump();
addhn(v7.h4, v7.s4, v7.s4); dump();
addhn(v7.h4, v7.s4, v0.s4); dump();
addhn(v7.h4, v7.s4, v1.s4); dump();
addhn(v7.h4, v7.s4, v2.s4); dump();
addhn(v7.h4, v7.s4, v4.s4); dump();
addhn(v7.h4, v7.s4, v8.s4); dump();
addhn(v7.h4, v7.s4, v16.s4); dump();
addhn(v7.h4, v7.s4, v31.s4); dump();
raddhn(v7.h4, v7.s4, v7.s4); dump();
raddhn(v0.h4, v7.s4, v7.s4); dump();
raddhn(v1.h4, v7.s4, v7.s4); dump();
raddhn(v2.h4, v7.s4, v7.s4); dump();
raddhn(v4.h4, v7.s4, v7.s4); dump();
raddhn(v8.h4, v7.s4, v7.s4); dump();
raddhn(v16.h4, v7.s4, v7.s4); dump();
raddhn(v31.h4, v7.s4, v7.s4); dump();
raddhn(v7.h4, v7.s4, v7.s4); dump();
raddhn(v7.h4, v0.s4, v7.s4); dump();
raddhn(v7.h4, v1.s4, v7.s4); dump();
raddhn(v7.h4, v2.s4, v7.s4); dump();
raddhn(v7.h4, v4.s4, v7.s4); dump();
raddhn(v7.h4, v8.s4, v7.s4); dump();
raddhn(v7.h4, v16.s4, v7.s4); dump();
raddhn(v7.h4, v31.s4, v7.s4); dump();
raddhn(v7.h4, v7.s4, v7.s4); dump();
raddhn(v7.h4, v7.s4, v0.s4); dump();
raddhn(v7.h4, v7.s4, v1.s4); dump();
raddhn(v7.h4, v7.s4, v2.s4); dump();
raddhn(v7.h4, v7.s4, v4.s4); dump();
raddhn(v7.h4, v7.s4, v8.s4); dump();
raddhn(v7.h4, v7.s4, v16.s4); dump();
raddhn(v7.h4, v7.s4, v31.s4); dump();
rsubhn(v7.h4, v7.s4, v7.s4); dump();
rsubhn(v0.h4, v7.s4, v7.s4); dump();
rsubhn(v1.h4, v7.s4, v7.s4); dump();
rsubhn(v2.h4, v7.s4, v7.s4); dump();
rsubhn(v4.h4, v7.s4, v7.s4); dump();
rsubhn(v8.h4, v7.s4, v7.s4); dump();
rsubhn(v16.h4, v7.s4, v7.s4); dump();
rsubhn(v31.h4, v7.s4, v7.s4); dump();
rsubhn(v7.h4, v7.s4, v7.s4); dump();
rsubhn(v7.h4, v0.s4, v7.s4); dump();
rsubhn(v7.h4, v1.s4, v7.s4); dump();
rsubhn(v7.h4, v2.s4, v7.s4); dump();
rsubhn(v7.h4, v4.s4, v7.s4); dump();
rsubhn(v7.h4, v8.s4, v7.s4); dump();
rsubhn(v7.h4, v16.s4, v7.s4); dump();
rsubhn(v7.h4, v31.s4, v7.s4); dump();
rsubhn(v7.h4, v7.s4, v7.s4); dump();
rsubhn(v7.h4, v7.s4, v0.s4); dump();
rsubhn(v7.h4, v7.s4, v1.s4); dump();
rsubhn(v7.h4, v7.s4, v2.s4); dump();
rsubhn(v7.h4, v7.s4, v4.s4); dump();
rsubhn(v7.h4, v7.s4, v8.s4); dump();
rsubhn(v7.h4, v7.s4, v16.s4); dump();
rsubhn(v7.h4, v7.s4, v31.s4); dump();
subhn(v7.h4, v7.s4, v7.s4); dump();
subhn(v0.h4, v7.s4, v7.s4); dump();
subhn(v1.h4, v7.s4, v7.s4); dump();
subhn(v2.h4, v7.s4, v7.s4); dump();
subhn(v4.h4, v7.s4, v7.s4); dump();
subhn(v8.h4, v7.s4, v7.s4); dump();
subhn(v16.h4, v7.s4, v7.s4); dump();
subhn(v31.h4, v7.s4, v7.s4); dump();
subhn(v7.h4, v7.s4, v7.s4); dump();
subhn(v7.h4, v0.s4, v7.s4); dump();
subhn(v7.h4, v1.s4, v7.s4); dump();
subhn(v7.h4, v2.s4, v7.s4); dump();
subhn(v7.h4, v4.s4, v7.s4); dump();
subhn(v7.h4, v8.s4, v7.s4); dump();
subhn(v7.h4, v16.s4, v7.s4); dump();
subhn(v7.h4, v31.s4, v7.s4); dump();
subhn(v7.h4, v7.s4, v7.s4); dump();
subhn(v7.h4, v7.s4, v0.s4); dump();
subhn(v7.h4, v7.s4, v1.s4); dump();
subhn(v7.h4, v7.s4, v2.s4); dump();
subhn(v7.h4, v7.s4, v4.s4); dump();
subhn(v7.h4, v7.s4, v8.s4); dump();
subhn(v7.h4, v7.s4, v16.s4); dump();
subhn(v7.h4, v7.s4, v31.s4); dump();
//DataProcSimd_WideningAndNarrowingArithmetic0:2
addhn(v7.s2, v7.d2, v7.d2); dump();
addhn(v0.s2, v7.d2, v7.d2); dump();
addhn(v1.s2, v7.d2, v7.d2); dump();
addhn(v2.s2, v7.d2, v7.d2); dump();
addhn(v4.s2, v7.d2, v7.d2); dump();
addhn(v8.s2, v7.d2, v7.d2); dump();
addhn(v16.s2, v7.d2, v7.d2); dump();
addhn(v31.s2, v7.d2, v7.d2); dump();
addhn(v7.s2, v7.d2, v7.d2); dump();
addhn(v7.s2, v0.d2, v7.d2); dump();
addhn(v7.s2, v1.d2, v7.d2); dump();
addhn(v7.s2, v2.d2, v7.d2); dump();
addhn(v7.s2, v4.d2, v7.d2); dump();
addhn(v7.s2, v8.d2, v7.d2); dump();
addhn(v7.s2, v16.d2, v7.d2); dump();
addhn(v7.s2, v31.d2, v7.d2); dump();
addhn(v7.s2, v7.d2, v7.d2); dump();
addhn(v7.s2, v7.d2, v0.d2); dump();
addhn(v7.s2, v7.d2, v1.d2); dump();
addhn(v7.s2, v7.d2, v2.d2); dump();
addhn(v7.s2, v7.d2, v4.d2); dump();
addhn(v7.s2, v7.d2, v8.d2); dump();
addhn(v7.s2, v7.d2, v16.d2); dump();
addhn(v7.s2, v7.d2, v31.d2); dump();
raddhn(v7.s2, v7.d2, v7.d2); dump();
raddhn(v0.s2, v7.d2, v7.d2); dump();
raddhn(v1.s2, v7.d2, v7.d2); dump();
raddhn(v2.s2, v7.d2, v7.d2); dump();
raddhn(v4.s2, v7.d2, v7.d2); dump();
raddhn(v8.s2, v7.d2, v7.d2); dump();
raddhn(v16.s2, v7.d2, v7.d2); dump();
raddhn(v31.s2, v7.d2, v7.d2); dump();
raddhn(v7.s2, v7.d2, v7.d2); dump();
raddhn(v7.s2, v0.d2, v7.d2); dump();
raddhn(v7.s2, v1.d2, v7.d2); dump();
raddhn(v7.s2, v2.d2, v7.d2); dump();
raddhn(v7.s2, v4.d2, v7.d2); dump();
raddhn(v7.s2, v8.d2, v7.d2); dump();
raddhn(v7.s2, v16.d2, v7.d2); dump();
raddhn(v7.s2, v31.d2, v7.d2); dump();
raddhn(v7.s2, v7.d2, v7.d2); dump();
raddhn(v7.s2, v7.d2, v0.d2); dump();
raddhn(v7.s2, v7.d2, v1.d2); dump();
raddhn(v7.s2, v7.d2, v2.d2); dump();
raddhn(v7.s2, v7.d2, v4.d2); dump();
raddhn(v7.s2, v7.d2, v8.d2); dump();
raddhn(v7.s2, v7.d2, v16.d2); dump();
raddhn(v7.s2, v7.d2, v31.d2); dump();
rsubhn(v7.s2, v7.d2, v7.d2); dump();
rsubhn(v0.s2, v7.d2, v7.d2); dump();
rsubhn(v1.s2, v7.d2, v7.d2); dump();
rsubhn(v2.s2, v7.d2, v7.d2); dump();
rsubhn(v4.s2, v7.d2, v7.d2); dump();
rsubhn(v8.s2, v7.d2, v7.d2); dump();
rsubhn(v16.s2, v7.d2, v7.d2); dump();
rsubhn(v31.s2, v7.d2, v7.d2); dump();
rsubhn(v7.s2, v7.d2, v7.d2); dump();
rsubhn(v7.s2, v0.d2, v7.d2); dump();
rsubhn(v7.s2, v1.d2, v7.d2); dump();
rsubhn(v7.s2, v2.d2, v7.d2); dump();
rsubhn(v7.s2, v4.d2, v7.d2); dump();
rsubhn(v7.s2, v8.d2, v7.d2); dump();
rsubhn(v7.s2, v16.d2, v7.d2); dump();
rsubhn(v7.s2, v31.d2, v7.d2); dump();
rsubhn(v7.s2, v7.d2, v7.d2); dump();
rsubhn(v7.s2, v7.d2, v0.d2); dump();
rsubhn(v7.s2, v7.d2, v1.d2); dump();
rsubhn(v7.s2, v7.d2, v2.d2); dump();
rsubhn(v7.s2, v7.d2, v4.d2); dump();
rsubhn(v7.s2, v7.d2, v8.d2); dump();
rsubhn(v7.s2, v7.d2, v16.d2); dump();
rsubhn(v7.s2, v7.d2, v31.d2); dump();
subhn(v7.s2, v7.d2, v7.d2); dump();
subhn(v0.s2, v7.d2, v7.d2); dump();
subhn(v1.s2, v7.d2, v7.d2); dump();
subhn(v2.s2, v7.d2, v7.d2); dump();
subhn(v4.s2, v7.d2, v7.d2); dump();
subhn(v8.s2, v7.d2, v7.d2); dump();
subhn(v16.s2, v7.d2, v7.d2); dump();
subhn(v31.s2, v7.d2, v7.d2); dump();
subhn(v7.s2, v7.d2, v7.d2); dump();
subhn(v7.s2, v0.d2, v7.d2); dump();
subhn(v7.s2, v1.d2, v7.d2); dump();
subhn(v7.s2, v2.d2, v7.d2); dump();
subhn(v7.s2, v4.d2, v7.d2); dump();
subhn(v7.s2, v8.d2, v7.d2); dump();
subhn(v7.s2, v16.d2, v7.d2); dump();
subhn(v7.s2, v31.d2, v7.d2); dump();
subhn(v7.s2, v7.d2, v7.d2); dump();
subhn(v7.s2, v7.d2, v0.d2); dump();
subhn(v7.s2, v7.d2, v1.d2); dump();
subhn(v7.s2, v7.d2, v2.d2); dump();
subhn(v7.s2, v7.d2, v4.d2); dump();
subhn(v7.s2, v7.d2, v8.d2); dump();
subhn(v7.s2, v7.d2, v16.d2); dump();
subhn(v7.s2, v7.d2, v31.d2); dump();
//DataProcSimd_WideningAndNarrowingArithmetic1:0
addhn2(v7.b16, v7.h8, v7.h8); dump();
addhn2(v0.b16, v7.h8, v7.h8); dump();
addhn2(v1.b16, v7.h8, v7.h8); dump();
addhn2(v2.b16, v7.h8, v7.h8); dump();
addhn2(v4.b16, v7.h8, v7.h8); dump();
addhn2(v8.b16, v7.h8, v7.h8); dump();
addhn2(v16.b16, v7.h8, v7.h8); dump();
addhn2(v31.b16, v7.h8, v7.h8); dump();
addhn2(v7.b16, v7.h8, v7.h8); dump();
addhn2(v7.b16, v0.h8, v7.h8); dump();
addhn2(v7.b16, v1.h8, v7.h8); dump();
addhn2(v7.b16, v2.h8, v7.h8); dump();
addhn2(v7.b16, v4.h8, v7.h8); dump();
addhn2(v7.b16, v8.h8, v7.h8); dump();
addhn2(v7.b16, v16.h8, v7.h8); dump();
addhn2(v7.b16, v31.h8, v7.h8); dump();
addhn2(v7.b16, v7.h8, v7.h8); dump();
addhn2(v7.b16, v7.h8, v0.h8); dump();
addhn2(v7.b16, v7.h8, v1.h8); dump();
addhn2(v7.b16, v7.h8, v2.h8); dump();
addhn2(v7.b16, v7.h8, v4.h8); dump();
addhn2(v7.b16, v7.h8, v8.h8); dump();
addhn2(v7.b16, v7.h8, v16.h8); dump();
addhn2(v7.b16, v7.h8, v31.h8); dump();
raddhn2(v7.b16, v7.h8, v7.h8); dump();
raddhn2(v0.b16, v7.h8, v7.h8); dump();
raddhn2(v1.b16, v7.h8, v7.h8); dump();
raddhn2(v2.b16, v7.h8, v7.h8); dump();
raddhn2(v4.b16, v7.h8, v7.h8); dump();
raddhn2(v8.b16, v7.h8, v7.h8); dump();
raddhn2(v16.b16, v7.h8, v7.h8); dump();
raddhn2(v31.b16, v7.h8, v7.h8); dump();
raddhn2(v7.b16, v7.h8, v7.h8); dump();
raddhn2(v7.b16, v0.h8, v7.h8); dump();
raddhn2(v7.b16, v1.h8, v7.h8); dump();
raddhn2(v7.b16, v2.h8, v7.h8); dump();
raddhn2(v7.b16, v4.h8, v7.h8); dump();
raddhn2(v7.b16, v8.h8, v7.h8); dump();
raddhn2(v7.b16, v16.h8, v7.h8); dump();
raddhn2(v7.b16, v31.h8, v7.h8); dump();
raddhn2(v7.b16, v7.h8, v7.h8); dump();
raddhn2(v7.b16, v7.h8, v0.h8); dump();
raddhn2(v7.b16, v7.h8, v1.h8); dump();
raddhn2(v7.b16, v7.h8, v2.h8); dump();
raddhn2(v7.b16, v7.h8, v4.h8); dump();
raddhn2(v7.b16, v7.h8, v8.h8); dump();
raddhn2(v7.b16, v7.h8, v16.h8); dump();
raddhn2(v7.b16, v7.h8, v31.h8); dump();
rsubhn2(v7.b16, v7.h8, v7.h8); dump();
rsubhn2(v0.b16, v7.h8, v7.h8); dump();
rsubhn2(v1.b16, v7.h8, v7.h8); dump();
rsubhn2(v2.b16, v7.h8, v7.h8); dump();
rsubhn2(v4.b16, v7.h8, v7.h8); dump();
rsubhn2(v8.b16, v7.h8, v7.h8); dump();
rsubhn2(v16.b16, v7.h8, v7.h8); dump();
rsubhn2(v31.b16, v7.h8, v7.h8); dump();
rsubhn2(v7.b16, v7.h8, v7.h8); dump();
rsubhn2(v7.b16, v0.h8, v7.h8); dump();
rsubhn2(v7.b16, v1.h8, v7.h8); dump();
rsubhn2(v7.b16, v2.h8, v7.h8); dump();
rsubhn2(v7.b16, v4.h8, v7.h8); dump();
rsubhn2(v7.b16, v8.h8, v7.h8); dump();
rsubhn2(v7.b16, v16.h8, v7.h8); dump();
rsubhn2(v7.b16, v31.h8, v7.h8); dump();
rsubhn2(v7.b16, v7.h8, v7.h8); dump();
rsubhn2(v7.b16, v7.h8, v0.h8); dump();
rsubhn2(v7.b16, v7.h8, v1.h8); dump();
rsubhn2(v7.b16, v7.h8, v2.h8); dump();
rsubhn2(v7.b16, v7.h8, v4.h8); dump();
rsubhn2(v7.b16, v7.h8, v8.h8); dump();
rsubhn2(v7.b16, v7.h8, v16.h8); dump();
rsubhn2(v7.b16, v7.h8, v31.h8); dump();
subhn2(v7.b16, v7.h8, v7.h8); dump();
subhn2(v0.b16, v7.h8, v7.h8); dump();
subhn2(v1.b16, v7.h8, v7.h8); dump();
subhn2(v2.b16, v7.h8, v7.h8); dump();
subhn2(v4.b16, v7.h8, v7.h8); dump();
subhn2(v8.b16, v7.h8, v7.h8); dump();
subhn2(v16.b16, v7.h8, v7.h8); dump();
subhn2(v31.b16, v7.h8, v7.h8); dump();
subhn2(v7.b16, v7.h8, v7.h8); dump();
subhn2(v7.b16, v0.h8, v7.h8); dump();
subhn2(v7.b16, v1.h8, v7.h8); dump();
subhn2(v7.b16, v2.h8, v7.h8); dump();
subhn2(v7.b16, v4.h8, v7.h8); dump();
subhn2(v7.b16, v8.h8, v7.h8); dump();
subhn2(v7.b16, v16.h8, v7.h8); dump();
subhn2(v7.b16, v31.h8, v7.h8); dump();
subhn2(v7.b16, v7.h8, v7.h8); dump();
subhn2(v7.b16, v7.h8, v0.h8); dump();
subhn2(v7.b16, v7.h8, v1.h8); dump();
subhn2(v7.b16, v7.h8, v2.h8); dump();
subhn2(v7.b16, v7.h8, v4.h8); dump();
subhn2(v7.b16, v7.h8, v8.h8); dump();
subhn2(v7.b16, v7.h8, v16.h8); dump();
subhn2(v7.b16, v7.h8, v31.h8); dump();
//DataProcSimd_WideningAndNarrowingArithmetic1:1
addhn2(v7.h8, v7.s4, v7.s4); dump();
addhn2(v0.h8, v7.s4, v7.s4); dump();
addhn2(v1.h8, v7.s4, v7.s4); dump();
addhn2(v2.h8, v7.s4, v7.s4); dump();
addhn2(v4.h8, v7.s4, v7.s4); dump();
addhn2(v8.h8, v7.s4, v7.s4); dump();
addhn2(v16.h8, v7.s4, v7.s4); dump();
addhn2(v31.h8, v7.s4, v7.s4); dump();
addhn2(v7.h8, v7.s4, v7.s4); dump();
addhn2(v7.h8, v0.s4, v7.s4); dump();
addhn2(v7.h8, v1.s4, v7.s4); dump();
addhn2(v7.h8, v2.s4, v7.s4); dump();
addhn2(v7.h8, v4.s4, v7.s4); dump();
addhn2(v7.h8, v8.s4, v7.s4); dump();
addhn2(v7.h8, v16.s4, v7.s4); dump();
addhn2(v7.h8, v31.s4, v7.s4); dump();
addhn2(v7.h8, v7.s4, v7.s4); dump();
addhn2(v7.h8, v7.s4, v0.s4); dump();
addhn2(v7.h8, v7.s4, v1.s4); dump();
addhn2(v7.h8, v7.s4, v2.s4); dump();
addhn2(v7.h8, v7.s4, v4.s4); dump();
addhn2(v7.h8, v7.s4, v8.s4); dump();
addhn2(v7.h8, v7.s4, v16.s4); dump();
addhn2(v7.h8, v7.s4, v31.s4); dump();
raddhn2(v7.h8, v7.s4, v7.s4); dump();
raddhn2(v0.h8, v7.s4, v7.s4); dump();
raddhn2(v1.h8, v7.s4, v7.s4); dump();
raddhn2(v2.h8, v7.s4, v7.s4); dump();
raddhn2(v4.h8, v7.s4, v7.s4); dump();
raddhn2(v8.h8, v7.s4, v7.s4); dump();
raddhn2(v16.h8, v7.s4, v7.s4); dump();
raddhn2(v31.h8, v7.s4, v7.s4); dump();
raddhn2(v7.h8, v7.s4, v7.s4); dump();
raddhn2(v7.h8, v0.s4, v7.s4); dump();
raddhn2(v7.h8, v1.s4, v7.s4); dump();
raddhn2(v7.h8, v2.s4, v7.s4); dump();
raddhn2(v7.h8, v4.s4, v7.s4); dump();
raddhn2(v7.h8, v8.s4, v7.s4); dump();
raddhn2(v7.h8, v16.s4, v7.s4); dump();
raddhn2(v7.h8, v31.s4, v7.s4); dump();
raddhn2(v7.h8, v7.s4, v7.s4); dump();
raddhn2(v7.h8, v7.s4, v0.s4); dump();
raddhn2(v7.h8, v7.s4, v1.s4); dump();
raddhn2(v7.h8, v7.s4, v2.s4); dump();
raddhn2(v7.h8, v7.s4, v4.s4); dump();
raddhn2(v7.h8, v7.s4, v8.s4); dump();
raddhn2(v7.h8, v7.s4, v16.s4); dump();
raddhn2(v7.h8, v7.s4, v31.s4); dump();
rsubhn2(v7.h8, v7.s4, v7.s4); dump();
rsubhn2(v0.h8, v7.s4, v7.s4); dump();
rsubhn2(v1.h8, v7.s4, v7.s4); dump();
rsubhn2(v2.h8, v7.s4, v7.s4); dump();
rsubhn2(v4.h8, v7.s4, v7.s4); dump();
rsubhn2(v8.h8, v7.s4, v7.s4); dump();
rsubhn2(v16.h8, v7.s4, v7.s4); dump();
rsubhn2(v31.h8, v7.s4, v7.s4); dump();
rsubhn2(v7.h8, v7.s4, v7.s4); dump();
rsubhn2(v7.h8, v0.s4, v7.s4); dump();
rsubhn2(v7.h8, v1.s4, v7.s4); dump();
rsubhn2(v7.h8, v2.s4, v7.s4); dump();
rsubhn2(v7.h8, v4.s4, v7.s4); dump();
rsubhn2(v7.h8, v8.s4, v7.s4); dump();
rsubhn2(v7.h8, v16.s4, v7.s4); dump();
rsubhn2(v7.h8, v31.s4, v7.s4); dump();
rsubhn2(v7.h8, v7.s4, v7.s4); dump();
rsubhn2(v7.h8, v7.s4, v0.s4); dump();
rsubhn2(v7.h8, v7.s4, v1.s4); dump();
rsubhn2(v7.h8, v7.s4, v2.s4); dump();
rsubhn2(v7.h8, v7.s4, v4.s4); dump();
rsubhn2(v7.h8, v7.s4, v8.s4); dump();
rsubhn2(v7.h8, v7.s4, v16.s4); dump();
rsubhn2(v7.h8, v7.s4, v31.s4); dump();
subhn2(v7.h8, v7.s4, v7.s4); dump();
subhn2(v0.h8, v7.s4, v7.s4); dump();
subhn2(v1.h8, v7.s4, v7.s4); dump();
subhn2(v2.h8, v7.s4, v7.s4); dump();
subhn2(v4.h8, v7.s4, v7.s4); dump();
subhn2(v8.h8, v7.s4, v7.s4); dump();
subhn2(v16.h8, v7.s4, v7.s4); dump();
subhn2(v31.h8, v7.s4, v7.s4); dump();
subhn2(v7.h8, v7.s4, v7.s4); dump();
subhn2(v7.h8, v0.s4, v7.s4); dump();
subhn2(v7.h8, v1.s4, v7.s4); dump();
subhn2(v7.h8, v2.s4, v7.s4); dump();
subhn2(v7.h8, v4.s4, v7.s4); dump();
subhn2(v7.h8, v8.s4, v7.s4); dump();
subhn2(v7.h8, v16.s4, v7.s4); dump();
subhn2(v7.h8, v31.s4, v7.s4); dump();
subhn2(v7.h8, v7.s4, v7.s4); dump();
subhn2(v7.h8, v7.s4, v0.s4); dump();
subhn2(v7.h8, v7.s4, v1.s4); dump();
subhn2(v7.h8, v7.s4, v2.s4); dump();
subhn2(v7.h8, v7.s4, v4.s4); dump();
subhn2(v7.h8, v7.s4, v8.s4); dump();
subhn2(v7.h8, v7.s4, v16.s4); dump();
subhn2(v7.h8, v7.s4, v31.s4); dump();
//DataProcSimd_WideningAndNarrowingArithmetic1:2
addhn2(v7.s4, v7.d2, v7.d2); dump();
addhn2(v0.s4, v7.d2, v7.d2); dump();
addhn2(v1.s4, v7.d2, v7.d2); dump();
addhn2(v2.s4, v7.d2, v7.d2); dump();
addhn2(v4.s4, v7.d2, v7.d2); dump();
addhn2(v8.s4, v7.d2, v7.d2); dump();
addhn2(v16.s4, v7.d2, v7.d2); dump();
addhn2(v31.s4, v7.d2, v7.d2); dump();
addhn2(v7.s4, v7.d2, v7.d2); dump();
addhn2(v7.s4, v0.d2, v7.d2); dump();
addhn2(v7.s4, v1.d2, v7.d2); dump();
addhn2(v7.s4, v2.d2, v7.d2); dump();
addhn2(v7.s4, v4.d2, v7.d2); dump();
addhn2(v7.s4, v8.d2, v7.d2); dump();
addhn2(v7.s4, v16.d2, v7.d2); dump();
addhn2(v7.s4, v31.d2, v7.d2); dump();
addhn2(v7.s4, v7.d2, v7.d2); dump();
addhn2(v7.s4, v7.d2, v0.d2); dump();
addhn2(v7.s4, v7.d2, v1.d2); dump();
addhn2(v7.s4, v7.d2, v2.d2); dump();
addhn2(v7.s4, v7.d2, v4.d2); dump();
addhn2(v7.s4, v7.d2, v8.d2); dump();
addhn2(v7.s4, v7.d2, v16.d2); dump();
addhn2(v7.s4, v7.d2, v31.d2); dump();
raddhn2(v7.s4, v7.d2, v7.d2); dump();
raddhn2(v0.s4, v7.d2, v7.d2); dump();
raddhn2(v1.s4, v7.d2, v7.d2); dump();
raddhn2(v2.s4, v7.d2, v7.d2); dump();
raddhn2(v4.s4, v7.d2, v7.d2); dump();
raddhn2(v8.s4, v7.d2, v7.d2); dump();
raddhn2(v16.s4, v7.d2, v7.d2); dump();
raddhn2(v31.s4, v7.d2, v7.d2); dump();
raddhn2(v7.s4, v7.d2, v7.d2); dump();
raddhn2(v7.s4, v0.d2, v7.d2); dump();
raddhn2(v7.s4, v1.d2, v7.d2); dump();
raddhn2(v7.s4, v2.d2, v7.d2); dump();
raddhn2(v7.s4, v4.d2, v7.d2); dump();
raddhn2(v7.s4, v8.d2, v7.d2); dump();
raddhn2(v7.s4, v16.d2, v7.d2); dump();
raddhn2(v7.s4, v31.d2, v7.d2); dump();
raddhn2(v7.s4, v7.d2, v7.d2); dump();
raddhn2(v7.s4, v7.d2, v0.d2); dump();
raddhn2(v7.s4, v7.d2, v1.d2); dump();
raddhn2(v7.s4, v7.d2, v2.d2); dump();
raddhn2(v7.s4, v7.d2, v4.d2); dump();
raddhn2(v7.s4, v7.d2, v8.d2); dump();
raddhn2(v7.s4, v7.d2, v16.d2); dump();
raddhn2(v7.s4, v7.d2, v31.d2); dump();
rsubhn2(v7.s4, v7.d2, v7.d2); dump();
rsubhn2(v0.s4, v7.d2, v7.d2); dump();
rsubhn2(v1.s4, v7.d2, v7.d2); dump();
rsubhn2(v2.s4, v7.d2, v7.d2); dump();
rsubhn2(v4.s4, v7.d2, v7.d2); dump();
rsubhn2(v8.s4, v7.d2, v7.d2); dump();
rsubhn2(v16.s4, v7.d2, v7.d2); dump();
rsubhn2(v31.s4, v7.d2, v7.d2); dump();
rsubhn2(v7.s4, v7.d2, v7.d2); dump();
rsubhn2(v7.s4, v0.d2, v7.d2); dump();
rsubhn2(v7.s4, v1.d2, v7.d2); dump();
rsubhn2(v7.s4, v2.d2, v7.d2); dump();
rsubhn2(v7.s4, v4.d2, v7.d2); dump();
rsubhn2(v7.s4, v8.d2, v7.d2); dump();
rsubhn2(v7.s4, v16.d2, v7.d2); dump();
rsubhn2(v7.s4, v31.d2, v7.d2); dump();
rsubhn2(v7.s4, v7.d2, v7.d2); dump();
rsubhn2(v7.s4, v7.d2, v0.d2); dump();
rsubhn2(v7.s4, v7.d2, v1.d2); dump();
rsubhn2(v7.s4, v7.d2, v2.d2); dump();
rsubhn2(v7.s4, v7.d2, v4.d2); dump();
rsubhn2(v7.s4, v7.d2, v8.d2); dump();
rsubhn2(v7.s4, v7.d2, v16.d2); dump();
rsubhn2(v7.s4, v7.d2, v31.d2); dump();
subhn2(v7.s4, v7.d2, v7.d2); dump();
subhn2(v0.s4, v7.d2, v7.d2); dump();
subhn2(v1.s4, v7.d2, v7.d2); dump();
subhn2(v2.s4, v7.d2, v7.d2); dump();
subhn2(v4.s4, v7.d2, v7.d2); dump();
subhn2(v8.s4, v7.d2, v7.d2); dump();
subhn2(v16.s4, v7.d2, v7.d2); dump();
subhn2(v31.s4, v7.d2, v7.d2); dump();
subhn2(v7.s4, v7.d2, v7.d2); dump();
subhn2(v7.s4, v0.d2, v7.d2); dump();
subhn2(v7.s4, v1.d2, v7.d2); dump();
subhn2(v7.s4, v2.d2, v7.d2); dump();
subhn2(v7.s4, v4.d2, v7.d2); dump();
subhn2(v7.s4, v8.d2, v7.d2); dump();
subhn2(v7.s4, v16.d2, v7.d2); dump();
subhn2(v7.s4, v31.d2, v7.d2); dump();
subhn2(v7.s4, v7.d2, v7.d2); dump();
subhn2(v7.s4, v7.d2, v0.d2); dump();
subhn2(v7.s4, v7.d2, v1.d2); dump();
subhn2(v7.s4, v7.d2, v2.d2); dump();
subhn2(v7.s4, v7.d2, v4.d2); dump();
subhn2(v7.s4, v7.d2, v8.d2); dump();
subhn2(v7.s4, v7.d2, v16.d2); dump();
subhn2(v7.s4, v7.d2, v31.d2); dump();
//DataProcSimd_WideningAndNarrowingArithmetic2:0
pmull(v7.h8, v7.b8, v7.b8); dump();
pmull(v0.h8, v7.b8, v7.b8); dump();
pmull(v1.h8, v7.b8, v7.b8); dump();
pmull(v2.h8, v7.b8, v7.b8); dump();
pmull(v4.h8, v7.b8, v7.b8); dump();
pmull(v8.h8, v7.b8, v7.b8); dump();
pmull(v16.h8, v7.b8, v7.b8); dump();
pmull(v31.h8, v7.b8, v7.b8); dump();
pmull(v7.h8, v7.b8, v7.b8); dump();
pmull(v7.h8, v0.b8, v7.b8); dump();
pmull(v7.h8, v1.b8, v7.b8); dump();
pmull(v7.h8, v2.b8, v7.b8); dump();
pmull(v7.h8, v4.b8, v7.b8); dump();
pmull(v7.h8, v8.b8, v7.b8); dump();
pmull(v7.h8, v16.b8, v7.b8); dump();
pmull(v7.h8, v31.b8, v7.b8); dump();
pmull(v7.h8, v7.b8, v7.b8); dump();
pmull(v7.h8, v7.b8, v0.b8); dump();
pmull(v7.h8, v7.b8, v1.b8); dump();
pmull(v7.h8, v7.b8, v2.b8); dump();
pmull(v7.h8, v7.b8, v4.b8); dump();
pmull(v7.h8, v7.b8, v8.b8); dump();
pmull(v7.h8, v7.b8, v16.b8); dump();
pmull(v7.h8, v7.b8, v31.b8); dump();
//DataProcSimd_WideningAndNarrowingArithmetic2:1
pmull(v7.q1, v7.d1, v7.d1); dump();
pmull(v0.q1, v7.d1, v7.d1); dump();
pmull(v1.q1, v7.d1, v7.d1); dump();
pmull(v2.q1, v7.d1, v7.d1); dump();
pmull(v4.q1, v7.d1, v7.d1); dump();
pmull(v8.q1, v7.d1, v7.d1); dump();
pmull(v16.q1, v7.d1, v7.d1); dump();
pmull(v31.q1, v7.d1, v7.d1); dump();
pmull(v7.q1, v7.d1, v7.d1); dump();
pmull(v7.q1, v0.d1, v7.d1); dump();
pmull(v7.q1, v1.d1, v7.d1); dump();
pmull(v7.q1, v2.d1, v7.d1); dump();
pmull(v7.q1, v4.d1, v7.d1); dump();
pmull(v7.q1, v8.d1, v7.d1); dump();
pmull(v7.q1, v16.d1, v7.d1); dump();
pmull(v7.q1, v31.d1, v7.d1); dump();
pmull(v7.q1, v7.d1, v7.d1); dump();
pmull(v7.q1, v7.d1, v0.d1); dump();
pmull(v7.q1, v7.d1, v1.d1); dump();
pmull(v7.q1, v7.d1, v2.d1); dump();
pmull(v7.q1, v7.d1, v4.d1); dump();
pmull(v7.q1, v7.d1, v8.d1); dump();
pmull(v7.q1, v7.d1, v16.d1); dump();
pmull(v7.q1, v7.d1, v31.d1); dump();
//DataProcSimd_WideningAndNarrowingArithmetic3:0
pmull2(v7.h8, v7.b16, v7.b16); dump();
pmull2(v0.h8, v7.b16, v7.b16); dump();
pmull2(v1.h8, v7.b16, v7.b16); dump();
pmull2(v2.h8, v7.b16, v7.b16); dump();
pmull2(v4.h8, v7.b16, v7.b16); dump();
pmull2(v8.h8, v7.b16, v7.b16); dump();
pmull2(v16.h8, v7.b16, v7.b16); dump();
pmull2(v31.h8, v7.b16, v7.b16); dump();
pmull2(v7.h8, v7.b16, v7.b16); dump();
pmull2(v7.h8, v0.b16, v7.b16); dump();
pmull2(v7.h8, v1.b16, v7.b16); dump();
pmull2(v7.h8, v2.b16, v7.b16); dump();
pmull2(v7.h8, v4.b16, v7.b16); dump();
pmull2(v7.h8, v8.b16, v7.b16); dump();
pmull2(v7.h8, v16.b16, v7.b16); dump();
pmull2(v7.h8, v31.b16, v7.b16); dump();
pmull2(v7.h8, v7.b16, v7.b16); dump();
pmull2(v7.h8, v7.b16, v0.b16); dump();
pmull2(v7.h8, v7.b16, v1.b16); dump();
pmull2(v7.h8, v7.b16, v2.b16); dump();
pmull2(v7.h8, v7.b16, v4.b16); dump();
pmull2(v7.h8, v7.b16, v8.b16); dump();
pmull2(v7.h8, v7.b16, v16.b16); dump();
pmull2(v7.h8, v7.b16, v31.b16); dump();
//DataProcSimd_WideningAndNarrowingArithmetic3:1
pmull2(v7.q1, v7.d2, v7.d2); dump();
pmull2(v0.q1, v7.d2, v7.d2); dump();
pmull2(v1.q1, v7.d2, v7.d2); dump();
pmull2(v2.q1, v7.d2, v7.d2); dump();
pmull2(v4.q1, v7.d2, v7.d2); dump();
pmull2(v8.q1, v7.d2, v7.d2); dump();
pmull2(v16.q1, v7.d2, v7.d2); dump();
pmull2(v31.q1, v7.d2, v7.d2); dump();
pmull2(v7.q1, v7.d2, v7.d2); dump();
pmull2(v7.q1, v0.d2, v7.d2); dump();
pmull2(v7.q1, v1.d2, v7.d2); dump();
pmull2(v7.q1, v2.d2, v7.d2); dump();
pmull2(v7.q1, v4.d2, v7.d2); dump();
pmull2(v7.q1, v8.d2, v7.d2); dump();
pmull2(v7.q1, v16.d2, v7.d2); dump();
pmull2(v7.q1, v31.d2, v7.d2); dump();
pmull2(v7.q1, v7.d2, v7.d2); dump();
pmull2(v7.q1, v7.d2, v0.d2); dump();
pmull2(v7.q1, v7.d2, v1.d2); dump();
pmull2(v7.q1, v7.d2, v2.d2); dump();
pmull2(v7.q1, v7.d2, v4.d2); dump();
pmull2(v7.q1, v7.d2, v8.d2); dump();
pmull2(v7.q1, v7.d2, v16.d2); dump();
pmull2(v7.q1, v7.d2, v31.d2); dump();
//DataProcSimd_WideningAndNarrowingArithmetic4:0
sabal(v7.h8, v7.b8, v7.b8); dump();
sabal(v0.h8, v7.b8, v7.b8); dump();
sabal(v1.h8, v7.b8, v7.b8); dump();
sabal(v2.h8, v7.b8, v7.b8); dump();
sabal(v4.h8, v7.b8, v7.b8); dump();
sabal(v8.h8, v7.b8, v7.b8); dump();
sabal(v16.h8, v7.b8, v7.b8); dump();
sabal(v31.h8, v7.b8, v7.b8); dump();
sabal(v7.h8, v7.b8, v7.b8); dump();
sabal(v7.h8, v0.b8, v7.b8); dump();
sabal(v7.h8, v1.b8, v7.b8); dump();
sabal(v7.h8, v2.b8, v7.b8); dump();
sabal(v7.h8, v4.b8, v7.b8); dump();
sabal(v7.h8, v8.b8, v7.b8); dump();
sabal(v7.h8, v16.b8, v7.b8); dump();
sabal(v7.h8, v31.b8, v7.b8); dump();
sabal(v7.h8, v7.b8, v7.b8); dump();
sabal(v7.h8, v7.b8, v0.b8); dump();
sabal(v7.h8, v7.b8, v1.b8); dump();
sabal(v7.h8, v7.b8, v2.b8); dump();
sabal(v7.h8, v7.b8, v4.b8); dump();
sabal(v7.h8, v7.b8, v8.b8); dump();
sabal(v7.h8, v7.b8, v16.b8); dump();
sabal(v7.h8, v7.b8, v31.b8); dump();
sabdl(v7.h8, v7.b8, v7.b8); dump();
sabdl(v0.h8, v7.b8, v7.b8); dump();
sabdl(v1.h8, v7.b8, v7.b8); dump();
sabdl(v2.h8, v7.b8, v7.b8); dump();
sabdl(v4.h8, v7.b8, v7.b8); dump();
sabdl(v8.h8, v7.b8, v7.b8); dump();
sabdl(v16.h8, v7.b8, v7.b8); dump();
sabdl(v31.h8, v7.b8, v7.b8); dump();
sabdl(v7.h8, v7.b8, v7.b8); dump();
sabdl(v7.h8, v0.b8, v7.b8); dump();
sabdl(v7.h8, v1.b8, v7.b8); dump();
sabdl(v7.h8, v2.b8, v7.b8); dump();
sabdl(v7.h8, v4.b8, v7.b8); dump();
sabdl(v7.h8, v8.b8, v7.b8); dump();
sabdl(v7.h8, v16.b8, v7.b8); dump();
sabdl(v7.h8, v31.b8, v7.b8); dump();
sabdl(v7.h8, v7.b8, v7.b8); dump();
sabdl(v7.h8, v7.b8, v0.b8); dump();
sabdl(v7.h8, v7.b8, v1.b8); dump();
sabdl(v7.h8, v7.b8, v2.b8); dump();
sabdl(v7.h8, v7.b8, v4.b8); dump();
sabdl(v7.h8, v7.b8, v8.b8); dump();
sabdl(v7.h8, v7.b8, v16.b8); dump();
sabdl(v7.h8, v7.b8, v31.b8); dump();
saddl(v7.h8, v7.b8, v7.b8); dump();
saddl(v0.h8, v7.b8, v7.b8); dump();
saddl(v1.h8, v7.b8, v7.b8); dump();
saddl(v2.h8, v7.b8, v7.b8); dump();
saddl(v4.h8, v7.b8, v7.b8); dump();
saddl(v8.h8, v7.b8, v7.b8); dump();
saddl(v16.h8, v7.b8, v7.b8); dump();
saddl(v31.h8, v7.b8, v7.b8); dump();
saddl(v7.h8, v7.b8, v7.b8); dump();
saddl(v7.h8, v0.b8, v7.b8); dump();
saddl(v7.h8, v1.b8, v7.b8); dump();
saddl(v7.h8, v2.b8, v7.b8); dump();
saddl(v7.h8, v4.b8, v7.b8); dump();
saddl(v7.h8, v8.b8, v7.b8); dump();
saddl(v7.h8, v16.b8, v7.b8); dump();
saddl(v7.h8, v31.b8, v7.b8); dump();
saddl(v7.h8, v7.b8, v7.b8); dump();
saddl(v7.h8, v7.b8, v0.b8); dump();
saddl(v7.h8, v7.b8, v1.b8); dump();
saddl(v7.h8, v7.b8, v2.b8); dump();
saddl(v7.h8, v7.b8, v4.b8); dump();
saddl(v7.h8, v7.b8, v8.b8); dump();
saddl(v7.h8, v7.b8, v16.b8); dump();
saddl(v7.h8, v7.b8, v31.b8); dump();
smlal(v7.h8, v7.b8, v7.b8); dump();
smlal(v0.h8, v7.b8, v7.b8); dump();
smlal(v1.h8, v7.b8, v7.b8); dump();
smlal(v2.h8, v7.b8, v7.b8); dump();
smlal(v4.h8, v7.b8, v7.b8); dump();
smlal(v8.h8, v7.b8, v7.b8); dump();
smlal(v16.h8, v7.b8, v7.b8); dump();
smlal(v31.h8, v7.b8, v7.b8); dump();
smlal(v7.h8, v7.b8, v7.b8); dump();
smlal(v7.h8, v0.b8, v7.b8); dump();
smlal(v7.h8, v1.b8, v7.b8); dump();
smlal(v7.h8, v2.b8, v7.b8); dump();
smlal(v7.h8, v4.b8, v7.b8); dump();
smlal(v7.h8, v8.b8, v7.b8); dump();
smlal(v7.h8, v16.b8, v7.b8); dump();
smlal(v7.h8, v31.b8, v7.b8); dump();
smlal(v7.h8, v7.b8, v7.b8); dump();
smlal(v7.h8, v7.b8, v0.b8); dump();
smlal(v7.h8, v7.b8, v1.b8); dump();
smlal(v7.h8, v7.b8, v2.b8); dump();
smlal(v7.h8, v7.b8, v4.b8); dump();
smlal(v7.h8, v7.b8, v8.b8); dump();
smlal(v7.h8, v7.b8, v16.b8); dump();
smlal(v7.h8, v7.b8, v31.b8); dump();
smlsl(v7.h8, v7.b8, v7.b8); dump();
smlsl(v0.h8, v7.b8, v7.b8); dump();
smlsl(v1.h8, v7.b8, v7.b8); dump();
smlsl(v2.h8, v7.b8, v7.b8); dump();
smlsl(v4.h8, v7.b8, v7.b8); dump();
smlsl(v8.h8, v7.b8, v7.b8); dump();
smlsl(v16.h8, v7.b8, v7.b8); dump();
smlsl(v31.h8, v7.b8, v7.b8); dump();
smlsl(v7.h8, v7.b8, v7.b8); dump();
smlsl(v7.h8, v0.b8, v7.b8); dump();
smlsl(v7.h8, v1.b8, v7.b8); dump();
smlsl(v7.h8, v2.b8, v7.b8); dump();
smlsl(v7.h8, v4.b8, v7.b8); dump();
smlsl(v7.h8, v8.b8, v7.b8); dump();
smlsl(v7.h8, v16.b8, v7.b8); dump();
smlsl(v7.h8, v31.b8, v7.b8); dump();
smlsl(v7.h8, v7.b8, v7.b8); dump();
smlsl(v7.h8, v7.b8, v0.b8); dump();
smlsl(v7.h8, v7.b8, v1.b8); dump();
smlsl(v7.h8, v7.b8, v2.b8); dump();
smlsl(v7.h8, v7.b8, v4.b8); dump();
smlsl(v7.h8, v7.b8, v8.b8); dump();
smlsl(v7.h8, v7.b8, v16.b8); dump();
smlsl(v7.h8, v7.b8, v31.b8); dump();
smull(v7.h8, v7.b8, v7.b8); dump();
smull(v0.h8, v7.b8, v7.b8); dump();
smull(v1.h8, v7.b8, v7.b8); dump();
smull(v2.h8, v7.b8, v7.b8); dump();
smull(v4.h8, v7.b8, v7.b8); dump();
smull(v8.h8, v7.b8, v7.b8); dump();
smull(v16.h8, v7.b8, v7.b8); dump();
smull(v31.h8, v7.b8, v7.b8); dump();
smull(v7.h8, v7.b8, v7.b8); dump();
smull(v7.h8, v0.b8, v7.b8); dump();
smull(v7.h8, v1.b8, v7.b8); dump();
smull(v7.h8, v2.b8, v7.b8); dump();
smull(v7.h8, v4.b8, v7.b8); dump();
smull(v7.h8, v8.b8, v7.b8); dump();
smull(v7.h8, v16.b8, v7.b8); dump();
smull(v7.h8, v31.b8, v7.b8); dump();
smull(v7.h8, v7.b8, v7.b8); dump();
smull(v7.h8, v7.b8, v0.b8); dump();
smull(v7.h8, v7.b8, v1.b8); dump();
smull(v7.h8, v7.b8, v2.b8); dump();
smull(v7.h8, v7.b8, v4.b8); dump();
smull(v7.h8, v7.b8, v8.b8); dump();
smull(v7.h8, v7.b8, v16.b8); dump();
smull(v7.h8, v7.b8, v31.b8); dump();
ssubl(v7.h8, v7.b8, v7.b8); dump();
ssubl(v0.h8, v7.b8, v7.b8); dump();
ssubl(v1.h8, v7.b8, v7.b8); dump();
ssubl(v2.h8, v7.b8, v7.b8); dump();
ssubl(v4.h8, v7.b8, v7.b8); dump();
ssubl(v8.h8, v7.b8, v7.b8); dump();
ssubl(v16.h8, v7.b8, v7.b8); dump();
ssubl(v31.h8, v7.b8, v7.b8); dump();
ssubl(v7.h8, v7.b8, v7.b8); dump();
ssubl(v7.h8, v0.b8, v7.b8); dump();
ssubl(v7.h8, v1.b8, v7.b8); dump();
ssubl(v7.h8, v2.b8, v7.b8); dump();
ssubl(v7.h8, v4.b8, v7.b8); dump();
ssubl(v7.h8, v8.b8, v7.b8); dump();
ssubl(v7.h8, v16.b8, v7.b8); dump();
ssubl(v7.h8, v31.b8, v7.b8); dump();
ssubl(v7.h8, v7.b8, v7.b8); dump();
ssubl(v7.h8, v7.b8, v0.b8); dump();
ssubl(v7.h8, v7.b8, v1.b8); dump();
ssubl(v7.h8, v7.b8, v2.b8); dump();
ssubl(v7.h8, v7.b8, v4.b8); dump();
ssubl(v7.h8, v7.b8, v8.b8); dump();
ssubl(v7.h8, v7.b8, v16.b8); dump();
ssubl(v7.h8, v7.b8, v31.b8); dump();
//DataProcSimd_WideningAndNarrowingArithmetic4:1
sabal(v7.s4, v7.h4, v7.h4); dump();
sabal(v0.s4, v7.h4, v7.h4); dump();
sabal(v1.s4, v7.h4, v7.h4); dump();
sabal(v2.s4, v7.h4, v7.h4); dump();
sabal(v4.s4, v7.h4, v7.h4); dump();
sabal(v8.s4, v7.h4, v7.h4); dump();
sabal(v16.s4, v7.h4, v7.h4); dump();
sabal(v31.s4, v7.h4, v7.h4); dump();
sabal(v7.s4, v7.h4, v7.h4); dump();
sabal(v7.s4, v0.h4, v7.h4); dump();
sabal(v7.s4, v1.h4, v7.h4); dump();
sabal(v7.s4, v2.h4, v7.h4); dump();
sabal(v7.s4, v4.h4, v7.h4); dump();
sabal(v7.s4, v8.h4, v7.h4); dump();
sabal(v7.s4, v16.h4, v7.h4); dump();
sabal(v7.s4, v31.h4, v7.h4); dump();
sabal(v7.s4, v7.h4, v7.h4); dump();
sabal(v7.s4, v7.h4, v0.h4); dump();
sabal(v7.s4, v7.h4, v1.h4); dump();
sabal(v7.s4, v7.h4, v2.h4); dump();
sabal(v7.s4, v7.h4, v4.h4); dump();
sabal(v7.s4, v7.h4, v8.h4); dump();
sabal(v7.s4, v7.h4, v16.h4); dump();
sabal(v7.s4, v7.h4, v31.h4); dump();
sabdl(v7.s4, v7.h4, v7.h4); dump();
sabdl(v0.s4, v7.h4, v7.h4); dump();
sabdl(v1.s4, v7.h4, v7.h4); dump();
sabdl(v2.s4, v7.h4, v7.h4); dump();
sabdl(v4.s4, v7.h4, v7.h4); dump();
sabdl(v8.s4, v7.h4, v7.h4); dump();
sabdl(v16.s4, v7.h4, v7.h4); dump();
sabdl(v31.s4, v7.h4, v7.h4); dump();
sabdl(v7.s4, v7.h4, v7.h4); dump();
sabdl(v7.s4, v0.h4, v7.h4); dump();
sabdl(v7.s4, v1.h4, v7.h4); dump();
sabdl(v7.s4, v2.h4, v7.h4); dump();
sabdl(v7.s4, v4.h4, v7.h4); dump();
sabdl(v7.s4, v8.h4, v7.h4); dump();
sabdl(v7.s4, v16.h4, v7.h4); dump();
sabdl(v7.s4, v31.h4, v7.h4); dump();
sabdl(v7.s4, v7.h4, v7.h4); dump();
sabdl(v7.s4, v7.h4, v0.h4); dump();
sabdl(v7.s4, v7.h4, v1.h4); dump();
sabdl(v7.s4, v7.h4, v2.h4); dump();
sabdl(v7.s4, v7.h4, v4.h4); dump();
sabdl(v7.s4, v7.h4, v8.h4); dump();
sabdl(v7.s4, v7.h4, v16.h4); dump();
sabdl(v7.s4, v7.h4, v31.h4); dump();
saddl(v7.s4, v7.h4, v7.h4); dump();
saddl(v0.s4, v7.h4, v7.h4); dump();
saddl(v1.s4, v7.h4, v7.h4); dump();
saddl(v2.s4, v7.h4, v7.h4); dump();
saddl(v4.s4, v7.h4, v7.h4); dump();
saddl(v8.s4, v7.h4, v7.h4); dump();
saddl(v16.s4, v7.h4, v7.h4); dump();
saddl(v31.s4, v7.h4, v7.h4); dump();
saddl(v7.s4, v7.h4, v7.h4); dump();
saddl(v7.s4, v0.h4, v7.h4); dump();
saddl(v7.s4, v1.h4, v7.h4); dump();
saddl(v7.s4, v2.h4, v7.h4); dump();
saddl(v7.s4, v4.h4, v7.h4); dump();
saddl(v7.s4, v8.h4, v7.h4); dump();
saddl(v7.s4, v16.h4, v7.h4); dump();
saddl(v7.s4, v31.h4, v7.h4); dump();
saddl(v7.s4, v7.h4, v7.h4); dump();
saddl(v7.s4, v7.h4, v0.h4); dump();
saddl(v7.s4, v7.h4, v1.h4); dump();
saddl(v7.s4, v7.h4, v2.h4); dump();
saddl(v7.s4, v7.h4, v4.h4); dump();
saddl(v7.s4, v7.h4, v8.h4); dump();
saddl(v7.s4, v7.h4, v16.h4); dump();
saddl(v7.s4, v7.h4, v31.h4); dump();
smlal(v7.s4, v7.h4, v7.h4); dump();
smlal(v0.s4, v7.h4, v7.h4); dump();
smlal(v1.s4, v7.h4, v7.h4); dump();
smlal(v2.s4, v7.h4, v7.h4); dump();
smlal(v4.s4, v7.h4, v7.h4); dump();
smlal(v8.s4, v7.h4, v7.h4); dump();
smlal(v16.s4, v7.h4, v7.h4); dump();
smlal(v31.s4, v7.h4, v7.h4); dump();
smlal(v7.s4, v7.h4, v7.h4); dump();
smlal(v7.s4, v0.h4, v7.h4); dump();
smlal(v7.s4, v1.h4, v7.h4); dump();
smlal(v7.s4, v2.h4, v7.h4); dump();
smlal(v7.s4, v4.h4, v7.h4); dump();
smlal(v7.s4, v8.h4, v7.h4); dump();
smlal(v7.s4, v16.h4, v7.h4); dump();
smlal(v7.s4, v31.h4, v7.h4); dump();
smlal(v7.s4, v7.h4, v7.h4); dump();
smlal(v7.s4, v7.h4, v0.h4); dump();
smlal(v7.s4, v7.h4, v1.h4); dump();
smlal(v7.s4, v7.h4, v2.h4); dump();
smlal(v7.s4, v7.h4, v4.h4); dump();
smlal(v7.s4, v7.h4, v8.h4); dump();
smlal(v7.s4, v7.h4, v16.h4); dump();
smlal(v7.s4, v7.h4, v31.h4); dump();
smlsl(v7.s4, v7.h4, v7.h4); dump();
smlsl(v0.s4, v7.h4, v7.h4); dump();
smlsl(v1.s4, v7.h4, v7.h4); dump();
smlsl(v2.s4, v7.h4, v7.h4); dump();
smlsl(v4.s4, v7.h4, v7.h4); dump();
smlsl(v8.s4, v7.h4, v7.h4); dump();
smlsl(v16.s4, v7.h4, v7.h4); dump();
smlsl(v31.s4, v7.h4, v7.h4); dump();
smlsl(v7.s4, v7.h4, v7.h4); dump();
smlsl(v7.s4, v0.h4, v7.h4); dump();
smlsl(v7.s4, v1.h4, v7.h4); dump();
smlsl(v7.s4, v2.h4, v7.h4); dump();
smlsl(v7.s4, v4.h4, v7.h4); dump();
smlsl(v7.s4, v8.h4, v7.h4); dump();
smlsl(v7.s4, v16.h4, v7.h4); dump();
smlsl(v7.s4, v31.h4, v7.h4); dump();
smlsl(v7.s4, v7.h4, v7.h4); dump();
smlsl(v7.s4, v7.h4, v0.h4); dump();
smlsl(v7.s4, v7.h4, v1.h4); dump();
smlsl(v7.s4, v7.h4, v2.h4); dump();
smlsl(v7.s4, v7.h4, v4.h4); dump();
smlsl(v7.s4, v7.h4, v8.h4); dump();
smlsl(v7.s4, v7.h4, v16.h4); dump();
smlsl(v7.s4, v7.h4, v31.h4); dump();
smull(v7.s4, v7.h4, v7.h4); dump();
smull(v0.s4, v7.h4, v7.h4); dump();
smull(v1.s4, v7.h4, v7.h4); dump();
smull(v2.s4, v7.h4, v7.h4); dump();
smull(v4.s4, v7.h4, v7.h4); dump();
smull(v8.s4, v7.h4, v7.h4); dump();
smull(v16.s4, v7.h4, v7.h4); dump();
smull(v31.s4, v7.h4, v7.h4); dump();
smull(v7.s4, v7.h4, v7.h4); dump();
smull(v7.s4, v0.h4, v7.h4); dump();
smull(v7.s4, v1.h4, v7.h4); dump();
smull(v7.s4, v2.h4, v7.h4); dump();
smull(v7.s4, v4.h4, v7.h4); dump();
smull(v7.s4, v8.h4, v7.h4); dump();
smull(v7.s4, v16.h4, v7.h4); dump();
smull(v7.s4, v31.h4, v7.h4); dump();
smull(v7.s4, v7.h4, v7.h4); dump();
smull(v7.s4, v7.h4, v0.h4); dump();
smull(v7.s4, v7.h4, v1.h4); dump();
smull(v7.s4, v7.h4, v2.h4); dump();
smull(v7.s4, v7.h4, v4.h4); dump();
smull(v7.s4, v7.h4, v8.h4); dump();
smull(v7.s4, v7.h4, v16.h4); dump();
smull(v7.s4, v7.h4, v31.h4); dump();
ssubl(v7.s4, v7.h4, v7.h4); dump();
ssubl(v0.s4, v7.h4, v7.h4); dump();
ssubl(v1.s4, v7.h4, v7.h4); dump();
ssubl(v2.s4, v7.h4, v7.h4); dump();
ssubl(v4.s4, v7.h4, v7.h4); dump();
ssubl(v8.s4, v7.h4, v7.h4); dump();
ssubl(v16.s4, v7.h4, v7.h4); dump();
ssubl(v31.s4, v7.h4, v7.h4); dump();
ssubl(v7.s4, v7.h4, v7.h4); dump();
ssubl(v7.s4, v0.h4, v7.h4); dump();
ssubl(v7.s4, v1.h4, v7.h4); dump();
ssubl(v7.s4, v2.h4, v7.h4); dump();
ssubl(v7.s4, v4.h4, v7.h4); dump();
ssubl(v7.s4, v8.h4, v7.h4); dump();
ssubl(v7.s4, v16.h4, v7.h4); dump();
ssubl(v7.s4, v31.h4, v7.h4); dump();
ssubl(v7.s4, v7.h4, v7.h4); dump();
ssubl(v7.s4, v7.h4, v0.h4); dump();
ssubl(v7.s4, v7.h4, v1.h4); dump();
ssubl(v7.s4, v7.h4, v2.h4); dump();
ssubl(v7.s4, v7.h4, v4.h4); dump();
ssubl(v7.s4, v7.h4, v8.h4); dump();
ssubl(v7.s4, v7.h4, v16.h4); dump();
ssubl(v7.s4, v7.h4, v31.h4); dump();
//DataProcSimd_WideningAndNarrowingArithmetic4:2
sabal(v7.d2, v7.s2, v7.s2); dump();
sabal(v0.d2, v7.s2, v7.s2); dump();
sabal(v1.d2, v7.s2, v7.s2); dump();
sabal(v2.d2, v7.s2, v7.s2); dump();
sabal(v4.d2, v7.s2, v7.s2); dump();
sabal(v8.d2, v7.s2, v7.s2); dump();
sabal(v16.d2, v7.s2, v7.s2); dump();
sabal(v31.d2, v7.s2, v7.s2); dump();
sabal(v7.d2, v7.s2, v7.s2); dump();
sabal(v7.d2, v0.s2, v7.s2); dump();
sabal(v7.d2, v1.s2, v7.s2); dump();
sabal(v7.d2, v2.s2, v7.s2); dump();
sabal(v7.d2, v4.s2, v7.s2); dump();
sabal(v7.d2, v8.s2, v7.s2); dump();
sabal(v7.d2, v16.s2, v7.s2); dump();
sabal(v7.d2, v31.s2, v7.s2); dump();
sabal(v7.d2, v7.s2, v7.s2); dump();
sabal(v7.d2, v7.s2, v0.s2); dump();
sabal(v7.d2, v7.s2, v1.s2); dump();
sabal(v7.d2, v7.s2, v2.s2); dump();
sabal(v7.d2, v7.s2, v4.s2); dump();
sabal(v7.d2, v7.s2, v8.s2); dump();
sabal(v7.d2, v7.s2, v16.s2); dump();
sabal(v7.d2, v7.s2, v31.s2); dump();
sabdl(v7.d2, v7.s2, v7.s2); dump();
sabdl(v0.d2, v7.s2, v7.s2); dump();
sabdl(v1.d2, v7.s2, v7.s2); dump();
sabdl(v2.d2, v7.s2, v7.s2); dump();
sabdl(v4.d2, v7.s2, v7.s2); dump();
sabdl(v8.d2, v7.s2, v7.s2); dump();
sabdl(v16.d2, v7.s2, v7.s2); dump();
sabdl(v31.d2, v7.s2, v7.s2); dump();
sabdl(v7.d2, v7.s2, v7.s2); dump();
sabdl(v7.d2, v0.s2, v7.s2); dump();
sabdl(v7.d2, v1.s2, v7.s2); dump();
sabdl(v7.d2, v2.s2, v7.s2); dump();
sabdl(v7.d2, v4.s2, v7.s2); dump();
sabdl(v7.d2, v8.s2, v7.s2); dump();
sabdl(v7.d2, v16.s2, v7.s2); dump();
sabdl(v7.d2, v31.s2, v7.s2); dump();
sabdl(v7.d2, v7.s2, v7.s2); dump();
sabdl(v7.d2, v7.s2, v0.s2); dump();
sabdl(v7.d2, v7.s2, v1.s2); dump();
sabdl(v7.d2, v7.s2, v2.s2); dump();
sabdl(v7.d2, v7.s2, v4.s2); dump();
sabdl(v7.d2, v7.s2, v8.s2); dump();
sabdl(v7.d2, v7.s2, v16.s2); dump();
sabdl(v7.d2, v7.s2, v31.s2); dump();
saddl(v7.d2, v7.s2, v7.s2); dump();
saddl(v0.d2, v7.s2, v7.s2); dump();
saddl(v1.d2, v7.s2, v7.s2); dump();
saddl(v2.d2, v7.s2, v7.s2); dump();
saddl(v4.d2, v7.s2, v7.s2); dump();
saddl(v8.d2, v7.s2, v7.s2); dump();
saddl(v16.d2, v7.s2, v7.s2); dump();
saddl(v31.d2, v7.s2, v7.s2); dump();
saddl(v7.d2, v7.s2, v7.s2); dump();
saddl(v7.d2, v0.s2, v7.s2); dump();
saddl(v7.d2, v1.s2, v7.s2); dump();
saddl(v7.d2, v2.s2, v7.s2); dump();
saddl(v7.d2, v4.s2, v7.s2); dump();
saddl(v7.d2, v8.s2, v7.s2); dump();
saddl(v7.d2, v16.s2, v7.s2); dump();
saddl(v7.d2, v31.s2, v7.s2); dump();
saddl(v7.d2, v7.s2, v7.s2); dump();
saddl(v7.d2, v7.s2, v0.s2); dump();
saddl(v7.d2, v7.s2, v1.s2); dump();
saddl(v7.d2, v7.s2, v2.s2); dump();
saddl(v7.d2, v7.s2, v4.s2); dump();
saddl(v7.d2, v7.s2, v8.s2); dump();
saddl(v7.d2, v7.s2, v16.s2); dump();
saddl(v7.d2, v7.s2, v31.s2); dump();
smlal(v7.d2, v7.s2, v7.s2); dump();
smlal(v0.d2, v7.s2, v7.s2); dump();
smlal(v1.d2, v7.s2, v7.s2); dump();
smlal(v2.d2, v7.s2, v7.s2); dump();
smlal(v4.d2, v7.s2, v7.s2); dump();
smlal(v8.d2, v7.s2, v7.s2); dump();
smlal(v16.d2, v7.s2, v7.s2); dump();
smlal(v31.d2, v7.s2, v7.s2); dump();
smlal(v7.d2, v7.s2, v7.s2); dump();
smlal(v7.d2, v0.s2, v7.s2); dump();
smlal(v7.d2, v1.s2, v7.s2); dump();
smlal(v7.d2, v2.s2, v7.s2); dump();
smlal(v7.d2, v4.s2, v7.s2); dump();
smlal(v7.d2, v8.s2, v7.s2); dump();
smlal(v7.d2, v16.s2, v7.s2); dump();
smlal(v7.d2, v31.s2, v7.s2); dump();
smlal(v7.d2, v7.s2, v7.s2); dump();
smlal(v7.d2, v7.s2, v0.s2); dump();
smlal(v7.d2, v7.s2, v1.s2); dump();
smlal(v7.d2, v7.s2, v2.s2); dump();
smlal(v7.d2, v7.s2, v4.s2); dump();
smlal(v7.d2, v7.s2, v8.s2); dump();
smlal(v7.d2, v7.s2, v16.s2); dump();
smlal(v7.d2, v7.s2, v31.s2); dump();
smlsl(v7.d2, v7.s2, v7.s2); dump();
smlsl(v0.d2, v7.s2, v7.s2); dump();
smlsl(v1.d2, v7.s2, v7.s2); dump();
smlsl(v2.d2, v7.s2, v7.s2); dump();
smlsl(v4.d2, v7.s2, v7.s2); dump();
smlsl(v8.d2, v7.s2, v7.s2); dump();
smlsl(v16.d2, v7.s2, v7.s2); dump();
smlsl(v31.d2, v7.s2, v7.s2); dump();
smlsl(v7.d2, v7.s2, v7.s2); dump();
smlsl(v7.d2, v0.s2, v7.s2); dump();
smlsl(v7.d2, v1.s2, v7.s2); dump();
smlsl(v7.d2, v2.s2, v7.s2); dump();
smlsl(v7.d2, v4.s2, v7.s2); dump();
smlsl(v7.d2, v8.s2, v7.s2); dump();
smlsl(v7.d2, v16.s2, v7.s2); dump();
smlsl(v7.d2, v31.s2, v7.s2); dump();
smlsl(v7.d2, v7.s2, v7.s2); dump();
smlsl(v7.d2, v7.s2, v0.s2); dump();
smlsl(v7.d2, v7.s2, v1.s2); dump();
smlsl(v7.d2, v7.s2, v2.s2); dump();
smlsl(v7.d2, v7.s2, v4.s2); dump();
smlsl(v7.d2, v7.s2, v8.s2); dump();
smlsl(v7.d2, v7.s2, v16.s2); dump();
smlsl(v7.d2, v7.s2, v31.s2); dump();
smull(v7.d2, v7.s2, v7.s2); dump();
smull(v0.d2, v7.s2, v7.s2); dump();
smull(v1.d2, v7.s2, v7.s2); dump();
smull(v2.d2, v7.s2, v7.s2); dump();
smull(v4.d2, v7.s2, v7.s2); dump();
smull(v8.d2, v7.s2, v7.s2); dump();
smull(v16.d2, v7.s2, v7.s2); dump();
smull(v31.d2, v7.s2, v7.s2); dump();
smull(v7.d2, v7.s2, v7.s2); dump();
smull(v7.d2, v0.s2, v7.s2); dump();
smull(v7.d2, v1.s2, v7.s2); dump();
smull(v7.d2, v2.s2, v7.s2); dump();
smull(v7.d2, v4.s2, v7.s2); dump();
smull(v7.d2, v8.s2, v7.s2); dump();
smull(v7.d2, v16.s2, v7.s2); dump();
smull(v7.d2, v31.s2, v7.s2); dump();
smull(v7.d2, v7.s2, v7.s2); dump();
smull(v7.d2, v7.s2, v0.s2); dump();
smull(v7.d2, v7.s2, v1.s2); dump();
smull(v7.d2, v7.s2, v2.s2); dump();
smull(v7.d2, v7.s2, v4.s2); dump();
smull(v7.d2, v7.s2, v8.s2); dump();
smull(v7.d2, v7.s2, v16.s2); dump();
smull(v7.d2, v7.s2, v31.s2); dump();
ssubl(v7.d2, v7.s2, v7.s2); dump();
ssubl(v0.d2, v7.s2, v7.s2); dump();
ssubl(v1.d2, v7.s2, v7.s2); dump();
ssubl(v2.d2, v7.s2, v7.s2); dump();
ssubl(v4.d2, v7.s2, v7.s2); dump();
ssubl(v8.d2, v7.s2, v7.s2); dump();
ssubl(v16.d2, v7.s2, v7.s2); dump();
ssubl(v31.d2, v7.s2, v7.s2); dump();
ssubl(v7.d2, v7.s2, v7.s2); dump();
ssubl(v7.d2, v0.s2, v7.s2); dump();
ssubl(v7.d2, v1.s2, v7.s2); dump();
ssubl(v7.d2, v2.s2, v7.s2); dump();
ssubl(v7.d2, v4.s2, v7.s2); dump();
ssubl(v7.d2, v8.s2, v7.s2); dump();
ssubl(v7.d2, v16.s2, v7.s2); dump();
ssubl(v7.d2, v31.s2, v7.s2); dump();
ssubl(v7.d2, v7.s2, v7.s2); dump();
ssubl(v7.d2, v7.s2, v0.s2); dump();
ssubl(v7.d2, v7.s2, v1.s2); dump();
ssubl(v7.d2, v7.s2, v2.s2); dump();
ssubl(v7.d2, v7.s2, v4.s2); dump();
ssubl(v7.d2, v7.s2, v8.s2); dump();
ssubl(v7.d2, v7.s2, v16.s2); dump();
ssubl(v7.d2, v7.s2, v31.s2); dump();
//DataProcSimd_WideningAndNarrowingArithmetic5:0
sabal2(v7.h8, v7.b16, v7.b16); dump();
sabal2(v0.h8, v7.b16, v7.b16); dump();
sabal2(v1.h8, v7.b16, v7.b16); dump();
sabal2(v2.h8, v7.b16, v7.b16); dump();
sabal2(v4.h8, v7.b16, v7.b16); dump();
sabal2(v8.h8, v7.b16, v7.b16); dump();
sabal2(v16.h8, v7.b16, v7.b16); dump();
sabal2(v31.h8, v7.b16, v7.b16); dump();
sabal2(v7.h8, v7.b16, v7.b16); dump();
sabal2(v7.h8, v0.b16, v7.b16); dump();
sabal2(v7.h8, v1.b16, v7.b16); dump();
sabal2(v7.h8, v2.b16, v7.b16); dump();
sabal2(v7.h8, v4.b16, v7.b16); dump();
sabal2(v7.h8, v8.b16, v7.b16); dump();
sabal2(v7.h8, v16.b16, v7.b16); dump();
sabal2(v7.h8, v31.b16, v7.b16); dump();
sabal2(v7.h8, v7.b16, v7.b16); dump();
sabal2(v7.h8, v7.b16, v0.b16); dump();
sabal2(v7.h8, v7.b16, v1.b16); dump();
sabal2(v7.h8, v7.b16, v2.b16); dump();
sabal2(v7.h8, v7.b16, v4.b16); dump();
sabal2(v7.h8, v7.b16, v8.b16); dump();
sabal2(v7.h8, v7.b16, v16.b16); dump();
sabal2(v7.h8, v7.b16, v31.b16); dump();
sabdl2(v7.h8, v7.b16, v7.b16); dump();
sabdl2(v0.h8, v7.b16, v7.b16); dump();
sabdl2(v1.h8, v7.b16, v7.b16); dump();
sabdl2(v2.h8, v7.b16, v7.b16); dump();
sabdl2(v4.h8, v7.b16, v7.b16); dump();
sabdl2(v8.h8, v7.b16, v7.b16); dump();
sabdl2(v16.h8, v7.b16, v7.b16); dump();
sabdl2(v31.h8, v7.b16, v7.b16); dump();
sabdl2(v7.h8, v7.b16, v7.b16); dump();
sabdl2(v7.h8, v0.b16, v7.b16); dump();
sabdl2(v7.h8, v1.b16, v7.b16); dump();
sabdl2(v7.h8, v2.b16, v7.b16); dump();
sabdl2(v7.h8, v4.b16, v7.b16); dump();
sabdl2(v7.h8, v8.b16, v7.b16); dump();
sabdl2(v7.h8, v16.b16, v7.b16); dump();
sabdl2(v7.h8, v31.b16, v7.b16); dump();
sabdl2(v7.h8, v7.b16, v7.b16); dump();
sabdl2(v7.h8, v7.b16, v0.b16); dump();
sabdl2(v7.h8, v7.b16, v1.b16); dump();
sabdl2(v7.h8, v7.b16, v2.b16); dump();
sabdl2(v7.h8, v7.b16, v4.b16); dump();
sabdl2(v7.h8, v7.b16, v8.b16); dump();
sabdl2(v7.h8, v7.b16, v16.b16); dump();
sabdl2(v7.h8, v7.b16, v31.b16); dump();
saddl2(v7.h8, v7.b16, v7.b16); dump();
saddl2(v0.h8, v7.b16, v7.b16); dump();
saddl2(v1.h8, v7.b16, v7.b16); dump();
saddl2(v2.h8, v7.b16, v7.b16); dump();
saddl2(v4.h8, v7.b16, v7.b16); dump();
saddl2(v8.h8, v7.b16, v7.b16); dump();
saddl2(v16.h8, v7.b16, v7.b16); dump();
saddl2(v31.h8, v7.b16, v7.b16); dump();
saddl2(v7.h8, v7.b16, v7.b16); dump();
saddl2(v7.h8, v0.b16, v7.b16); dump();
saddl2(v7.h8, v1.b16, v7.b16); dump();
saddl2(v7.h8, v2.b16, v7.b16); dump();
saddl2(v7.h8, v4.b16, v7.b16); dump();
saddl2(v7.h8, v8.b16, v7.b16); dump();
saddl2(v7.h8, v16.b16, v7.b16); dump();
saddl2(v7.h8, v31.b16, v7.b16); dump();
saddl2(v7.h8, v7.b16, v7.b16); dump();
saddl2(v7.h8, v7.b16, v0.b16); dump();
saddl2(v7.h8, v7.b16, v1.b16); dump();
saddl2(v7.h8, v7.b16, v2.b16); dump();
saddl2(v7.h8, v7.b16, v4.b16); dump();
saddl2(v7.h8, v7.b16, v8.b16); dump();
saddl2(v7.h8, v7.b16, v16.b16); dump();
saddl2(v7.h8, v7.b16, v31.b16); dump();
smlal2(v7.h8, v7.b16, v7.b16); dump();
smlal2(v0.h8, v7.b16, v7.b16); dump();
smlal2(v1.h8, v7.b16, v7.b16); dump();
smlal2(v2.h8, v7.b16, v7.b16); dump();
smlal2(v4.h8, v7.b16, v7.b16); dump();
smlal2(v8.h8, v7.b16, v7.b16); dump();
smlal2(v16.h8, v7.b16, v7.b16); dump();
smlal2(v31.h8, v7.b16, v7.b16); dump();
smlal2(v7.h8, v7.b16, v7.b16); dump();
smlal2(v7.h8, v0.b16, v7.b16); dump();
smlal2(v7.h8, v1.b16, v7.b16); dump();
smlal2(v7.h8, v2.b16, v7.b16); dump();
smlal2(v7.h8, v4.b16, v7.b16); dump();
smlal2(v7.h8, v8.b16, v7.b16); dump();
smlal2(v7.h8, v16.b16, v7.b16); dump();
smlal2(v7.h8, v31.b16, v7.b16); dump();
smlal2(v7.h8, v7.b16, v7.b16); dump();
smlal2(v7.h8, v7.b16, v0.b16); dump();
smlal2(v7.h8, v7.b16, v1.b16); dump();
smlal2(v7.h8, v7.b16, v2.b16); dump();
smlal2(v7.h8, v7.b16, v4.b16); dump();
smlal2(v7.h8, v7.b16, v8.b16); dump();
smlal2(v7.h8, v7.b16, v16.b16); dump();
smlal2(v7.h8, v7.b16, v31.b16); dump();
smlsl2(v7.h8, v7.b16, v7.b16); dump();
smlsl2(v0.h8, v7.b16, v7.b16); dump();
smlsl2(v1.h8, v7.b16, v7.b16); dump();
smlsl2(v2.h8, v7.b16, v7.b16); dump();
smlsl2(v4.h8, v7.b16, v7.b16); dump();
smlsl2(v8.h8, v7.b16, v7.b16); dump();
smlsl2(v16.h8, v7.b16, v7.b16); dump();
smlsl2(v31.h8, v7.b16, v7.b16); dump();
smlsl2(v7.h8, v7.b16, v7.b16); dump();
smlsl2(v7.h8, v0.b16, v7.b16); dump();
smlsl2(v7.h8, v1.b16, v7.b16); dump();
smlsl2(v7.h8, v2.b16, v7.b16); dump();
smlsl2(v7.h8, v4.b16, v7.b16); dump();
smlsl2(v7.h8, v8.b16, v7.b16); dump();
smlsl2(v7.h8, v16.b16, v7.b16); dump();
smlsl2(v7.h8, v31.b16, v7.b16); dump();
smlsl2(v7.h8, v7.b16, v7.b16); dump();
smlsl2(v7.h8, v7.b16, v0.b16); dump();
smlsl2(v7.h8, v7.b16, v1.b16); dump();
smlsl2(v7.h8, v7.b16, v2.b16); dump();
smlsl2(v7.h8, v7.b16, v4.b16); dump();
smlsl2(v7.h8, v7.b16, v8.b16); dump();
smlsl2(v7.h8, v7.b16, v16.b16); dump();
smlsl2(v7.h8, v7.b16, v31.b16); dump();
smull2(v7.h8, v7.b16, v7.b16); dump();
smull2(v0.h8, v7.b16, v7.b16); dump();
smull2(v1.h8, v7.b16, v7.b16); dump();
smull2(v2.h8, v7.b16, v7.b16); dump();
smull2(v4.h8, v7.b16, v7.b16); dump();
smull2(v8.h8, v7.b16, v7.b16); dump();
smull2(v16.h8, v7.b16, v7.b16); dump();
smull2(v31.h8, v7.b16, v7.b16); dump();
smull2(v7.h8, v7.b16, v7.b16); dump();
smull2(v7.h8, v0.b16, v7.b16); dump();
smull2(v7.h8, v1.b16, v7.b16); dump();
smull2(v7.h8, v2.b16, v7.b16); dump();
smull2(v7.h8, v4.b16, v7.b16); dump();
smull2(v7.h8, v8.b16, v7.b16); dump();
smull2(v7.h8, v16.b16, v7.b16); dump();
smull2(v7.h8, v31.b16, v7.b16); dump();
smull2(v7.h8, v7.b16, v7.b16); dump();
smull2(v7.h8, v7.b16, v0.b16); dump();
smull2(v7.h8, v7.b16, v1.b16); dump();
smull2(v7.h8, v7.b16, v2.b16); dump();
smull2(v7.h8, v7.b16, v4.b16); dump();
smull2(v7.h8, v7.b16, v8.b16); dump();
smull2(v7.h8, v7.b16, v16.b16); dump();
smull2(v7.h8, v7.b16, v31.b16); dump();
ssubl2(v7.h8, v7.b16, v7.b16); dump();
ssubl2(v0.h8, v7.b16, v7.b16); dump();
ssubl2(v1.h8, v7.b16, v7.b16); dump();
ssubl2(v2.h8, v7.b16, v7.b16); dump();
ssubl2(v4.h8, v7.b16, v7.b16); dump();
ssubl2(v8.h8, v7.b16, v7.b16); dump();
ssubl2(v16.h8, v7.b16, v7.b16); dump();
ssubl2(v31.h8, v7.b16, v7.b16); dump();
ssubl2(v7.h8, v7.b16, v7.b16); dump();
ssubl2(v7.h8, v0.b16, v7.b16); dump();
ssubl2(v7.h8, v1.b16, v7.b16); dump();
ssubl2(v7.h8, v2.b16, v7.b16); dump();
ssubl2(v7.h8, v4.b16, v7.b16); dump();
ssubl2(v7.h8, v8.b16, v7.b16); dump();
ssubl2(v7.h8, v16.b16, v7.b16); dump();
ssubl2(v7.h8, v31.b16, v7.b16); dump();
ssubl2(v7.h8, v7.b16, v7.b16); dump();
ssubl2(v7.h8, v7.b16, v0.b16); dump();
ssubl2(v7.h8, v7.b16, v1.b16); dump();
ssubl2(v7.h8, v7.b16, v2.b16); dump();
ssubl2(v7.h8, v7.b16, v4.b16); dump();
ssubl2(v7.h8, v7.b16, v8.b16); dump();
ssubl2(v7.h8, v7.b16, v16.b16); dump();
ssubl2(v7.h8, v7.b16, v31.b16); dump();
//DataProcSimd_WideningAndNarrowingArithmetic5:1
sabal2(v7.s4, v7.h8, v7.h8); dump();
sabal2(v0.s4, v7.h8, v7.h8); dump();
sabal2(v1.s4, v7.h8, v7.h8); dump();
sabal2(v2.s4, v7.h8, v7.h8); dump();
sabal2(v4.s4, v7.h8, v7.h8); dump();
sabal2(v8.s4, v7.h8, v7.h8); dump();
sabal2(v16.s4, v7.h8, v7.h8); dump();
sabal2(v31.s4, v7.h8, v7.h8); dump();
sabal2(v7.s4, v7.h8, v7.h8); dump();
sabal2(v7.s4, v0.h8, v7.h8); dump();
sabal2(v7.s4, v1.h8, v7.h8); dump();
sabal2(v7.s4, v2.h8, v7.h8); dump();
sabal2(v7.s4, v4.h8, v7.h8); dump();
sabal2(v7.s4, v8.h8, v7.h8); dump();
sabal2(v7.s4, v16.h8, v7.h8); dump();
sabal2(v7.s4, v31.h8, v7.h8); dump();
sabal2(v7.s4, v7.h8, v7.h8); dump();
sabal2(v7.s4, v7.h8, v0.h8); dump();
sabal2(v7.s4, v7.h8, v1.h8); dump();
sabal2(v7.s4, v7.h8, v2.h8); dump();
sabal2(v7.s4, v7.h8, v4.h8); dump();
sabal2(v7.s4, v7.h8, v8.h8); dump();
sabal2(v7.s4, v7.h8, v16.h8); dump();
sabal2(v7.s4, v7.h8, v31.h8); dump();
sabdl2(v7.s4, v7.h8, v7.h8); dump();
sabdl2(v0.s4, v7.h8, v7.h8); dump();
sabdl2(v1.s4, v7.h8, v7.h8); dump();
sabdl2(v2.s4, v7.h8, v7.h8); dump();
sabdl2(v4.s4, v7.h8, v7.h8); dump();
sabdl2(v8.s4, v7.h8, v7.h8); dump();
sabdl2(v16.s4, v7.h8, v7.h8); dump();
sabdl2(v31.s4, v7.h8, v7.h8); dump();
sabdl2(v7.s4, v7.h8, v7.h8); dump();
sabdl2(v7.s4, v0.h8, v7.h8); dump();
sabdl2(v7.s4, v1.h8, v7.h8); dump();
sabdl2(v7.s4, v2.h8, v7.h8); dump();
sabdl2(v7.s4, v4.h8, v7.h8); dump();
sabdl2(v7.s4, v8.h8, v7.h8); dump();
sabdl2(v7.s4, v16.h8, v7.h8); dump();
sabdl2(v7.s4, v31.h8, v7.h8); dump();
sabdl2(v7.s4, v7.h8, v7.h8); dump();
sabdl2(v7.s4, v7.h8, v0.h8); dump();
sabdl2(v7.s4, v7.h8, v1.h8); dump();
sabdl2(v7.s4, v7.h8, v2.h8); dump();
sabdl2(v7.s4, v7.h8, v4.h8); dump();
sabdl2(v7.s4, v7.h8, v8.h8); dump();
sabdl2(v7.s4, v7.h8, v16.h8); dump();
sabdl2(v7.s4, v7.h8, v31.h8); dump();
saddl2(v7.s4, v7.h8, v7.h8); dump();
saddl2(v0.s4, v7.h8, v7.h8); dump();
saddl2(v1.s4, v7.h8, v7.h8); dump();
saddl2(v2.s4, v7.h8, v7.h8); dump();
saddl2(v4.s4, v7.h8, v7.h8); dump();
saddl2(v8.s4, v7.h8, v7.h8); dump();
saddl2(v16.s4, v7.h8, v7.h8); dump();
saddl2(v31.s4, v7.h8, v7.h8); dump();
saddl2(v7.s4, v7.h8, v7.h8); dump();
saddl2(v7.s4, v0.h8, v7.h8); dump();
saddl2(v7.s4, v1.h8, v7.h8); dump();
saddl2(v7.s4, v2.h8, v7.h8); dump();
saddl2(v7.s4, v4.h8, v7.h8); dump();
saddl2(v7.s4, v8.h8, v7.h8); dump();
saddl2(v7.s4, v16.h8, v7.h8); dump();
saddl2(v7.s4, v31.h8, v7.h8); dump();
saddl2(v7.s4, v7.h8, v7.h8); dump();
saddl2(v7.s4, v7.h8, v0.h8); dump();
saddl2(v7.s4, v7.h8, v1.h8); dump();
saddl2(v7.s4, v7.h8, v2.h8); dump();
saddl2(v7.s4, v7.h8, v4.h8); dump();
saddl2(v7.s4, v7.h8, v8.h8); dump();
saddl2(v7.s4, v7.h8, v16.h8); dump();
saddl2(v7.s4, v7.h8, v31.h8); dump();
smlal2(v7.s4, v7.h8, v7.h8); dump();
smlal2(v0.s4, v7.h8, v7.h8); dump();
smlal2(v1.s4, v7.h8, v7.h8); dump();
smlal2(v2.s4, v7.h8, v7.h8); dump();
smlal2(v4.s4, v7.h8, v7.h8); dump();
smlal2(v8.s4, v7.h8, v7.h8); dump();
smlal2(v16.s4, v7.h8, v7.h8); dump();
smlal2(v31.s4, v7.h8, v7.h8); dump();
smlal2(v7.s4, v7.h8, v7.h8); dump();
smlal2(v7.s4, v0.h8, v7.h8); dump();
smlal2(v7.s4, v1.h8, v7.h8); dump();
smlal2(v7.s4, v2.h8, v7.h8); dump();
smlal2(v7.s4, v4.h8, v7.h8); dump();
smlal2(v7.s4, v8.h8, v7.h8); dump();
smlal2(v7.s4, v16.h8, v7.h8); dump();
smlal2(v7.s4, v31.h8, v7.h8); dump();
smlal2(v7.s4, v7.h8, v7.h8); dump();
smlal2(v7.s4, v7.h8, v0.h8); dump();
smlal2(v7.s4, v7.h8, v1.h8); dump();
smlal2(v7.s4, v7.h8, v2.h8); dump();
smlal2(v7.s4, v7.h8, v4.h8); dump();
smlal2(v7.s4, v7.h8, v8.h8); dump();
smlal2(v7.s4, v7.h8, v16.h8); dump();
smlal2(v7.s4, v7.h8, v31.h8); dump();
smlsl2(v7.s4, v7.h8, v7.h8); dump();
smlsl2(v0.s4, v7.h8, v7.h8); dump();
smlsl2(v1.s4, v7.h8, v7.h8); dump();
smlsl2(v2.s4, v7.h8, v7.h8); dump();
smlsl2(v4.s4, v7.h8, v7.h8); dump();
smlsl2(v8.s4, v7.h8, v7.h8); dump();
smlsl2(v16.s4, v7.h8, v7.h8); dump();
smlsl2(v31.s4, v7.h8, v7.h8); dump();
smlsl2(v7.s4, v7.h8, v7.h8); dump();
smlsl2(v7.s4, v0.h8, v7.h8); dump();
smlsl2(v7.s4, v1.h8, v7.h8); dump();
smlsl2(v7.s4, v2.h8, v7.h8); dump();
smlsl2(v7.s4, v4.h8, v7.h8); dump();
smlsl2(v7.s4, v8.h8, v7.h8); dump();
smlsl2(v7.s4, v16.h8, v7.h8); dump();
smlsl2(v7.s4, v31.h8, v7.h8); dump();
smlsl2(v7.s4, v7.h8, v7.h8); dump();
smlsl2(v7.s4, v7.h8, v0.h8); dump();
smlsl2(v7.s4, v7.h8, v1.h8); dump();
smlsl2(v7.s4, v7.h8, v2.h8); dump();
smlsl2(v7.s4, v7.h8, v4.h8); dump();
smlsl2(v7.s4, v7.h8, v8.h8); dump();
smlsl2(v7.s4, v7.h8, v16.h8); dump();
smlsl2(v7.s4, v7.h8, v31.h8); dump();
smull2(v7.s4, v7.h8, v7.h8); dump();
smull2(v0.s4, v7.h8, v7.h8); dump();
smull2(v1.s4, v7.h8, v7.h8); dump();
smull2(v2.s4, v7.h8, v7.h8); dump();
smull2(v4.s4, v7.h8, v7.h8); dump();
smull2(v8.s4, v7.h8, v7.h8); dump();
smull2(v16.s4, v7.h8, v7.h8); dump();
smull2(v31.s4, v7.h8, v7.h8); dump();
smull2(v7.s4, v7.h8, v7.h8); dump();
smull2(v7.s4, v0.h8, v7.h8); dump();
smull2(v7.s4, v1.h8, v7.h8); dump();
smull2(v7.s4, v2.h8, v7.h8); dump();
smull2(v7.s4, v4.h8, v7.h8); dump();
smull2(v7.s4, v8.h8, v7.h8); dump();
smull2(v7.s4, v16.h8, v7.h8); dump();
smull2(v7.s4, v31.h8, v7.h8); dump();
smull2(v7.s4, v7.h8, v7.h8); dump();
smull2(v7.s4, v7.h8, v0.h8); dump();
smull2(v7.s4, v7.h8, v1.h8); dump();
smull2(v7.s4, v7.h8, v2.h8); dump();
smull2(v7.s4, v7.h8, v4.h8); dump();
smull2(v7.s4, v7.h8, v8.h8); dump();
smull2(v7.s4, v7.h8, v16.h8); dump();
smull2(v7.s4, v7.h8, v31.h8); dump();
ssubl2(v7.s4, v7.h8, v7.h8); dump();
ssubl2(v0.s4, v7.h8, v7.h8); dump();
ssubl2(v1.s4, v7.h8, v7.h8); dump();
ssubl2(v2.s4, v7.h8, v7.h8); dump();
ssubl2(v4.s4, v7.h8, v7.h8); dump();
ssubl2(v8.s4, v7.h8, v7.h8); dump();
ssubl2(v16.s4, v7.h8, v7.h8); dump();
ssubl2(v31.s4, v7.h8, v7.h8); dump();
ssubl2(v7.s4, v7.h8, v7.h8); dump();
ssubl2(v7.s4, v0.h8, v7.h8); dump();
ssubl2(v7.s4, v1.h8, v7.h8); dump();
ssubl2(v7.s4, v2.h8, v7.h8); dump();
ssubl2(v7.s4, v4.h8, v7.h8); dump();
ssubl2(v7.s4, v8.h8, v7.h8); dump();
ssubl2(v7.s4, v16.h8, v7.h8); dump();
ssubl2(v7.s4, v31.h8, v7.h8); dump();
ssubl2(v7.s4, v7.h8, v7.h8); dump();
ssubl2(v7.s4, v7.h8, v0.h8); dump();
ssubl2(v7.s4, v7.h8, v1.h8); dump();
ssubl2(v7.s4, v7.h8, v2.h8); dump();
ssubl2(v7.s4, v7.h8, v4.h8); dump();
ssubl2(v7.s4, v7.h8, v8.h8); dump();
ssubl2(v7.s4, v7.h8, v16.h8); dump();
ssubl2(v7.s4, v7.h8, v31.h8); dump();
//DataProcSimd_WideningAndNarrowingArithmetic5:2
sabal2(v7.d2, v7.s4, v7.s4); dump();
sabal2(v0.d2, v7.s4, v7.s4); dump();
sabal2(v1.d2, v7.s4, v7.s4); dump();
sabal2(v2.d2, v7.s4, v7.s4); dump();
sabal2(v4.d2, v7.s4, v7.s4); dump();
sabal2(v8.d2, v7.s4, v7.s4); dump();
sabal2(v16.d2, v7.s4, v7.s4); dump();
sabal2(v31.d2, v7.s4, v7.s4); dump();
sabal2(v7.d2, v7.s4, v7.s4); dump();
sabal2(v7.d2, v0.s4, v7.s4); dump();
sabal2(v7.d2, v1.s4, v7.s4); dump();
sabal2(v7.d2, v2.s4, v7.s4); dump();
sabal2(v7.d2, v4.s4, v7.s4); dump();
sabal2(v7.d2, v8.s4, v7.s4); dump();
sabal2(v7.d2, v16.s4, v7.s4); dump();
sabal2(v7.d2, v31.s4, v7.s4); dump();
sabal2(v7.d2, v7.s4, v7.s4); dump();
sabal2(v7.d2, v7.s4, v0.s4); dump();
sabal2(v7.d2, v7.s4, v1.s4); dump();
sabal2(v7.d2, v7.s4, v2.s4); dump();
sabal2(v7.d2, v7.s4, v4.s4); dump();
sabal2(v7.d2, v7.s4, v8.s4); dump();
sabal2(v7.d2, v7.s4, v16.s4); dump();
sabal2(v7.d2, v7.s4, v31.s4); dump();
sabdl2(v7.d2, v7.s4, v7.s4); dump();
sabdl2(v0.d2, v7.s4, v7.s4); dump();
sabdl2(v1.d2, v7.s4, v7.s4); dump();
sabdl2(v2.d2, v7.s4, v7.s4); dump();
sabdl2(v4.d2, v7.s4, v7.s4); dump();
sabdl2(v8.d2, v7.s4, v7.s4); dump();
sabdl2(v16.d2, v7.s4, v7.s4); dump();
sabdl2(v31.d2, v7.s4, v7.s4); dump();
sabdl2(v7.d2, v7.s4, v7.s4); dump();
sabdl2(v7.d2, v0.s4, v7.s4); dump();
sabdl2(v7.d2, v1.s4, v7.s4); dump();
sabdl2(v7.d2, v2.s4, v7.s4); dump();
sabdl2(v7.d2, v4.s4, v7.s4); dump();
sabdl2(v7.d2, v8.s4, v7.s4); dump();
sabdl2(v7.d2, v16.s4, v7.s4); dump();
sabdl2(v7.d2, v31.s4, v7.s4); dump();
sabdl2(v7.d2, v7.s4, v7.s4); dump();
sabdl2(v7.d2, v7.s4, v0.s4); dump();
sabdl2(v7.d2, v7.s4, v1.s4); dump();
sabdl2(v7.d2, v7.s4, v2.s4); dump();
sabdl2(v7.d2, v7.s4, v4.s4); dump();
sabdl2(v7.d2, v7.s4, v8.s4); dump();
sabdl2(v7.d2, v7.s4, v16.s4); dump();
sabdl2(v7.d2, v7.s4, v31.s4); dump();
saddl2(v7.d2, v7.s4, v7.s4); dump();
saddl2(v0.d2, v7.s4, v7.s4); dump();
saddl2(v1.d2, v7.s4, v7.s4); dump();
saddl2(v2.d2, v7.s4, v7.s4); dump();
saddl2(v4.d2, v7.s4, v7.s4); dump();
saddl2(v8.d2, v7.s4, v7.s4); dump();
saddl2(v16.d2, v7.s4, v7.s4); dump();
saddl2(v31.d2, v7.s4, v7.s4); dump();
saddl2(v7.d2, v7.s4, v7.s4); dump();
saddl2(v7.d2, v0.s4, v7.s4); dump();
saddl2(v7.d2, v1.s4, v7.s4); dump();
saddl2(v7.d2, v2.s4, v7.s4); dump();
saddl2(v7.d2, v4.s4, v7.s4); dump();
saddl2(v7.d2, v8.s4, v7.s4); dump();
saddl2(v7.d2, v16.s4, v7.s4); dump();
saddl2(v7.d2, v31.s4, v7.s4); dump();
saddl2(v7.d2, v7.s4, v7.s4); dump();
saddl2(v7.d2, v7.s4, v0.s4); dump();
saddl2(v7.d2, v7.s4, v1.s4); dump();
saddl2(v7.d2, v7.s4, v2.s4); dump();
saddl2(v7.d2, v7.s4, v4.s4); dump();
saddl2(v7.d2, v7.s4, v8.s4); dump();
saddl2(v7.d2, v7.s4, v16.s4); dump();
saddl2(v7.d2, v7.s4, v31.s4); dump();
smlal2(v7.d2, v7.s4, v7.s4); dump();
smlal2(v0.d2, v7.s4, v7.s4); dump();
smlal2(v1.d2, v7.s4, v7.s4); dump();
smlal2(v2.d2, v7.s4, v7.s4); dump();
smlal2(v4.d2, v7.s4, v7.s4); dump();
smlal2(v8.d2, v7.s4, v7.s4); dump();
smlal2(v16.d2, v7.s4, v7.s4); dump();
smlal2(v31.d2, v7.s4, v7.s4); dump();
smlal2(v7.d2, v7.s4, v7.s4); dump();
smlal2(v7.d2, v0.s4, v7.s4); dump();
smlal2(v7.d2, v1.s4, v7.s4); dump();
smlal2(v7.d2, v2.s4, v7.s4); dump();
smlal2(v7.d2, v4.s4, v7.s4); dump();
smlal2(v7.d2, v8.s4, v7.s4); dump();
smlal2(v7.d2, v16.s4, v7.s4); dump();
smlal2(v7.d2, v31.s4, v7.s4); dump();
smlal2(v7.d2, v7.s4, v7.s4); dump();
smlal2(v7.d2, v7.s4, v0.s4); dump();
smlal2(v7.d2, v7.s4, v1.s4); dump();
smlal2(v7.d2, v7.s4, v2.s4); dump();
smlal2(v7.d2, v7.s4, v4.s4); dump();
smlal2(v7.d2, v7.s4, v8.s4); dump();
smlal2(v7.d2, v7.s4, v16.s4); dump();
smlal2(v7.d2, v7.s4, v31.s4); dump();
smlsl2(v7.d2, v7.s4, v7.s4); dump();
smlsl2(v0.d2, v7.s4, v7.s4); dump();
smlsl2(v1.d2, v7.s4, v7.s4); dump();
smlsl2(v2.d2, v7.s4, v7.s4); dump();
smlsl2(v4.d2, v7.s4, v7.s4); dump();
smlsl2(v8.d2, v7.s4, v7.s4); dump();
smlsl2(v16.d2, v7.s4, v7.s4); dump();
smlsl2(v31.d2, v7.s4, v7.s4); dump();
smlsl2(v7.d2, v7.s4, v7.s4); dump();
smlsl2(v7.d2, v0.s4, v7.s4); dump();
smlsl2(v7.d2, v1.s4, v7.s4); dump();
smlsl2(v7.d2, v2.s4, v7.s4); dump();
smlsl2(v7.d2, v4.s4, v7.s4); dump();
smlsl2(v7.d2, v8.s4, v7.s4); dump();
smlsl2(v7.d2, v16.s4, v7.s4); dump();
smlsl2(v7.d2, v31.s4, v7.s4); dump();
smlsl2(v7.d2, v7.s4, v7.s4); dump();
smlsl2(v7.d2, v7.s4, v0.s4); dump();
smlsl2(v7.d2, v7.s4, v1.s4); dump();
smlsl2(v7.d2, v7.s4, v2.s4); dump();
smlsl2(v7.d2, v7.s4, v4.s4); dump();
smlsl2(v7.d2, v7.s4, v8.s4); dump();
smlsl2(v7.d2, v7.s4, v16.s4); dump();
smlsl2(v7.d2, v7.s4, v31.s4); dump();
smull2(v7.d2, v7.s4, v7.s4); dump();
smull2(v0.d2, v7.s4, v7.s4); dump();
smull2(v1.d2, v7.s4, v7.s4); dump();
smull2(v2.d2, v7.s4, v7.s4); dump();
smull2(v4.d2, v7.s4, v7.s4); dump();
smull2(v8.d2, v7.s4, v7.s4); dump();
smull2(v16.d2, v7.s4, v7.s4); dump();
smull2(v31.d2, v7.s4, v7.s4); dump();
smull2(v7.d2, v7.s4, v7.s4); dump();
smull2(v7.d2, v0.s4, v7.s4); dump();
smull2(v7.d2, v1.s4, v7.s4); dump();
smull2(v7.d2, v2.s4, v7.s4); dump();
smull2(v7.d2, v4.s4, v7.s4); dump();
smull2(v7.d2, v8.s4, v7.s4); dump();
smull2(v7.d2, v16.s4, v7.s4); dump();
smull2(v7.d2, v31.s4, v7.s4); dump();
smull2(v7.d2, v7.s4, v7.s4); dump();
smull2(v7.d2, v7.s4, v0.s4); dump();
smull2(v7.d2, v7.s4, v1.s4); dump();
smull2(v7.d2, v7.s4, v2.s4); dump();
smull2(v7.d2, v7.s4, v4.s4); dump();
smull2(v7.d2, v7.s4, v8.s4); dump();
smull2(v7.d2, v7.s4, v16.s4); dump();
smull2(v7.d2, v7.s4, v31.s4); dump();
ssubl2(v7.d2, v7.s4, v7.s4); dump();
ssubl2(v0.d2, v7.s4, v7.s4); dump();
ssubl2(v1.d2, v7.s4, v7.s4); dump();
ssubl2(v2.d2, v7.s4, v7.s4); dump();
ssubl2(v4.d2, v7.s4, v7.s4); dump();
ssubl2(v8.d2, v7.s4, v7.s4); dump();
ssubl2(v16.d2, v7.s4, v7.s4); dump();
ssubl2(v31.d2, v7.s4, v7.s4); dump();
ssubl2(v7.d2, v7.s4, v7.s4); dump();
ssubl2(v7.d2, v0.s4, v7.s4); dump();
ssubl2(v7.d2, v1.s4, v7.s4); dump();
ssubl2(v7.d2, v2.s4, v7.s4); dump();
ssubl2(v7.d2, v4.s4, v7.s4); dump();
ssubl2(v7.d2, v8.s4, v7.s4); dump();
ssubl2(v7.d2, v16.s4, v7.s4); dump();
ssubl2(v7.d2, v31.s4, v7.s4); dump();
ssubl2(v7.d2, v7.s4, v7.s4); dump();
ssubl2(v7.d2, v7.s4, v0.s4); dump();
ssubl2(v7.d2, v7.s4, v1.s4); dump();
ssubl2(v7.d2, v7.s4, v2.s4); dump();
ssubl2(v7.d2, v7.s4, v4.s4); dump();
ssubl2(v7.d2, v7.s4, v8.s4); dump();
ssubl2(v7.d2, v7.s4, v16.s4); dump();
ssubl2(v7.d2, v7.s4, v31.s4); dump();
//DataProcSimd_WideningAndNarrowingArithmetic6:0
saddw(v7.h8, v7.h8, v7.b8); dump();
saddw(v0.h8, v7.h8, v7.b8); dump();
saddw(v1.h8, v7.h8, v7.b8); dump();
saddw(v2.h8, v7.h8, v7.b8); dump();
saddw(v4.h8, v7.h8, v7.b8); dump();
saddw(v8.h8, v7.h8, v7.b8); dump();
saddw(v16.h8, v7.h8, v7.b8); dump();
saddw(v31.h8, v7.h8, v7.b8); dump();
saddw(v7.h8, v7.h8, v7.b8); dump();
saddw(v7.h8, v0.h8, v7.b8); dump();
saddw(v7.h8, v1.h8, v7.b8); dump();
saddw(v7.h8, v2.h8, v7.b8); dump();
saddw(v7.h8, v4.h8, v7.b8); dump();
saddw(v7.h8, v8.h8, v7.b8); dump();
saddw(v7.h8, v16.h8, v7.b8); dump();
saddw(v7.h8, v31.h8, v7.b8); dump();
saddw(v7.h8, v7.h8, v7.b8); dump();
saddw(v7.h8, v7.h8, v0.b8); dump();
saddw(v7.h8, v7.h8, v1.b8); dump();
saddw(v7.h8, v7.h8, v2.b8); dump();
saddw(v7.h8, v7.h8, v4.b8); dump();
saddw(v7.h8, v7.h8, v8.b8); dump();
saddw(v7.h8, v7.h8, v16.b8); dump();
saddw(v7.h8, v7.h8, v31.b8); dump();
//DataProcSimd_WideningAndNarrowingArithmetic6:1
saddw(v7.s4, v7.s4, v7.h4); dump();
saddw(v0.s4, v7.s4, v7.h4); dump();
saddw(v1.s4, v7.s4, v7.h4); dump();
saddw(v2.s4, v7.s4, v7.h4); dump();
saddw(v4.s4, v7.s4, v7.h4); dump();
saddw(v8.s4, v7.s4, v7.h4); dump();
saddw(v16.s4, v7.s4, v7.h4); dump();
saddw(v31.s4, v7.s4, v7.h4); dump();
saddw(v7.s4, v7.s4, v7.h4); dump();
saddw(v7.s4, v0.s4, v7.h4); dump();
saddw(v7.s4, v1.s4, v7.h4); dump();
saddw(v7.s4, v2.s4, v7.h4); dump();
saddw(v7.s4, v4.s4, v7.h4); dump();
saddw(v7.s4, v8.s4, v7.h4); dump();
saddw(v7.s4, v16.s4, v7.h4); dump();
saddw(v7.s4, v31.s4, v7.h4); dump();
saddw(v7.s4, v7.s4, v7.h4); dump();
saddw(v7.s4, v7.s4, v0.h4); dump();
saddw(v7.s4, v7.s4, v1.h4); dump();
saddw(v7.s4, v7.s4, v2.h4); dump();
saddw(v7.s4, v7.s4, v4.h4); dump();
saddw(v7.s4, v7.s4, v8.h4); dump();
saddw(v7.s4, v7.s4, v16.h4); dump();
saddw(v7.s4, v7.s4, v31.h4); dump();
//DataProcSimd_WideningAndNarrowingArithmetic6:2
saddw(v7.d2, v7.d2, v7.s2); dump();
saddw(v0.d2, v7.d2, v7.s2); dump();
saddw(v1.d2, v7.d2, v7.s2); dump();
saddw(v2.d2, v7.d2, v7.s2); dump();
saddw(v4.d2, v7.d2, v7.s2); dump();
saddw(v8.d2, v7.d2, v7.s2); dump();
saddw(v16.d2, v7.d2, v7.s2); dump();
saddw(v31.d2, v7.d2, v7.s2); dump();
saddw(v7.d2, v7.d2, v7.s2); dump();
saddw(v7.d2, v0.d2, v7.s2); dump();
saddw(v7.d2, v1.d2, v7.s2); dump();
saddw(v7.d2, v2.d2, v7.s2); dump();
saddw(v7.d2, v4.d2, v7.s2); dump();
saddw(v7.d2, v8.d2, v7.s2); dump();
saddw(v7.d2, v16.d2, v7.s2); dump();
saddw(v7.d2, v31.d2, v7.s2); dump();
saddw(v7.d2, v7.d2, v7.s2); dump();
saddw(v7.d2, v7.d2, v0.s2); dump();
saddw(v7.d2, v7.d2, v1.s2); dump();
saddw(v7.d2, v7.d2, v2.s2); dump();
saddw(v7.d2, v7.d2, v4.s2); dump();
saddw(v7.d2, v7.d2, v8.s2); dump();
saddw(v7.d2, v7.d2, v16.s2); dump();
saddw(v7.d2, v7.d2, v31.s2); dump();
//DataProcSimd_WideningAndNarrowingArithmetic7:0
saddw2(v7.h8, v7.h8, v7.b16); dump();
saddw2(v0.h8, v7.h8, v7.b16); dump();
saddw2(v1.h8, v7.h8, v7.b16); dump();
saddw2(v2.h8, v7.h8, v7.b16); dump();
saddw2(v4.h8, v7.h8, v7.b16); dump();
saddw2(v8.h8, v7.h8, v7.b16); dump();
saddw2(v16.h8, v7.h8, v7.b16); dump();
saddw2(v31.h8, v7.h8, v7.b16); dump();
saddw2(v7.h8, v7.h8, v7.b16); dump();
saddw2(v7.h8, v0.h8, v7.b16); dump();
saddw2(v7.h8, v1.h8, v7.b16); dump();
saddw2(v7.h8, v2.h8, v7.b16); dump();
saddw2(v7.h8, v4.h8, v7.b16); dump();
saddw2(v7.h8, v8.h8, v7.b16); dump();
saddw2(v7.h8, v16.h8, v7.b16); dump();
saddw2(v7.h8, v31.h8, v7.b16); dump();
saddw2(v7.h8, v7.h8, v7.b16); dump();
saddw2(v7.h8, v7.h8, v0.b16); dump();
saddw2(v7.h8, v7.h8, v1.b16); dump();
saddw2(v7.h8, v7.h8, v2.b16); dump();
saddw2(v7.h8, v7.h8, v4.b16); dump();
saddw2(v7.h8, v7.h8, v8.b16); dump();
saddw2(v7.h8, v7.h8, v16.b16); dump();
saddw2(v7.h8, v7.h8, v31.b16); dump();
//DataProcSimd_WideningAndNarrowingArithmetic7:1
saddw2(v7.s4, v7.s4, v7.h8); dump();
saddw2(v0.s4, v7.s4, v7.h8); dump();
saddw2(v1.s4, v7.s4, v7.h8); dump();
saddw2(v2.s4, v7.s4, v7.h8); dump();
saddw2(v4.s4, v7.s4, v7.h8); dump();
saddw2(v8.s4, v7.s4, v7.h8); dump();
saddw2(v16.s4, v7.s4, v7.h8); dump();
saddw2(v31.s4, v7.s4, v7.h8); dump();
saddw2(v7.s4, v7.s4, v7.h8); dump();
saddw2(v7.s4, v0.s4, v7.h8); dump();
saddw2(v7.s4, v1.s4, v7.h8); dump();
saddw2(v7.s4, v2.s4, v7.h8); dump();
saddw2(v7.s4, v4.s4, v7.h8); dump();
saddw2(v7.s4, v8.s4, v7.h8); dump();
saddw2(v7.s4, v16.s4, v7.h8); dump();
saddw2(v7.s4, v31.s4, v7.h8); dump();
saddw2(v7.s4, v7.s4, v7.h8); dump();
saddw2(v7.s4, v7.s4, v0.h8); dump();
saddw2(v7.s4, v7.s4, v1.h8); dump();
saddw2(v7.s4, v7.s4, v2.h8); dump();
saddw2(v7.s4, v7.s4, v4.h8); dump();
saddw2(v7.s4, v7.s4, v8.h8); dump();
saddw2(v7.s4, v7.s4, v16.h8); dump();
saddw2(v7.s4, v7.s4, v31.h8); dump();
//DataProcSimd_WideningAndNarrowingArithmetic7:2
saddw2(v7.d2, v7.d2, v7.s4); dump();
saddw2(v0.d2, v7.d2, v7.s4); dump();
saddw2(v1.d2, v7.d2, v7.s4); dump();
saddw2(v2.d2, v7.d2, v7.s4); dump();
saddw2(v4.d2, v7.d2, v7.s4); dump();
saddw2(v8.d2, v7.d2, v7.s4); dump();
saddw2(v16.d2, v7.d2, v7.s4); dump();
saddw2(v31.d2, v7.d2, v7.s4); dump();
saddw2(v7.d2, v7.d2, v7.s4); dump();
saddw2(v7.d2, v0.d2, v7.s4); dump();
saddw2(v7.d2, v1.d2, v7.s4); dump();
saddw2(v7.d2, v2.d2, v7.s4); dump();
saddw2(v7.d2, v4.d2, v7.s4); dump();
saddw2(v7.d2, v8.d2, v7.s4); dump();
saddw2(v7.d2, v16.d2, v7.s4); dump();
saddw2(v7.d2, v31.d2, v7.s4); dump();
saddw2(v7.d2, v7.d2, v7.s4); dump();
saddw2(v7.d2, v7.d2, v0.s4); dump();
saddw2(v7.d2, v7.d2, v1.s4); dump();
saddw2(v7.d2, v7.d2, v2.s4); dump();
saddw2(v7.d2, v7.d2, v4.s4); dump();
saddw2(v7.d2, v7.d2, v8.s4); dump();
saddw2(v7.d2, v7.d2, v16.s4); dump();
saddw2(v7.d2, v7.d2, v31.s4); dump();
//DataProcSimd_WideningAndNarrowingArithmetic8:0
sqdmlal(s7, h7, h7); dump();
sqdmlal(s0, h7, h7); dump();
sqdmlal(s1, h7, h7); dump();
sqdmlal(s2, h7, h7); dump();
sqdmlal(s4, h7, h7); dump();
sqdmlal(s8, h7, h7); dump();
sqdmlal(s16, h7, h7); dump();
sqdmlal(s31, h7, h7); dump();
sqdmlal(s7, h7, h7); dump();
sqdmlal(s7, h0, h7); dump();
sqdmlal(s7, h1, h7); dump();
sqdmlal(s7, h2, h7); dump();
sqdmlal(s7, h4, h7); dump();
sqdmlal(s7, h8, h7); dump();
sqdmlal(s7, h16, h7); dump();
sqdmlal(s7, h31, h7); dump();
sqdmlal(s7, h7, h7); dump();
sqdmlal(s7, h7, h0); dump();
sqdmlal(s7, h7, h1); dump();
sqdmlal(s7, h7, h2); dump();
sqdmlal(s7, h7, h4); dump();
sqdmlal(s7, h7, h8); dump();
sqdmlal(s7, h7, h16); dump();
sqdmlal(s7, h7, h31); dump();
sqdmlsl(s7, h7, h7); dump();
sqdmlsl(s0, h7, h7); dump();
sqdmlsl(s1, h7, h7); dump();
sqdmlsl(s2, h7, h7); dump();
sqdmlsl(s4, h7, h7); dump();
sqdmlsl(s8, h7, h7); dump();
sqdmlsl(s16, h7, h7); dump();
sqdmlsl(s31, h7, h7); dump();
sqdmlsl(s7, h7, h7); dump();
sqdmlsl(s7, h0, h7); dump();
sqdmlsl(s7, h1, h7); dump();
sqdmlsl(s7, h2, h7); dump();
sqdmlsl(s7, h4, h7); dump();
sqdmlsl(s7, h8, h7); dump();
sqdmlsl(s7, h16, h7); dump();
sqdmlsl(s7, h31, h7); dump();
sqdmlsl(s7, h7, h7); dump();
sqdmlsl(s7, h7, h0); dump();
sqdmlsl(s7, h7, h1); dump();
sqdmlsl(s7, h7, h2); dump();
sqdmlsl(s7, h7, h4); dump();
sqdmlsl(s7, h7, h8); dump();
sqdmlsl(s7, h7, h16); dump();
sqdmlsl(s7, h7, h31); dump();
sqdmull(s7, h7, h7); dump();
sqdmull(s0, h7, h7); dump();
sqdmull(s1, h7, h7); dump();
sqdmull(s2, h7, h7); dump();
sqdmull(s4, h7, h7); dump();
sqdmull(s8, h7, h7); dump();
sqdmull(s16, h7, h7); dump();
sqdmull(s31, h7, h7); dump();
sqdmull(s7, h7, h7); dump();
sqdmull(s7, h0, h7); dump();
sqdmull(s7, h1, h7); dump();
sqdmull(s7, h2, h7); dump();
sqdmull(s7, h4, h7); dump();
sqdmull(s7, h8, h7); dump();
sqdmull(s7, h16, h7); dump();
sqdmull(s7, h31, h7); dump();
sqdmull(s7, h7, h7); dump();
sqdmull(s7, h7, h0); dump();
sqdmull(s7, h7, h1); dump();
sqdmull(s7, h7, h2); dump();
sqdmull(s7, h7, h4); dump();
sqdmull(s7, h7, h8); dump();
sqdmull(s7, h7, h16); dump();
sqdmull(s7, h7, h31); dump();
//DataProcSimd_WideningAndNarrowingArithmetic8:1
sqdmlal(d7, s7, s7); dump();
sqdmlal(d0, s7, s7); dump();
sqdmlal(d1, s7, s7); dump();
sqdmlal(d2, s7, s7); dump();
sqdmlal(d4, s7, s7); dump();
sqdmlal(d8, s7, s7); dump();
sqdmlal(d16, s7, s7); dump();
sqdmlal(d31, s7, s7); dump();
sqdmlal(d7, s7, s7); dump();
sqdmlal(d7, s0, s7); dump();
sqdmlal(d7, s1, s7); dump();
sqdmlal(d7, s2, s7); dump();
sqdmlal(d7, s4, s7); dump();
sqdmlal(d7, s8, s7); dump();
sqdmlal(d7, s16, s7); dump();
sqdmlal(d7, s31, s7); dump();
sqdmlal(d7, s7, s7); dump();
sqdmlal(d7, s7, s0); dump();
sqdmlal(d7, s7, s1); dump();
sqdmlal(d7, s7, s2); dump();
sqdmlal(d7, s7, s4); dump();
sqdmlal(d7, s7, s8); dump();
sqdmlal(d7, s7, s16); dump();
sqdmlal(d7, s7, s31); dump();
sqdmlsl(d7, s7, s7); dump();
sqdmlsl(d0, s7, s7); dump();
sqdmlsl(d1, s7, s7); dump();
sqdmlsl(d2, s7, s7); dump();
sqdmlsl(d4, s7, s7); dump();
sqdmlsl(d8, s7, s7); dump();
sqdmlsl(d16, s7, s7); dump();
sqdmlsl(d31, s7, s7); dump();
sqdmlsl(d7, s7, s7); dump();
sqdmlsl(d7, s0, s7); dump();
sqdmlsl(d7, s1, s7); dump();
sqdmlsl(d7, s2, s7); dump();
sqdmlsl(d7, s4, s7); dump();
sqdmlsl(d7, s8, s7); dump();
sqdmlsl(d7, s16, s7); dump();
sqdmlsl(d7, s31, s7); dump();
sqdmlsl(d7, s7, s7); dump();
sqdmlsl(d7, s7, s0); dump();
sqdmlsl(d7, s7, s1); dump();
sqdmlsl(d7, s7, s2); dump();
sqdmlsl(d7, s7, s4); dump();
sqdmlsl(d7, s7, s8); dump();
sqdmlsl(d7, s7, s16); dump();
sqdmlsl(d7, s7, s31); dump();
sqdmull(d7, s7, s7); dump();
sqdmull(d0, s7, s7); dump();
sqdmull(d1, s7, s7); dump();
sqdmull(d2, s7, s7); dump();
sqdmull(d4, s7, s7); dump();
sqdmull(d8, s7, s7); dump();
sqdmull(d16, s7, s7); dump();
sqdmull(d31, s7, s7); dump();
sqdmull(d7, s7, s7); dump();
sqdmull(d7, s0, s7); dump();
sqdmull(d7, s1, s7); dump();
sqdmull(d7, s2, s7); dump();
sqdmull(d7, s4, s7); dump();
sqdmull(d7, s8, s7); dump();
sqdmull(d7, s16, s7); dump();
sqdmull(d7, s31, s7); dump();
sqdmull(d7, s7, s7); dump();
sqdmull(d7, s7, s0); dump();
sqdmull(d7, s7, s1); dump();
sqdmull(d7, s7, s2); dump();
sqdmull(d7, s7, s4); dump();
sqdmull(d7, s7, s8); dump();
sqdmull(d7, s7, s16); dump();
sqdmull(d7, s7, s31); dump();
//DataProcSimd_WideningAndNarrowingArithmetic8:2
sqdmlal(v7.s4, v7.h4, v7.h4); dump();
sqdmlal(v0.s4, v7.h4, v7.h4); dump();
sqdmlal(v1.s4, v7.h4, v7.h4); dump();
sqdmlal(v2.s4, v7.h4, v7.h4); dump();
sqdmlal(v4.s4, v7.h4, v7.h4); dump();
sqdmlal(v8.s4, v7.h4, v7.h4); dump();
sqdmlal(v16.s4, v7.h4, v7.h4); dump();
sqdmlal(v31.s4, v7.h4, v7.h4); dump();
sqdmlal(v7.s4, v7.h4, v7.h4); dump();
sqdmlal(v7.s4, v0.h4, v7.h4); dump();
sqdmlal(v7.s4, v1.h4, v7.h4); dump();
sqdmlal(v7.s4, v2.h4, v7.h4); dump();
sqdmlal(v7.s4, v4.h4, v7.h4); dump();
sqdmlal(v7.s4, v8.h4, v7.h4); dump();
sqdmlal(v7.s4, v16.h4, v7.h4); dump();
sqdmlal(v7.s4, v31.h4, v7.h4); dump();
sqdmlal(v7.s4, v7.h4, v7.h4); dump();
sqdmlal(v7.s4, v7.h4, v0.h4); dump();
sqdmlal(v7.s4, v7.h4, v1.h4); dump();
sqdmlal(v7.s4, v7.h4, v2.h4); dump();
sqdmlal(v7.s4, v7.h4, v4.h4); dump();
sqdmlal(v7.s4, v7.h4, v8.h4); dump();
sqdmlal(v7.s4, v7.h4, v16.h4); dump();
sqdmlal(v7.s4, v7.h4, v31.h4); dump();
sqdmlsl(v7.s4, v7.h4, v7.h4); dump();
sqdmlsl(v0.s4, v7.h4, v7.h4); dump();
sqdmlsl(v1.s4, v7.h4, v7.h4); dump();
sqdmlsl(v2.s4, v7.h4, v7.h4); dump();
sqdmlsl(v4.s4, v7.h4, v7.h4); dump();
sqdmlsl(v8.s4, v7.h4, v7.h4); dump();
sqdmlsl(v16.s4, v7.h4, v7.h4); dump();
sqdmlsl(v31.s4, v7.h4, v7.h4); dump();
sqdmlsl(v7.s4, v7.h4, v7.h4); dump();
sqdmlsl(v7.s4, v0.h4, v7.h4); dump();
sqdmlsl(v7.s4, v1.h4, v7.h4); dump();
sqdmlsl(v7.s4, v2.h4, v7.h4); dump();
sqdmlsl(v7.s4, v4.h4, v7.h4); dump();
sqdmlsl(v7.s4, v8.h4, v7.h4); dump();
sqdmlsl(v7.s4, v16.h4, v7.h4); dump();
sqdmlsl(v7.s4, v31.h4, v7.h4); dump();
sqdmlsl(v7.s4, v7.h4, v7.h4); dump();
sqdmlsl(v7.s4, v7.h4, v0.h4); dump();
sqdmlsl(v7.s4, v7.h4, v1.h4); dump();
sqdmlsl(v7.s4, v7.h4, v2.h4); dump();
sqdmlsl(v7.s4, v7.h4, v4.h4); dump();
sqdmlsl(v7.s4, v7.h4, v8.h4); dump();
sqdmlsl(v7.s4, v7.h4, v16.h4); dump();
sqdmlsl(v7.s4, v7.h4, v31.h4); dump();
sqdmull(v7.s4, v7.h4, v7.h4); dump();
sqdmull(v0.s4, v7.h4, v7.h4); dump();
sqdmull(v1.s4, v7.h4, v7.h4); dump();
sqdmull(v2.s4, v7.h4, v7.h4); dump();
sqdmull(v4.s4, v7.h4, v7.h4); dump();
sqdmull(v8.s4, v7.h4, v7.h4); dump();
sqdmull(v16.s4, v7.h4, v7.h4); dump();
sqdmull(v31.s4, v7.h4, v7.h4); dump();
sqdmull(v7.s4, v7.h4, v7.h4); dump();
sqdmull(v7.s4, v0.h4, v7.h4); dump();
sqdmull(v7.s4, v1.h4, v7.h4); dump();
sqdmull(v7.s4, v2.h4, v7.h4); dump();
sqdmull(v7.s4, v4.h4, v7.h4); dump();
sqdmull(v7.s4, v8.h4, v7.h4); dump();
sqdmull(v7.s4, v16.h4, v7.h4); dump();
sqdmull(v7.s4, v31.h4, v7.h4); dump();
sqdmull(v7.s4, v7.h4, v7.h4); dump();
sqdmull(v7.s4, v7.h4, v0.h4); dump();
sqdmull(v7.s4, v7.h4, v1.h4); dump();
sqdmull(v7.s4, v7.h4, v2.h4); dump();
sqdmull(v7.s4, v7.h4, v4.h4); dump();
sqdmull(v7.s4, v7.h4, v8.h4); dump();
sqdmull(v7.s4, v7.h4, v16.h4); dump();
sqdmull(v7.s4, v7.h4, v31.h4); dump();
//DataProcSimd_WideningAndNarrowingArithmetic8:3
sqdmlal(v7.d2, v7.s2, v7.s2); dump();
sqdmlal(v0.d2, v7.s2, v7.s2); dump();
sqdmlal(v1.d2, v7.s2, v7.s2); dump();
sqdmlal(v2.d2, v7.s2, v7.s2); dump();
sqdmlal(v4.d2, v7.s2, v7.s2); dump();
sqdmlal(v8.d2, v7.s2, v7.s2); dump();
sqdmlal(v16.d2, v7.s2, v7.s2); dump();
sqdmlal(v31.d2, v7.s2, v7.s2); dump();
sqdmlal(v7.d2, v7.s2, v7.s2); dump();
sqdmlal(v7.d2, v0.s2, v7.s2); dump();
sqdmlal(v7.d2, v1.s2, v7.s2); dump();
sqdmlal(v7.d2, v2.s2, v7.s2); dump();
sqdmlal(v7.d2, v4.s2, v7.s2); dump();
sqdmlal(v7.d2, v8.s2, v7.s2); dump();
sqdmlal(v7.d2, v16.s2, v7.s2); dump();
sqdmlal(v7.d2, v31.s2, v7.s2); dump();
sqdmlal(v7.d2, v7.s2, v7.s2); dump();
sqdmlal(v7.d2, v7.s2, v0.s2); dump();
sqdmlal(v7.d2, v7.s2, v1.s2); dump();
sqdmlal(v7.d2, v7.s2, v2.s2); dump();
sqdmlal(v7.d2, v7.s2, v4.s2); dump();
sqdmlal(v7.d2, v7.s2, v8.s2); dump();
sqdmlal(v7.d2, v7.s2, v16.s2); dump();
sqdmlal(v7.d2, v7.s2, v31.s2); dump();
sqdmlsl(v7.d2, v7.s2, v7.s2); dump();
sqdmlsl(v0.d2, v7.s2, v7.s2); dump();
sqdmlsl(v1.d2, v7.s2, v7.s2); dump();
sqdmlsl(v2.d2, v7.s2, v7.s2); dump();
sqdmlsl(v4.d2, v7.s2, v7.s2); dump();
sqdmlsl(v8.d2, v7.s2, v7.s2); dump();
sqdmlsl(v16.d2, v7.s2, v7.s2); dump();
sqdmlsl(v31.d2, v7.s2, v7.s2); dump();
sqdmlsl(v7.d2, v7.s2, v7.s2); dump();
sqdmlsl(v7.d2, v0.s2, v7.s2); dump();
sqdmlsl(v7.d2, v1.s2, v7.s2); dump();
sqdmlsl(v7.d2, v2.s2, v7.s2); dump();
sqdmlsl(v7.d2, v4.s2, v7.s2); dump();
sqdmlsl(v7.d2, v8.s2, v7.s2); dump();
sqdmlsl(v7.d2, v16.s2, v7.s2); dump();
sqdmlsl(v7.d2, v31.s2, v7.s2); dump();
sqdmlsl(v7.d2, v7.s2, v7.s2); dump();
sqdmlsl(v7.d2, v7.s2, v0.s2); dump();
sqdmlsl(v7.d2, v7.s2, v1.s2); dump();
sqdmlsl(v7.d2, v7.s2, v2.s2); dump();
sqdmlsl(v7.d2, v7.s2, v4.s2); dump();
sqdmlsl(v7.d2, v7.s2, v8.s2); dump();
sqdmlsl(v7.d2, v7.s2, v16.s2); dump();
sqdmlsl(v7.d2, v7.s2, v31.s2); dump();
sqdmull(v7.d2, v7.s2, v7.s2); dump();
sqdmull(v0.d2, v7.s2, v7.s2); dump();
sqdmull(v1.d2, v7.s2, v7.s2); dump();
sqdmull(v2.d2, v7.s2, v7.s2); dump();
sqdmull(v4.d2, v7.s2, v7.s2); dump();
sqdmull(v8.d2, v7.s2, v7.s2); dump();
sqdmull(v16.d2, v7.s2, v7.s2); dump();
sqdmull(v31.d2, v7.s2, v7.s2); dump();
sqdmull(v7.d2, v7.s2, v7.s2); dump();
sqdmull(v7.d2, v0.s2, v7.s2); dump();
sqdmull(v7.d2, v1.s2, v7.s2); dump();
sqdmull(v7.d2, v2.s2, v7.s2); dump();
sqdmull(v7.d2, v4.s2, v7.s2); dump();
sqdmull(v7.d2, v8.s2, v7.s2); dump();
sqdmull(v7.d2, v16.s2, v7.s2); dump();
sqdmull(v7.d2, v31.s2, v7.s2); dump();
sqdmull(v7.d2, v7.s2, v7.s2); dump();
sqdmull(v7.d2, v7.s2, v0.s2); dump();
sqdmull(v7.d2, v7.s2, v1.s2); dump();
sqdmull(v7.d2, v7.s2, v2.s2); dump();
sqdmull(v7.d2, v7.s2, v4.s2); dump();
sqdmull(v7.d2, v7.s2, v8.s2); dump();
sqdmull(v7.d2, v7.s2, v16.s2); dump();
sqdmull(v7.d2, v7.s2, v31.s2); dump();
//DataProcSimd_WideningAndNarrowingArithmetic9:0
sqdmlal2(v7.s4, v7.h8, v7.h8); dump();
sqdmlal2(v0.s4, v7.h8, v7.h8); dump();
sqdmlal2(v1.s4, v7.h8, v7.h8); dump();
sqdmlal2(v2.s4, v7.h8, v7.h8); dump();
sqdmlal2(v4.s4, v7.h8, v7.h8); dump();
sqdmlal2(v8.s4, v7.h8, v7.h8); dump();
sqdmlal2(v16.s4, v7.h8, v7.h8); dump();
sqdmlal2(v31.s4, v7.h8, v7.h8); dump();
sqdmlal2(v7.s4, v7.h8, v7.h8); dump();
sqdmlal2(v7.s4, v0.h8, v7.h8); dump();
sqdmlal2(v7.s4, v1.h8, v7.h8); dump();
sqdmlal2(v7.s4, v2.h8, v7.h8); dump();
sqdmlal2(v7.s4, v4.h8, v7.h8); dump();
sqdmlal2(v7.s4, v8.h8, v7.h8); dump();
sqdmlal2(v7.s4, v16.h8, v7.h8); dump();
sqdmlal2(v7.s4, v31.h8, v7.h8); dump();
sqdmlal2(v7.s4, v7.h8, v7.h8); dump();
sqdmlal2(v7.s4, v7.h8, v0.h8); dump();
sqdmlal2(v7.s4, v7.h8, v1.h8); dump();
sqdmlal2(v7.s4, v7.h8, v2.h8); dump();
sqdmlal2(v7.s4, v7.h8, v4.h8); dump();
sqdmlal2(v7.s4, v7.h8, v8.h8); dump();
sqdmlal2(v7.s4, v7.h8, v16.h8); dump();
sqdmlal2(v7.s4, v7.h8, v31.h8); dump();
sqdmlsl2(v7.s4, v7.h8, v7.h8); dump();
sqdmlsl2(v0.s4, v7.h8, v7.h8); dump();
sqdmlsl2(v1.s4, v7.h8, v7.h8); dump();
sqdmlsl2(v2.s4, v7.h8, v7.h8); dump();
sqdmlsl2(v4.s4, v7.h8, v7.h8); dump();
sqdmlsl2(v8.s4, v7.h8, v7.h8); dump();
sqdmlsl2(v16.s4, v7.h8, v7.h8); dump();
sqdmlsl2(v31.s4, v7.h8, v7.h8); dump();
sqdmlsl2(v7.s4, v7.h8, v7.h8); dump();
sqdmlsl2(v7.s4, v0.h8, v7.h8); dump();
sqdmlsl2(v7.s4, v1.h8, v7.h8); dump();
sqdmlsl2(v7.s4, v2.h8, v7.h8); dump();
sqdmlsl2(v7.s4, v4.h8, v7.h8); dump();
sqdmlsl2(v7.s4, v8.h8, v7.h8); dump();
sqdmlsl2(v7.s4, v16.h8, v7.h8); dump();
sqdmlsl2(v7.s4, v31.h8, v7.h8); dump();
sqdmlsl2(v7.s4, v7.h8, v7.h8); dump();
sqdmlsl2(v7.s4, v7.h8, v0.h8); dump();
sqdmlsl2(v7.s4, v7.h8, v1.h8); dump();
sqdmlsl2(v7.s4, v7.h8, v2.h8); dump();
sqdmlsl2(v7.s4, v7.h8, v4.h8); dump();
sqdmlsl2(v7.s4, v7.h8, v8.h8); dump();
sqdmlsl2(v7.s4, v7.h8, v16.h8); dump();
sqdmlsl2(v7.s4, v7.h8, v31.h8); dump();
sqdmull2(v7.s4, v7.h8, v7.h8); dump();
sqdmull2(v0.s4, v7.h8, v7.h8); dump();
sqdmull2(v1.s4, v7.h8, v7.h8); dump();
sqdmull2(v2.s4, v7.h8, v7.h8); dump();
sqdmull2(v4.s4, v7.h8, v7.h8); dump();
sqdmull2(v8.s4, v7.h8, v7.h8); dump();
sqdmull2(v16.s4, v7.h8, v7.h8); dump();
sqdmull2(v31.s4, v7.h8, v7.h8); dump();
sqdmull2(v7.s4, v7.h8, v7.h8); dump();
sqdmull2(v7.s4, v0.h8, v7.h8); dump();
sqdmull2(v7.s4, v1.h8, v7.h8); dump();
sqdmull2(v7.s4, v2.h8, v7.h8); dump();
sqdmull2(v7.s4, v4.h8, v7.h8); dump();
sqdmull2(v7.s4, v8.h8, v7.h8); dump();
sqdmull2(v7.s4, v16.h8, v7.h8); dump();
sqdmull2(v7.s4, v31.h8, v7.h8); dump();
sqdmull2(v7.s4, v7.h8, v7.h8); dump();
sqdmull2(v7.s4, v7.h8, v0.h8); dump();
sqdmull2(v7.s4, v7.h8, v1.h8); dump();
sqdmull2(v7.s4, v7.h8, v2.h8); dump();
sqdmull2(v7.s4, v7.h8, v4.h8); dump();
sqdmull2(v7.s4, v7.h8, v8.h8); dump();
sqdmull2(v7.s4, v7.h8, v16.h8); dump();
sqdmull2(v7.s4, v7.h8, v31.h8); dump();
//DataProcSimd_WideningAndNarrowingArithmetic9:1
sqdmlal2(v7.d2, v7.s4, v7.s4); dump();
sqdmlal2(v0.d2, v7.s4, v7.s4); dump();
sqdmlal2(v1.d2, v7.s4, v7.s4); dump();
sqdmlal2(v2.d2, v7.s4, v7.s4); dump();
sqdmlal2(v4.d2, v7.s4, v7.s4); dump();
sqdmlal2(v8.d2, v7.s4, v7.s4); dump();
sqdmlal2(v16.d2, v7.s4, v7.s4); dump();
sqdmlal2(v31.d2, v7.s4, v7.s4); dump();
sqdmlal2(v7.d2, v7.s4, v7.s4); dump();
sqdmlal2(v7.d2, v0.s4, v7.s4); dump();
sqdmlal2(v7.d2, v1.s4, v7.s4); dump();
sqdmlal2(v7.d2, v2.s4, v7.s4); dump();
sqdmlal2(v7.d2, v4.s4, v7.s4); dump();
sqdmlal2(v7.d2, v8.s4, v7.s4); dump();
sqdmlal2(v7.d2, v16.s4, v7.s4); dump();
sqdmlal2(v7.d2, v31.s4, v7.s4); dump();
sqdmlal2(v7.d2, v7.s4, v7.s4); dump();
sqdmlal2(v7.d2, v7.s4, v0.s4); dump();
sqdmlal2(v7.d2, v7.s4, v1.s4); dump();
sqdmlal2(v7.d2, v7.s4, v2.s4); dump();
sqdmlal2(v7.d2, v7.s4, v4.s4); dump();
sqdmlal2(v7.d2, v7.s4, v8.s4); dump();
sqdmlal2(v7.d2, v7.s4, v16.s4); dump();
sqdmlal2(v7.d2, v7.s4, v31.s4); dump();
sqdmlsl2(v7.d2, v7.s4, v7.s4); dump();
sqdmlsl2(v0.d2, v7.s4, v7.s4); dump();
sqdmlsl2(v1.d2, v7.s4, v7.s4); dump();
sqdmlsl2(v2.d2, v7.s4, v7.s4); dump();
sqdmlsl2(v4.d2, v7.s4, v7.s4); dump();
sqdmlsl2(v8.d2, v7.s4, v7.s4); dump();
sqdmlsl2(v16.d2, v7.s4, v7.s4); dump();
sqdmlsl2(v31.d2, v7.s4, v7.s4); dump();
sqdmlsl2(v7.d2, v7.s4, v7.s4); dump();
sqdmlsl2(v7.d2, v0.s4, v7.s4); dump();
sqdmlsl2(v7.d2, v1.s4, v7.s4); dump();
sqdmlsl2(v7.d2, v2.s4, v7.s4); dump();
sqdmlsl2(v7.d2, v4.s4, v7.s4); dump();
sqdmlsl2(v7.d2, v8.s4, v7.s4); dump();
sqdmlsl2(v7.d2, v16.s4, v7.s4); dump();
sqdmlsl2(v7.d2, v31.s4, v7.s4); dump();
sqdmlsl2(v7.d2, v7.s4, v7.s4); dump();
sqdmlsl2(v7.d2, v7.s4, v0.s4); dump();
sqdmlsl2(v7.d2, v7.s4, v1.s4); dump();
sqdmlsl2(v7.d2, v7.s4, v2.s4); dump();
sqdmlsl2(v7.d2, v7.s4, v4.s4); dump();
sqdmlsl2(v7.d2, v7.s4, v8.s4); dump();
sqdmlsl2(v7.d2, v7.s4, v16.s4); dump();
sqdmlsl2(v7.d2, v7.s4, v31.s4); dump();
sqdmull2(v7.d2, v7.s4, v7.s4); dump();
sqdmull2(v0.d2, v7.s4, v7.s4); dump();
sqdmull2(v1.d2, v7.s4, v7.s4); dump();
sqdmull2(v2.d2, v7.s4, v7.s4); dump();
sqdmull2(v4.d2, v7.s4, v7.s4); dump();
sqdmull2(v8.d2, v7.s4, v7.s4); dump();
sqdmull2(v16.d2, v7.s4, v7.s4); dump();
sqdmull2(v31.d2, v7.s4, v7.s4); dump();
sqdmull2(v7.d2, v7.s4, v7.s4); dump();
sqdmull2(v7.d2, v0.s4, v7.s4); dump();
sqdmull2(v7.d2, v1.s4, v7.s4); dump();
sqdmull2(v7.d2, v2.s4, v7.s4); dump();
sqdmull2(v7.d2, v4.s4, v7.s4); dump();
sqdmull2(v7.d2, v8.s4, v7.s4); dump();
sqdmull2(v7.d2, v16.s4, v7.s4); dump();
sqdmull2(v7.d2, v31.s4, v7.s4); dump();
sqdmull2(v7.d2, v7.s4, v7.s4); dump();
sqdmull2(v7.d2, v7.s4, v0.s4); dump();
sqdmull2(v7.d2, v7.s4, v1.s4); dump();
sqdmull2(v7.d2, v7.s4, v2.s4); dump();
sqdmull2(v7.d2, v7.s4, v4.s4); dump();
sqdmull2(v7.d2, v7.s4, v8.s4); dump();
sqdmull2(v7.d2, v7.s4, v16.s4); dump();
sqdmull2(v7.d2, v7.s4, v31.s4); dump();
//DataProcSimd_WideningAndNarrowingArithmetic10:0
ssubw(v7.h8, v7.h8, v7.b8); dump();
ssubw(v0.h8, v7.h8, v7.b8); dump();
ssubw(v1.h8, v7.h8, v7.b8); dump();
ssubw(v2.h8, v7.h8, v7.b8); dump();
ssubw(v4.h8, v7.h8, v7.b8); dump();
ssubw(v8.h8, v7.h8, v7.b8); dump();
ssubw(v16.h8, v7.h8, v7.b8); dump();
ssubw(v31.h8, v7.h8, v7.b8); dump();
ssubw(v7.h8, v7.h8, v7.b8); dump();
ssubw(v7.h8, v0.h8, v7.b8); dump();
ssubw(v7.h8, v1.h8, v7.b8); dump();
ssubw(v7.h8, v2.h8, v7.b8); dump();
ssubw(v7.h8, v4.h8, v7.b8); dump();
ssubw(v7.h8, v8.h8, v7.b8); dump();
ssubw(v7.h8, v16.h8, v7.b8); dump();
ssubw(v7.h8, v31.h8, v7.b8); dump();
ssubw(v7.h8, v7.h8, v7.b8); dump();
ssubw(v7.h8, v7.h8, v0.b8); dump();
ssubw(v7.h8, v7.h8, v1.b8); dump();
ssubw(v7.h8, v7.h8, v2.b8); dump();
ssubw(v7.h8, v7.h8, v4.b8); dump();
ssubw(v7.h8, v7.h8, v8.b8); dump();
ssubw(v7.h8, v7.h8, v16.b8); dump();
ssubw(v7.h8, v7.h8, v31.b8); dump();
uaddw(v7.h8, v7.h8, v7.b8); dump();
uaddw(v0.h8, v7.h8, v7.b8); dump();
uaddw(v1.h8, v7.h8, v7.b8); dump();
uaddw(v2.h8, v7.h8, v7.b8); dump();
uaddw(v4.h8, v7.h8, v7.b8); dump();
uaddw(v8.h8, v7.h8, v7.b8); dump();
uaddw(v16.h8, v7.h8, v7.b8); dump();
uaddw(v31.h8, v7.h8, v7.b8); dump();
uaddw(v7.h8, v7.h8, v7.b8); dump();
uaddw(v7.h8, v0.h8, v7.b8); dump();
uaddw(v7.h8, v1.h8, v7.b8); dump();
uaddw(v7.h8, v2.h8, v7.b8); dump();
uaddw(v7.h8, v4.h8, v7.b8); dump();
uaddw(v7.h8, v8.h8, v7.b8); dump();
uaddw(v7.h8, v16.h8, v7.b8); dump();
uaddw(v7.h8, v31.h8, v7.b8); dump();
uaddw(v7.h8, v7.h8, v7.b8); dump();
uaddw(v7.h8, v7.h8, v0.b8); dump();
uaddw(v7.h8, v7.h8, v1.b8); dump();
uaddw(v7.h8, v7.h8, v2.b8); dump();
uaddw(v7.h8, v7.h8, v4.b8); dump();
uaddw(v7.h8, v7.h8, v8.b8); dump();
uaddw(v7.h8, v7.h8, v16.b8); dump();
uaddw(v7.h8, v7.h8, v31.b8); dump();
usubw(v7.h8, v7.h8, v7.b8); dump();
usubw(v0.h8, v7.h8, v7.b8); dump();
usubw(v1.h8, v7.h8, v7.b8); dump();
usubw(v2.h8, v7.h8, v7.b8); dump();
usubw(v4.h8, v7.h8, v7.b8); dump();
usubw(v8.h8, v7.h8, v7.b8); dump();
usubw(v16.h8, v7.h8, v7.b8); dump();
usubw(v31.h8, v7.h8, v7.b8); dump();
usubw(v7.h8, v7.h8, v7.b8); dump();
usubw(v7.h8, v0.h8, v7.b8); dump();
usubw(v7.h8, v1.h8, v7.b8); dump();
usubw(v7.h8, v2.h8, v7.b8); dump();
usubw(v7.h8, v4.h8, v7.b8); dump();
usubw(v7.h8, v8.h8, v7.b8); dump();
usubw(v7.h8, v16.h8, v7.b8); dump();
usubw(v7.h8, v31.h8, v7.b8); dump();
usubw(v7.h8, v7.h8, v7.b8); dump();
usubw(v7.h8, v7.h8, v0.b8); dump();
usubw(v7.h8, v7.h8, v1.b8); dump();
usubw(v7.h8, v7.h8, v2.b8); dump();
usubw(v7.h8, v7.h8, v4.b8); dump();
usubw(v7.h8, v7.h8, v8.b8); dump();
usubw(v7.h8, v7.h8, v16.b8); dump();
usubw(v7.h8, v7.h8, v31.b8); dump();
//DataProcSimd_WideningAndNarrowingArithmetic10:1
ssubw(v7.s4, v7.s4, v7.h4); dump();
ssubw(v0.s4, v7.s4, v7.h4); dump();
ssubw(v1.s4, v7.s4, v7.h4); dump();
ssubw(v2.s4, v7.s4, v7.h4); dump();
ssubw(v4.s4, v7.s4, v7.h4); dump();
ssubw(v8.s4, v7.s4, v7.h4); dump();
ssubw(v16.s4, v7.s4, v7.h4); dump();
ssubw(v31.s4, v7.s4, v7.h4); dump();
ssubw(v7.s4, v7.s4, v7.h4); dump();
ssubw(v7.s4, v0.s4, v7.h4); dump();
ssubw(v7.s4, v1.s4, v7.h4); dump();
ssubw(v7.s4, v2.s4, v7.h4); dump();
ssubw(v7.s4, v4.s4, v7.h4); dump();
ssubw(v7.s4, v8.s4, v7.h4); dump();
ssubw(v7.s4, v16.s4, v7.h4); dump();
ssubw(v7.s4, v31.s4, v7.h4); dump();
ssubw(v7.s4, v7.s4, v7.h4); dump();
ssubw(v7.s4, v7.s4, v0.h4); dump();
ssubw(v7.s4, v7.s4, v1.h4); dump();
ssubw(v7.s4, v7.s4, v2.h4); dump();
ssubw(v7.s4, v7.s4, v4.h4); dump();
ssubw(v7.s4, v7.s4, v8.h4); dump();
ssubw(v7.s4, v7.s4, v16.h4); dump();
ssubw(v7.s4, v7.s4, v31.h4); dump();
uaddw(v7.s4, v7.s4, v7.h4); dump();
uaddw(v0.s4, v7.s4, v7.h4); dump();
uaddw(v1.s4, v7.s4, v7.h4); dump();
uaddw(v2.s4, v7.s4, v7.h4); dump();
uaddw(v4.s4, v7.s4, v7.h4); dump();
uaddw(v8.s4, v7.s4, v7.h4); dump();
uaddw(v16.s4, v7.s4, v7.h4); dump();
uaddw(v31.s4, v7.s4, v7.h4); dump();
uaddw(v7.s4, v7.s4, v7.h4); dump();
uaddw(v7.s4, v0.s4, v7.h4); dump();
uaddw(v7.s4, v1.s4, v7.h4); dump();
uaddw(v7.s4, v2.s4, v7.h4); dump();
uaddw(v7.s4, v4.s4, v7.h4); dump();
uaddw(v7.s4, v8.s4, v7.h4); dump();
uaddw(v7.s4, v16.s4, v7.h4); dump();
uaddw(v7.s4, v31.s4, v7.h4); dump();
uaddw(v7.s4, v7.s4, v7.h4); dump();
uaddw(v7.s4, v7.s4, v0.h4); dump();
uaddw(v7.s4, v7.s4, v1.h4); dump();
uaddw(v7.s4, v7.s4, v2.h4); dump();
uaddw(v7.s4, v7.s4, v4.h4); dump();
uaddw(v7.s4, v7.s4, v8.h4); dump();
uaddw(v7.s4, v7.s4, v16.h4); dump();
uaddw(v7.s4, v7.s4, v31.h4); dump();
usubw(v7.s4, v7.s4, v7.h4); dump();
usubw(v0.s4, v7.s4, v7.h4); dump();
usubw(v1.s4, v7.s4, v7.h4); dump();
usubw(v2.s4, v7.s4, v7.h4); dump();
usubw(v4.s4, v7.s4, v7.h4); dump();
usubw(v8.s4, v7.s4, v7.h4); dump();
usubw(v16.s4, v7.s4, v7.h4); dump();
usubw(v31.s4, v7.s4, v7.h4); dump();
usubw(v7.s4, v7.s4, v7.h4); dump();
usubw(v7.s4, v0.s4, v7.h4); dump();
usubw(v7.s4, v1.s4, v7.h4); dump();
usubw(v7.s4, v2.s4, v7.h4); dump();
usubw(v7.s4, v4.s4, v7.h4); dump();
usubw(v7.s4, v8.s4, v7.h4); dump();
usubw(v7.s4, v16.s4, v7.h4); dump();
usubw(v7.s4, v31.s4, v7.h4); dump();
usubw(v7.s4, v7.s4, v7.h4); dump();
usubw(v7.s4, v7.s4, v0.h4); dump();
usubw(v7.s4, v7.s4, v1.h4); dump();
usubw(v7.s4, v7.s4, v2.h4); dump();
usubw(v7.s4, v7.s4, v4.h4); dump();
usubw(v7.s4, v7.s4, v8.h4); dump();
usubw(v7.s4, v7.s4, v16.h4); dump();
usubw(v7.s4, v7.s4, v31.h4); dump();
//DataProcSimd_WideningAndNarrowingArithmetic10:2
ssubw(v7.d2, v7.d2, v7.s2); dump();
ssubw(v0.d2, v7.d2, v7.s2); dump();
ssubw(v1.d2, v7.d2, v7.s2); dump();
ssubw(v2.d2, v7.d2, v7.s2); dump();
ssubw(v4.d2, v7.d2, v7.s2); dump();
ssubw(v8.d2, v7.d2, v7.s2); dump();
ssubw(v16.d2, v7.d2, v7.s2); dump();
ssubw(v31.d2, v7.d2, v7.s2); dump();
ssubw(v7.d2, v7.d2, v7.s2); dump();
ssubw(v7.d2, v0.d2, v7.s2); dump();
ssubw(v7.d2, v1.d2, v7.s2); dump();
ssubw(v7.d2, v2.d2, v7.s2); dump();
ssubw(v7.d2, v4.d2, v7.s2); dump();
ssubw(v7.d2, v8.d2, v7.s2); dump();
ssubw(v7.d2, v16.d2, v7.s2); dump();
ssubw(v7.d2, v31.d2, v7.s2); dump();
ssubw(v7.d2, v7.d2, v7.s2); dump();
ssubw(v7.d2, v7.d2, v0.s2); dump();
ssubw(v7.d2, v7.d2, v1.s2); dump();
ssubw(v7.d2, v7.d2, v2.s2); dump();
ssubw(v7.d2, v7.d2, v4.s2); dump();
ssubw(v7.d2, v7.d2, v8.s2); dump();
ssubw(v7.d2, v7.d2, v16.s2); dump();
ssubw(v7.d2, v7.d2, v31.s2); dump();
uaddw(v7.d2, v7.d2, v7.s2); dump();
uaddw(v0.d2, v7.d2, v7.s2); dump();
uaddw(v1.d2, v7.d2, v7.s2); dump();
uaddw(v2.d2, v7.d2, v7.s2); dump();
uaddw(v4.d2, v7.d2, v7.s2); dump();
uaddw(v8.d2, v7.d2, v7.s2); dump();
uaddw(v16.d2, v7.d2, v7.s2); dump();
uaddw(v31.d2, v7.d2, v7.s2); dump();
uaddw(v7.d2, v7.d2, v7.s2); dump();
uaddw(v7.d2, v0.d2, v7.s2); dump();
uaddw(v7.d2, v1.d2, v7.s2); dump();
uaddw(v7.d2, v2.d2, v7.s2); dump();
uaddw(v7.d2, v4.d2, v7.s2); dump();
uaddw(v7.d2, v8.d2, v7.s2); dump();
uaddw(v7.d2, v16.d2, v7.s2); dump();
uaddw(v7.d2, v31.d2, v7.s2); dump();
uaddw(v7.d2, v7.d2, v7.s2); dump();
uaddw(v7.d2, v7.d2, v0.s2); dump();
uaddw(v7.d2, v7.d2, v1.s2); dump();
uaddw(v7.d2, v7.d2, v2.s2); dump();
uaddw(v7.d2, v7.d2, v4.s2); dump();
uaddw(v7.d2, v7.d2, v8.s2); dump();
uaddw(v7.d2, v7.d2, v16.s2); dump();
uaddw(v7.d2, v7.d2, v31.s2); dump();
usubw(v7.d2, v7.d2, v7.s2); dump();
usubw(v0.d2, v7.d2, v7.s2); dump();
usubw(v1.d2, v7.d2, v7.s2); dump();
usubw(v2.d2, v7.d2, v7.s2); dump();
usubw(v4.d2, v7.d2, v7.s2); dump();
usubw(v8.d2, v7.d2, v7.s2); dump();
usubw(v16.d2, v7.d2, v7.s2); dump();
usubw(v31.d2, v7.d2, v7.s2); dump();
usubw(v7.d2, v7.d2, v7.s2); dump();
usubw(v7.d2, v0.d2, v7.s2); dump();
usubw(v7.d2, v1.d2, v7.s2); dump();
usubw(v7.d2, v2.d2, v7.s2); dump();
usubw(v7.d2, v4.d2, v7.s2); dump();
usubw(v7.d2, v8.d2, v7.s2); dump();
usubw(v7.d2, v16.d2, v7.s2); dump();
usubw(v7.d2, v31.d2, v7.s2); dump();
usubw(v7.d2, v7.d2, v7.s2); dump();
usubw(v7.d2, v7.d2, v0.s2); dump();
usubw(v7.d2, v7.d2, v1.s2); dump();
usubw(v7.d2, v7.d2, v2.s2); dump();
usubw(v7.d2, v7.d2, v4.s2); dump();
usubw(v7.d2, v7.d2, v8.s2); dump();
usubw(v7.d2, v7.d2, v16.s2); dump();
usubw(v7.d2, v7.d2, v31.s2); dump();
//DataProcSimd_WideningAndNarrowingArithmetic11:0
ssubw2(v7.h8, v7.h8, v7.b16); dump();
ssubw2(v0.h8, v7.h8, v7.b16); dump();
ssubw2(v1.h8, v7.h8, v7.b16); dump();
ssubw2(v2.h8, v7.h8, v7.b16); dump();
ssubw2(v4.h8, v7.h8, v7.b16); dump();
ssubw2(v8.h8, v7.h8, v7.b16); dump();
ssubw2(v16.h8, v7.h8, v7.b16); dump();
ssubw2(v31.h8, v7.h8, v7.b16); dump();
ssubw2(v7.h8, v7.h8, v7.b16); dump();
ssubw2(v7.h8, v0.h8, v7.b16); dump();
ssubw2(v7.h8, v1.h8, v7.b16); dump();
ssubw2(v7.h8, v2.h8, v7.b16); dump();
ssubw2(v7.h8, v4.h8, v7.b16); dump();
ssubw2(v7.h8, v8.h8, v7.b16); dump();
ssubw2(v7.h8, v16.h8, v7.b16); dump();
ssubw2(v7.h8, v31.h8, v7.b16); dump();
ssubw2(v7.h8, v7.h8, v7.b16); dump();
ssubw2(v7.h8, v7.h8, v0.b16); dump();
ssubw2(v7.h8, v7.h8, v1.b16); dump();
ssubw2(v7.h8, v7.h8, v2.b16); dump();
ssubw2(v7.h8, v7.h8, v4.b16); dump();
ssubw2(v7.h8, v7.h8, v8.b16); dump();
ssubw2(v7.h8, v7.h8, v16.b16); dump();
ssubw2(v7.h8, v7.h8, v31.b16); dump();
uaddw2(v7.h8, v7.h8, v7.b16); dump();
uaddw2(v0.h8, v7.h8, v7.b16); dump();
uaddw2(v1.h8, v7.h8, v7.b16); dump();
uaddw2(v2.h8, v7.h8, v7.b16); dump();
uaddw2(v4.h8, v7.h8, v7.b16); dump();
uaddw2(v8.h8, v7.h8, v7.b16); dump();
uaddw2(v16.h8, v7.h8, v7.b16); dump();
uaddw2(v31.h8, v7.h8, v7.b16); dump();
uaddw2(v7.h8, v7.h8, v7.b16); dump();
uaddw2(v7.h8, v0.h8, v7.b16); dump();
uaddw2(v7.h8, v1.h8, v7.b16); dump();
uaddw2(v7.h8, v2.h8, v7.b16); dump();
uaddw2(v7.h8, v4.h8, v7.b16); dump();
uaddw2(v7.h8, v8.h8, v7.b16); dump();
uaddw2(v7.h8, v16.h8, v7.b16); dump();
uaddw2(v7.h8, v31.h8, v7.b16); dump();
uaddw2(v7.h8, v7.h8, v7.b16); dump();
uaddw2(v7.h8, v7.h8, v0.b16); dump();
uaddw2(v7.h8, v7.h8, v1.b16); dump();
uaddw2(v7.h8, v7.h8, v2.b16); dump();
uaddw2(v7.h8, v7.h8, v4.b16); dump();
uaddw2(v7.h8, v7.h8, v8.b16); dump();
uaddw2(v7.h8, v7.h8, v16.b16); dump();
uaddw2(v7.h8, v7.h8, v31.b16); dump();
usubw2(v7.h8, v7.h8, v7.b16); dump();
usubw2(v0.h8, v7.h8, v7.b16); dump();
usubw2(v1.h8, v7.h8, v7.b16); dump();
usubw2(v2.h8, v7.h8, v7.b16); dump();
usubw2(v4.h8, v7.h8, v7.b16); dump();
usubw2(v8.h8, v7.h8, v7.b16); dump();
usubw2(v16.h8, v7.h8, v7.b16); dump();
usubw2(v31.h8, v7.h8, v7.b16); dump();
usubw2(v7.h8, v7.h8, v7.b16); dump();
usubw2(v7.h8, v0.h8, v7.b16); dump();
usubw2(v7.h8, v1.h8, v7.b16); dump();
usubw2(v7.h8, v2.h8, v7.b16); dump();
usubw2(v7.h8, v4.h8, v7.b16); dump();
usubw2(v7.h8, v8.h8, v7.b16); dump();
usubw2(v7.h8, v16.h8, v7.b16); dump();
usubw2(v7.h8, v31.h8, v7.b16); dump();
usubw2(v7.h8, v7.h8, v7.b16); dump();
usubw2(v7.h8, v7.h8, v0.b16); dump();
usubw2(v7.h8, v7.h8, v1.b16); dump();
usubw2(v7.h8, v7.h8, v2.b16); dump();
usubw2(v7.h8, v7.h8, v4.b16); dump();
usubw2(v7.h8, v7.h8, v8.b16); dump();
usubw2(v7.h8, v7.h8, v16.b16); dump();
usubw2(v7.h8, v7.h8, v31.b16); dump();
//DataProcSimd_WideningAndNarrowingArithmetic11:1
ssubw2(v7.s4, v7.s4, v7.h8); dump();
ssubw2(v0.s4, v7.s4, v7.h8); dump();
ssubw2(v1.s4, v7.s4, v7.h8); dump();
ssubw2(v2.s4, v7.s4, v7.h8); dump();
ssubw2(v4.s4, v7.s4, v7.h8); dump();
ssubw2(v8.s4, v7.s4, v7.h8); dump();
ssubw2(v16.s4, v7.s4, v7.h8); dump();
ssubw2(v31.s4, v7.s4, v7.h8); dump();
ssubw2(v7.s4, v7.s4, v7.h8); dump();
ssubw2(v7.s4, v0.s4, v7.h8); dump();
ssubw2(v7.s4, v1.s4, v7.h8); dump();
ssubw2(v7.s4, v2.s4, v7.h8); dump();
ssubw2(v7.s4, v4.s4, v7.h8); dump();
ssubw2(v7.s4, v8.s4, v7.h8); dump();
ssubw2(v7.s4, v16.s4, v7.h8); dump();
ssubw2(v7.s4, v31.s4, v7.h8); dump();
ssubw2(v7.s4, v7.s4, v7.h8); dump();
ssubw2(v7.s4, v7.s4, v0.h8); dump();
ssubw2(v7.s4, v7.s4, v1.h8); dump();
ssubw2(v7.s4, v7.s4, v2.h8); dump();
ssubw2(v7.s4, v7.s4, v4.h8); dump();
ssubw2(v7.s4, v7.s4, v8.h8); dump();
ssubw2(v7.s4, v7.s4, v16.h8); dump();
ssubw2(v7.s4, v7.s4, v31.h8); dump();
uaddw2(v7.s4, v7.s4, v7.h8); dump();
uaddw2(v0.s4, v7.s4, v7.h8); dump();
uaddw2(v1.s4, v7.s4, v7.h8); dump();
uaddw2(v2.s4, v7.s4, v7.h8); dump();
uaddw2(v4.s4, v7.s4, v7.h8); dump();
uaddw2(v8.s4, v7.s4, v7.h8); dump();
uaddw2(v16.s4, v7.s4, v7.h8); dump();
uaddw2(v31.s4, v7.s4, v7.h8); dump();
uaddw2(v7.s4, v7.s4, v7.h8); dump();
uaddw2(v7.s4, v0.s4, v7.h8); dump();
uaddw2(v7.s4, v1.s4, v7.h8); dump();
uaddw2(v7.s4, v2.s4, v7.h8); dump();
uaddw2(v7.s4, v4.s4, v7.h8); dump();
uaddw2(v7.s4, v8.s4, v7.h8); dump();
uaddw2(v7.s4, v16.s4, v7.h8); dump();
uaddw2(v7.s4, v31.s4, v7.h8); dump();
uaddw2(v7.s4, v7.s4, v7.h8); dump();
uaddw2(v7.s4, v7.s4, v0.h8); dump();
uaddw2(v7.s4, v7.s4, v1.h8); dump();
uaddw2(v7.s4, v7.s4, v2.h8); dump();
uaddw2(v7.s4, v7.s4, v4.h8); dump();
uaddw2(v7.s4, v7.s4, v8.h8); dump();
uaddw2(v7.s4, v7.s4, v16.h8); dump();
uaddw2(v7.s4, v7.s4, v31.h8); dump();
usubw2(v7.s4, v7.s4, v7.h8); dump();
usubw2(v0.s4, v7.s4, v7.h8); dump();
usubw2(v1.s4, v7.s4, v7.h8); dump();
usubw2(v2.s4, v7.s4, v7.h8); dump();
usubw2(v4.s4, v7.s4, v7.h8); dump();
usubw2(v8.s4, v7.s4, v7.h8); dump();
usubw2(v16.s4, v7.s4, v7.h8); dump();
usubw2(v31.s4, v7.s4, v7.h8); dump();
usubw2(v7.s4, v7.s4, v7.h8); dump();
usubw2(v7.s4, v0.s4, v7.h8); dump();
usubw2(v7.s4, v1.s4, v7.h8); dump();
usubw2(v7.s4, v2.s4, v7.h8); dump();
usubw2(v7.s4, v4.s4, v7.h8); dump();
usubw2(v7.s4, v8.s4, v7.h8); dump();
usubw2(v7.s4, v16.s4, v7.h8); dump();
usubw2(v7.s4, v31.s4, v7.h8); dump();
usubw2(v7.s4, v7.s4, v7.h8); dump();
usubw2(v7.s4, v7.s4, v0.h8); dump();
usubw2(v7.s4, v7.s4, v1.h8); dump();
usubw2(v7.s4, v7.s4, v2.h8); dump();
usubw2(v7.s4, v7.s4, v4.h8); dump();
usubw2(v7.s4, v7.s4, v8.h8); dump();
usubw2(v7.s4, v7.s4, v16.h8); dump();
usubw2(v7.s4, v7.s4, v31.h8); dump();
//DataProcSimd_WideningAndNarrowingArithmetic11:2
ssubw2(v7.d2, v7.d2, v7.s4); dump();
ssubw2(v0.d2, v7.d2, v7.s4); dump();
ssubw2(v1.d2, v7.d2, v7.s4); dump();
ssubw2(v2.d2, v7.d2, v7.s4); dump();
ssubw2(v4.d2, v7.d2, v7.s4); dump();
ssubw2(v8.d2, v7.d2, v7.s4); dump();
ssubw2(v16.d2, v7.d2, v7.s4); dump();
ssubw2(v31.d2, v7.d2, v7.s4); dump();
ssubw2(v7.d2, v7.d2, v7.s4); dump();
ssubw2(v7.d2, v0.d2, v7.s4); dump();
ssubw2(v7.d2, v1.d2, v7.s4); dump();
ssubw2(v7.d2, v2.d2, v7.s4); dump();
ssubw2(v7.d2, v4.d2, v7.s4); dump();
ssubw2(v7.d2, v8.d2, v7.s4); dump();
ssubw2(v7.d2, v16.d2, v7.s4); dump();
ssubw2(v7.d2, v31.d2, v7.s4); dump();
ssubw2(v7.d2, v7.d2, v7.s4); dump();
ssubw2(v7.d2, v7.d2, v0.s4); dump();
ssubw2(v7.d2, v7.d2, v1.s4); dump();
ssubw2(v7.d2, v7.d2, v2.s4); dump();
ssubw2(v7.d2, v7.d2, v4.s4); dump();
ssubw2(v7.d2, v7.d2, v8.s4); dump();
ssubw2(v7.d2, v7.d2, v16.s4); dump();
ssubw2(v7.d2, v7.d2, v31.s4); dump();
uaddw2(v7.d2, v7.d2, v7.s4); dump();
uaddw2(v0.d2, v7.d2, v7.s4); dump();
uaddw2(v1.d2, v7.d2, v7.s4); dump();
uaddw2(v2.d2, v7.d2, v7.s4); dump();
uaddw2(v4.d2, v7.d2, v7.s4); dump();
uaddw2(v8.d2, v7.d2, v7.s4); dump();
uaddw2(v16.d2, v7.d2, v7.s4); dump();
uaddw2(v31.d2, v7.d2, v7.s4); dump();
uaddw2(v7.d2, v7.d2, v7.s4); dump();
uaddw2(v7.d2, v0.d2, v7.s4); dump();
uaddw2(v7.d2, v1.d2, v7.s4); dump();
uaddw2(v7.d2, v2.d2, v7.s4); dump();
uaddw2(v7.d2, v4.d2, v7.s4); dump();
uaddw2(v7.d2, v8.d2, v7.s4); dump();
uaddw2(v7.d2, v16.d2, v7.s4); dump();
uaddw2(v7.d2, v31.d2, v7.s4); dump();
uaddw2(v7.d2, v7.d2, v7.s4); dump();
uaddw2(v7.d2, v7.d2, v0.s4); dump();
uaddw2(v7.d2, v7.d2, v1.s4); dump();
uaddw2(v7.d2, v7.d2, v2.s4); dump();
uaddw2(v7.d2, v7.d2, v4.s4); dump();
uaddw2(v7.d2, v7.d2, v8.s4); dump();
uaddw2(v7.d2, v7.d2, v16.s4); dump();
uaddw2(v7.d2, v7.d2, v31.s4); dump();
usubw2(v7.d2, v7.d2, v7.s4); dump();
usubw2(v0.d2, v7.d2, v7.s4); dump();
usubw2(v1.d2, v7.d2, v7.s4); dump();
usubw2(v2.d2, v7.d2, v7.s4); dump();
usubw2(v4.d2, v7.d2, v7.s4); dump();
usubw2(v8.d2, v7.d2, v7.s4); dump();
usubw2(v16.d2, v7.d2, v7.s4); dump();
usubw2(v31.d2, v7.d2, v7.s4); dump();
usubw2(v7.d2, v7.d2, v7.s4); dump();
usubw2(v7.d2, v0.d2, v7.s4); dump();
usubw2(v7.d2, v1.d2, v7.s4); dump();
usubw2(v7.d2, v2.d2, v7.s4); dump();
usubw2(v7.d2, v4.d2, v7.s4); dump();
usubw2(v7.d2, v8.d2, v7.s4); dump();
usubw2(v7.d2, v16.d2, v7.s4); dump();
usubw2(v7.d2, v31.d2, v7.s4); dump();
usubw2(v7.d2, v7.d2, v7.s4); dump();
usubw2(v7.d2, v7.d2, v0.s4); dump();
usubw2(v7.d2, v7.d2, v1.s4); dump();
usubw2(v7.d2, v7.d2, v2.s4); dump();
usubw2(v7.d2, v7.d2, v4.s4); dump();
usubw2(v7.d2, v7.d2, v8.s4); dump();
usubw2(v7.d2, v7.d2, v16.s4); dump();
usubw2(v7.d2, v7.d2, v31.s4); dump();
//DataProcSimd_WideningAndNarrowingArithmetic12:0
uabal(v7.h8, v7.b8, v7.b8); dump();
uabal(v0.h8, v7.b8, v7.b8); dump();
uabal(v1.h8, v7.b8, v7.b8); dump();
uabal(v2.h8, v7.b8, v7.b8); dump();
uabal(v4.h8, v7.b8, v7.b8); dump();
uabal(v8.h8, v7.b8, v7.b8); dump();
uabal(v16.h8, v7.b8, v7.b8); dump();
uabal(v31.h8, v7.b8, v7.b8); dump();
uabal(v7.h8, v7.b8, v7.b8); dump();
uabal(v7.h8, v0.b8, v7.b8); dump();
uabal(v7.h8, v1.b8, v7.b8); dump();
uabal(v7.h8, v2.b8, v7.b8); dump();
uabal(v7.h8, v4.b8, v7.b8); dump();
uabal(v7.h8, v8.b8, v7.b8); dump();
uabal(v7.h8, v16.b8, v7.b8); dump();
uabal(v7.h8, v31.b8, v7.b8); dump();
uabal(v7.h8, v7.b8, v7.b8); dump();
uabal(v7.h8, v7.b8, v0.b8); dump();
uabal(v7.h8, v7.b8, v1.b8); dump();
uabal(v7.h8, v7.b8, v2.b8); dump();
uabal(v7.h8, v7.b8, v4.b8); dump();
uabal(v7.h8, v7.b8, v8.b8); dump();
uabal(v7.h8, v7.b8, v16.b8); dump();
uabal(v7.h8, v7.b8, v31.b8); dump();
uabdl(v7.h8, v7.b8, v7.b8); dump();
uabdl(v0.h8, v7.b8, v7.b8); dump();
uabdl(v1.h8, v7.b8, v7.b8); dump();
uabdl(v2.h8, v7.b8, v7.b8); dump();
uabdl(v4.h8, v7.b8, v7.b8); dump();
uabdl(v8.h8, v7.b8, v7.b8); dump();
uabdl(v16.h8, v7.b8, v7.b8); dump();
uabdl(v31.h8, v7.b8, v7.b8); dump();
uabdl(v7.h8, v7.b8, v7.b8); dump();
uabdl(v7.h8, v0.b8, v7.b8); dump();
uabdl(v7.h8, v1.b8, v7.b8); dump();
uabdl(v7.h8, v2.b8, v7.b8); dump();
uabdl(v7.h8, v4.b8, v7.b8); dump();
uabdl(v7.h8, v8.b8, v7.b8); dump();
uabdl(v7.h8, v16.b8, v7.b8); dump();
uabdl(v7.h8, v31.b8, v7.b8); dump();
uabdl(v7.h8, v7.b8, v7.b8); dump();
uabdl(v7.h8, v7.b8, v0.b8); dump();
uabdl(v7.h8, v7.b8, v1.b8); dump();
uabdl(v7.h8, v7.b8, v2.b8); dump();
uabdl(v7.h8, v7.b8, v4.b8); dump();
uabdl(v7.h8, v7.b8, v8.b8); dump();
uabdl(v7.h8, v7.b8, v16.b8); dump();
uabdl(v7.h8, v7.b8, v31.b8); dump();
uaddl(v7.h8, v7.b8, v7.b8); dump();
uaddl(v0.h8, v7.b8, v7.b8); dump();
uaddl(v1.h8, v7.b8, v7.b8); dump();
uaddl(v2.h8, v7.b8, v7.b8); dump();
uaddl(v4.h8, v7.b8, v7.b8); dump();
uaddl(v8.h8, v7.b8, v7.b8); dump();
uaddl(v16.h8, v7.b8, v7.b8); dump();
uaddl(v31.h8, v7.b8, v7.b8); dump();
uaddl(v7.h8, v7.b8, v7.b8); dump();
uaddl(v7.h8, v0.b8, v7.b8); dump();
uaddl(v7.h8, v1.b8, v7.b8); dump();
uaddl(v7.h8, v2.b8, v7.b8); dump();
uaddl(v7.h8, v4.b8, v7.b8); dump();
uaddl(v7.h8, v8.b8, v7.b8); dump();
uaddl(v7.h8, v16.b8, v7.b8); dump();
uaddl(v7.h8, v31.b8, v7.b8); dump();
uaddl(v7.h8, v7.b8, v7.b8); dump();
uaddl(v7.h8, v7.b8, v0.b8); dump();
uaddl(v7.h8, v7.b8, v1.b8); dump();
uaddl(v7.h8, v7.b8, v2.b8); dump();
uaddl(v7.h8, v7.b8, v4.b8); dump();
uaddl(v7.h8, v7.b8, v8.b8); dump();
uaddl(v7.h8, v7.b8, v16.b8); dump();
uaddl(v7.h8, v7.b8, v31.b8); dump();
umlal(v7.h8, v7.b8, v7.b8); dump();
umlal(v0.h8, v7.b8, v7.b8); dump();
umlal(v1.h8, v7.b8, v7.b8); dump();
umlal(v2.h8, v7.b8, v7.b8); dump();
umlal(v4.h8, v7.b8, v7.b8); dump();
umlal(v8.h8, v7.b8, v7.b8); dump();
umlal(v16.h8, v7.b8, v7.b8); dump();
umlal(v31.h8, v7.b8, v7.b8); dump();
umlal(v7.h8, v7.b8, v7.b8); dump();
umlal(v7.h8, v0.b8, v7.b8); dump();
umlal(v7.h8, v1.b8, v7.b8); dump();
umlal(v7.h8, v2.b8, v7.b8); dump();
umlal(v7.h8, v4.b8, v7.b8); dump();
umlal(v7.h8, v8.b8, v7.b8); dump();
umlal(v7.h8, v16.b8, v7.b8); dump();
umlal(v7.h8, v31.b8, v7.b8); dump();
umlal(v7.h8, v7.b8, v7.b8); dump();
umlal(v7.h8, v7.b8, v0.b8); dump();
umlal(v7.h8, v7.b8, v1.b8); dump();
umlal(v7.h8, v7.b8, v2.b8); dump();
umlal(v7.h8, v7.b8, v4.b8); dump();
umlal(v7.h8, v7.b8, v8.b8); dump();
umlal(v7.h8, v7.b8, v16.b8); dump();
umlal(v7.h8, v7.b8, v31.b8); dump();
umlsl(v7.h8, v7.b8, v7.b8); dump();
umlsl(v0.h8, v7.b8, v7.b8); dump();
umlsl(v1.h8, v7.b8, v7.b8); dump();
umlsl(v2.h8, v7.b8, v7.b8); dump();
umlsl(v4.h8, v7.b8, v7.b8); dump();
umlsl(v8.h8, v7.b8, v7.b8); dump();
umlsl(v16.h8, v7.b8, v7.b8); dump();
umlsl(v31.h8, v7.b8, v7.b8); dump();
umlsl(v7.h8, v7.b8, v7.b8); dump();
umlsl(v7.h8, v0.b8, v7.b8); dump();
umlsl(v7.h8, v1.b8, v7.b8); dump();
umlsl(v7.h8, v2.b8, v7.b8); dump();
umlsl(v7.h8, v4.b8, v7.b8); dump();
umlsl(v7.h8, v8.b8, v7.b8); dump();
umlsl(v7.h8, v16.b8, v7.b8); dump();
umlsl(v7.h8, v31.b8, v7.b8); dump();
umlsl(v7.h8, v7.b8, v7.b8); dump();
umlsl(v7.h8, v7.b8, v0.b8); dump();
umlsl(v7.h8, v7.b8, v1.b8); dump();
umlsl(v7.h8, v7.b8, v2.b8); dump();
umlsl(v7.h8, v7.b8, v4.b8); dump();
umlsl(v7.h8, v7.b8, v8.b8); dump();
umlsl(v7.h8, v7.b8, v16.b8); dump();
umlsl(v7.h8, v7.b8, v31.b8); dump();
umull(v7.h8, v7.b8, v7.b8); dump();
umull(v0.h8, v7.b8, v7.b8); dump();
umull(v1.h8, v7.b8, v7.b8); dump();
umull(v2.h8, v7.b8, v7.b8); dump();
umull(v4.h8, v7.b8, v7.b8); dump();
umull(v8.h8, v7.b8, v7.b8); dump();
umull(v16.h8, v7.b8, v7.b8); dump();
umull(v31.h8, v7.b8, v7.b8); dump();
umull(v7.h8, v7.b8, v7.b8); dump();
umull(v7.h8, v0.b8, v7.b8); dump();
umull(v7.h8, v1.b8, v7.b8); dump();
umull(v7.h8, v2.b8, v7.b8); dump();
umull(v7.h8, v4.b8, v7.b8); dump();
umull(v7.h8, v8.b8, v7.b8); dump();
umull(v7.h8, v16.b8, v7.b8); dump();
umull(v7.h8, v31.b8, v7.b8); dump();
umull(v7.h8, v7.b8, v7.b8); dump();
umull(v7.h8, v7.b8, v0.b8); dump();
umull(v7.h8, v7.b8, v1.b8); dump();
umull(v7.h8, v7.b8, v2.b8); dump();
umull(v7.h8, v7.b8, v4.b8); dump();
umull(v7.h8, v7.b8, v8.b8); dump();
umull(v7.h8, v7.b8, v16.b8); dump();
umull(v7.h8, v7.b8, v31.b8); dump();
usubl(v7.h8, v7.b8, v7.b8); dump();
usubl(v0.h8, v7.b8, v7.b8); dump();
usubl(v1.h8, v7.b8, v7.b8); dump();
usubl(v2.h8, v7.b8, v7.b8); dump();
usubl(v4.h8, v7.b8, v7.b8); dump();
usubl(v8.h8, v7.b8, v7.b8); dump();
usubl(v16.h8, v7.b8, v7.b8); dump();
usubl(v31.h8, v7.b8, v7.b8); dump();
usubl(v7.h8, v7.b8, v7.b8); dump();
usubl(v7.h8, v0.b8, v7.b8); dump();
usubl(v7.h8, v1.b8, v7.b8); dump();
usubl(v7.h8, v2.b8, v7.b8); dump();
usubl(v7.h8, v4.b8, v7.b8); dump();
usubl(v7.h8, v8.b8, v7.b8); dump();
usubl(v7.h8, v16.b8, v7.b8); dump();
usubl(v7.h8, v31.b8, v7.b8); dump();
usubl(v7.h8, v7.b8, v7.b8); dump();
usubl(v7.h8, v7.b8, v0.b8); dump();
usubl(v7.h8, v7.b8, v1.b8); dump();
usubl(v7.h8, v7.b8, v2.b8); dump();
usubl(v7.h8, v7.b8, v4.b8); dump();
usubl(v7.h8, v7.b8, v8.b8); dump();
usubl(v7.h8, v7.b8, v16.b8); dump();
usubl(v7.h8, v7.b8, v31.b8); dump();
//DataProcSimd_WideningAndNarrowingArithmetic12:1
uabal(v7.s4, v7.h4, v7.h4); dump();
uabal(v0.s4, v7.h4, v7.h4); dump();
uabal(v1.s4, v7.h4, v7.h4); dump();
uabal(v2.s4, v7.h4, v7.h4); dump();
uabal(v4.s4, v7.h4, v7.h4); dump();
uabal(v8.s4, v7.h4, v7.h4); dump();
uabal(v16.s4, v7.h4, v7.h4); dump();
uabal(v31.s4, v7.h4, v7.h4); dump();
uabal(v7.s4, v7.h4, v7.h4); dump();
uabal(v7.s4, v0.h4, v7.h4); dump();
uabal(v7.s4, v1.h4, v7.h4); dump();
uabal(v7.s4, v2.h4, v7.h4); dump();
uabal(v7.s4, v4.h4, v7.h4); dump();
uabal(v7.s4, v8.h4, v7.h4); dump();
uabal(v7.s4, v16.h4, v7.h4); dump();
uabal(v7.s4, v31.h4, v7.h4); dump();
uabal(v7.s4, v7.h4, v7.h4); dump();
uabal(v7.s4, v7.h4, v0.h4); dump();
uabal(v7.s4, v7.h4, v1.h4); dump();
uabal(v7.s4, v7.h4, v2.h4); dump();
uabal(v7.s4, v7.h4, v4.h4); dump();
uabal(v7.s4, v7.h4, v8.h4); dump();
uabal(v7.s4, v7.h4, v16.h4); dump();
uabal(v7.s4, v7.h4, v31.h4); dump();
uabdl(v7.s4, v7.h4, v7.h4); dump();
uabdl(v0.s4, v7.h4, v7.h4); dump();
uabdl(v1.s4, v7.h4, v7.h4); dump();
uabdl(v2.s4, v7.h4, v7.h4); dump();
uabdl(v4.s4, v7.h4, v7.h4); dump();
uabdl(v8.s4, v7.h4, v7.h4); dump();
uabdl(v16.s4, v7.h4, v7.h4); dump();
uabdl(v31.s4, v7.h4, v7.h4); dump();
uabdl(v7.s4, v7.h4, v7.h4); dump();
uabdl(v7.s4, v0.h4, v7.h4); dump();
uabdl(v7.s4, v1.h4, v7.h4); dump();
uabdl(v7.s4, v2.h4, v7.h4); dump();
uabdl(v7.s4, v4.h4, v7.h4); dump();
uabdl(v7.s4, v8.h4, v7.h4); dump();
uabdl(v7.s4, v16.h4, v7.h4); dump();
uabdl(v7.s4, v31.h4, v7.h4); dump();
uabdl(v7.s4, v7.h4, v7.h4); dump();
uabdl(v7.s4, v7.h4, v0.h4); dump();
uabdl(v7.s4, v7.h4, v1.h4); dump();
uabdl(v7.s4, v7.h4, v2.h4); dump();
uabdl(v7.s4, v7.h4, v4.h4); dump();
uabdl(v7.s4, v7.h4, v8.h4); dump();
uabdl(v7.s4, v7.h4, v16.h4); dump();
uabdl(v7.s4, v7.h4, v31.h4); dump();
uaddl(v7.s4, v7.h4, v7.h4); dump();
uaddl(v0.s4, v7.h4, v7.h4); dump();
uaddl(v1.s4, v7.h4, v7.h4); dump();
uaddl(v2.s4, v7.h4, v7.h4); dump();
uaddl(v4.s4, v7.h4, v7.h4); dump();
uaddl(v8.s4, v7.h4, v7.h4); dump();
uaddl(v16.s4, v7.h4, v7.h4); dump();
uaddl(v31.s4, v7.h4, v7.h4); dump();
uaddl(v7.s4, v7.h4, v7.h4); dump();
uaddl(v7.s4, v0.h4, v7.h4); dump();
uaddl(v7.s4, v1.h4, v7.h4); dump();
uaddl(v7.s4, v2.h4, v7.h4); dump();
uaddl(v7.s4, v4.h4, v7.h4); dump();
uaddl(v7.s4, v8.h4, v7.h4); dump();
uaddl(v7.s4, v16.h4, v7.h4); dump();
uaddl(v7.s4, v31.h4, v7.h4); dump();
uaddl(v7.s4, v7.h4, v7.h4); dump();
uaddl(v7.s4, v7.h4, v0.h4); dump();
uaddl(v7.s4, v7.h4, v1.h4); dump();
uaddl(v7.s4, v7.h4, v2.h4); dump();
uaddl(v7.s4, v7.h4, v4.h4); dump();
uaddl(v7.s4, v7.h4, v8.h4); dump();
uaddl(v7.s4, v7.h4, v16.h4); dump();
uaddl(v7.s4, v7.h4, v31.h4); dump();
umlal(v7.s4, v7.h4, v7.h4); dump();
umlal(v0.s4, v7.h4, v7.h4); dump();
umlal(v1.s4, v7.h4, v7.h4); dump();
umlal(v2.s4, v7.h4, v7.h4); dump();
umlal(v4.s4, v7.h4, v7.h4); dump();
umlal(v8.s4, v7.h4, v7.h4); dump();
umlal(v16.s4, v7.h4, v7.h4); dump();
umlal(v31.s4, v7.h4, v7.h4); dump();
umlal(v7.s4, v7.h4, v7.h4); dump();
umlal(v7.s4, v0.h4, v7.h4); dump();
umlal(v7.s4, v1.h4, v7.h4); dump();
umlal(v7.s4, v2.h4, v7.h4); dump();
umlal(v7.s4, v4.h4, v7.h4); dump();
umlal(v7.s4, v8.h4, v7.h4); dump();
umlal(v7.s4, v16.h4, v7.h4); dump();
umlal(v7.s4, v31.h4, v7.h4); dump();
umlal(v7.s4, v7.h4, v7.h4); dump();
umlal(v7.s4, v7.h4, v0.h4); dump();
umlal(v7.s4, v7.h4, v1.h4); dump();
umlal(v7.s4, v7.h4, v2.h4); dump();
umlal(v7.s4, v7.h4, v4.h4); dump();
umlal(v7.s4, v7.h4, v8.h4); dump();
umlal(v7.s4, v7.h4, v16.h4); dump();
umlal(v7.s4, v7.h4, v31.h4); dump();
umlsl(v7.s4, v7.h4, v7.h4); dump();
umlsl(v0.s4, v7.h4, v7.h4); dump();
umlsl(v1.s4, v7.h4, v7.h4); dump();
umlsl(v2.s4, v7.h4, v7.h4); dump();
umlsl(v4.s4, v7.h4, v7.h4); dump();
umlsl(v8.s4, v7.h4, v7.h4); dump();
umlsl(v16.s4, v7.h4, v7.h4); dump();
umlsl(v31.s4, v7.h4, v7.h4); dump();
umlsl(v7.s4, v7.h4, v7.h4); dump();
umlsl(v7.s4, v0.h4, v7.h4); dump();
umlsl(v7.s4, v1.h4, v7.h4); dump();
umlsl(v7.s4, v2.h4, v7.h4); dump();
umlsl(v7.s4, v4.h4, v7.h4); dump();
umlsl(v7.s4, v8.h4, v7.h4); dump();
umlsl(v7.s4, v16.h4, v7.h4); dump();
umlsl(v7.s4, v31.h4, v7.h4); dump();
umlsl(v7.s4, v7.h4, v7.h4); dump();
umlsl(v7.s4, v7.h4, v0.h4); dump();
umlsl(v7.s4, v7.h4, v1.h4); dump();
umlsl(v7.s4, v7.h4, v2.h4); dump();
umlsl(v7.s4, v7.h4, v4.h4); dump();
umlsl(v7.s4, v7.h4, v8.h4); dump();
umlsl(v7.s4, v7.h4, v16.h4); dump();
umlsl(v7.s4, v7.h4, v31.h4); dump();
umull(v7.s4, v7.h4, v7.h4); dump();
umull(v0.s4, v7.h4, v7.h4); dump();
umull(v1.s4, v7.h4, v7.h4); dump();
umull(v2.s4, v7.h4, v7.h4); dump();
umull(v4.s4, v7.h4, v7.h4); dump();
umull(v8.s4, v7.h4, v7.h4); dump();
umull(v16.s4, v7.h4, v7.h4); dump();
umull(v31.s4, v7.h4, v7.h4); dump();
umull(v7.s4, v7.h4, v7.h4); dump();
umull(v7.s4, v0.h4, v7.h4); dump();
umull(v7.s4, v1.h4, v7.h4); dump();
umull(v7.s4, v2.h4, v7.h4); dump();
umull(v7.s4, v4.h4, v7.h4); dump();
umull(v7.s4, v8.h4, v7.h4); dump();
umull(v7.s4, v16.h4, v7.h4); dump();
umull(v7.s4, v31.h4, v7.h4); dump();
umull(v7.s4, v7.h4, v7.h4); dump();
umull(v7.s4, v7.h4, v0.h4); dump();
umull(v7.s4, v7.h4, v1.h4); dump();
umull(v7.s4, v7.h4, v2.h4); dump();
umull(v7.s4, v7.h4, v4.h4); dump();
umull(v7.s4, v7.h4, v8.h4); dump();
umull(v7.s4, v7.h4, v16.h4); dump();
umull(v7.s4, v7.h4, v31.h4); dump();
usubl(v7.s4, v7.h4, v7.h4); dump();
usubl(v0.s4, v7.h4, v7.h4); dump();
usubl(v1.s4, v7.h4, v7.h4); dump();
usubl(v2.s4, v7.h4, v7.h4); dump();
usubl(v4.s4, v7.h4, v7.h4); dump();
usubl(v8.s4, v7.h4, v7.h4); dump();
usubl(v16.s4, v7.h4, v7.h4); dump();
usubl(v31.s4, v7.h4, v7.h4); dump();
usubl(v7.s4, v7.h4, v7.h4); dump();
usubl(v7.s4, v0.h4, v7.h4); dump();
usubl(v7.s4, v1.h4, v7.h4); dump();
usubl(v7.s4, v2.h4, v7.h4); dump();
usubl(v7.s4, v4.h4, v7.h4); dump();
usubl(v7.s4, v8.h4, v7.h4); dump();
usubl(v7.s4, v16.h4, v7.h4); dump();
usubl(v7.s4, v31.h4, v7.h4); dump();
usubl(v7.s4, v7.h4, v7.h4); dump();
usubl(v7.s4, v7.h4, v0.h4); dump();
usubl(v7.s4, v7.h4, v1.h4); dump();
usubl(v7.s4, v7.h4, v2.h4); dump();
usubl(v7.s4, v7.h4, v4.h4); dump();
usubl(v7.s4, v7.h4, v8.h4); dump();
usubl(v7.s4, v7.h4, v16.h4); dump();
usubl(v7.s4, v7.h4, v31.h4); dump();
//DataProcSimd_WideningAndNarrowingArithmetic12:2
uabal(v7.d2, v7.s2, v7.s2); dump();
uabal(v0.d2, v7.s2, v7.s2); dump();
uabal(v1.d2, v7.s2, v7.s2); dump();
uabal(v2.d2, v7.s2, v7.s2); dump();
uabal(v4.d2, v7.s2, v7.s2); dump();
uabal(v8.d2, v7.s2, v7.s2); dump();
uabal(v16.d2, v7.s2, v7.s2); dump();
uabal(v31.d2, v7.s2, v7.s2); dump();
uabal(v7.d2, v7.s2, v7.s2); dump();
uabal(v7.d2, v0.s2, v7.s2); dump();
uabal(v7.d2, v1.s2, v7.s2); dump();
uabal(v7.d2, v2.s2, v7.s2); dump();
uabal(v7.d2, v4.s2, v7.s2); dump();
uabal(v7.d2, v8.s2, v7.s2); dump();
uabal(v7.d2, v16.s2, v7.s2); dump();
uabal(v7.d2, v31.s2, v7.s2); dump();
uabal(v7.d2, v7.s2, v7.s2); dump();
uabal(v7.d2, v7.s2, v0.s2); dump();
uabal(v7.d2, v7.s2, v1.s2); dump();
uabal(v7.d2, v7.s2, v2.s2); dump();
uabal(v7.d2, v7.s2, v4.s2); dump();
uabal(v7.d2, v7.s2, v8.s2); dump();
uabal(v7.d2, v7.s2, v16.s2); dump();
uabal(v7.d2, v7.s2, v31.s2); dump();
uabdl(v7.d2, v7.s2, v7.s2); dump();
uabdl(v0.d2, v7.s2, v7.s2); dump();
uabdl(v1.d2, v7.s2, v7.s2); dump();
uabdl(v2.d2, v7.s2, v7.s2); dump();
uabdl(v4.d2, v7.s2, v7.s2); dump();
uabdl(v8.d2, v7.s2, v7.s2); dump();
uabdl(v16.d2, v7.s2, v7.s2); dump();
uabdl(v31.d2, v7.s2, v7.s2); dump();
uabdl(v7.d2, v7.s2, v7.s2); dump();
uabdl(v7.d2, v0.s2, v7.s2); dump();
uabdl(v7.d2, v1.s2, v7.s2); dump();
uabdl(v7.d2, v2.s2, v7.s2); dump();
uabdl(v7.d2, v4.s2, v7.s2); dump();
uabdl(v7.d2, v8.s2, v7.s2); dump();
uabdl(v7.d2, v16.s2, v7.s2); dump();
uabdl(v7.d2, v31.s2, v7.s2); dump();
uabdl(v7.d2, v7.s2, v7.s2); dump();
uabdl(v7.d2, v7.s2, v0.s2); dump();
uabdl(v7.d2, v7.s2, v1.s2); dump();
uabdl(v7.d2, v7.s2, v2.s2); dump();
uabdl(v7.d2, v7.s2, v4.s2); dump();
uabdl(v7.d2, v7.s2, v8.s2); dump();
uabdl(v7.d2, v7.s2, v16.s2); dump();
uabdl(v7.d2, v7.s2, v31.s2); dump();
uaddl(v7.d2, v7.s2, v7.s2); dump();
uaddl(v0.d2, v7.s2, v7.s2); dump();
uaddl(v1.d2, v7.s2, v7.s2); dump();
uaddl(v2.d2, v7.s2, v7.s2); dump();
uaddl(v4.d2, v7.s2, v7.s2); dump();
uaddl(v8.d2, v7.s2, v7.s2); dump();
uaddl(v16.d2, v7.s2, v7.s2); dump();
uaddl(v31.d2, v7.s2, v7.s2); dump();
uaddl(v7.d2, v7.s2, v7.s2); dump();
uaddl(v7.d2, v0.s2, v7.s2); dump();
uaddl(v7.d2, v1.s2, v7.s2); dump();
uaddl(v7.d2, v2.s2, v7.s2); dump();
uaddl(v7.d2, v4.s2, v7.s2); dump();
uaddl(v7.d2, v8.s2, v7.s2); dump();
uaddl(v7.d2, v16.s2, v7.s2); dump();
uaddl(v7.d2, v31.s2, v7.s2); dump();
uaddl(v7.d2, v7.s2, v7.s2); dump();
uaddl(v7.d2, v7.s2, v0.s2); dump();
uaddl(v7.d2, v7.s2, v1.s2); dump();
uaddl(v7.d2, v7.s2, v2.s2); dump();
uaddl(v7.d2, v7.s2, v4.s2); dump();
uaddl(v7.d2, v7.s2, v8.s2); dump();
uaddl(v7.d2, v7.s2, v16.s2); dump();
uaddl(v7.d2, v7.s2, v31.s2); dump();
umlal(v7.d2, v7.s2, v7.s2); dump();
umlal(v0.d2, v7.s2, v7.s2); dump();
umlal(v1.d2, v7.s2, v7.s2); dump();
umlal(v2.d2, v7.s2, v7.s2); dump();
umlal(v4.d2, v7.s2, v7.s2); dump();
umlal(v8.d2, v7.s2, v7.s2); dump();
umlal(v16.d2, v7.s2, v7.s2); dump();
umlal(v31.d2, v7.s2, v7.s2); dump();
umlal(v7.d2, v7.s2, v7.s2); dump();
umlal(v7.d2, v0.s2, v7.s2); dump();
umlal(v7.d2, v1.s2, v7.s2); dump();
umlal(v7.d2, v2.s2, v7.s2); dump();
umlal(v7.d2, v4.s2, v7.s2); dump();
umlal(v7.d2, v8.s2, v7.s2); dump();
umlal(v7.d2, v16.s2, v7.s2); dump();
umlal(v7.d2, v31.s2, v7.s2); dump();
umlal(v7.d2, v7.s2, v7.s2); dump();
umlal(v7.d2, v7.s2, v0.s2); dump();
umlal(v7.d2, v7.s2, v1.s2); dump();
umlal(v7.d2, v7.s2, v2.s2); dump();
umlal(v7.d2, v7.s2, v4.s2); dump();
umlal(v7.d2, v7.s2, v8.s2); dump();
umlal(v7.d2, v7.s2, v16.s2); dump();
umlal(v7.d2, v7.s2, v31.s2); dump();
umlsl(v7.d2, v7.s2, v7.s2); dump();
umlsl(v0.d2, v7.s2, v7.s2); dump();
umlsl(v1.d2, v7.s2, v7.s2); dump();
umlsl(v2.d2, v7.s2, v7.s2); dump();
umlsl(v4.d2, v7.s2, v7.s2); dump();
umlsl(v8.d2, v7.s2, v7.s2); dump();
umlsl(v16.d2, v7.s2, v7.s2); dump();
umlsl(v31.d2, v7.s2, v7.s2); dump();
umlsl(v7.d2, v7.s2, v7.s2); dump();
umlsl(v7.d2, v0.s2, v7.s2); dump();
umlsl(v7.d2, v1.s2, v7.s2); dump();
umlsl(v7.d2, v2.s2, v7.s2); dump();
umlsl(v7.d2, v4.s2, v7.s2); dump();
umlsl(v7.d2, v8.s2, v7.s2); dump();
umlsl(v7.d2, v16.s2, v7.s2); dump();
umlsl(v7.d2, v31.s2, v7.s2); dump();
umlsl(v7.d2, v7.s2, v7.s2); dump();
umlsl(v7.d2, v7.s2, v0.s2); dump();
umlsl(v7.d2, v7.s2, v1.s2); dump();
umlsl(v7.d2, v7.s2, v2.s2); dump();
umlsl(v7.d2, v7.s2, v4.s2); dump();
umlsl(v7.d2, v7.s2, v8.s2); dump();
umlsl(v7.d2, v7.s2, v16.s2); dump();
umlsl(v7.d2, v7.s2, v31.s2); dump();
umull(v7.d2, v7.s2, v7.s2); dump();
umull(v0.d2, v7.s2, v7.s2); dump();
umull(v1.d2, v7.s2, v7.s2); dump();
umull(v2.d2, v7.s2, v7.s2); dump();
umull(v4.d2, v7.s2, v7.s2); dump();
umull(v8.d2, v7.s2, v7.s2); dump();
umull(v16.d2, v7.s2, v7.s2); dump();
umull(v31.d2, v7.s2, v7.s2); dump();
umull(v7.d2, v7.s2, v7.s2); dump();
umull(v7.d2, v0.s2, v7.s2); dump();
umull(v7.d2, v1.s2, v7.s2); dump();
umull(v7.d2, v2.s2, v7.s2); dump();
umull(v7.d2, v4.s2, v7.s2); dump();
umull(v7.d2, v8.s2, v7.s2); dump();
umull(v7.d2, v16.s2, v7.s2); dump();
umull(v7.d2, v31.s2, v7.s2); dump();
umull(v7.d2, v7.s2, v7.s2); dump();
umull(v7.d2, v7.s2, v0.s2); dump();
umull(v7.d2, v7.s2, v1.s2); dump();
umull(v7.d2, v7.s2, v2.s2); dump();
umull(v7.d2, v7.s2, v4.s2); dump();
umull(v7.d2, v7.s2, v8.s2); dump();
umull(v7.d2, v7.s2, v16.s2); dump();
umull(v7.d2, v7.s2, v31.s2); dump();
usubl(v7.d2, v7.s2, v7.s2); dump();
usubl(v0.d2, v7.s2, v7.s2); dump();
usubl(v1.d2, v7.s2, v7.s2); dump();
usubl(v2.d2, v7.s2, v7.s2); dump();
usubl(v4.d2, v7.s2, v7.s2); dump();
usubl(v8.d2, v7.s2, v7.s2); dump();
usubl(v16.d2, v7.s2, v7.s2); dump();
usubl(v31.d2, v7.s2, v7.s2); dump();
usubl(v7.d2, v7.s2, v7.s2); dump();
usubl(v7.d2, v0.s2, v7.s2); dump();
usubl(v7.d2, v1.s2, v7.s2); dump();
usubl(v7.d2, v2.s2, v7.s2); dump();
usubl(v7.d2, v4.s2, v7.s2); dump();
usubl(v7.d2, v8.s2, v7.s2); dump();
usubl(v7.d2, v16.s2, v7.s2); dump();
usubl(v7.d2, v31.s2, v7.s2); dump();
usubl(v7.d2, v7.s2, v7.s2); dump();
usubl(v7.d2, v7.s2, v0.s2); dump();
usubl(v7.d2, v7.s2, v1.s2); dump();
usubl(v7.d2, v7.s2, v2.s2); dump();
usubl(v7.d2, v7.s2, v4.s2); dump();
usubl(v7.d2, v7.s2, v8.s2); dump();
usubl(v7.d2, v7.s2, v16.s2); dump();
usubl(v7.d2, v7.s2, v31.s2); dump();
//DataProcSimd_WideningAndNarrowingArithmetic13:0
uabal2(v7.h8, v7.b16, v7.b16); dump();
uabal2(v0.h8, v7.b16, v7.b16); dump();
uabal2(v1.h8, v7.b16, v7.b16); dump();
uabal2(v2.h8, v7.b16, v7.b16); dump();
uabal2(v4.h8, v7.b16, v7.b16); dump();
uabal2(v8.h8, v7.b16, v7.b16); dump();
uabal2(v16.h8, v7.b16, v7.b16); dump();
uabal2(v31.h8, v7.b16, v7.b16); dump();
uabal2(v7.h8, v7.b16, v7.b16); dump();
uabal2(v7.h8, v0.b16, v7.b16); dump();
uabal2(v7.h8, v1.b16, v7.b16); dump();
uabal2(v7.h8, v2.b16, v7.b16); dump();
uabal2(v7.h8, v4.b16, v7.b16); dump();
uabal2(v7.h8, v8.b16, v7.b16); dump();
uabal2(v7.h8, v16.b16, v7.b16); dump();
uabal2(v7.h8, v31.b16, v7.b16); dump();
uabal2(v7.h8, v7.b16, v7.b16); dump();
uabal2(v7.h8, v7.b16, v0.b16); dump();
uabal2(v7.h8, v7.b16, v1.b16); dump();
uabal2(v7.h8, v7.b16, v2.b16); dump();
uabal2(v7.h8, v7.b16, v4.b16); dump();
uabal2(v7.h8, v7.b16, v8.b16); dump();
uabal2(v7.h8, v7.b16, v16.b16); dump();
uabal2(v7.h8, v7.b16, v31.b16); dump();
uabdl2(v7.h8, v7.b16, v7.b16); dump();
uabdl2(v0.h8, v7.b16, v7.b16); dump();
uabdl2(v1.h8, v7.b16, v7.b16); dump();
uabdl2(v2.h8, v7.b16, v7.b16); dump();
uabdl2(v4.h8, v7.b16, v7.b16); dump();
uabdl2(v8.h8, v7.b16, v7.b16); dump();
uabdl2(v16.h8, v7.b16, v7.b16); dump();
uabdl2(v31.h8, v7.b16, v7.b16); dump();
uabdl2(v7.h8, v7.b16, v7.b16); dump();
uabdl2(v7.h8, v0.b16, v7.b16); dump();
uabdl2(v7.h8, v1.b16, v7.b16); dump();
uabdl2(v7.h8, v2.b16, v7.b16); dump();
uabdl2(v7.h8, v4.b16, v7.b16); dump();
uabdl2(v7.h8, v8.b16, v7.b16); dump();
uabdl2(v7.h8, v16.b16, v7.b16); dump();
uabdl2(v7.h8, v31.b16, v7.b16); dump();
uabdl2(v7.h8, v7.b16, v7.b16); dump();
uabdl2(v7.h8, v7.b16, v0.b16); dump();
uabdl2(v7.h8, v7.b16, v1.b16); dump();
uabdl2(v7.h8, v7.b16, v2.b16); dump();
uabdl2(v7.h8, v7.b16, v4.b16); dump();
uabdl2(v7.h8, v7.b16, v8.b16); dump();
uabdl2(v7.h8, v7.b16, v16.b16); dump();
uabdl2(v7.h8, v7.b16, v31.b16); dump();
uaddl2(v7.h8, v7.b16, v7.b16); dump();
uaddl2(v0.h8, v7.b16, v7.b16); dump();
uaddl2(v1.h8, v7.b16, v7.b16); dump();
uaddl2(v2.h8, v7.b16, v7.b16); dump();
uaddl2(v4.h8, v7.b16, v7.b16); dump();
uaddl2(v8.h8, v7.b16, v7.b16); dump();
uaddl2(v16.h8, v7.b16, v7.b16); dump();
uaddl2(v31.h8, v7.b16, v7.b16); dump();
uaddl2(v7.h8, v7.b16, v7.b16); dump();
uaddl2(v7.h8, v0.b16, v7.b16); dump();
uaddl2(v7.h8, v1.b16, v7.b16); dump();
uaddl2(v7.h8, v2.b16, v7.b16); dump();
uaddl2(v7.h8, v4.b16, v7.b16); dump();
uaddl2(v7.h8, v8.b16, v7.b16); dump();
uaddl2(v7.h8, v16.b16, v7.b16); dump();
uaddl2(v7.h8, v31.b16, v7.b16); dump();
uaddl2(v7.h8, v7.b16, v7.b16); dump();
uaddl2(v7.h8, v7.b16, v0.b16); dump();
uaddl2(v7.h8, v7.b16, v1.b16); dump();
uaddl2(v7.h8, v7.b16, v2.b16); dump();
uaddl2(v7.h8, v7.b16, v4.b16); dump();
uaddl2(v7.h8, v7.b16, v8.b16); dump();
uaddl2(v7.h8, v7.b16, v16.b16); dump();
uaddl2(v7.h8, v7.b16, v31.b16); dump();
umlal2(v7.h8, v7.b16, v7.b16); dump();
umlal2(v0.h8, v7.b16, v7.b16); dump();
umlal2(v1.h8, v7.b16, v7.b16); dump();
umlal2(v2.h8, v7.b16, v7.b16); dump();
umlal2(v4.h8, v7.b16, v7.b16); dump();
umlal2(v8.h8, v7.b16, v7.b16); dump();
umlal2(v16.h8, v7.b16, v7.b16); dump();
umlal2(v31.h8, v7.b16, v7.b16); dump();
umlal2(v7.h8, v7.b16, v7.b16); dump();
umlal2(v7.h8, v0.b16, v7.b16); dump();
umlal2(v7.h8, v1.b16, v7.b16); dump();
umlal2(v7.h8, v2.b16, v7.b16); dump();
umlal2(v7.h8, v4.b16, v7.b16); dump();
umlal2(v7.h8, v8.b16, v7.b16); dump();
umlal2(v7.h8, v16.b16, v7.b16); dump();
umlal2(v7.h8, v31.b16, v7.b16); dump();
umlal2(v7.h8, v7.b16, v7.b16); dump();
umlal2(v7.h8, v7.b16, v0.b16); dump();
umlal2(v7.h8, v7.b16, v1.b16); dump();
umlal2(v7.h8, v7.b16, v2.b16); dump();
umlal2(v7.h8, v7.b16, v4.b16); dump();
umlal2(v7.h8, v7.b16, v8.b16); dump();
umlal2(v7.h8, v7.b16, v16.b16); dump();
umlal2(v7.h8, v7.b16, v31.b16); dump();
umlsl2(v7.h8, v7.b16, v7.b16); dump();
umlsl2(v0.h8, v7.b16, v7.b16); dump();
umlsl2(v1.h8, v7.b16, v7.b16); dump();
umlsl2(v2.h8, v7.b16, v7.b16); dump();
umlsl2(v4.h8, v7.b16, v7.b16); dump();
umlsl2(v8.h8, v7.b16, v7.b16); dump();
umlsl2(v16.h8, v7.b16, v7.b16); dump();
umlsl2(v31.h8, v7.b16, v7.b16); dump();
umlsl2(v7.h8, v7.b16, v7.b16); dump();
umlsl2(v7.h8, v0.b16, v7.b16); dump();
umlsl2(v7.h8, v1.b16, v7.b16); dump();
umlsl2(v7.h8, v2.b16, v7.b16); dump();
umlsl2(v7.h8, v4.b16, v7.b16); dump();
umlsl2(v7.h8, v8.b16, v7.b16); dump();
umlsl2(v7.h8, v16.b16, v7.b16); dump();
umlsl2(v7.h8, v31.b16, v7.b16); dump();
umlsl2(v7.h8, v7.b16, v7.b16); dump();
umlsl2(v7.h8, v7.b16, v0.b16); dump();
umlsl2(v7.h8, v7.b16, v1.b16); dump();
umlsl2(v7.h8, v7.b16, v2.b16); dump();
umlsl2(v7.h8, v7.b16, v4.b16); dump();
umlsl2(v7.h8, v7.b16, v8.b16); dump();
umlsl2(v7.h8, v7.b16, v16.b16); dump();
umlsl2(v7.h8, v7.b16, v31.b16); dump();
umull2(v7.h8, v7.b16, v7.b16); dump();
umull2(v0.h8, v7.b16, v7.b16); dump();
umull2(v1.h8, v7.b16, v7.b16); dump();
umull2(v2.h8, v7.b16, v7.b16); dump();
umull2(v4.h8, v7.b16, v7.b16); dump();
umull2(v8.h8, v7.b16, v7.b16); dump();
umull2(v16.h8, v7.b16, v7.b16); dump();
umull2(v31.h8, v7.b16, v7.b16); dump();
umull2(v7.h8, v7.b16, v7.b16); dump();
umull2(v7.h8, v0.b16, v7.b16); dump();
umull2(v7.h8, v1.b16, v7.b16); dump();
umull2(v7.h8, v2.b16, v7.b16); dump();
umull2(v7.h8, v4.b16, v7.b16); dump();
umull2(v7.h8, v8.b16, v7.b16); dump();
umull2(v7.h8, v16.b16, v7.b16); dump();
umull2(v7.h8, v31.b16, v7.b16); dump();
umull2(v7.h8, v7.b16, v7.b16); dump();
umull2(v7.h8, v7.b16, v0.b16); dump();
umull2(v7.h8, v7.b16, v1.b16); dump();
umull2(v7.h8, v7.b16, v2.b16); dump();
umull2(v7.h8, v7.b16, v4.b16); dump();
umull2(v7.h8, v7.b16, v8.b16); dump();
umull2(v7.h8, v7.b16, v16.b16); dump();
umull2(v7.h8, v7.b16, v31.b16); dump();
usubl2(v7.h8, v7.b16, v7.b16); dump();
usubl2(v0.h8, v7.b16, v7.b16); dump();
usubl2(v1.h8, v7.b16, v7.b16); dump();
usubl2(v2.h8, v7.b16, v7.b16); dump();
usubl2(v4.h8, v7.b16, v7.b16); dump();
usubl2(v8.h8, v7.b16, v7.b16); dump();
usubl2(v16.h8, v7.b16, v7.b16); dump();
usubl2(v31.h8, v7.b16, v7.b16); dump();
usubl2(v7.h8, v7.b16, v7.b16); dump();
usubl2(v7.h8, v0.b16, v7.b16); dump();
usubl2(v7.h8, v1.b16, v7.b16); dump();
usubl2(v7.h8, v2.b16, v7.b16); dump();
usubl2(v7.h8, v4.b16, v7.b16); dump();
usubl2(v7.h8, v8.b16, v7.b16); dump();
usubl2(v7.h8, v16.b16, v7.b16); dump();
usubl2(v7.h8, v31.b16, v7.b16); dump();
usubl2(v7.h8, v7.b16, v7.b16); dump();
usubl2(v7.h8, v7.b16, v0.b16); dump();
usubl2(v7.h8, v7.b16, v1.b16); dump();
usubl2(v7.h8, v7.b16, v2.b16); dump();
usubl2(v7.h8, v7.b16, v4.b16); dump();
usubl2(v7.h8, v7.b16, v8.b16); dump();
usubl2(v7.h8, v7.b16, v16.b16); dump();
usubl2(v7.h8, v7.b16, v31.b16); dump();
//DataProcSimd_WideningAndNarrowingArithmetic13:1
uabal2(v7.s4, v7.h8, v7.h8); dump();
uabal2(v0.s4, v7.h8, v7.h8); dump();
uabal2(v1.s4, v7.h8, v7.h8); dump();
uabal2(v2.s4, v7.h8, v7.h8); dump();
uabal2(v4.s4, v7.h8, v7.h8); dump();
uabal2(v8.s4, v7.h8, v7.h8); dump();
uabal2(v16.s4, v7.h8, v7.h8); dump();
uabal2(v31.s4, v7.h8, v7.h8); dump();
uabal2(v7.s4, v7.h8, v7.h8); dump();
uabal2(v7.s4, v0.h8, v7.h8); dump();
uabal2(v7.s4, v1.h8, v7.h8); dump();
uabal2(v7.s4, v2.h8, v7.h8); dump();
uabal2(v7.s4, v4.h8, v7.h8); dump();
uabal2(v7.s4, v8.h8, v7.h8); dump();
uabal2(v7.s4, v16.h8, v7.h8); dump();
uabal2(v7.s4, v31.h8, v7.h8); dump();
uabal2(v7.s4, v7.h8, v7.h8); dump();
uabal2(v7.s4, v7.h8, v0.h8); dump();
uabal2(v7.s4, v7.h8, v1.h8); dump();
uabal2(v7.s4, v7.h8, v2.h8); dump();
uabal2(v7.s4, v7.h8, v4.h8); dump();
uabal2(v7.s4, v7.h8, v8.h8); dump();
uabal2(v7.s4, v7.h8, v16.h8); dump();
uabal2(v7.s4, v7.h8, v31.h8); dump();
uabdl2(v7.s4, v7.h8, v7.h8); dump();
uabdl2(v0.s4, v7.h8, v7.h8); dump();
uabdl2(v1.s4, v7.h8, v7.h8); dump();
uabdl2(v2.s4, v7.h8, v7.h8); dump();
uabdl2(v4.s4, v7.h8, v7.h8); dump();
uabdl2(v8.s4, v7.h8, v7.h8); dump();
uabdl2(v16.s4, v7.h8, v7.h8); dump();
uabdl2(v31.s4, v7.h8, v7.h8); dump();
uabdl2(v7.s4, v7.h8, v7.h8); dump();
uabdl2(v7.s4, v0.h8, v7.h8); dump();
uabdl2(v7.s4, v1.h8, v7.h8); dump();
uabdl2(v7.s4, v2.h8, v7.h8); dump();
uabdl2(v7.s4, v4.h8, v7.h8); dump();
uabdl2(v7.s4, v8.h8, v7.h8); dump();
uabdl2(v7.s4, v16.h8, v7.h8); dump();
uabdl2(v7.s4, v31.h8, v7.h8); dump();
uabdl2(v7.s4, v7.h8, v7.h8); dump();
uabdl2(v7.s4, v7.h8, v0.h8); dump();
uabdl2(v7.s4, v7.h8, v1.h8); dump();
uabdl2(v7.s4, v7.h8, v2.h8); dump();
uabdl2(v7.s4, v7.h8, v4.h8); dump();
uabdl2(v7.s4, v7.h8, v8.h8); dump();
uabdl2(v7.s4, v7.h8, v16.h8); dump();
uabdl2(v7.s4, v7.h8, v31.h8); dump();
uaddl2(v7.s4, v7.h8, v7.h8); dump();
uaddl2(v0.s4, v7.h8, v7.h8); dump();
uaddl2(v1.s4, v7.h8, v7.h8); dump();
uaddl2(v2.s4, v7.h8, v7.h8); dump();
uaddl2(v4.s4, v7.h8, v7.h8); dump();
uaddl2(v8.s4, v7.h8, v7.h8); dump();
uaddl2(v16.s4, v7.h8, v7.h8); dump();
uaddl2(v31.s4, v7.h8, v7.h8); dump();
uaddl2(v7.s4, v7.h8, v7.h8); dump();
uaddl2(v7.s4, v0.h8, v7.h8); dump();
uaddl2(v7.s4, v1.h8, v7.h8); dump();
uaddl2(v7.s4, v2.h8, v7.h8); dump();
uaddl2(v7.s4, v4.h8, v7.h8); dump();
uaddl2(v7.s4, v8.h8, v7.h8); dump();
uaddl2(v7.s4, v16.h8, v7.h8); dump();
uaddl2(v7.s4, v31.h8, v7.h8); dump();
uaddl2(v7.s4, v7.h8, v7.h8); dump();
uaddl2(v7.s4, v7.h8, v0.h8); dump();
uaddl2(v7.s4, v7.h8, v1.h8); dump();
uaddl2(v7.s4, v7.h8, v2.h8); dump();
uaddl2(v7.s4, v7.h8, v4.h8); dump();
uaddl2(v7.s4, v7.h8, v8.h8); dump();
uaddl2(v7.s4, v7.h8, v16.h8); dump();
uaddl2(v7.s4, v7.h8, v31.h8); dump();
umlal2(v7.s4, v7.h8, v7.h8); dump();
umlal2(v0.s4, v7.h8, v7.h8); dump();
umlal2(v1.s4, v7.h8, v7.h8); dump();
umlal2(v2.s4, v7.h8, v7.h8); dump();
umlal2(v4.s4, v7.h8, v7.h8); dump();
umlal2(v8.s4, v7.h8, v7.h8); dump();
umlal2(v16.s4, v7.h8, v7.h8); dump();
umlal2(v31.s4, v7.h8, v7.h8); dump();
umlal2(v7.s4, v7.h8, v7.h8); dump();
umlal2(v7.s4, v0.h8, v7.h8); dump();
umlal2(v7.s4, v1.h8, v7.h8); dump();
umlal2(v7.s4, v2.h8, v7.h8); dump();
umlal2(v7.s4, v4.h8, v7.h8); dump();
umlal2(v7.s4, v8.h8, v7.h8); dump();
umlal2(v7.s4, v16.h8, v7.h8); dump();
umlal2(v7.s4, v31.h8, v7.h8); dump();
umlal2(v7.s4, v7.h8, v7.h8); dump();
umlal2(v7.s4, v7.h8, v0.h8); dump();
umlal2(v7.s4, v7.h8, v1.h8); dump();
umlal2(v7.s4, v7.h8, v2.h8); dump();
umlal2(v7.s4, v7.h8, v4.h8); dump();
umlal2(v7.s4, v7.h8, v8.h8); dump();
umlal2(v7.s4, v7.h8, v16.h8); dump();
umlal2(v7.s4, v7.h8, v31.h8); dump();
umlsl2(v7.s4, v7.h8, v7.h8); dump();
umlsl2(v0.s4, v7.h8, v7.h8); dump();
umlsl2(v1.s4, v7.h8, v7.h8); dump();
umlsl2(v2.s4, v7.h8, v7.h8); dump();
umlsl2(v4.s4, v7.h8, v7.h8); dump();
umlsl2(v8.s4, v7.h8, v7.h8); dump();
umlsl2(v16.s4, v7.h8, v7.h8); dump();
umlsl2(v31.s4, v7.h8, v7.h8); dump();
umlsl2(v7.s4, v7.h8, v7.h8); dump();
umlsl2(v7.s4, v0.h8, v7.h8); dump();
umlsl2(v7.s4, v1.h8, v7.h8); dump();
umlsl2(v7.s4, v2.h8, v7.h8); dump();
umlsl2(v7.s4, v4.h8, v7.h8); dump();
umlsl2(v7.s4, v8.h8, v7.h8); dump();
umlsl2(v7.s4, v16.h8, v7.h8); dump();
umlsl2(v7.s4, v31.h8, v7.h8); dump();
umlsl2(v7.s4, v7.h8, v7.h8); dump();
umlsl2(v7.s4, v7.h8, v0.h8); dump();
umlsl2(v7.s4, v7.h8, v1.h8); dump();
umlsl2(v7.s4, v7.h8, v2.h8); dump();
umlsl2(v7.s4, v7.h8, v4.h8); dump();
umlsl2(v7.s4, v7.h8, v8.h8); dump();
umlsl2(v7.s4, v7.h8, v16.h8); dump();
umlsl2(v7.s4, v7.h8, v31.h8); dump();
umull2(v7.s4, v7.h8, v7.h8); dump();
umull2(v0.s4, v7.h8, v7.h8); dump();
umull2(v1.s4, v7.h8, v7.h8); dump();
umull2(v2.s4, v7.h8, v7.h8); dump();
umull2(v4.s4, v7.h8, v7.h8); dump();
umull2(v8.s4, v7.h8, v7.h8); dump();
umull2(v16.s4, v7.h8, v7.h8); dump();
umull2(v31.s4, v7.h8, v7.h8); dump();
umull2(v7.s4, v7.h8, v7.h8); dump();
umull2(v7.s4, v0.h8, v7.h8); dump();
umull2(v7.s4, v1.h8, v7.h8); dump();
umull2(v7.s4, v2.h8, v7.h8); dump();
umull2(v7.s4, v4.h8, v7.h8); dump();
umull2(v7.s4, v8.h8, v7.h8); dump();
umull2(v7.s4, v16.h8, v7.h8); dump();
umull2(v7.s4, v31.h8, v7.h8); dump();
umull2(v7.s4, v7.h8, v7.h8); dump();
umull2(v7.s4, v7.h8, v0.h8); dump();
umull2(v7.s4, v7.h8, v1.h8); dump();
umull2(v7.s4, v7.h8, v2.h8); dump();
umull2(v7.s4, v7.h8, v4.h8); dump();
umull2(v7.s4, v7.h8, v8.h8); dump();
umull2(v7.s4, v7.h8, v16.h8); dump();
umull2(v7.s4, v7.h8, v31.h8); dump();
usubl2(v7.s4, v7.h8, v7.h8); dump();
usubl2(v0.s4, v7.h8, v7.h8); dump();
usubl2(v1.s4, v7.h8, v7.h8); dump();
usubl2(v2.s4, v7.h8, v7.h8); dump();
usubl2(v4.s4, v7.h8, v7.h8); dump();
usubl2(v8.s4, v7.h8, v7.h8); dump();
usubl2(v16.s4, v7.h8, v7.h8); dump();
usubl2(v31.s4, v7.h8, v7.h8); dump();
usubl2(v7.s4, v7.h8, v7.h8); dump();
usubl2(v7.s4, v0.h8, v7.h8); dump();
usubl2(v7.s4, v1.h8, v7.h8); dump();
usubl2(v7.s4, v2.h8, v7.h8); dump();
usubl2(v7.s4, v4.h8, v7.h8); dump();
usubl2(v7.s4, v8.h8, v7.h8); dump();
usubl2(v7.s4, v16.h8, v7.h8); dump();
usubl2(v7.s4, v31.h8, v7.h8); dump();
usubl2(v7.s4, v7.h8, v7.h8); dump();
usubl2(v7.s4, v7.h8, v0.h8); dump();
usubl2(v7.s4, v7.h8, v1.h8); dump();
usubl2(v7.s4, v7.h8, v2.h8); dump();
usubl2(v7.s4, v7.h8, v4.h8); dump();
usubl2(v7.s4, v7.h8, v8.h8); dump();
usubl2(v7.s4, v7.h8, v16.h8); dump();
usubl2(v7.s4, v7.h8, v31.h8); dump();
//DataProcSimd_WideningAndNarrowingArithmetic13:2
uabal2(v7.d2, v7.s4, v7.s4); dump();
uabal2(v0.d2, v7.s4, v7.s4); dump();
uabal2(v1.d2, v7.s4, v7.s4); dump();
uabal2(v2.d2, v7.s4, v7.s4); dump();
uabal2(v4.d2, v7.s4, v7.s4); dump();
uabal2(v8.d2, v7.s4, v7.s4); dump();
uabal2(v16.d2, v7.s4, v7.s4); dump();
uabal2(v31.d2, v7.s4, v7.s4); dump();
uabal2(v7.d2, v7.s4, v7.s4); dump();
uabal2(v7.d2, v0.s4, v7.s4); dump();
uabal2(v7.d2, v1.s4, v7.s4); dump();
uabal2(v7.d2, v2.s4, v7.s4); dump();
uabal2(v7.d2, v4.s4, v7.s4); dump();
uabal2(v7.d2, v8.s4, v7.s4); dump();
uabal2(v7.d2, v16.s4, v7.s4); dump();
uabal2(v7.d2, v31.s4, v7.s4); dump();
uabal2(v7.d2, v7.s4, v7.s4); dump();
uabal2(v7.d2, v7.s4, v0.s4); dump();
uabal2(v7.d2, v7.s4, v1.s4); dump();
uabal2(v7.d2, v7.s4, v2.s4); dump();
uabal2(v7.d2, v7.s4, v4.s4); dump();
uabal2(v7.d2, v7.s4, v8.s4); dump();
uabal2(v7.d2, v7.s4, v16.s4); dump();
uabal2(v7.d2, v7.s4, v31.s4); dump();
uabdl2(v7.d2, v7.s4, v7.s4); dump();
uabdl2(v0.d2, v7.s4, v7.s4); dump();
uabdl2(v1.d2, v7.s4, v7.s4); dump();
uabdl2(v2.d2, v7.s4, v7.s4); dump();
uabdl2(v4.d2, v7.s4, v7.s4); dump();
uabdl2(v8.d2, v7.s4, v7.s4); dump();
uabdl2(v16.d2, v7.s4, v7.s4); dump();
uabdl2(v31.d2, v7.s4, v7.s4); dump();
uabdl2(v7.d2, v7.s4, v7.s4); dump();
uabdl2(v7.d2, v0.s4, v7.s4); dump();
uabdl2(v7.d2, v1.s4, v7.s4); dump();
uabdl2(v7.d2, v2.s4, v7.s4); dump();
uabdl2(v7.d2, v4.s4, v7.s4); dump();
uabdl2(v7.d2, v8.s4, v7.s4); dump();
uabdl2(v7.d2, v16.s4, v7.s4); dump();
uabdl2(v7.d2, v31.s4, v7.s4); dump();
uabdl2(v7.d2, v7.s4, v7.s4); dump();
uabdl2(v7.d2, v7.s4, v0.s4); dump();
uabdl2(v7.d2, v7.s4, v1.s4); dump();
uabdl2(v7.d2, v7.s4, v2.s4); dump();
uabdl2(v7.d2, v7.s4, v4.s4); dump();
uabdl2(v7.d2, v7.s4, v8.s4); dump();
uabdl2(v7.d2, v7.s4, v16.s4); dump();
uabdl2(v7.d2, v7.s4, v31.s4); dump();
uaddl2(v7.d2, v7.s4, v7.s4); dump();
uaddl2(v0.d2, v7.s4, v7.s4); dump();
uaddl2(v1.d2, v7.s4, v7.s4); dump();
uaddl2(v2.d2, v7.s4, v7.s4); dump();
uaddl2(v4.d2, v7.s4, v7.s4); dump();
uaddl2(v8.d2, v7.s4, v7.s4); dump();
uaddl2(v16.d2, v7.s4, v7.s4); dump();
uaddl2(v31.d2, v7.s4, v7.s4); dump();
uaddl2(v7.d2, v7.s4, v7.s4); dump();
uaddl2(v7.d2, v0.s4, v7.s4); dump();
uaddl2(v7.d2, v1.s4, v7.s4); dump();
uaddl2(v7.d2, v2.s4, v7.s4); dump();
uaddl2(v7.d2, v4.s4, v7.s4); dump();
uaddl2(v7.d2, v8.s4, v7.s4); dump();
uaddl2(v7.d2, v16.s4, v7.s4); dump();
uaddl2(v7.d2, v31.s4, v7.s4); dump();
uaddl2(v7.d2, v7.s4, v7.s4); dump();
uaddl2(v7.d2, v7.s4, v0.s4); dump();
uaddl2(v7.d2, v7.s4, v1.s4); dump();
uaddl2(v7.d2, v7.s4, v2.s4); dump();
uaddl2(v7.d2, v7.s4, v4.s4); dump();
uaddl2(v7.d2, v7.s4, v8.s4); dump();
uaddl2(v7.d2, v7.s4, v16.s4); dump();
uaddl2(v7.d2, v7.s4, v31.s4); dump();
umlal2(v7.d2, v7.s4, v7.s4); dump();
umlal2(v0.d2, v7.s4, v7.s4); dump();
umlal2(v1.d2, v7.s4, v7.s4); dump();
umlal2(v2.d2, v7.s4, v7.s4); dump();
umlal2(v4.d2, v7.s4, v7.s4); dump();
umlal2(v8.d2, v7.s4, v7.s4); dump();
umlal2(v16.d2, v7.s4, v7.s4); dump();
umlal2(v31.d2, v7.s4, v7.s4); dump();
umlal2(v7.d2, v7.s4, v7.s4); dump();
umlal2(v7.d2, v0.s4, v7.s4); dump();
umlal2(v7.d2, v1.s4, v7.s4); dump();
umlal2(v7.d2, v2.s4, v7.s4); dump();
umlal2(v7.d2, v4.s4, v7.s4); dump();
umlal2(v7.d2, v8.s4, v7.s4); dump();
umlal2(v7.d2, v16.s4, v7.s4); dump();
umlal2(v7.d2, v31.s4, v7.s4); dump();
umlal2(v7.d2, v7.s4, v7.s4); dump();
umlal2(v7.d2, v7.s4, v0.s4); dump();
umlal2(v7.d2, v7.s4, v1.s4); dump();
umlal2(v7.d2, v7.s4, v2.s4); dump();
umlal2(v7.d2, v7.s4, v4.s4); dump();
umlal2(v7.d2, v7.s4, v8.s4); dump();
umlal2(v7.d2, v7.s4, v16.s4); dump();
umlal2(v7.d2, v7.s4, v31.s4); dump();
umlsl2(v7.d2, v7.s4, v7.s4); dump();
umlsl2(v0.d2, v7.s4, v7.s4); dump();
umlsl2(v1.d2, v7.s4, v7.s4); dump();
umlsl2(v2.d2, v7.s4, v7.s4); dump();
umlsl2(v4.d2, v7.s4, v7.s4); dump();
umlsl2(v8.d2, v7.s4, v7.s4); dump();
umlsl2(v16.d2, v7.s4, v7.s4); dump();
umlsl2(v31.d2, v7.s4, v7.s4); dump();
umlsl2(v7.d2, v7.s4, v7.s4); dump();
umlsl2(v7.d2, v0.s4, v7.s4); dump();
umlsl2(v7.d2, v1.s4, v7.s4); dump();
umlsl2(v7.d2, v2.s4, v7.s4); dump();
umlsl2(v7.d2, v4.s4, v7.s4); dump();
umlsl2(v7.d2, v8.s4, v7.s4); dump();
umlsl2(v7.d2, v16.s4, v7.s4); dump();
umlsl2(v7.d2, v31.s4, v7.s4); dump();
umlsl2(v7.d2, v7.s4, v7.s4); dump();
umlsl2(v7.d2, v7.s4, v0.s4); dump();
umlsl2(v7.d2, v7.s4, v1.s4); dump();
umlsl2(v7.d2, v7.s4, v2.s4); dump();
umlsl2(v7.d2, v7.s4, v4.s4); dump();
umlsl2(v7.d2, v7.s4, v8.s4); dump();
umlsl2(v7.d2, v7.s4, v16.s4); dump();
umlsl2(v7.d2, v7.s4, v31.s4); dump();
umull2(v7.d2, v7.s4, v7.s4); dump();
umull2(v0.d2, v7.s4, v7.s4); dump();
umull2(v1.d2, v7.s4, v7.s4); dump();
umull2(v2.d2, v7.s4, v7.s4); dump();
umull2(v4.d2, v7.s4, v7.s4); dump();
umull2(v8.d2, v7.s4, v7.s4); dump();
umull2(v16.d2, v7.s4, v7.s4); dump();
umull2(v31.d2, v7.s4, v7.s4); dump();
umull2(v7.d2, v7.s4, v7.s4); dump();
umull2(v7.d2, v0.s4, v7.s4); dump();
umull2(v7.d2, v1.s4, v7.s4); dump();
umull2(v7.d2, v2.s4, v7.s4); dump();
umull2(v7.d2, v4.s4, v7.s4); dump();
umull2(v7.d2, v8.s4, v7.s4); dump();
umull2(v7.d2, v16.s4, v7.s4); dump();
umull2(v7.d2, v31.s4, v7.s4); dump();
umull2(v7.d2, v7.s4, v7.s4); dump();
umull2(v7.d2, v7.s4, v0.s4); dump();
umull2(v7.d2, v7.s4, v1.s4); dump();
umull2(v7.d2, v7.s4, v2.s4); dump();
umull2(v7.d2, v7.s4, v4.s4); dump();
umull2(v7.d2, v7.s4, v8.s4); dump();
umull2(v7.d2, v7.s4, v16.s4); dump();
umull2(v7.d2, v7.s4, v31.s4); dump();
usubl2(v7.d2, v7.s4, v7.s4); dump();
usubl2(v0.d2, v7.s4, v7.s4); dump();
usubl2(v1.d2, v7.s4, v7.s4); dump();
usubl2(v2.d2, v7.s4, v7.s4); dump();
usubl2(v4.d2, v7.s4, v7.s4); dump();
usubl2(v8.d2, v7.s4, v7.s4); dump();
usubl2(v16.d2, v7.s4, v7.s4); dump();
usubl2(v31.d2, v7.s4, v7.s4); dump();
usubl2(v7.d2, v7.s4, v7.s4); dump();
usubl2(v7.d2, v0.s4, v7.s4); dump();
usubl2(v7.d2, v1.s4, v7.s4); dump();
usubl2(v7.d2, v2.s4, v7.s4); dump();
usubl2(v7.d2, v4.s4, v7.s4); dump();
usubl2(v7.d2, v8.s4, v7.s4); dump();
usubl2(v7.d2, v16.s4, v7.s4); dump();
usubl2(v7.d2, v31.s4, v7.s4); dump();
usubl2(v7.d2, v7.s4, v7.s4); dump();
usubl2(v7.d2, v7.s4, v0.s4); dump();
usubl2(v7.d2, v7.s4, v1.s4); dump();
usubl2(v7.d2, v7.s4, v2.s4); dump();
usubl2(v7.d2, v7.s4, v4.s4); dump();
usubl2(v7.d2, v7.s4, v8.s4); dump();
usubl2(v7.d2, v7.s4, v16.s4); dump();
usubl2(v7.d2, v7.s4, v31.s4); dump();
//DataProcSimd_UnaryArithmetic0:0
abs(d7, d7); dump();
abs(d0, d7); dump();
abs(d1, d7); dump();
abs(d2, d7); dump();
abs(d4, d7); dump();
abs(d8, d7); dump();
abs(d16, d7); dump();
abs(d31, d7); dump();
abs(d7, d7); dump();
abs(d7, d0); dump();
abs(d7, d1); dump();
abs(d7, d2); dump();
abs(d7, d4); dump();
abs(d7, d8); dump();
abs(d7, d16); dump();
abs(d7, d31); dump();
neg(d7, d7); dump();
neg(d0, d7); dump();
neg(d1, d7); dump();
neg(d2, d7); dump();
neg(d4, d7); dump();
neg(d8, d7); dump();
neg(d16, d7); dump();
neg(d31, d7); dump();
neg(d7, d7); dump();
neg(d7, d0); dump();
neg(d7, d1); dump();
neg(d7, d2); dump();
neg(d7, d4); dump();
neg(d7, d8); dump();
neg(d7, d16); dump();
neg(d7, d31); dump();
//DataProcSimd_UnaryArithmetic0:1
abs(v7.b8, v7.b8); dump();
abs(v0.b8, v7.b8); dump();
abs(v1.b8, v7.b8); dump();
abs(v2.b8, v7.b8); dump();
abs(v4.b8, v7.b8); dump();
abs(v8.b8, v7.b8); dump();
abs(v16.b8, v7.b8); dump();
abs(v31.b8, v7.b8); dump();
abs(v7.b8, v7.b8); dump();
abs(v7.b8, v0.b8); dump();
abs(v7.b8, v1.b8); dump();
abs(v7.b8, v2.b8); dump();
abs(v7.b8, v4.b8); dump();
abs(v7.b8, v8.b8); dump();
abs(v7.b8, v16.b8); dump();
abs(v7.b8, v31.b8); dump();
neg(v7.b8, v7.b8); dump();
neg(v0.b8, v7.b8); dump();
neg(v1.b8, v7.b8); dump();
neg(v2.b8, v7.b8); dump();
neg(v4.b8, v7.b8); dump();
neg(v8.b8, v7.b8); dump();
neg(v16.b8, v7.b8); dump();
neg(v31.b8, v7.b8); dump();
neg(v7.b8, v7.b8); dump();
neg(v7.b8, v0.b8); dump();
neg(v7.b8, v1.b8); dump();
neg(v7.b8, v2.b8); dump();
neg(v7.b8, v4.b8); dump();
neg(v7.b8, v8.b8); dump();
neg(v7.b8, v16.b8); dump();
neg(v7.b8, v31.b8); dump();
//DataProcSimd_UnaryArithmetic0:2
abs(v7.b16, v7.b16); dump();
abs(v0.b16, v7.b16); dump();
abs(v1.b16, v7.b16); dump();
abs(v2.b16, v7.b16); dump();
abs(v4.b16, v7.b16); dump();
abs(v8.b16, v7.b16); dump();
abs(v16.b16, v7.b16); dump();
abs(v31.b16, v7.b16); dump();
abs(v7.b16, v7.b16); dump();
abs(v7.b16, v0.b16); dump();
abs(v7.b16, v1.b16); dump();
abs(v7.b16, v2.b16); dump();
abs(v7.b16, v4.b16); dump();
abs(v7.b16, v8.b16); dump();
abs(v7.b16, v16.b16); dump();
abs(v7.b16, v31.b16); dump();
neg(v7.b16, v7.b16); dump();
neg(v0.b16, v7.b16); dump();
neg(v1.b16, v7.b16); dump();
neg(v2.b16, v7.b16); dump();
neg(v4.b16, v7.b16); dump();
neg(v8.b16, v7.b16); dump();
neg(v16.b16, v7.b16); dump();
neg(v31.b16, v7.b16); dump();
neg(v7.b16, v7.b16); dump();
neg(v7.b16, v0.b16); dump();
neg(v7.b16, v1.b16); dump();
neg(v7.b16, v2.b16); dump();
neg(v7.b16, v4.b16); dump();
neg(v7.b16, v8.b16); dump();
neg(v7.b16, v16.b16); dump();
neg(v7.b16, v31.b16); dump();
//DataProcSimd_UnaryArithmetic0:3
abs(v7.h4, v7.h4); dump();
abs(v0.h4, v7.h4); dump();
abs(v1.h4, v7.h4); dump();
abs(v2.h4, v7.h4); dump();
abs(v4.h4, v7.h4); dump();
abs(v8.h4, v7.h4); dump();
abs(v16.h4, v7.h4); dump();
abs(v31.h4, v7.h4); dump();
abs(v7.h4, v7.h4); dump();
abs(v7.h4, v0.h4); dump();
abs(v7.h4, v1.h4); dump();
abs(v7.h4, v2.h4); dump();
abs(v7.h4, v4.h4); dump();
abs(v7.h4, v8.h4); dump();
abs(v7.h4, v16.h4); dump();
abs(v7.h4, v31.h4); dump();
neg(v7.h4, v7.h4); dump();
neg(v0.h4, v7.h4); dump();
neg(v1.h4, v7.h4); dump();
neg(v2.h4, v7.h4); dump();
neg(v4.h4, v7.h4); dump();
neg(v8.h4, v7.h4); dump();
neg(v16.h4, v7.h4); dump();
neg(v31.h4, v7.h4); dump();
neg(v7.h4, v7.h4); dump();
neg(v7.h4, v0.h4); dump();
neg(v7.h4, v1.h4); dump();
neg(v7.h4, v2.h4); dump();
neg(v7.h4, v4.h4); dump();
neg(v7.h4, v8.h4); dump();
neg(v7.h4, v16.h4); dump();
neg(v7.h4, v31.h4); dump();
//DataProcSimd_UnaryArithmetic0:4
abs(v7.h8, v7.h8); dump();
abs(v0.h8, v7.h8); dump();
abs(v1.h8, v7.h8); dump();
abs(v2.h8, v7.h8); dump();
abs(v4.h8, v7.h8); dump();
abs(v8.h8, v7.h8); dump();
abs(v16.h8, v7.h8); dump();
abs(v31.h8, v7.h8); dump();
abs(v7.h8, v7.h8); dump();
abs(v7.h8, v0.h8); dump();
abs(v7.h8, v1.h8); dump();
abs(v7.h8, v2.h8); dump();
abs(v7.h8, v4.h8); dump();
abs(v7.h8, v8.h8); dump();
abs(v7.h8, v16.h8); dump();
abs(v7.h8, v31.h8); dump();
neg(v7.h8, v7.h8); dump();
neg(v0.h8, v7.h8); dump();
neg(v1.h8, v7.h8); dump();
neg(v2.h8, v7.h8); dump();
neg(v4.h8, v7.h8); dump();
neg(v8.h8, v7.h8); dump();
neg(v16.h8, v7.h8); dump();
neg(v31.h8, v7.h8); dump();
neg(v7.h8, v7.h8); dump();
neg(v7.h8, v0.h8); dump();
neg(v7.h8, v1.h8); dump();
neg(v7.h8, v2.h8); dump();
neg(v7.h8, v4.h8); dump();
neg(v7.h8, v8.h8); dump();
neg(v7.h8, v16.h8); dump();
neg(v7.h8, v31.h8); dump();
//DataProcSimd_UnaryArithmetic0:5
abs(v7.s2, v7.s2); dump();
abs(v0.s2, v7.s2); dump();
abs(v1.s2, v7.s2); dump();
abs(v2.s2, v7.s2); dump();
abs(v4.s2, v7.s2); dump();
abs(v8.s2, v7.s2); dump();
abs(v16.s2, v7.s2); dump();
abs(v31.s2, v7.s2); dump();
abs(v7.s2, v7.s2); dump();
abs(v7.s2, v0.s2); dump();
abs(v7.s2, v1.s2); dump();
abs(v7.s2, v2.s2); dump();
abs(v7.s2, v4.s2); dump();
abs(v7.s2, v8.s2); dump();
abs(v7.s2, v16.s2); dump();
abs(v7.s2, v31.s2); dump();
neg(v7.s2, v7.s2); dump();
neg(v0.s2, v7.s2); dump();
neg(v1.s2, v7.s2); dump();
neg(v2.s2, v7.s2); dump();
neg(v4.s2, v7.s2); dump();
neg(v8.s2, v7.s2); dump();
neg(v16.s2, v7.s2); dump();
neg(v31.s2, v7.s2); dump();
neg(v7.s2, v7.s2); dump();
neg(v7.s2, v0.s2); dump();
neg(v7.s2, v1.s2); dump();
neg(v7.s2, v2.s2); dump();
neg(v7.s2, v4.s2); dump();
neg(v7.s2, v8.s2); dump();
neg(v7.s2, v16.s2); dump();
neg(v7.s2, v31.s2); dump();
//DataProcSimd_UnaryArithmetic0:6
abs(v7.s4, v7.s4); dump();
abs(v0.s4, v7.s4); dump();
abs(v1.s4, v7.s4); dump();
abs(v2.s4, v7.s4); dump();
abs(v4.s4, v7.s4); dump();
abs(v8.s4, v7.s4); dump();
abs(v16.s4, v7.s4); dump();
abs(v31.s4, v7.s4); dump();
abs(v7.s4, v7.s4); dump();
abs(v7.s4, v0.s4); dump();
abs(v7.s4, v1.s4); dump();
abs(v7.s4, v2.s4); dump();
abs(v7.s4, v4.s4); dump();
abs(v7.s4, v8.s4); dump();
abs(v7.s4, v16.s4); dump();
abs(v7.s4, v31.s4); dump();
neg(v7.s4, v7.s4); dump();
neg(v0.s4, v7.s4); dump();
neg(v1.s4, v7.s4); dump();
neg(v2.s4, v7.s4); dump();
neg(v4.s4, v7.s4); dump();
neg(v8.s4, v7.s4); dump();
neg(v16.s4, v7.s4); dump();
neg(v31.s4, v7.s4); dump();
neg(v7.s4, v7.s4); dump();
neg(v7.s4, v0.s4); dump();
neg(v7.s4, v1.s4); dump();
neg(v7.s4, v2.s4); dump();
neg(v7.s4, v4.s4); dump();
neg(v7.s4, v8.s4); dump();
neg(v7.s4, v16.s4); dump();
neg(v7.s4, v31.s4); dump();
//DataProcSimd_UnaryArithmetic0:7
abs(v7.d2, v7.d2); dump();
abs(v0.d2, v7.d2); dump();
abs(v1.d2, v7.d2); dump();
abs(v2.d2, v7.d2); dump();
abs(v4.d2, v7.d2); dump();
abs(v8.d2, v7.d2); dump();
abs(v16.d2, v7.d2); dump();
abs(v31.d2, v7.d2); dump();
abs(v7.d2, v7.d2); dump();
abs(v7.d2, v0.d2); dump();
abs(v7.d2, v1.d2); dump();
abs(v7.d2, v2.d2); dump();
abs(v7.d2, v4.d2); dump();
abs(v7.d2, v8.d2); dump();
abs(v7.d2, v16.d2); dump();
abs(v7.d2, v31.d2); dump();
neg(v7.d2, v7.d2); dump();
neg(v0.d2, v7.d2); dump();
neg(v1.d2, v7.d2); dump();
neg(v2.d2, v7.d2); dump();
neg(v4.d2, v7.d2); dump();
neg(v8.d2, v7.d2); dump();
neg(v16.d2, v7.d2); dump();
neg(v31.d2, v7.d2); dump();
neg(v7.d2, v7.d2); dump();
neg(v7.d2, v0.d2); dump();
neg(v7.d2, v1.d2); dump();
neg(v7.d2, v2.d2); dump();
neg(v7.d2, v4.d2); dump();
neg(v7.d2, v8.d2); dump();
neg(v7.d2, v16.d2); dump();
neg(v7.d2, v31.d2); dump();
//DataProcSimd_UnaryArithmetic1:0
cls(v7.b8, v7.b8); dump();
cls(v0.b8, v7.b8); dump();
cls(v1.b8, v7.b8); dump();
cls(v2.b8, v7.b8); dump();
cls(v4.b8, v7.b8); dump();
cls(v8.b8, v7.b8); dump();
cls(v16.b8, v7.b8); dump();
cls(v31.b8, v7.b8); dump();
cls(v7.b8, v7.b8); dump();
cls(v7.b8, v0.b8); dump();
cls(v7.b8, v1.b8); dump();
cls(v7.b8, v2.b8); dump();
cls(v7.b8, v4.b8); dump();
cls(v7.b8, v8.b8); dump();
cls(v7.b8, v16.b8); dump();
cls(v7.b8, v31.b8); dump();
clz(v7.b8, v7.b8); dump();
clz(v0.b8, v7.b8); dump();
clz(v1.b8, v7.b8); dump();
clz(v2.b8, v7.b8); dump();
clz(v4.b8, v7.b8); dump();
clz(v8.b8, v7.b8); dump();
clz(v16.b8, v7.b8); dump();
clz(v31.b8, v7.b8); dump();
clz(v7.b8, v7.b8); dump();
clz(v7.b8, v0.b8); dump();
clz(v7.b8, v1.b8); dump();
clz(v7.b8, v2.b8); dump();
clz(v7.b8, v4.b8); dump();
clz(v7.b8, v8.b8); dump();
clz(v7.b8, v16.b8); dump();
clz(v7.b8, v31.b8); dump();
rev64(v7.b8, v7.b8); dump();
rev64(v0.b8, v7.b8); dump();
rev64(v1.b8, v7.b8); dump();
rev64(v2.b8, v7.b8); dump();
rev64(v4.b8, v7.b8); dump();
rev64(v8.b8, v7.b8); dump();
rev64(v16.b8, v7.b8); dump();
rev64(v31.b8, v7.b8); dump();
rev64(v7.b8, v7.b8); dump();
rev64(v7.b8, v0.b8); dump();
rev64(v7.b8, v1.b8); dump();
rev64(v7.b8, v2.b8); dump();
rev64(v7.b8, v4.b8); dump();
rev64(v7.b8, v8.b8); dump();
rev64(v7.b8, v16.b8); dump();
rev64(v7.b8, v31.b8); dump();
//DataProcSimd_UnaryArithmetic1:1
cls(v7.b16, v7.b16); dump();
cls(v0.b16, v7.b16); dump();
cls(v1.b16, v7.b16); dump();
cls(v2.b16, v7.b16); dump();
cls(v4.b16, v7.b16); dump();
cls(v8.b16, v7.b16); dump();
cls(v16.b16, v7.b16); dump();
cls(v31.b16, v7.b16); dump();
cls(v7.b16, v7.b16); dump();
cls(v7.b16, v0.b16); dump();
cls(v7.b16, v1.b16); dump();
cls(v7.b16, v2.b16); dump();
cls(v7.b16, v4.b16); dump();
cls(v7.b16, v8.b16); dump();
cls(v7.b16, v16.b16); dump();
cls(v7.b16, v31.b16); dump();
clz(v7.b16, v7.b16); dump();
clz(v0.b16, v7.b16); dump();
clz(v1.b16, v7.b16); dump();
clz(v2.b16, v7.b16); dump();
clz(v4.b16, v7.b16); dump();
clz(v8.b16, v7.b16); dump();
clz(v16.b16, v7.b16); dump();
clz(v31.b16, v7.b16); dump();
clz(v7.b16, v7.b16); dump();
clz(v7.b16, v0.b16); dump();
clz(v7.b16, v1.b16); dump();
clz(v7.b16, v2.b16); dump();
clz(v7.b16, v4.b16); dump();
clz(v7.b16, v8.b16); dump();
clz(v7.b16, v16.b16); dump();
clz(v7.b16, v31.b16); dump();
rev64(v7.b16, v7.b16); dump();
rev64(v0.b16, v7.b16); dump();
rev64(v1.b16, v7.b16); dump();
rev64(v2.b16, v7.b16); dump();
rev64(v4.b16, v7.b16); dump();
rev64(v8.b16, v7.b16); dump();
rev64(v16.b16, v7.b16); dump();
rev64(v31.b16, v7.b16); dump();
rev64(v7.b16, v7.b16); dump();
rev64(v7.b16, v0.b16); dump();
rev64(v7.b16, v1.b16); dump();
rev64(v7.b16, v2.b16); dump();
rev64(v7.b16, v4.b16); dump();
rev64(v7.b16, v8.b16); dump();
rev64(v7.b16, v16.b16); dump();
rev64(v7.b16, v31.b16); dump();
//DataProcSimd_UnaryArithmetic1:2
cls(v7.h4, v7.h4); dump();
cls(v0.h4, v7.h4); dump();
cls(v1.h4, v7.h4); dump();
cls(v2.h4, v7.h4); dump();
cls(v4.h4, v7.h4); dump();
cls(v8.h4, v7.h4); dump();
cls(v16.h4, v7.h4); dump();
cls(v31.h4, v7.h4); dump();
cls(v7.h4, v7.h4); dump();
cls(v7.h4, v0.h4); dump();
cls(v7.h4, v1.h4); dump();
cls(v7.h4, v2.h4); dump();
cls(v7.h4, v4.h4); dump();
cls(v7.h4, v8.h4); dump();
cls(v7.h4, v16.h4); dump();
cls(v7.h4, v31.h4); dump();
clz(v7.h4, v7.h4); dump();
clz(v0.h4, v7.h4); dump();
clz(v1.h4, v7.h4); dump();
clz(v2.h4, v7.h4); dump();
clz(v4.h4, v7.h4); dump();
clz(v8.h4, v7.h4); dump();
clz(v16.h4, v7.h4); dump();
clz(v31.h4, v7.h4); dump();
clz(v7.h4, v7.h4); dump();
clz(v7.h4, v0.h4); dump();
clz(v7.h4, v1.h4); dump();
clz(v7.h4, v2.h4); dump();
clz(v7.h4, v4.h4); dump();
clz(v7.h4, v8.h4); dump();
clz(v7.h4, v16.h4); dump();
clz(v7.h4, v31.h4); dump();
rev64(v7.h4, v7.h4); dump();
rev64(v0.h4, v7.h4); dump();
rev64(v1.h4, v7.h4); dump();
rev64(v2.h4, v7.h4); dump();
rev64(v4.h4, v7.h4); dump();
rev64(v8.h4, v7.h4); dump();
rev64(v16.h4, v7.h4); dump();
rev64(v31.h4, v7.h4); dump();
rev64(v7.h4, v7.h4); dump();
rev64(v7.h4, v0.h4); dump();
rev64(v7.h4, v1.h4); dump();
rev64(v7.h4, v2.h4); dump();
rev64(v7.h4, v4.h4); dump();
rev64(v7.h4, v8.h4); dump();
rev64(v7.h4, v16.h4); dump();
rev64(v7.h4, v31.h4); dump();
//DataProcSimd_UnaryArithmetic1:3
cls(v7.h8, v7.h8); dump();
cls(v0.h8, v7.h8); dump();
cls(v1.h8, v7.h8); dump();
cls(v2.h8, v7.h8); dump();
cls(v4.h8, v7.h8); dump();
cls(v8.h8, v7.h8); dump();
cls(v16.h8, v7.h8); dump();
cls(v31.h8, v7.h8); dump();
cls(v7.h8, v7.h8); dump();
cls(v7.h8, v0.h8); dump();
cls(v7.h8, v1.h8); dump();
cls(v7.h8, v2.h8); dump();
cls(v7.h8, v4.h8); dump();
cls(v7.h8, v8.h8); dump();
cls(v7.h8, v16.h8); dump();
cls(v7.h8, v31.h8); dump();
clz(v7.h8, v7.h8); dump();
clz(v0.h8, v7.h8); dump();
clz(v1.h8, v7.h8); dump();
clz(v2.h8, v7.h8); dump();
clz(v4.h8, v7.h8); dump();
clz(v8.h8, v7.h8); dump();
clz(v16.h8, v7.h8); dump();
clz(v31.h8, v7.h8); dump();
clz(v7.h8, v7.h8); dump();
clz(v7.h8, v0.h8); dump();
clz(v7.h8, v1.h8); dump();
clz(v7.h8, v2.h8); dump();
clz(v7.h8, v4.h8); dump();
clz(v7.h8, v8.h8); dump();
clz(v7.h8, v16.h8); dump();
clz(v7.h8, v31.h8); dump();
rev64(v7.h8, v7.h8); dump();
rev64(v0.h8, v7.h8); dump();
rev64(v1.h8, v7.h8); dump();
rev64(v2.h8, v7.h8); dump();
rev64(v4.h8, v7.h8); dump();
rev64(v8.h8, v7.h8); dump();
rev64(v16.h8, v7.h8); dump();
rev64(v31.h8, v7.h8); dump();
rev64(v7.h8, v7.h8); dump();
rev64(v7.h8, v0.h8); dump();
rev64(v7.h8, v1.h8); dump();
rev64(v7.h8, v2.h8); dump();
rev64(v7.h8, v4.h8); dump();
rev64(v7.h8, v8.h8); dump();
rev64(v7.h8, v16.h8); dump();
rev64(v7.h8, v31.h8); dump();
//DataProcSimd_UnaryArithmetic1:4
cls(v7.s2, v7.s2); dump();
cls(v0.s2, v7.s2); dump();
cls(v1.s2, v7.s2); dump();
cls(v2.s2, v7.s2); dump();
cls(v4.s2, v7.s2); dump();
cls(v8.s2, v7.s2); dump();
cls(v16.s2, v7.s2); dump();
cls(v31.s2, v7.s2); dump();
cls(v7.s2, v7.s2); dump();
cls(v7.s2, v0.s2); dump();
cls(v7.s2, v1.s2); dump();
cls(v7.s2, v2.s2); dump();
cls(v7.s2, v4.s2); dump();
cls(v7.s2, v8.s2); dump();
cls(v7.s2, v16.s2); dump();
cls(v7.s2, v31.s2); dump();
clz(v7.s2, v7.s2); dump();
clz(v0.s2, v7.s2); dump();
clz(v1.s2, v7.s2); dump();
clz(v2.s2, v7.s2); dump();
clz(v4.s2, v7.s2); dump();
clz(v8.s2, v7.s2); dump();
clz(v16.s2, v7.s2); dump();
clz(v31.s2, v7.s2); dump();
clz(v7.s2, v7.s2); dump();
clz(v7.s2, v0.s2); dump();
clz(v7.s2, v1.s2); dump();
clz(v7.s2, v2.s2); dump();
clz(v7.s2, v4.s2); dump();
clz(v7.s2, v8.s2); dump();
clz(v7.s2, v16.s2); dump();
clz(v7.s2, v31.s2); dump();
rev64(v7.s2, v7.s2); dump();
rev64(v0.s2, v7.s2); dump();
rev64(v1.s2, v7.s2); dump();
rev64(v2.s2, v7.s2); dump();
rev64(v4.s2, v7.s2); dump();
rev64(v8.s2, v7.s2); dump();
rev64(v16.s2, v7.s2); dump();
rev64(v31.s2, v7.s2); dump();
rev64(v7.s2, v7.s2); dump();
rev64(v7.s2, v0.s2); dump();
rev64(v7.s2, v1.s2); dump();
rev64(v7.s2, v2.s2); dump();
rev64(v7.s2, v4.s2); dump();
rev64(v7.s2, v8.s2); dump();
rev64(v7.s2, v16.s2); dump();
rev64(v7.s2, v31.s2); dump();
//DataProcSimd_UnaryArithmetic1:5
cls(v7.s4, v7.s4); dump();
cls(v0.s4, v7.s4); dump();
cls(v1.s4, v7.s4); dump();
cls(v2.s4, v7.s4); dump();
cls(v4.s4, v7.s4); dump();
cls(v8.s4, v7.s4); dump();
cls(v16.s4, v7.s4); dump();
cls(v31.s4, v7.s4); dump();
cls(v7.s4, v7.s4); dump();
cls(v7.s4, v0.s4); dump();
cls(v7.s4, v1.s4); dump();
cls(v7.s4, v2.s4); dump();
cls(v7.s4, v4.s4); dump();
cls(v7.s4, v8.s4); dump();
cls(v7.s4, v16.s4); dump();
cls(v7.s4, v31.s4); dump();
clz(v7.s4, v7.s4); dump();
clz(v0.s4, v7.s4); dump();
clz(v1.s4, v7.s4); dump();
clz(v2.s4, v7.s4); dump();
clz(v4.s4, v7.s4); dump();
clz(v8.s4, v7.s4); dump();
clz(v16.s4, v7.s4); dump();
clz(v31.s4, v7.s4); dump();
clz(v7.s4, v7.s4); dump();
clz(v7.s4, v0.s4); dump();
clz(v7.s4, v1.s4); dump();
clz(v7.s4, v2.s4); dump();
clz(v7.s4, v4.s4); dump();
clz(v7.s4, v8.s4); dump();
clz(v7.s4, v16.s4); dump();
clz(v7.s4, v31.s4); dump();
rev64(v7.s4, v7.s4); dump();
rev64(v0.s4, v7.s4); dump();
rev64(v1.s4, v7.s4); dump();
rev64(v2.s4, v7.s4); dump();
rev64(v4.s4, v7.s4); dump();
rev64(v8.s4, v7.s4); dump();
rev64(v16.s4, v7.s4); dump();
rev64(v31.s4, v7.s4); dump();
rev64(v7.s4, v7.s4); dump();
rev64(v7.s4, v0.s4); dump();
rev64(v7.s4, v1.s4); dump();
rev64(v7.s4, v2.s4); dump();
rev64(v7.s4, v4.s4); dump();
rev64(v7.s4, v8.s4); dump();
rev64(v7.s4, v16.s4); dump();
rev64(v7.s4, v31.s4); dump();
//DataProcSimd_UnaryArithmetic2:0
cnt(v7.b8, v7.b8); dump();
cnt(v0.b8, v7.b8); dump();
cnt(v1.b8, v7.b8); dump();
cnt(v2.b8, v7.b8); dump();
cnt(v4.b8, v7.b8); dump();
cnt(v8.b8, v7.b8); dump();
cnt(v16.b8, v7.b8); dump();
cnt(v31.b8, v7.b8); dump();
cnt(v7.b8, v7.b8); dump();
cnt(v7.b8, v0.b8); dump();
cnt(v7.b8, v1.b8); dump();
cnt(v7.b8, v2.b8); dump();
cnt(v7.b8, v4.b8); dump();
cnt(v7.b8, v8.b8); dump();
cnt(v7.b8, v16.b8); dump();
cnt(v7.b8, v31.b8); dump();
mvn(v7.b8, v7.b8); dump();
mvn(v0.b8, v7.b8); dump();
mvn(v1.b8, v7.b8); dump();
mvn(v2.b8, v7.b8); dump();
mvn(v4.b8, v7.b8); dump();
mvn(v8.b8, v7.b8); dump();
mvn(v16.b8, v7.b8); dump();
mvn(v31.b8, v7.b8); dump();
mvn(v7.b8, v7.b8); dump();
mvn(v7.b8, v0.b8); dump();
mvn(v7.b8, v1.b8); dump();
mvn(v7.b8, v2.b8); dump();
mvn(v7.b8, v4.b8); dump();
mvn(v7.b8, v8.b8); dump();
mvn(v7.b8, v16.b8); dump();
mvn(v7.b8, v31.b8); dump();
not_(v7.b8, v7.b8); dump();
not_(v0.b8, v7.b8); dump();
not_(v1.b8, v7.b8); dump();
not_(v2.b8, v7.b8); dump();
not_(v4.b8, v7.b8); dump();
not_(v8.b8, v7.b8); dump();
not_(v16.b8, v7.b8); dump();
not_(v31.b8, v7.b8); dump();
not_(v7.b8, v7.b8); dump();
not_(v7.b8, v0.b8); dump();
not_(v7.b8, v1.b8); dump();
not_(v7.b8, v2.b8); dump();
not_(v7.b8, v4.b8); dump();
not_(v7.b8, v8.b8); dump();
not_(v7.b8, v16.b8); dump();
not_(v7.b8, v31.b8); dump();
rbit(v7.b8, v7.b8); dump();
rbit(v0.b8, v7.b8); dump();
rbit(v1.b8, v7.b8); dump();
rbit(v2.b8, v7.b8); dump();
rbit(v4.b8, v7.b8); dump();
rbit(v8.b8, v7.b8); dump();
rbit(v16.b8, v7.b8); dump();
rbit(v31.b8, v7.b8); dump();
rbit(v7.b8, v7.b8); dump();
rbit(v7.b8, v0.b8); dump();
rbit(v7.b8, v1.b8); dump();
rbit(v7.b8, v2.b8); dump();
rbit(v7.b8, v4.b8); dump();
rbit(v7.b8, v8.b8); dump();
rbit(v7.b8, v16.b8); dump();
rbit(v7.b8, v31.b8); dump();
rev16(v7.b8, v7.b8); dump();
rev16(v0.b8, v7.b8); dump();
rev16(v1.b8, v7.b8); dump();
rev16(v2.b8, v7.b8); dump();
rev16(v4.b8, v7.b8); dump();
rev16(v8.b8, v7.b8); dump();
rev16(v16.b8, v7.b8); dump();
rev16(v31.b8, v7.b8); dump();
rev16(v7.b8, v7.b8); dump();
rev16(v7.b8, v0.b8); dump();
rev16(v7.b8, v1.b8); dump();
rev16(v7.b8, v2.b8); dump();
rev16(v7.b8, v4.b8); dump();
rev16(v7.b8, v8.b8); dump();
rev16(v7.b8, v16.b8); dump();
rev16(v7.b8, v31.b8); dump();
//DataProcSimd_UnaryArithmetic2:1
cnt(v7.b16, v7.b16); dump();
cnt(v0.b16, v7.b16); dump();
cnt(v1.b16, v7.b16); dump();
cnt(v2.b16, v7.b16); dump();
cnt(v4.b16, v7.b16); dump();
cnt(v8.b16, v7.b16); dump();
cnt(v16.b16, v7.b16); dump();
cnt(v31.b16, v7.b16); dump();
cnt(v7.b16, v7.b16); dump();
cnt(v7.b16, v0.b16); dump();
cnt(v7.b16, v1.b16); dump();
cnt(v7.b16, v2.b16); dump();
cnt(v7.b16, v4.b16); dump();
cnt(v7.b16, v8.b16); dump();
cnt(v7.b16, v16.b16); dump();
cnt(v7.b16, v31.b16); dump();
mvn(v7.b16, v7.b16); dump();
mvn(v0.b16, v7.b16); dump();
mvn(v1.b16, v7.b16); dump();
mvn(v2.b16, v7.b16); dump();
mvn(v4.b16, v7.b16); dump();
mvn(v8.b16, v7.b16); dump();
mvn(v16.b16, v7.b16); dump();
mvn(v31.b16, v7.b16); dump();
mvn(v7.b16, v7.b16); dump();
mvn(v7.b16, v0.b16); dump();
mvn(v7.b16, v1.b16); dump();
mvn(v7.b16, v2.b16); dump();
mvn(v7.b16, v4.b16); dump();
mvn(v7.b16, v8.b16); dump();
mvn(v7.b16, v16.b16); dump();
mvn(v7.b16, v31.b16); dump();
not_(v7.b16, v7.b16); dump();
not_(v0.b16, v7.b16); dump();
not_(v1.b16, v7.b16); dump();
not_(v2.b16, v7.b16); dump();
not_(v4.b16, v7.b16); dump();
not_(v8.b16, v7.b16); dump();
not_(v16.b16, v7.b16); dump();
not_(v31.b16, v7.b16); dump();
not_(v7.b16, v7.b16); dump();
not_(v7.b16, v0.b16); dump();
not_(v7.b16, v1.b16); dump();
not_(v7.b16, v2.b16); dump();
not_(v7.b16, v4.b16); dump();
not_(v7.b16, v8.b16); dump();
not_(v7.b16, v16.b16); dump();
not_(v7.b16, v31.b16); dump();
rbit(v7.b16, v7.b16); dump();
rbit(v0.b16, v7.b16); dump();
rbit(v1.b16, v7.b16); dump();
rbit(v2.b16, v7.b16); dump();
rbit(v4.b16, v7.b16); dump();
rbit(v8.b16, v7.b16); dump();
rbit(v16.b16, v7.b16); dump();
rbit(v31.b16, v7.b16); dump();
rbit(v7.b16, v7.b16); dump();
rbit(v7.b16, v0.b16); dump();
rbit(v7.b16, v1.b16); dump();
rbit(v7.b16, v2.b16); dump();
rbit(v7.b16, v4.b16); dump();
rbit(v7.b16, v8.b16); dump();
rbit(v7.b16, v16.b16); dump();
rbit(v7.b16, v31.b16); dump();
rev16(v7.b16, v7.b16); dump();
rev16(v0.b16, v7.b16); dump();
rev16(v1.b16, v7.b16); dump();
rev16(v2.b16, v7.b16); dump();
rev16(v4.b16, v7.b16); dump();
rev16(v8.b16, v7.b16); dump();
rev16(v16.b16, v7.b16); dump();
rev16(v31.b16, v7.b16); dump();
rev16(v7.b16, v7.b16); dump();
rev16(v7.b16, v0.b16); dump();
rev16(v7.b16, v1.b16); dump();
rev16(v7.b16, v2.b16); dump();
rev16(v7.b16, v4.b16); dump();
rev16(v7.b16, v8.b16); dump();
rev16(v7.b16, v16.b16); dump();
rev16(v7.b16, v31.b16); dump();
//DataProcSimd_UnaryArithmetic3:0
fabs(v7.h4, v7.h4); dump();
fabs(v0.h4, v7.h4); dump();
fabs(v1.h4, v7.h4); dump();
fabs(v2.h4, v7.h4); dump();
fabs(v4.h4, v7.h4); dump();
fabs(v8.h4, v7.h4); dump();
fabs(v16.h4, v7.h4); dump();
fabs(v31.h4, v7.h4); dump();
fabs(v7.h4, v7.h4); dump();
fabs(v7.h4, v0.h4); dump();
fabs(v7.h4, v1.h4); dump();
fabs(v7.h4, v2.h4); dump();
fabs(v7.h4, v4.h4); dump();
fabs(v7.h4, v8.h4); dump();
fabs(v7.h4, v16.h4); dump();
fabs(v7.h4, v31.h4); dump();
fneg(v7.h4, v7.h4); dump();
fneg(v0.h4, v7.h4); dump();
fneg(v1.h4, v7.h4); dump();
fneg(v2.h4, v7.h4); dump();
fneg(v4.h4, v7.h4); dump();
fneg(v8.h4, v7.h4); dump();
fneg(v16.h4, v7.h4); dump();
fneg(v31.h4, v7.h4); dump();
fneg(v7.h4, v7.h4); dump();
fneg(v7.h4, v0.h4); dump();
fneg(v7.h4, v1.h4); dump();
fneg(v7.h4, v2.h4); dump();
fneg(v7.h4, v4.h4); dump();
fneg(v7.h4, v8.h4); dump();
fneg(v7.h4, v16.h4); dump();
fneg(v7.h4, v31.h4); dump();
frinti(v7.h4, v7.h4); dump();
frinti(v0.h4, v7.h4); dump();
frinti(v1.h4, v7.h4); dump();
frinti(v2.h4, v7.h4); dump();
frinti(v4.h4, v7.h4); dump();
frinti(v8.h4, v7.h4); dump();
frinti(v16.h4, v7.h4); dump();
frinti(v31.h4, v7.h4); dump();
frinti(v7.h4, v7.h4); dump();
frinti(v7.h4, v0.h4); dump();
frinti(v7.h4, v1.h4); dump();
frinti(v7.h4, v2.h4); dump();
frinti(v7.h4, v4.h4); dump();
frinti(v7.h4, v8.h4); dump();
frinti(v7.h4, v16.h4); dump();
frinti(v7.h4, v31.h4); dump();
frintm(v7.h4, v7.h4); dump();
frintm(v0.h4, v7.h4); dump();
frintm(v1.h4, v7.h4); dump();
frintm(v2.h4, v7.h4); dump();
frintm(v4.h4, v7.h4); dump();
frintm(v8.h4, v7.h4); dump();
frintm(v16.h4, v7.h4); dump();
frintm(v31.h4, v7.h4); dump();
frintm(v7.h4, v7.h4); dump();
frintm(v7.h4, v0.h4); dump();
frintm(v7.h4, v1.h4); dump();
frintm(v7.h4, v2.h4); dump();
frintm(v7.h4, v4.h4); dump();
frintm(v7.h4, v8.h4); dump();
frintm(v7.h4, v16.h4); dump();
frintm(v7.h4, v31.h4); dump();
frintn(v7.h4, v7.h4); dump();
frintn(v0.h4, v7.h4); dump();
frintn(v1.h4, v7.h4); dump();
frintn(v2.h4, v7.h4); dump();
frintn(v4.h4, v7.h4); dump();
frintn(v8.h4, v7.h4); dump();
frintn(v16.h4, v7.h4); dump();
frintn(v31.h4, v7.h4); dump();
frintn(v7.h4, v7.h4); dump();
frintn(v7.h4, v0.h4); dump();
frintn(v7.h4, v1.h4); dump();
frintn(v7.h4, v2.h4); dump();
frintn(v7.h4, v4.h4); dump();
frintn(v7.h4, v8.h4); dump();
frintn(v7.h4, v16.h4); dump();
frintn(v7.h4, v31.h4); dump();
frintp(v7.h4, v7.h4); dump();
frintp(v0.h4, v7.h4); dump();
frintp(v1.h4, v7.h4); dump();
frintp(v2.h4, v7.h4); dump();
frintp(v4.h4, v7.h4); dump();
frintp(v8.h4, v7.h4); dump();
frintp(v16.h4, v7.h4); dump();
frintp(v31.h4, v7.h4); dump();
frintp(v7.h4, v7.h4); dump();
frintp(v7.h4, v0.h4); dump();
frintp(v7.h4, v1.h4); dump();
frintp(v7.h4, v2.h4); dump();
frintp(v7.h4, v4.h4); dump();
frintp(v7.h4, v8.h4); dump();
frintp(v7.h4, v16.h4); dump();
frintp(v7.h4, v31.h4); dump();
frintx(v7.h4, v7.h4); dump();
frintx(v0.h4, v7.h4); dump();
frintx(v1.h4, v7.h4); dump();
frintx(v2.h4, v7.h4); dump();
frintx(v4.h4, v7.h4); dump();
frintx(v8.h4, v7.h4); dump();
frintx(v16.h4, v7.h4); dump();
frintx(v31.h4, v7.h4); dump();
frintx(v7.h4, v7.h4); dump();
frintx(v7.h4, v0.h4); dump();
frintx(v7.h4, v1.h4); dump();
frintx(v7.h4, v2.h4); dump();
frintx(v7.h4, v4.h4); dump();
frintx(v7.h4, v8.h4); dump();
frintx(v7.h4, v16.h4); dump();
frintx(v7.h4, v31.h4); dump();
frintz(v7.h4, v7.h4); dump();
frintz(v0.h4, v7.h4); dump();
frintz(v1.h4, v7.h4); dump();
frintz(v2.h4, v7.h4); dump();
frintz(v4.h4, v7.h4); dump();
frintz(v8.h4, v7.h4); dump();
frintz(v16.h4, v7.h4); dump();
frintz(v31.h4, v7.h4); dump();
frintz(v7.h4, v7.h4); dump();
frintz(v7.h4, v0.h4); dump();
frintz(v7.h4, v1.h4); dump();
frintz(v7.h4, v2.h4); dump();
frintz(v7.h4, v4.h4); dump();
frintz(v7.h4, v8.h4); dump();
frintz(v7.h4, v16.h4); dump();
frintz(v7.h4, v31.h4); dump();
fsqrt(v7.h4, v7.h4); dump();
fsqrt(v0.h4, v7.h4); dump();
fsqrt(v1.h4, v7.h4); dump();
fsqrt(v2.h4, v7.h4); dump();
fsqrt(v4.h4, v7.h4); dump();
fsqrt(v8.h4, v7.h4); dump();
fsqrt(v16.h4, v7.h4); dump();
fsqrt(v31.h4, v7.h4); dump();
fsqrt(v7.h4, v7.h4); dump();
fsqrt(v7.h4, v0.h4); dump();
fsqrt(v7.h4, v1.h4); dump();
fsqrt(v7.h4, v2.h4); dump();
fsqrt(v7.h4, v4.h4); dump();
fsqrt(v7.h4, v8.h4); dump();
fsqrt(v7.h4, v16.h4); dump();
fsqrt(v7.h4, v31.h4); dump();
//DataProcSimd_UnaryArithmetic3:1
fabs(v7.h8, v7.h8); dump();
fabs(v0.h8, v7.h8); dump();
fabs(v1.h8, v7.h8); dump();
fabs(v2.h8, v7.h8); dump();
fabs(v4.h8, v7.h8); dump();
fabs(v8.h8, v7.h8); dump();
fabs(v16.h8, v7.h8); dump();
fabs(v31.h8, v7.h8); dump();
fabs(v7.h8, v7.h8); dump();
fabs(v7.h8, v0.h8); dump();
fabs(v7.h8, v1.h8); dump();
fabs(v7.h8, v2.h8); dump();
fabs(v7.h8, v4.h8); dump();
fabs(v7.h8, v8.h8); dump();
fabs(v7.h8, v16.h8); dump();
fabs(v7.h8, v31.h8); dump();
fneg(v7.h8, v7.h8); dump();
fneg(v0.h8, v7.h8); dump();
fneg(v1.h8, v7.h8); dump();
fneg(v2.h8, v7.h8); dump();
fneg(v4.h8, v7.h8); dump();
fneg(v8.h8, v7.h8); dump();
fneg(v16.h8, v7.h8); dump();
fneg(v31.h8, v7.h8); dump();
fneg(v7.h8, v7.h8); dump();
fneg(v7.h8, v0.h8); dump();
fneg(v7.h8, v1.h8); dump();
fneg(v7.h8, v2.h8); dump();
fneg(v7.h8, v4.h8); dump();
fneg(v7.h8, v8.h8); dump();
fneg(v7.h8, v16.h8); dump();
fneg(v7.h8, v31.h8); dump();
frinti(v7.h8, v7.h8); dump();
frinti(v0.h8, v7.h8); dump();
frinti(v1.h8, v7.h8); dump();
frinti(v2.h8, v7.h8); dump();
frinti(v4.h8, v7.h8); dump();
frinti(v8.h8, v7.h8); dump();
frinti(v16.h8, v7.h8); dump();
frinti(v31.h8, v7.h8); dump();
frinti(v7.h8, v7.h8); dump();
frinti(v7.h8, v0.h8); dump();
frinti(v7.h8, v1.h8); dump();
frinti(v7.h8, v2.h8); dump();
frinti(v7.h8, v4.h8); dump();
frinti(v7.h8, v8.h8); dump();
frinti(v7.h8, v16.h8); dump();
frinti(v7.h8, v31.h8); dump();
frintm(v7.h8, v7.h8); dump();
frintm(v0.h8, v7.h8); dump();
frintm(v1.h8, v7.h8); dump();
frintm(v2.h8, v7.h8); dump();
frintm(v4.h8, v7.h8); dump();
frintm(v8.h8, v7.h8); dump();
frintm(v16.h8, v7.h8); dump();
frintm(v31.h8, v7.h8); dump();
frintm(v7.h8, v7.h8); dump();
frintm(v7.h8, v0.h8); dump();
frintm(v7.h8, v1.h8); dump();
frintm(v7.h8, v2.h8); dump();
frintm(v7.h8, v4.h8); dump();
frintm(v7.h8, v8.h8); dump();
frintm(v7.h8, v16.h8); dump();
frintm(v7.h8, v31.h8); dump();
frintn(v7.h8, v7.h8); dump();
frintn(v0.h8, v7.h8); dump();
frintn(v1.h8, v7.h8); dump();
frintn(v2.h8, v7.h8); dump();
frintn(v4.h8, v7.h8); dump();
frintn(v8.h8, v7.h8); dump();
frintn(v16.h8, v7.h8); dump();
frintn(v31.h8, v7.h8); dump();
frintn(v7.h8, v7.h8); dump();
frintn(v7.h8, v0.h8); dump();
frintn(v7.h8, v1.h8); dump();
frintn(v7.h8, v2.h8); dump();
frintn(v7.h8, v4.h8); dump();
frintn(v7.h8, v8.h8); dump();
frintn(v7.h8, v16.h8); dump();
frintn(v7.h8, v31.h8); dump();
frintp(v7.h8, v7.h8); dump();
frintp(v0.h8, v7.h8); dump();
frintp(v1.h8, v7.h8); dump();
frintp(v2.h8, v7.h8); dump();
frintp(v4.h8, v7.h8); dump();
frintp(v8.h8, v7.h8); dump();
frintp(v16.h8, v7.h8); dump();
frintp(v31.h8, v7.h8); dump();
frintp(v7.h8, v7.h8); dump();
frintp(v7.h8, v0.h8); dump();
frintp(v7.h8, v1.h8); dump();
frintp(v7.h8, v2.h8); dump();
frintp(v7.h8, v4.h8); dump();
frintp(v7.h8, v8.h8); dump();
frintp(v7.h8, v16.h8); dump();
frintp(v7.h8, v31.h8); dump();
frintx(v7.h8, v7.h8); dump();
frintx(v0.h8, v7.h8); dump();
frintx(v1.h8, v7.h8); dump();
frintx(v2.h8, v7.h8); dump();
frintx(v4.h8, v7.h8); dump();
frintx(v8.h8, v7.h8); dump();
frintx(v16.h8, v7.h8); dump();
frintx(v31.h8, v7.h8); dump();
frintx(v7.h8, v7.h8); dump();
frintx(v7.h8, v0.h8); dump();
frintx(v7.h8, v1.h8); dump();
frintx(v7.h8, v2.h8); dump();
frintx(v7.h8, v4.h8); dump();
frintx(v7.h8, v8.h8); dump();
frintx(v7.h8, v16.h8); dump();
frintx(v7.h8, v31.h8); dump();
frintz(v7.h8, v7.h8); dump();
frintz(v0.h8, v7.h8); dump();
frintz(v1.h8, v7.h8); dump();
frintz(v2.h8, v7.h8); dump();
frintz(v4.h8, v7.h8); dump();
frintz(v8.h8, v7.h8); dump();
frintz(v16.h8, v7.h8); dump();
frintz(v31.h8, v7.h8); dump();
frintz(v7.h8, v7.h8); dump();
frintz(v7.h8, v0.h8); dump();
frintz(v7.h8, v1.h8); dump();
frintz(v7.h8, v2.h8); dump();
frintz(v7.h8, v4.h8); dump();
frintz(v7.h8, v8.h8); dump();
frintz(v7.h8, v16.h8); dump();
frintz(v7.h8, v31.h8); dump();
fsqrt(v7.h8, v7.h8); dump();
fsqrt(v0.h8, v7.h8); dump();
fsqrt(v1.h8, v7.h8); dump();
fsqrt(v2.h8, v7.h8); dump();
fsqrt(v4.h8, v7.h8); dump();
fsqrt(v8.h8, v7.h8); dump();
fsqrt(v16.h8, v7.h8); dump();
fsqrt(v31.h8, v7.h8); dump();
fsqrt(v7.h8, v7.h8); dump();
fsqrt(v7.h8, v0.h8); dump();
fsqrt(v7.h8, v1.h8); dump();
fsqrt(v7.h8, v2.h8); dump();
fsqrt(v7.h8, v4.h8); dump();
fsqrt(v7.h8, v8.h8); dump();
fsqrt(v7.h8, v16.h8); dump();
fsqrt(v7.h8, v31.h8); dump();
//DataProcSimd_UnaryArithmetic3:2
fabs(v7.s2, v7.s2); dump();
fabs(v0.s2, v7.s2); dump();
fabs(v1.s2, v7.s2); dump();
fabs(v2.s2, v7.s2); dump();
fabs(v4.s2, v7.s2); dump();
fabs(v8.s2, v7.s2); dump();
fabs(v16.s2, v7.s2); dump();
fabs(v31.s2, v7.s2); dump();
fabs(v7.s2, v7.s2); dump();
fabs(v7.s2, v0.s2); dump();
fabs(v7.s2, v1.s2); dump();
fabs(v7.s2, v2.s2); dump();
fabs(v7.s2, v4.s2); dump();
fabs(v7.s2, v8.s2); dump();
fabs(v7.s2, v16.s2); dump();
fabs(v7.s2, v31.s2); dump();
fneg(v7.s2, v7.s2); dump();
fneg(v0.s2, v7.s2); dump();
fneg(v1.s2, v7.s2); dump();
fneg(v2.s2, v7.s2); dump();
fneg(v4.s2, v7.s2); dump();
fneg(v8.s2, v7.s2); dump();
fneg(v16.s2, v7.s2); dump();
fneg(v31.s2, v7.s2); dump();
fneg(v7.s2, v7.s2); dump();
fneg(v7.s2, v0.s2); dump();
fneg(v7.s2, v1.s2); dump();
fneg(v7.s2, v2.s2); dump();
fneg(v7.s2, v4.s2); dump();
fneg(v7.s2, v8.s2); dump();
fneg(v7.s2, v16.s2); dump();
fneg(v7.s2, v31.s2); dump();
frinti(v7.s2, v7.s2); dump();
frinti(v0.s2, v7.s2); dump();
frinti(v1.s2, v7.s2); dump();
frinti(v2.s2, v7.s2); dump();
frinti(v4.s2, v7.s2); dump();
frinti(v8.s2, v7.s2); dump();
frinti(v16.s2, v7.s2); dump();
frinti(v31.s2, v7.s2); dump();
frinti(v7.s2, v7.s2); dump();
frinti(v7.s2, v0.s2); dump();
frinti(v7.s2, v1.s2); dump();
frinti(v7.s2, v2.s2); dump();
frinti(v7.s2, v4.s2); dump();
frinti(v7.s2, v8.s2); dump();
frinti(v7.s2, v16.s2); dump();
frinti(v7.s2, v31.s2); dump();
frintm(v7.s2, v7.s2); dump();
frintm(v0.s2, v7.s2); dump();
frintm(v1.s2, v7.s2); dump();
frintm(v2.s2, v7.s2); dump();
frintm(v4.s2, v7.s2); dump();
frintm(v8.s2, v7.s2); dump();
frintm(v16.s2, v7.s2); dump();
frintm(v31.s2, v7.s2); dump();
frintm(v7.s2, v7.s2); dump();
frintm(v7.s2, v0.s2); dump();
frintm(v7.s2, v1.s2); dump();
frintm(v7.s2, v2.s2); dump();
frintm(v7.s2, v4.s2); dump();
frintm(v7.s2, v8.s2); dump();
frintm(v7.s2, v16.s2); dump();
frintm(v7.s2, v31.s2); dump();
frintn(v7.s2, v7.s2); dump();
frintn(v0.s2, v7.s2); dump();
frintn(v1.s2, v7.s2); dump();
frintn(v2.s2, v7.s2); dump();
frintn(v4.s2, v7.s2); dump();
frintn(v8.s2, v7.s2); dump();
frintn(v16.s2, v7.s2); dump();
frintn(v31.s2, v7.s2); dump();
frintn(v7.s2, v7.s2); dump();
frintn(v7.s2, v0.s2); dump();
frintn(v7.s2, v1.s2); dump();
frintn(v7.s2, v2.s2); dump();
frintn(v7.s2, v4.s2); dump();
frintn(v7.s2, v8.s2); dump();
frintn(v7.s2, v16.s2); dump();
frintn(v7.s2, v31.s2); dump();
frintp(v7.s2, v7.s2); dump();
frintp(v0.s2, v7.s2); dump();
frintp(v1.s2, v7.s2); dump();
frintp(v2.s2, v7.s2); dump();
frintp(v4.s2, v7.s2); dump();
frintp(v8.s2, v7.s2); dump();
frintp(v16.s2, v7.s2); dump();
frintp(v31.s2, v7.s2); dump();
frintp(v7.s2, v7.s2); dump();
frintp(v7.s2, v0.s2); dump();
frintp(v7.s2, v1.s2); dump();
frintp(v7.s2, v2.s2); dump();
frintp(v7.s2, v4.s2); dump();
frintp(v7.s2, v8.s2); dump();
frintp(v7.s2, v16.s2); dump();
frintp(v7.s2, v31.s2); dump();
frintx(v7.s2, v7.s2); dump();
frintx(v0.s2, v7.s2); dump();
frintx(v1.s2, v7.s2); dump();
frintx(v2.s2, v7.s2); dump();
frintx(v4.s2, v7.s2); dump();
frintx(v8.s2, v7.s2); dump();
frintx(v16.s2, v7.s2); dump();
frintx(v31.s2, v7.s2); dump();
frintx(v7.s2, v7.s2); dump();
frintx(v7.s2, v0.s2); dump();
frintx(v7.s2, v1.s2); dump();
frintx(v7.s2, v2.s2); dump();
frintx(v7.s2, v4.s2); dump();
frintx(v7.s2, v8.s2); dump();
frintx(v7.s2, v16.s2); dump();
frintx(v7.s2, v31.s2); dump();
frintz(v7.s2, v7.s2); dump();
frintz(v0.s2, v7.s2); dump();
frintz(v1.s2, v7.s2); dump();
frintz(v2.s2, v7.s2); dump();
frintz(v4.s2, v7.s2); dump();
frintz(v8.s2, v7.s2); dump();
frintz(v16.s2, v7.s2); dump();
frintz(v31.s2, v7.s2); dump();
frintz(v7.s2, v7.s2); dump();
frintz(v7.s2, v0.s2); dump();
frintz(v7.s2, v1.s2); dump();
frintz(v7.s2, v2.s2); dump();
frintz(v7.s2, v4.s2); dump();
frintz(v7.s2, v8.s2); dump();
frintz(v7.s2, v16.s2); dump();
frintz(v7.s2, v31.s2); dump();
fsqrt(v7.s2, v7.s2); dump();
fsqrt(v0.s2, v7.s2); dump();
fsqrt(v1.s2, v7.s2); dump();
fsqrt(v2.s2, v7.s2); dump();
fsqrt(v4.s2, v7.s2); dump();
fsqrt(v8.s2, v7.s2); dump();
fsqrt(v16.s2, v7.s2); dump();
fsqrt(v31.s2, v7.s2); dump();
fsqrt(v7.s2, v7.s2); dump();
fsqrt(v7.s2, v0.s2); dump();
fsqrt(v7.s2, v1.s2); dump();
fsqrt(v7.s2, v2.s2); dump();
fsqrt(v7.s2, v4.s2); dump();
fsqrt(v7.s2, v8.s2); dump();
fsqrt(v7.s2, v16.s2); dump();
fsqrt(v7.s2, v31.s2); dump();
//DataProcSimd_UnaryArithmetic3:3
fabs(v7.s4, v7.s4); dump();
fabs(v0.s4, v7.s4); dump();
fabs(v1.s4, v7.s4); dump();
fabs(v2.s4, v7.s4); dump();
fabs(v4.s4, v7.s4); dump();
fabs(v8.s4, v7.s4); dump();
fabs(v16.s4, v7.s4); dump();
fabs(v31.s4, v7.s4); dump();
fabs(v7.s4, v7.s4); dump();
fabs(v7.s4, v0.s4); dump();
fabs(v7.s4, v1.s4); dump();
fabs(v7.s4, v2.s4); dump();
fabs(v7.s4, v4.s4); dump();
fabs(v7.s4, v8.s4); dump();
fabs(v7.s4, v16.s4); dump();
fabs(v7.s4, v31.s4); dump();
fneg(v7.s4, v7.s4); dump();
fneg(v0.s4, v7.s4); dump();
fneg(v1.s4, v7.s4); dump();
fneg(v2.s4, v7.s4); dump();
fneg(v4.s4, v7.s4); dump();
fneg(v8.s4, v7.s4); dump();
fneg(v16.s4, v7.s4); dump();
fneg(v31.s4, v7.s4); dump();
fneg(v7.s4, v7.s4); dump();
fneg(v7.s4, v0.s4); dump();
fneg(v7.s4, v1.s4); dump();
fneg(v7.s4, v2.s4); dump();
fneg(v7.s4, v4.s4); dump();
fneg(v7.s4, v8.s4); dump();
fneg(v7.s4, v16.s4); dump();
fneg(v7.s4, v31.s4); dump();
frinti(v7.s4, v7.s4); dump();
frinti(v0.s4, v7.s4); dump();
frinti(v1.s4, v7.s4); dump();
frinti(v2.s4, v7.s4); dump();
frinti(v4.s4, v7.s4); dump();
frinti(v8.s4, v7.s4); dump();
frinti(v16.s4, v7.s4); dump();
frinti(v31.s4, v7.s4); dump();
frinti(v7.s4, v7.s4); dump();
frinti(v7.s4, v0.s4); dump();
frinti(v7.s4, v1.s4); dump();
frinti(v7.s4, v2.s4); dump();
frinti(v7.s4, v4.s4); dump();
frinti(v7.s4, v8.s4); dump();
frinti(v7.s4, v16.s4); dump();
frinti(v7.s4, v31.s4); dump();
frintm(v7.s4, v7.s4); dump();
frintm(v0.s4, v7.s4); dump();
frintm(v1.s4, v7.s4); dump();
frintm(v2.s4, v7.s4); dump();
frintm(v4.s4, v7.s4); dump();
frintm(v8.s4, v7.s4); dump();
frintm(v16.s4, v7.s4); dump();
frintm(v31.s4, v7.s4); dump();
frintm(v7.s4, v7.s4); dump();
frintm(v7.s4, v0.s4); dump();
frintm(v7.s4, v1.s4); dump();
frintm(v7.s4, v2.s4); dump();
frintm(v7.s4, v4.s4); dump();
frintm(v7.s4, v8.s4); dump();
frintm(v7.s4, v16.s4); dump();
frintm(v7.s4, v31.s4); dump();
frintn(v7.s4, v7.s4); dump();
frintn(v0.s4, v7.s4); dump();
frintn(v1.s4, v7.s4); dump();
frintn(v2.s4, v7.s4); dump();
frintn(v4.s4, v7.s4); dump();
frintn(v8.s4, v7.s4); dump();
frintn(v16.s4, v7.s4); dump();
frintn(v31.s4, v7.s4); dump();
frintn(v7.s4, v7.s4); dump();
frintn(v7.s4, v0.s4); dump();
frintn(v7.s4, v1.s4); dump();
frintn(v7.s4, v2.s4); dump();
frintn(v7.s4, v4.s4); dump();
frintn(v7.s4, v8.s4); dump();
frintn(v7.s4, v16.s4); dump();
frintn(v7.s4, v31.s4); dump();
frintp(v7.s4, v7.s4); dump();
frintp(v0.s4, v7.s4); dump();
frintp(v1.s4, v7.s4); dump();
frintp(v2.s4, v7.s4); dump();
frintp(v4.s4, v7.s4); dump();
frintp(v8.s4, v7.s4); dump();
frintp(v16.s4, v7.s4); dump();
frintp(v31.s4, v7.s4); dump();
frintp(v7.s4, v7.s4); dump();
frintp(v7.s4, v0.s4); dump();
frintp(v7.s4, v1.s4); dump();
frintp(v7.s4, v2.s4); dump();
frintp(v7.s4, v4.s4); dump();
frintp(v7.s4, v8.s4); dump();
frintp(v7.s4, v16.s4); dump();
frintp(v7.s4, v31.s4); dump();
frintx(v7.s4, v7.s4); dump();
frintx(v0.s4, v7.s4); dump();
frintx(v1.s4, v7.s4); dump();
frintx(v2.s4, v7.s4); dump();
frintx(v4.s4, v7.s4); dump();
frintx(v8.s4, v7.s4); dump();
frintx(v16.s4, v7.s4); dump();
frintx(v31.s4, v7.s4); dump();
frintx(v7.s4, v7.s4); dump();
frintx(v7.s4, v0.s4); dump();
frintx(v7.s4, v1.s4); dump();
frintx(v7.s4, v2.s4); dump();
frintx(v7.s4, v4.s4); dump();
frintx(v7.s4, v8.s4); dump();
frintx(v7.s4, v16.s4); dump();
frintx(v7.s4, v31.s4); dump();
frintz(v7.s4, v7.s4); dump();
frintz(v0.s4, v7.s4); dump();
frintz(v1.s4, v7.s4); dump();
frintz(v2.s4, v7.s4); dump();
frintz(v4.s4, v7.s4); dump();
frintz(v8.s4, v7.s4); dump();
frintz(v16.s4, v7.s4); dump();
frintz(v31.s4, v7.s4); dump();
frintz(v7.s4, v7.s4); dump();
frintz(v7.s4, v0.s4); dump();
frintz(v7.s4, v1.s4); dump();
frintz(v7.s4, v2.s4); dump();
frintz(v7.s4, v4.s4); dump();
frintz(v7.s4, v8.s4); dump();
frintz(v7.s4, v16.s4); dump();
frintz(v7.s4, v31.s4); dump();
fsqrt(v7.s4, v7.s4); dump();
fsqrt(v0.s4, v7.s4); dump();
fsqrt(v1.s4, v7.s4); dump();
fsqrt(v2.s4, v7.s4); dump();
fsqrt(v4.s4, v7.s4); dump();
fsqrt(v8.s4, v7.s4); dump();
fsqrt(v16.s4, v7.s4); dump();
fsqrt(v31.s4, v7.s4); dump();
fsqrt(v7.s4, v7.s4); dump();
fsqrt(v7.s4, v0.s4); dump();
fsqrt(v7.s4, v1.s4); dump();
fsqrt(v7.s4, v2.s4); dump();
fsqrt(v7.s4, v4.s4); dump();
fsqrt(v7.s4, v8.s4); dump();
fsqrt(v7.s4, v16.s4); dump();
fsqrt(v7.s4, v31.s4); dump();
//DataProcSimd_UnaryArithmetic3:4
fabs(v7.d2, v7.d2); dump();
fabs(v0.d2, v7.d2); dump();
fabs(v1.d2, v7.d2); dump();
fabs(v2.d2, v7.d2); dump();
fabs(v4.d2, v7.d2); dump();
fabs(v8.d2, v7.d2); dump();
fabs(v16.d2, v7.d2); dump();
fabs(v31.d2, v7.d2); dump();
fabs(v7.d2, v7.d2); dump();
fabs(v7.d2, v0.d2); dump();
fabs(v7.d2, v1.d2); dump();
fabs(v7.d2, v2.d2); dump();
fabs(v7.d2, v4.d2); dump();
fabs(v7.d2, v8.d2); dump();
fabs(v7.d2, v16.d2); dump();
fabs(v7.d2, v31.d2); dump();
fneg(v7.d2, v7.d2); dump();
fneg(v0.d2, v7.d2); dump();
fneg(v1.d2, v7.d2); dump();
fneg(v2.d2, v7.d2); dump();
fneg(v4.d2, v7.d2); dump();
fneg(v8.d2, v7.d2); dump();
fneg(v16.d2, v7.d2); dump();
fneg(v31.d2, v7.d2); dump();
fneg(v7.d2, v7.d2); dump();
fneg(v7.d2, v0.d2); dump();
fneg(v7.d2, v1.d2); dump();
fneg(v7.d2, v2.d2); dump();
fneg(v7.d2, v4.d2); dump();
fneg(v7.d2, v8.d2); dump();
fneg(v7.d2, v16.d2); dump();
fneg(v7.d2, v31.d2); dump();
frinti(v7.d2, v7.d2); dump();
frinti(v0.d2, v7.d2); dump();
frinti(v1.d2, v7.d2); dump();
frinti(v2.d2, v7.d2); dump();
frinti(v4.d2, v7.d2); dump();
frinti(v8.d2, v7.d2); dump();
frinti(v16.d2, v7.d2); dump();
frinti(v31.d2, v7.d2); dump();
frinti(v7.d2, v7.d2); dump();
frinti(v7.d2, v0.d2); dump();
frinti(v7.d2, v1.d2); dump();
frinti(v7.d2, v2.d2); dump();
frinti(v7.d2, v4.d2); dump();
frinti(v7.d2, v8.d2); dump();
frinti(v7.d2, v16.d2); dump();
frinti(v7.d2, v31.d2); dump();
frintm(v7.d2, v7.d2); dump();
frintm(v0.d2, v7.d2); dump();
frintm(v1.d2, v7.d2); dump();
frintm(v2.d2, v7.d2); dump();
frintm(v4.d2, v7.d2); dump();
frintm(v8.d2, v7.d2); dump();
frintm(v16.d2, v7.d2); dump();
frintm(v31.d2, v7.d2); dump();
frintm(v7.d2, v7.d2); dump();
frintm(v7.d2, v0.d2); dump();
frintm(v7.d2, v1.d2); dump();
frintm(v7.d2, v2.d2); dump();
frintm(v7.d2, v4.d2); dump();
frintm(v7.d2, v8.d2); dump();
frintm(v7.d2, v16.d2); dump();
frintm(v7.d2, v31.d2); dump();
frintn(v7.d2, v7.d2); dump();
frintn(v0.d2, v7.d2); dump();
frintn(v1.d2, v7.d2); dump();
frintn(v2.d2, v7.d2); dump();
frintn(v4.d2, v7.d2); dump();
frintn(v8.d2, v7.d2); dump();
frintn(v16.d2, v7.d2); dump();
frintn(v31.d2, v7.d2); dump();
frintn(v7.d2, v7.d2); dump();
frintn(v7.d2, v0.d2); dump();
frintn(v7.d2, v1.d2); dump();
frintn(v7.d2, v2.d2); dump();
frintn(v7.d2, v4.d2); dump();
frintn(v7.d2, v8.d2); dump();
frintn(v7.d2, v16.d2); dump();
frintn(v7.d2, v31.d2); dump();
frintp(v7.d2, v7.d2); dump();
frintp(v0.d2, v7.d2); dump();
frintp(v1.d2, v7.d2); dump();
frintp(v2.d2, v7.d2); dump();
frintp(v4.d2, v7.d2); dump();
frintp(v8.d2, v7.d2); dump();
frintp(v16.d2, v7.d2); dump();
frintp(v31.d2, v7.d2); dump();
frintp(v7.d2, v7.d2); dump();
frintp(v7.d2, v0.d2); dump();
frintp(v7.d2, v1.d2); dump();
frintp(v7.d2, v2.d2); dump();
frintp(v7.d2, v4.d2); dump();
frintp(v7.d2, v8.d2); dump();
frintp(v7.d2, v16.d2); dump();
frintp(v7.d2, v31.d2); dump();
frintx(v7.d2, v7.d2); dump();
frintx(v0.d2, v7.d2); dump();
frintx(v1.d2, v7.d2); dump();
frintx(v2.d2, v7.d2); dump();
frintx(v4.d2, v7.d2); dump();
frintx(v8.d2, v7.d2); dump();
frintx(v16.d2, v7.d2); dump();
frintx(v31.d2, v7.d2); dump();
frintx(v7.d2, v7.d2); dump();
frintx(v7.d2, v0.d2); dump();
frintx(v7.d2, v1.d2); dump();
frintx(v7.d2, v2.d2); dump();
frintx(v7.d2, v4.d2); dump();
frintx(v7.d2, v8.d2); dump();
frintx(v7.d2, v16.d2); dump();
frintx(v7.d2, v31.d2); dump();
frintz(v7.d2, v7.d2); dump();
frintz(v0.d2, v7.d2); dump();
frintz(v1.d2, v7.d2); dump();
frintz(v2.d2, v7.d2); dump();
frintz(v4.d2, v7.d2); dump();
frintz(v8.d2, v7.d2); dump();
frintz(v16.d2, v7.d2); dump();
frintz(v31.d2, v7.d2); dump();
frintz(v7.d2, v7.d2); dump();
frintz(v7.d2, v0.d2); dump();
frintz(v7.d2, v1.d2); dump();
frintz(v7.d2, v2.d2); dump();
frintz(v7.d2, v4.d2); dump();
frintz(v7.d2, v8.d2); dump();
frintz(v7.d2, v16.d2); dump();
frintz(v7.d2, v31.d2); dump();
fsqrt(v7.d2, v7.d2); dump();
fsqrt(v0.d2, v7.d2); dump();
fsqrt(v1.d2, v7.d2); dump();
fsqrt(v2.d2, v7.d2); dump();
fsqrt(v4.d2, v7.d2); dump();
fsqrt(v8.d2, v7.d2); dump();
fsqrt(v16.d2, v7.d2); dump();
fsqrt(v31.d2, v7.d2); dump();
fsqrt(v7.d2, v7.d2); dump();
fsqrt(v7.d2, v0.d2); dump();
fsqrt(v7.d2, v1.d2); dump();
fsqrt(v7.d2, v2.d2); dump();
fsqrt(v7.d2, v4.d2); dump();
fsqrt(v7.d2, v8.d2); dump();
fsqrt(v7.d2, v16.d2); dump();
fsqrt(v7.d2, v31.d2); dump();
//DataProcSimd_UnaryArithmetic4:0
fcvtl(v7.s4, v7.h4); dump();
fcvtl(v0.s4, v7.h4); dump();
fcvtl(v1.s4, v7.h4); dump();
fcvtl(v2.s4, v7.h4); dump();
fcvtl(v4.s4, v7.h4); dump();
fcvtl(v8.s4, v7.h4); dump();
fcvtl(v16.s4, v7.h4); dump();
fcvtl(v31.s4, v7.h4); dump();
fcvtl(v7.s4, v7.h4); dump();
fcvtl(v7.s4, v0.h4); dump();
fcvtl(v7.s4, v1.h4); dump();
fcvtl(v7.s4, v2.h4); dump();
fcvtl(v7.s4, v4.h4); dump();
fcvtl(v7.s4, v8.h4); dump();
fcvtl(v7.s4, v16.h4); dump();
fcvtl(v7.s4, v31.h4); dump();
//DataProcSimd_UnaryArithmetic4:1
fcvtl(v7.d2, v7.s2); dump();
fcvtl(v0.d2, v7.s2); dump();
fcvtl(v1.d2, v7.s2); dump();
fcvtl(v2.d2, v7.s2); dump();
fcvtl(v4.d2, v7.s2); dump();
fcvtl(v8.d2, v7.s2); dump();
fcvtl(v16.d2, v7.s2); dump();
fcvtl(v31.d2, v7.s2); dump();
fcvtl(v7.d2, v7.s2); dump();
fcvtl(v7.d2, v0.s2); dump();
fcvtl(v7.d2, v1.s2); dump();
fcvtl(v7.d2, v2.s2); dump();
fcvtl(v7.d2, v4.s2); dump();
fcvtl(v7.d2, v8.s2); dump();
fcvtl(v7.d2, v16.s2); dump();
fcvtl(v7.d2, v31.s2); dump();
//DataProcSimd_UnaryArithmetic5:0
fcvtl2(v7.s4, v7.h8); dump();
fcvtl2(v0.s4, v7.h8); dump();
fcvtl2(v1.s4, v7.h8); dump();
fcvtl2(v2.s4, v7.h8); dump();
fcvtl2(v4.s4, v7.h8); dump();
fcvtl2(v8.s4, v7.h8); dump();
fcvtl2(v16.s4, v7.h8); dump();
fcvtl2(v31.s4, v7.h8); dump();
fcvtl2(v7.s4, v7.h8); dump();
fcvtl2(v7.s4, v0.h8); dump();
fcvtl2(v7.s4, v1.h8); dump();
fcvtl2(v7.s4, v2.h8); dump();
fcvtl2(v7.s4, v4.h8); dump();
fcvtl2(v7.s4, v8.h8); dump();
fcvtl2(v7.s4, v16.h8); dump();
fcvtl2(v7.s4, v31.h8); dump();
//DataProcSimd_UnaryArithmetic5:1
fcvtl2(v7.d2, v7.s4); dump();
fcvtl2(v0.d2, v7.s4); dump();
fcvtl2(v1.d2, v7.s4); dump();
fcvtl2(v2.d2, v7.s4); dump();
fcvtl2(v4.d2, v7.s4); dump();
fcvtl2(v8.d2, v7.s4); dump();
fcvtl2(v16.d2, v7.s4); dump();
fcvtl2(v31.d2, v7.s4); dump();
fcvtl2(v7.d2, v7.s4); dump();
fcvtl2(v7.d2, v0.s4); dump();
fcvtl2(v7.d2, v1.s4); dump();
fcvtl2(v7.d2, v2.s4); dump();
fcvtl2(v7.d2, v4.s4); dump();
fcvtl2(v7.d2, v8.s4); dump();
fcvtl2(v7.d2, v16.s4); dump();
fcvtl2(v7.d2, v31.s4); dump();
//DataProcSimd_UnaryArithmetic6:0
fcvtn(v7.h4, v7.s4); dump();
fcvtn(v0.h4, v7.s4); dump();
fcvtn(v1.h4, v7.s4); dump();
fcvtn(v2.h4, v7.s4); dump();
fcvtn(v4.h4, v7.s4); dump();
fcvtn(v8.h4, v7.s4); dump();
fcvtn(v16.h4, v7.s4); dump();
fcvtn(v31.h4, v7.s4); dump();
fcvtn(v7.h4, v7.s4); dump();
fcvtn(v7.h4, v0.s4); dump();
fcvtn(v7.h4, v1.s4); dump();
fcvtn(v7.h4, v2.s4); dump();
fcvtn(v7.h4, v4.s4); dump();
fcvtn(v7.h4, v8.s4); dump();
fcvtn(v7.h4, v16.s4); dump();
fcvtn(v7.h4, v31.s4); dump();
//DataProcSimd_UnaryArithmetic6:1
fcvtn(v7.s2, v7.d2); dump();
fcvtn(v0.s2, v7.d2); dump();
fcvtn(v1.s2, v7.d2); dump();
fcvtn(v2.s2, v7.d2); dump();
fcvtn(v4.s2, v7.d2); dump();
fcvtn(v8.s2, v7.d2); dump();
fcvtn(v16.s2, v7.d2); dump();
fcvtn(v31.s2, v7.d2); dump();
fcvtn(v7.s2, v7.d2); dump();
fcvtn(v7.s2, v0.d2); dump();
fcvtn(v7.s2, v1.d2); dump();
fcvtn(v7.s2, v2.d2); dump();
fcvtn(v7.s2, v4.d2); dump();
fcvtn(v7.s2, v8.d2); dump();
fcvtn(v7.s2, v16.d2); dump();
fcvtn(v7.s2, v31.d2); dump();
//DataProcSimd_UnaryArithmetic7:0
fcvtn2(v7.h8, v7.s4); dump();
fcvtn2(v0.h8, v7.s4); dump();
fcvtn2(v1.h8, v7.s4); dump();
fcvtn2(v2.h8, v7.s4); dump();
fcvtn2(v4.h8, v7.s4); dump();
fcvtn2(v8.h8, v7.s4); dump();
fcvtn2(v16.h8, v7.s4); dump();
fcvtn2(v31.h8, v7.s4); dump();
fcvtn2(v7.h8, v7.s4); dump();
fcvtn2(v7.h8, v0.s4); dump();
fcvtn2(v7.h8, v1.s4); dump();
fcvtn2(v7.h8, v2.s4); dump();
fcvtn2(v7.h8, v4.s4); dump();
fcvtn2(v7.h8, v8.s4); dump();
fcvtn2(v7.h8, v16.s4); dump();
fcvtn2(v7.h8, v31.s4); dump();
//DataProcSimd_UnaryArithmetic7:1
fcvtn2(v7.s4, v7.d2); dump();
fcvtn2(v0.s4, v7.d2); dump();
fcvtn2(v1.s4, v7.d2); dump();
fcvtn2(v2.s4, v7.d2); dump();
fcvtn2(v4.s4, v7.d2); dump();
fcvtn2(v8.s4, v7.d2); dump();
fcvtn2(v16.s4, v7.d2); dump();
fcvtn2(v31.s4, v7.d2); dump();
fcvtn2(v7.s4, v7.d2); dump();
fcvtn2(v7.s4, v0.d2); dump();
fcvtn2(v7.s4, v1.d2); dump();
fcvtn2(v7.s4, v2.d2); dump();
fcvtn2(v7.s4, v4.d2); dump();
fcvtn2(v7.s4, v8.d2); dump();
fcvtn2(v7.s4, v16.d2); dump();
fcvtn2(v7.s4, v31.d2); dump();
//DataProcSimd_UnaryArithmetic8:0
fcvtxn(s7, d7); dump();
fcvtxn(s0, d7); dump();
fcvtxn(s1, d7); dump();
fcvtxn(s2, d7); dump();
fcvtxn(s4, d7); dump();
fcvtxn(s8, d7); dump();
fcvtxn(s16, d7); dump();
fcvtxn(s31, d7); dump();
fcvtxn(s7, d7); dump();
fcvtxn(s7, d0); dump();
fcvtxn(s7, d1); dump();
fcvtxn(s7, d2); dump();
fcvtxn(s7, d4); dump();
fcvtxn(s7, d8); dump();
fcvtxn(s7, d16); dump();
fcvtxn(s7, d31); dump();
//DataProcSimd_UnaryArithmetic8:1
fcvtxn(v7.s2, v7.d2); dump();
fcvtxn(v0.s2, v7.d2); dump();
fcvtxn(v1.s2, v7.d2); dump();
fcvtxn(v2.s2, v7.d2); dump();
fcvtxn(v4.s2, v7.d2); dump();
fcvtxn(v8.s2, v7.d2); dump();
fcvtxn(v16.s2, v7.d2); dump();
fcvtxn(v31.s2, v7.d2); dump();
fcvtxn(v7.s2, v7.d2); dump();
fcvtxn(v7.s2, v0.d2); dump();
fcvtxn(v7.s2, v1.d2); dump();
fcvtxn(v7.s2, v2.d2); dump();
fcvtxn(v7.s2, v4.d2); dump();
fcvtxn(v7.s2, v8.d2); dump();
fcvtxn(v7.s2, v16.d2); dump();
fcvtxn(v7.s2, v31.d2); dump();
//DataProcSimd_UnaryArithmetic9:0
fcvtxn2(v7.s4, v7.d2); dump();
fcvtxn2(v0.s4, v7.d2); dump();
fcvtxn2(v1.s4, v7.d2); dump();
fcvtxn2(v2.s4, v7.d2); dump();
fcvtxn2(v4.s4, v7.d2); dump();
fcvtxn2(v8.s4, v7.d2); dump();
fcvtxn2(v16.s4, v7.d2); dump();
fcvtxn2(v31.s4, v7.d2); dump();
fcvtxn2(v7.s4, v7.d2); dump();
fcvtxn2(v7.s4, v0.d2); dump();
fcvtxn2(v7.s4, v1.d2); dump();
fcvtxn2(v7.s4, v2.d2); dump();
fcvtxn2(v7.s4, v4.d2); dump();
fcvtxn2(v7.s4, v8.d2); dump();
fcvtxn2(v7.s4, v16.d2); dump();
fcvtxn2(v7.s4, v31.d2); dump();
//DataProcSimd_UnaryArithmetic10:0
frecpe(h7, h7); dump();
frecpe(h0, h7); dump();
frecpe(h1, h7); dump();
frecpe(h2, h7); dump();
frecpe(h4, h7); dump();
frecpe(h8, h7); dump();
frecpe(h16, h7); dump();
frecpe(h31, h7); dump();
frecpe(h7, h7); dump();
frecpe(h7, h0); dump();
frecpe(h7, h1); dump();
frecpe(h7, h2); dump();
frecpe(h7, h4); dump();
frecpe(h7, h8); dump();
frecpe(h7, h16); dump();
frecpe(h7, h31); dump();
frsqrte(h7, h7); dump();
frsqrte(h0, h7); dump();
frsqrte(h1, h7); dump();
frsqrte(h2, h7); dump();
frsqrte(h4, h7); dump();
frsqrte(h8, h7); dump();
frsqrte(h16, h7); dump();
frsqrte(h31, h7); dump();
frsqrte(h7, h7); dump();
frsqrte(h7, h0); dump();
frsqrte(h7, h1); dump();
frsqrte(h7, h2); dump();
frsqrte(h7, h4); dump();
frsqrte(h7, h8); dump();
frsqrte(h7, h16); dump();
frsqrte(h7, h31); dump();
//DataProcSimd_UnaryArithmetic10:1
frecpe(s7, s7); dump();
frecpe(s0, s7); dump();
frecpe(s1, s7); dump();
frecpe(s2, s7); dump();
frecpe(s4, s7); dump();
frecpe(s8, s7); dump();
frecpe(s16, s7); dump();
frecpe(s31, s7); dump();
frecpe(s7, s7); dump();
frecpe(s7, s0); dump();
frecpe(s7, s1); dump();
frecpe(s7, s2); dump();
frecpe(s7, s4); dump();
frecpe(s7, s8); dump();
frecpe(s7, s16); dump();
frecpe(s7, s31); dump();
frsqrte(s7, s7); dump();
frsqrte(s0, s7); dump();
frsqrte(s1, s7); dump();
frsqrte(s2, s7); dump();
frsqrte(s4, s7); dump();
frsqrte(s8, s7); dump();
frsqrte(s16, s7); dump();
frsqrte(s31, s7); dump();
frsqrte(s7, s7); dump();
frsqrte(s7, s0); dump();
frsqrte(s7, s1); dump();
frsqrte(s7, s2); dump();
frsqrte(s7, s4); dump();
frsqrte(s7, s8); dump();
frsqrte(s7, s16); dump();
frsqrte(s7, s31); dump();
//DataProcSimd_UnaryArithmetic10:2
frecpe(d7, d7); dump();
frecpe(d0, d7); dump();
frecpe(d1, d7); dump();
frecpe(d2, d7); dump();
frecpe(d4, d7); dump();
frecpe(d8, d7); dump();
frecpe(d16, d7); dump();
frecpe(d31, d7); dump();
frecpe(d7, d7); dump();
frecpe(d7, d0); dump();
frecpe(d7, d1); dump();
frecpe(d7, d2); dump();
frecpe(d7, d4); dump();
frecpe(d7, d8); dump();
frecpe(d7, d16); dump();
frecpe(d7, d31); dump();
frsqrte(d7, d7); dump();
frsqrte(d0, d7); dump();
frsqrte(d1, d7); dump();
frsqrte(d2, d7); dump();
frsqrte(d4, d7); dump();
frsqrte(d8, d7); dump();
frsqrte(d16, d7); dump();
frsqrte(d31, d7); dump();
frsqrte(d7, d7); dump();
frsqrte(d7, d0); dump();
frsqrte(d7, d1); dump();
frsqrte(d7, d2); dump();
frsqrte(d7, d4); dump();
frsqrte(d7, d8); dump();
frsqrte(d7, d16); dump();
frsqrte(d7, d31); dump();
//DataProcSimd_UnaryArithmetic10:3
frecpe(v7.h4, v7.h4); dump();
frecpe(v0.h4, v7.h4); dump();
frecpe(v1.h4, v7.h4); dump();
frecpe(v2.h4, v7.h4); dump();
frecpe(v4.h4, v7.h4); dump();
frecpe(v8.h4, v7.h4); dump();
frecpe(v16.h4, v7.h4); dump();
frecpe(v31.h4, v7.h4); dump();
frecpe(v7.h4, v7.h4); dump();
frecpe(v7.h4, v0.h4); dump();
frecpe(v7.h4, v1.h4); dump();
frecpe(v7.h4, v2.h4); dump();
frecpe(v7.h4, v4.h4); dump();
frecpe(v7.h4, v8.h4); dump();
frecpe(v7.h4, v16.h4); dump();
frecpe(v7.h4, v31.h4); dump();
frsqrte(v7.h4, v7.h4); dump();
frsqrte(v0.h4, v7.h4); dump();
frsqrte(v1.h4, v7.h4); dump();
frsqrte(v2.h4, v7.h4); dump();
frsqrte(v4.h4, v7.h4); dump();
frsqrte(v8.h4, v7.h4); dump();
frsqrte(v16.h4, v7.h4); dump();
frsqrte(v31.h4, v7.h4); dump();
frsqrte(v7.h4, v7.h4); dump();
frsqrte(v7.h4, v0.h4); dump();
frsqrte(v7.h4, v1.h4); dump();
frsqrte(v7.h4, v2.h4); dump();
frsqrte(v7.h4, v4.h4); dump();
frsqrte(v7.h4, v8.h4); dump();
frsqrte(v7.h4, v16.h4); dump();
frsqrte(v7.h4, v31.h4); dump();
//DataProcSimd_UnaryArithmetic10:4
frecpe(v7.h8, v7.h8); dump();
frecpe(v0.h8, v7.h8); dump();
frecpe(v1.h8, v7.h8); dump();
frecpe(v2.h8, v7.h8); dump();
frecpe(v4.h8, v7.h8); dump();
frecpe(v8.h8, v7.h8); dump();
frecpe(v16.h8, v7.h8); dump();
frecpe(v31.h8, v7.h8); dump();
frecpe(v7.h8, v7.h8); dump();
frecpe(v7.h8, v0.h8); dump();
frecpe(v7.h8, v1.h8); dump();
frecpe(v7.h8, v2.h8); dump();
frecpe(v7.h8, v4.h8); dump();
frecpe(v7.h8, v8.h8); dump();
frecpe(v7.h8, v16.h8); dump();
frecpe(v7.h8, v31.h8); dump();
frsqrte(v7.h8, v7.h8); dump();
frsqrte(v0.h8, v7.h8); dump();
frsqrte(v1.h8, v7.h8); dump();
frsqrte(v2.h8, v7.h8); dump();
frsqrte(v4.h8, v7.h8); dump();
frsqrte(v8.h8, v7.h8); dump();
frsqrte(v16.h8, v7.h8); dump();
frsqrte(v31.h8, v7.h8); dump();
frsqrte(v7.h8, v7.h8); dump();
frsqrte(v7.h8, v0.h8); dump();
frsqrte(v7.h8, v1.h8); dump();
frsqrte(v7.h8, v2.h8); dump();
frsqrte(v7.h8, v4.h8); dump();
frsqrte(v7.h8, v8.h8); dump();
frsqrte(v7.h8, v16.h8); dump();
frsqrte(v7.h8, v31.h8); dump();
//DataProcSimd_UnaryArithmetic10:5
frecpe(v7.s2, v7.s2); dump();
frecpe(v0.s2, v7.s2); dump();
frecpe(v1.s2, v7.s2); dump();
frecpe(v2.s2, v7.s2); dump();
frecpe(v4.s2, v7.s2); dump();
frecpe(v8.s2, v7.s2); dump();
frecpe(v16.s2, v7.s2); dump();
frecpe(v31.s2, v7.s2); dump();
frecpe(v7.s2, v7.s2); dump();
frecpe(v7.s2, v0.s2); dump();
frecpe(v7.s2, v1.s2); dump();
frecpe(v7.s2, v2.s2); dump();
frecpe(v7.s2, v4.s2); dump();
frecpe(v7.s2, v8.s2); dump();
frecpe(v7.s2, v16.s2); dump();
frecpe(v7.s2, v31.s2); dump();
frsqrte(v7.s2, v7.s2); dump();
frsqrte(v0.s2, v7.s2); dump();
frsqrte(v1.s2, v7.s2); dump();
frsqrte(v2.s2, v7.s2); dump();
frsqrte(v4.s2, v7.s2); dump();
frsqrte(v8.s2, v7.s2); dump();
frsqrte(v16.s2, v7.s2); dump();
frsqrte(v31.s2, v7.s2); dump();
frsqrte(v7.s2, v7.s2); dump();
frsqrte(v7.s2, v0.s2); dump();
frsqrte(v7.s2, v1.s2); dump();
frsqrte(v7.s2, v2.s2); dump();
frsqrte(v7.s2, v4.s2); dump();
frsqrte(v7.s2, v8.s2); dump();
frsqrte(v7.s2, v16.s2); dump();
frsqrte(v7.s2, v31.s2); dump();
//DataProcSimd_UnaryArithmetic10:6
frecpe(v7.s4, v7.s4); dump();
frecpe(v0.s4, v7.s4); dump();
frecpe(v1.s4, v7.s4); dump();
frecpe(v2.s4, v7.s4); dump();
frecpe(v4.s4, v7.s4); dump();
frecpe(v8.s4, v7.s4); dump();
frecpe(v16.s4, v7.s4); dump();
frecpe(v31.s4, v7.s4); dump();
frecpe(v7.s4, v7.s4); dump();
frecpe(v7.s4, v0.s4); dump();
frecpe(v7.s4, v1.s4); dump();
frecpe(v7.s4, v2.s4); dump();
frecpe(v7.s4, v4.s4); dump();
frecpe(v7.s4, v8.s4); dump();
frecpe(v7.s4, v16.s4); dump();
frecpe(v7.s4, v31.s4); dump();
frsqrte(v7.s4, v7.s4); dump();
frsqrte(v0.s4, v7.s4); dump();
frsqrte(v1.s4, v7.s4); dump();
frsqrte(v2.s4, v7.s4); dump();
frsqrte(v4.s4, v7.s4); dump();
frsqrte(v8.s4, v7.s4); dump();
frsqrte(v16.s4, v7.s4); dump();
frsqrte(v31.s4, v7.s4); dump();
frsqrte(v7.s4, v7.s4); dump();
frsqrte(v7.s4, v0.s4); dump();
frsqrte(v7.s4, v1.s4); dump();
frsqrte(v7.s4, v2.s4); dump();
frsqrte(v7.s4, v4.s4); dump();
frsqrte(v7.s4, v8.s4); dump();
frsqrte(v7.s4, v16.s4); dump();
frsqrte(v7.s4, v31.s4); dump();
//DataProcSimd_UnaryArithmetic10:7
frecpe(v7.d2, v7.d2); dump();
frecpe(v0.d2, v7.d2); dump();
frecpe(v1.d2, v7.d2); dump();
frecpe(v2.d2, v7.d2); dump();
frecpe(v4.d2, v7.d2); dump();
frecpe(v8.d2, v7.d2); dump();
frecpe(v16.d2, v7.d2); dump();
frecpe(v31.d2, v7.d2); dump();
frecpe(v7.d2, v7.d2); dump();
frecpe(v7.d2, v0.d2); dump();
frecpe(v7.d2, v1.d2); dump();
frecpe(v7.d2, v2.d2); dump();
frecpe(v7.d2, v4.d2); dump();
frecpe(v7.d2, v8.d2); dump();
frecpe(v7.d2, v16.d2); dump();
frecpe(v7.d2, v31.d2); dump();
frsqrte(v7.d2, v7.d2); dump();
frsqrte(v0.d2, v7.d2); dump();
frsqrte(v1.d2, v7.d2); dump();
frsqrte(v2.d2, v7.d2); dump();
frsqrte(v4.d2, v7.d2); dump();
frsqrte(v8.d2, v7.d2); dump();
frsqrte(v16.d2, v7.d2); dump();
frsqrte(v31.d2, v7.d2); dump();
frsqrte(v7.d2, v7.d2); dump();
frsqrte(v7.d2, v0.d2); dump();
frsqrte(v7.d2, v1.d2); dump();
frsqrte(v7.d2, v2.d2); dump();
frsqrte(v7.d2, v4.d2); dump();
frsqrte(v7.d2, v8.d2); dump();
frsqrte(v7.d2, v16.d2); dump();
frsqrte(v7.d2, v31.d2); dump();
//DataProcSimd_UnaryArithmetic11:0
frecpx(h7, h7); dump();
frecpx(h0, h7); dump();
frecpx(h1, h7); dump();
frecpx(h2, h7); dump();
frecpx(h4, h7); dump();
frecpx(h8, h7); dump();
frecpx(h16, h7); dump();
frecpx(h31, h7); dump();
frecpx(h7, h7); dump();
frecpx(h7, h0); dump();
frecpx(h7, h1); dump();
frecpx(h7, h2); dump();
frecpx(h7, h4); dump();
frecpx(h7, h8); dump();
frecpx(h7, h16); dump();
frecpx(h7, h31); dump();
frinta(h7, h7); dump();
frinta(h0, h7); dump();
frinta(h1, h7); dump();
frinta(h2, h7); dump();
frinta(h4, h7); dump();
frinta(h8, h7); dump();
frinta(h16, h7); dump();
frinta(h31, h7); dump();
frinta(h7, h7); dump();
frinta(h7, h0); dump();
frinta(h7, h1); dump();
frinta(h7, h2); dump();
frinta(h7, h4); dump();
frinta(h7, h8); dump();
frinta(h7, h16); dump();
frinta(h7, h31); dump();
//DataProcSimd_UnaryArithmetic11:1
frecpx(s7, s7); dump();
frecpx(s0, s7); dump();
frecpx(s1, s7); dump();
frecpx(s2, s7); dump();
frecpx(s4, s7); dump();
frecpx(s8, s7); dump();
frecpx(s16, s7); dump();
frecpx(s31, s7); dump();
frecpx(s7, s7); dump();
frecpx(s7, s0); dump();
frecpx(s7, s1); dump();
frecpx(s7, s2); dump();
frecpx(s7, s4); dump();
frecpx(s7, s8); dump();
frecpx(s7, s16); dump();
frecpx(s7, s31); dump();
frinta(s7, s7); dump();
frinta(s0, s7); dump();
frinta(s1, s7); dump();
frinta(s2, s7); dump();
frinta(s4, s7); dump();
frinta(s8, s7); dump();
frinta(s16, s7); dump();
frinta(s31, s7); dump();
frinta(s7, s7); dump();
frinta(s7, s0); dump();
frinta(s7, s1); dump();
frinta(s7, s2); dump();
frinta(s7, s4); dump();
frinta(s7, s8); dump();
frinta(s7, s16); dump();
frinta(s7, s31); dump();
//DataProcSimd_UnaryArithmetic11:2
frecpx(d7, d7); dump();
frecpx(d0, d7); dump();
frecpx(d1, d7); dump();
frecpx(d2, d7); dump();
frecpx(d4, d7); dump();
frecpx(d8, d7); dump();
frecpx(d16, d7); dump();
frecpx(d31, d7); dump();
frecpx(d7, d7); dump();
frecpx(d7, d0); dump();
frecpx(d7, d1); dump();
frecpx(d7, d2); dump();
frecpx(d7, d4); dump();
frecpx(d7, d8); dump();
frecpx(d7, d16); dump();
frecpx(d7, d31); dump();
frinta(d7, d7); dump();
frinta(d0, d7); dump();
frinta(d1, d7); dump();
frinta(d2, d7); dump();
frinta(d4, d7); dump();
frinta(d8, d7); dump();
frinta(d16, d7); dump();
frinta(d31, d7); dump();
frinta(d7, d7); dump();
frinta(d7, d0); dump();
frinta(d7, d1); dump();
frinta(d7, d2); dump();
frinta(d7, d4); dump();
frinta(d7, d8); dump();
frinta(d7, d16); dump();
frinta(d7, d31); dump();
//DataProcSimd_UnaryArithmetic12:0
rev32(v7.b8, v7.b8); dump();
rev32(v0.b8, v7.b8); dump();
rev32(v1.b8, v7.b8); dump();
rev32(v2.b8, v7.b8); dump();
rev32(v4.b8, v7.b8); dump();
rev32(v8.b8, v7.b8); dump();
rev32(v16.b8, v7.b8); dump();
rev32(v31.b8, v7.b8); dump();
rev32(v7.b8, v7.b8); dump();
rev32(v7.b8, v0.b8); dump();
rev32(v7.b8, v1.b8); dump();
rev32(v7.b8, v2.b8); dump();
rev32(v7.b8, v4.b8); dump();
rev32(v7.b8, v8.b8); dump();
rev32(v7.b8, v16.b8); dump();
rev32(v7.b8, v31.b8); dump();
//DataProcSimd_UnaryArithmetic12:1
rev32(v7.b16, v7.b16); dump();
rev32(v0.b16, v7.b16); dump();
rev32(v1.b16, v7.b16); dump();
rev32(v2.b16, v7.b16); dump();
rev32(v4.b16, v7.b16); dump();
rev32(v8.b16, v7.b16); dump();
rev32(v16.b16, v7.b16); dump();
rev32(v31.b16, v7.b16); dump();
rev32(v7.b16, v7.b16); dump();
rev32(v7.b16, v0.b16); dump();
rev32(v7.b16, v1.b16); dump();
rev32(v7.b16, v2.b16); dump();
rev32(v7.b16, v4.b16); dump();
rev32(v7.b16, v8.b16); dump();
rev32(v7.b16, v16.b16); dump();
rev32(v7.b16, v31.b16); dump();
//DataProcSimd_UnaryArithmetic12:2
rev32(v7.h4, v7.h4); dump();
rev32(v0.h4, v7.h4); dump();
rev32(v1.h4, v7.h4); dump();
rev32(v2.h4, v7.h4); dump();
rev32(v4.h4, v7.h4); dump();
rev32(v8.h4, v7.h4); dump();
rev32(v16.h4, v7.h4); dump();
rev32(v31.h4, v7.h4); dump();
rev32(v7.h4, v7.h4); dump();
rev32(v7.h4, v0.h4); dump();
rev32(v7.h4, v1.h4); dump();
rev32(v7.h4, v2.h4); dump();
rev32(v7.h4, v4.h4); dump();
rev32(v7.h4, v8.h4); dump();
rev32(v7.h4, v16.h4); dump();
rev32(v7.h4, v31.h4); dump();
//DataProcSimd_UnaryArithmetic12:3
rev32(v7.h8, v7.h8); dump();
rev32(v0.h8, v7.h8); dump();
rev32(v1.h8, v7.h8); dump();
rev32(v2.h8, v7.h8); dump();
rev32(v4.h8, v7.h8); dump();
rev32(v8.h8, v7.h8); dump();
rev32(v16.h8, v7.h8); dump();
rev32(v31.h8, v7.h8); dump();
rev32(v7.h8, v7.h8); dump();
rev32(v7.h8, v0.h8); dump();
rev32(v7.h8, v1.h8); dump();
rev32(v7.h8, v2.h8); dump();
rev32(v7.h8, v4.h8); dump();
rev32(v7.h8, v8.h8); dump();
rev32(v7.h8, v16.h8); dump();
rev32(v7.h8, v31.h8); dump();
//DataProcSimd_UnaryArithmetic13:0
sadalp(v7.h4, v7.b8); dump();
sadalp(v0.h4, v7.b8); dump();
sadalp(v1.h4, v7.b8); dump();
sadalp(v2.h4, v7.b8); dump();
sadalp(v4.h4, v7.b8); dump();
sadalp(v8.h4, v7.b8); dump();
sadalp(v16.h4, v7.b8); dump();
sadalp(v31.h4, v7.b8); dump();
sadalp(v7.h4, v7.b8); dump();
sadalp(v7.h4, v0.b8); dump();
sadalp(v7.h4, v1.b8); dump();
sadalp(v7.h4, v2.b8); dump();
sadalp(v7.h4, v4.b8); dump();
sadalp(v7.h4, v8.b8); dump();
sadalp(v7.h4, v16.b8); dump();
sadalp(v7.h4, v31.b8); dump();
saddlp(v7.h4, v7.b8); dump();
saddlp(v0.h4, v7.b8); dump();
saddlp(v1.h4, v7.b8); dump();
saddlp(v2.h4, v7.b8); dump();
saddlp(v4.h4, v7.b8); dump();
saddlp(v8.h4, v7.b8); dump();
saddlp(v16.h4, v7.b8); dump();
saddlp(v31.h4, v7.b8); dump();
saddlp(v7.h4, v7.b8); dump();
saddlp(v7.h4, v0.b8); dump();
saddlp(v7.h4, v1.b8); dump();
saddlp(v7.h4, v2.b8); dump();
saddlp(v7.h4, v4.b8); dump();
saddlp(v7.h4, v8.b8); dump();
saddlp(v7.h4, v16.b8); dump();
saddlp(v7.h4, v31.b8); dump();
uadalp(v7.h4, v7.b8); dump();
uadalp(v0.h4, v7.b8); dump();
uadalp(v1.h4, v7.b8); dump();
uadalp(v2.h4, v7.b8); dump();
uadalp(v4.h4, v7.b8); dump();
uadalp(v8.h4, v7.b8); dump();
uadalp(v16.h4, v7.b8); dump();
uadalp(v31.h4, v7.b8); dump();
uadalp(v7.h4, v7.b8); dump();
uadalp(v7.h4, v0.b8); dump();
uadalp(v7.h4, v1.b8); dump();
uadalp(v7.h4, v2.b8); dump();
uadalp(v7.h4, v4.b8); dump();
uadalp(v7.h4, v8.b8); dump();
uadalp(v7.h4, v16.b8); dump();
uadalp(v7.h4, v31.b8); dump();
uaddlp(v7.h4, v7.b8); dump();
uaddlp(v0.h4, v7.b8); dump();
uaddlp(v1.h4, v7.b8); dump();
uaddlp(v2.h4, v7.b8); dump();
uaddlp(v4.h4, v7.b8); dump();
uaddlp(v8.h4, v7.b8); dump();
uaddlp(v16.h4, v7.b8); dump();
uaddlp(v31.h4, v7.b8); dump();
uaddlp(v7.h4, v7.b8); dump();
uaddlp(v7.h4, v0.b8); dump();
uaddlp(v7.h4, v1.b8); dump();
uaddlp(v7.h4, v2.b8); dump();
uaddlp(v7.h4, v4.b8); dump();
uaddlp(v7.h4, v8.b8); dump();
uaddlp(v7.h4, v16.b8); dump();
uaddlp(v7.h4, v31.b8); dump();
//DataProcSimd_UnaryArithmetic13:1
sadalp(v7.h8, v7.b16); dump();
sadalp(v0.h8, v7.b16); dump();
sadalp(v1.h8, v7.b16); dump();
sadalp(v2.h8, v7.b16); dump();
sadalp(v4.h8, v7.b16); dump();
sadalp(v8.h8, v7.b16); dump();
sadalp(v16.h8, v7.b16); dump();
sadalp(v31.h8, v7.b16); dump();
sadalp(v7.h8, v7.b16); dump();
sadalp(v7.h8, v0.b16); dump();
sadalp(v7.h8, v1.b16); dump();
sadalp(v7.h8, v2.b16); dump();
sadalp(v7.h8, v4.b16); dump();
sadalp(v7.h8, v8.b16); dump();
sadalp(v7.h8, v16.b16); dump();
sadalp(v7.h8, v31.b16); dump();
saddlp(v7.h8, v7.b16); dump();
saddlp(v0.h8, v7.b16); dump();
saddlp(v1.h8, v7.b16); dump();
saddlp(v2.h8, v7.b16); dump();
saddlp(v4.h8, v7.b16); dump();
saddlp(v8.h8, v7.b16); dump();
saddlp(v16.h8, v7.b16); dump();
saddlp(v31.h8, v7.b16); dump();
saddlp(v7.h8, v7.b16); dump();
saddlp(v7.h8, v0.b16); dump();
saddlp(v7.h8, v1.b16); dump();
saddlp(v7.h8, v2.b16); dump();
saddlp(v7.h8, v4.b16); dump();
saddlp(v7.h8, v8.b16); dump();
saddlp(v7.h8, v16.b16); dump();
saddlp(v7.h8, v31.b16); dump();
uadalp(v7.h8, v7.b16); dump();
uadalp(v0.h8, v7.b16); dump();
uadalp(v1.h8, v7.b16); dump();
uadalp(v2.h8, v7.b16); dump();
uadalp(v4.h8, v7.b16); dump();
uadalp(v8.h8, v7.b16); dump();
uadalp(v16.h8, v7.b16); dump();
uadalp(v31.h8, v7.b16); dump();
uadalp(v7.h8, v7.b16); dump();
uadalp(v7.h8, v0.b16); dump();
uadalp(v7.h8, v1.b16); dump();
uadalp(v7.h8, v2.b16); dump();
uadalp(v7.h8, v4.b16); dump();
uadalp(v7.h8, v8.b16); dump();
uadalp(v7.h8, v16.b16); dump();
uadalp(v7.h8, v31.b16); dump();
uaddlp(v7.h8, v7.b16); dump();
uaddlp(v0.h8, v7.b16); dump();
uaddlp(v1.h8, v7.b16); dump();
uaddlp(v2.h8, v7.b16); dump();
uaddlp(v4.h8, v7.b16); dump();
uaddlp(v8.h8, v7.b16); dump();
uaddlp(v16.h8, v7.b16); dump();
uaddlp(v31.h8, v7.b16); dump();
uaddlp(v7.h8, v7.b16); dump();
uaddlp(v7.h8, v0.b16); dump();
uaddlp(v7.h8, v1.b16); dump();
uaddlp(v7.h8, v2.b16); dump();
uaddlp(v7.h8, v4.b16); dump();
uaddlp(v7.h8, v8.b16); dump();
uaddlp(v7.h8, v16.b16); dump();
uaddlp(v7.h8, v31.b16); dump();
//DataProcSimd_UnaryArithmetic13:2
sadalp(v7.s2, v7.h4); dump();
sadalp(v0.s2, v7.h4); dump();
sadalp(v1.s2, v7.h4); dump();
sadalp(v2.s2, v7.h4); dump();
sadalp(v4.s2, v7.h4); dump();
sadalp(v8.s2, v7.h4); dump();
sadalp(v16.s2, v7.h4); dump();
sadalp(v31.s2, v7.h4); dump();
sadalp(v7.s2, v7.h4); dump();
sadalp(v7.s2, v0.h4); dump();
sadalp(v7.s2, v1.h4); dump();
sadalp(v7.s2, v2.h4); dump();
sadalp(v7.s2, v4.h4); dump();
sadalp(v7.s2, v8.h4); dump();
sadalp(v7.s2, v16.h4); dump();
sadalp(v7.s2, v31.h4); dump();
saddlp(v7.s2, v7.h4); dump();
saddlp(v0.s2, v7.h4); dump();
saddlp(v1.s2, v7.h4); dump();
saddlp(v2.s2, v7.h4); dump();
saddlp(v4.s2, v7.h4); dump();
saddlp(v8.s2, v7.h4); dump();
saddlp(v16.s2, v7.h4); dump();
saddlp(v31.s2, v7.h4); dump();
saddlp(v7.s2, v7.h4); dump();
saddlp(v7.s2, v0.h4); dump();
saddlp(v7.s2, v1.h4); dump();
saddlp(v7.s2, v2.h4); dump();
saddlp(v7.s2, v4.h4); dump();
saddlp(v7.s2, v8.h4); dump();
saddlp(v7.s2, v16.h4); dump();
saddlp(v7.s2, v31.h4); dump();
uadalp(v7.s2, v7.h4); dump();
uadalp(v0.s2, v7.h4); dump();
uadalp(v1.s2, v7.h4); dump();
uadalp(v2.s2, v7.h4); dump();
uadalp(v4.s2, v7.h4); dump();
uadalp(v8.s2, v7.h4); dump();
uadalp(v16.s2, v7.h4); dump();
uadalp(v31.s2, v7.h4); dump();
uadalp(v7.s2, v7.h4); dump();
uadalp(v7.s2, v0.h4); dump();
uadalp(v7.s2, v1.h4); dump();
uadalp(v7.s2, v2.h4); dump();
uadalp(v7.s2, v4.h4); dump();
uadalp(v7.s2, v8.h4); dump();
uadalp(v7.s2, v16.h4); dump();
uadalp(v7.s2, v31.h4); dump();
uaddlp(v7.s2, v7.h4); dump();
uaddlp(v0.s2, v7.h4); dump();
uaddlp(v1.s2, v7.h4); dump();
uaddlp(v2.s2, v7.h4); dump();
uaddlp(v4.s2, v7.h4); dump();
uaddlp(v8.s2, v7.h4); dump();
uaddlp(v16.s2, v7.h4); dump();
uaddlp(v31.s2, v7.h4); dump();
uaddlp(v7.s2, v7.h4); dump();
uaddlp(v7.s2, v0.h4); dump();
uaddlp(v7.s2, v1.h4); dump();
uaddlp(v7.s2, v2.h4); dump();
uaddlp(v7.s2, v4.h4); dump();
uaddlp(v7.s2, v8.h4); dump();
uaddlp(v7.s2, v16.h4); dump();
uaddlp(v7.s2, v31.h4); dump();
//DataProcSimd_UnaryArithmetic13:3
sadalp(v7.s4, v7.h8); dump();
sadalp(v0.s4, v7.h8); dump();
sadalp(v1.s4, v7.h8); dump();
sadalp(v2.s4, v7.h8); dump();
sadalp(v4.s4, v7.h8); dump();
sadalp(v8.s4, v7.h8); dump();
sadalp(v16.s4, v7.h8); dump();
sadalp(v31.s4, v7.h8); dump();
sadalp(v7.s4, v7.h8); dump();
sadalp(v7.s4, v0.h8); dump();
sadalp(v7.s4, v1.h8); dump();
sadalp(v7.s4, v2.h8); dump();
sadalp(v7.s4, v4.h8); dump();
sadalp(v7.s4, v8.h8); dump();
sadalp(v7.s4, v16.h8); dump();
sadalp(v7.s4, v31.h8); dump();
saddlp(v7.s4, v7.h8); dump();
saddlp(v0.s4, v7.h8); dump();
saddlp(v1.s4, v7.h8); dump();
saddlp(v2.s4, v7.h8); dump();
saddlp(v4.s4, v7.h8); dump();
saddlp(v8.s4, v7.h8); dump();
saddlp(v16.s4, v7.h8); dump();
saddlp(v31.s4, v7.h8); dump();
saddlp(v7.s4, v7.h8); dump();
saddlp(v7.s4, v0.h8); dump();
saddlp(v7.s4, v1.h8); dump();
saddlp(v7.s4, v2.h8); dump();
saddlp(v7.s4, v4.h8); dump();
saddlp(v7.s4, v8.h8); dump();
saddlp(v7.s4, v16.h8); dump();
saddlp(v7.s4, v31.h8); dump();
uadalp(v7.s4, v7.h8); dump();
uadalp(v0.s4, v7.h8); dump();
uadalp(v1.s4, v7.h8); dump();
uadalp(v2.s4, v7.h8); dump();
uadalp(v4.s4, v7.h8); dump();
uadalp(v8.s4, v7.h8); dump();
uadalp(v16.s4, v7.h8); dump();
uadalp(v31.s4, v7.h8); dump();
uadalp(v7.s4, v7.h8); dump();
uadalp(v7.s4, v0.h8); dump();
uadalp(v7.s4, v1.h8); dump();
uadalp(v7.s4, v2.h8); dump();
uadalp(v7.s4, v4.h8); dump();
uadalp(v7.s4, v8.h8); dump();
uadalp(v7.s4, v16.h8); dump();
uadalp(v7.s4, v31.h8); dump();
uaddlp(v7.s4, v7.h8); dump();
uaddlp(v0.s4, v7.h8); dump();
uaddlp(v1.s4, v7.h8); dump();
uaddlp(v2.s4, v7.h8); dump();
uaddlp(v4.s4, v7.h8); dump();
uaddlp(v8.s4, v7.h8); dump();
uaddlp(v16.s4, v7.h8); dump();
uaddlp(v31.s4, v7.h8); dump();
uaddlp(v7.s4, v7.h8); dump();
uaddlp(v7.s4, v0.h8); dump();
uaddlp(v7.s4, v1.h8); dump();
uaddlp(v7.s4, v2.h8); dump();
uaddlp(v7.s4, v4.h8); dump();
uaddlp(v7.s4, v8.h8); dump();
uaddlp(v7.s4, v16.h8); dump();
uaddlp(v7.s4, v31.h8); dump();
//DataProcSimd_UnaryArithmetic13:4
sadalp(v7.d1, v7.s2); dump();
sadalp(v0.d1, v7.s2); dump();
sadalp(v1.d1, v7.s2); dump();
sadalp(v2.d1, v7.s2); dump();
sadalp(v4.d1, v7.s2); dump();
sadalp(v8.d1, v7.s2); dump();
sadalp(v16.d1, v7.s2); dump();
sadalp(v31.d1, v7.s2); dump();
sadalp(v7.d1, v7.s2); dump();
sadalp(v7.d1, v0.s2); dump();
sadalp(v7.d1, v1.s2); dump();
sadalp(v7.d1, v2.s2); dump();
sadalp(v7.d1, v4.s2); dump();
sadalp(v7.d1, v8.s2); dump();
sadalp(v7.d1, v16.s2); dump();
sadalp(v7.d1, v31.s2); dump();
saddlp(v7.d1, v7.s2); dump();
saddlp(v0.d1, v7.s2); dump();
saddlp(v1.d1, v7.s2); dump();
saddlp(v2.d1, v7.s2); dump();
saddlp(v4.d1, v7.s2); dump();
saddlp(v8.d1, v7.s2); dump();
saddlp(v16.d1, v7.s2); dump();
saddlp(v31.d1, v7.s2); dump();
saddlp(v7.d1, v7.s2); dump();
saddlp(v7.d1, v0.s2); dump();
saddlp(v7.d1, v1.s2); dump();
saddlp(v7.d1, v2.s2); dump();
saddlp(v7.d1, v4.s2); dump();
saddlp(v7.d1, v8.s2); dump();
saddlp(v7.d1, v16.s2); dump();
saddlp(v7.d1, v31.s2); dump();
uadalp(v7.d1, v7.s2); dump();
uadalp(v0.d1, v7.s2); dump();
uadalp(v1.d1, v7.s2); dump();
uadalp(v2.d1, v7.s2); dump();
uadalp(v4.d1, v7.s2); dump();
uadalp(v8.d1, v7.s2); dump();
uadalp(v16.d1, v7.s2); dump();
uadalp(v31.d1, v7.s2); dump();
uadalp(v7.d1, v7.s2); dump();
uadalp(v7.d1, v0.s2); dump();
uadalp(v7.d1, v1.s2); dump();
uadalp(v7.d1, v2.s2); dump();
uadalp(v7.d1, v4.s2); dump();
uadalp(v7.d1, v8.s2); dump();
uadalp(v7.d1, v16.s2); dump();
uadalp(v7.d1, v31.s2); dump();
uaddlp(v7.d1, v7.s2); dump();
uaddlp(v0.d1, v7.s2); dump();
uaddlp(v1.d1, v7.s2); dump();
uaddlp(v2.d1, v7.s2); dump();
uaddlp(v4.d1, v7.s2); dump();
uaddlp(v8.d1, v7.s2); dump();
uaddlp(v16.d1, v7.s2); dump();
uaddlp(v31.d1, v7.s2); dump();
uaddlp(v7.d1, v7.s2); dump();
uaddlp(v7.d1, v0.s2); dump();
uaddlp(v7.d1, v1.s2); dump();
uaddlp(v7.d1, v2.s2); dump();
uaddlp(v7.d1, v4.s2); dump();
uaddlp(v7.d1, v8.s2); dump();
uaddlp(v7.d1, v16.s2); dump();
uaddlp(v7.d1, v31.s2); dump();
//DataProcSimd_UnaryArithmetic13:5
sadalp(v7.d2, v7.s4); dump();
sadalp(v0.d2, v7.s4); dump();
sadalp(v1.d2, v7.s4); dump();
sadalp(v2.d2, v7.s4); dump();
sadalp(v4.d2, v7.s4); dump();
sadalp(v8.d2, v7.s4); dump();
sadalp(v16.d2, v7.s4); dump();
sadalp(v31.d2, v7.s4); dump();
sadalp(v7.d2, v7.s4); dump();
sadalp(v7.d2, v0.s4); dump();
sadalp(v7.d2, v1.s4); dump();
sadalp(v7.d2, v2.s4); dump();
sadalp(v7.d2, v4.s4); dump();
sadalp(v7.d2, v8.s4); dump();
sadalp(v7.d2, v16.s4); dump();
sadalp(v7.d2, v31.s4); dump();
saddlp(v7.d2, v7.s4); dump();
saddlp(v0.d2, v7.s4); dump();
saddlp(v1.d2, v7.s4); dump();
saddlp(v2.d2, v7.s4); dump();
saddlp(v4.d2, v7.s4); dump();
saddlp(v8.d2, v7.s4); dump();
saddlp(v16.d2, v7.s4); dump();
saddlp(v31.d2, v7.s4); dump();
saddlp(v7.d2, v7.s4); dump();
saddlp(v7.d2, v0.s4); dump();
saddlp(v7.d2, v1.s4); dump();
saddlp(v7.d2, v2.s4); dump();
saddlp(v7.d2, v4.s4); dump();
saddlp(v7.d2, v8.s4); dump();
saddlp(v7.d2, v16.s4); dump();
saddlp(v7.d2, v31.s4); dump();
uadalp(v7.d2, v7.s4); dump();
uadalp(v0.d2, v7.s4); dump();
uadalp(v1.d2, v7.s4); dump();
uadalp(v2.d2, v7.s4); dump();
uadalp(v4.d2, v7.s4); dump();
uadalp(v8.d2, v7.s4); dump();
uadalp(v16.d2, v7.s4); dump();
uadalp(v31.d2, v7.s4); dump();
uadalp(v7.d2, v7.s4); dump();
uadalp(v7.d2, v0.s4); dump();
uadalp(v7.d2, v1.s4); dump();
uadalp(v7.d2, v2.s4); dump();
uadalp(v7.d2, v4.s4); dump();
uadalp(v7.d2, v8.s4); dump();
uadalp(v7.d2, v16.s4); dump();
uadalp(v7.d2, v31.s4); dump();
uaddlp(v7.d2, v7.s4); dump();
uaddlp(v0.d2, v7.s4); dump();
uaddlp(v1.d2, v7.s4); dump();
uaddlp(v2.d2, v7.s4); dump();
uaddlp(v4.d2, v7.s4); dump();
uaddlp(v8.d2, v7.s4); dump();
uaddlp(v16.d2, v7.s4); dump();
uaddlp(v31.d2, v7.s4); dump();
uaddlp(v7.d2, v7.s4); dump();
uaddlp(v7.d2, v0.s4); dump();
uaddlp(v7.d2, v1.s4); dump();
uaddlp(v7.d2, v2.s4); dump();
uaddlp(v7.d2, v4.s4); dump();
uaddlp(v7.d2, v8.s4); dump();
uaddlp(v7.d2, v16.s4); dump();
uaddlp(v7.d2, v31.s4); dump();
//DataProcSimd_UnaryArithmetic14:0
sxtl(v7.h8, v7.b8); dump();
sxtl(v0.h8, v7.b8); dump();
sxtl(v1.h8, v7.b8); dump();
sxtl(v2.h8, v7.b8); dump();
sxtl(v4.h8, v7.b8); dump();
sxtl(v8.h8, v7.b8); dump();
sxtl(v16.h8, v7.b8); dump();
sxtl(v31.h8, v7.b8); dump();
sxtl(v7.h8, v7.b8); dump();
sxtl(v7.h8, v0.b8); dump();
sxtl(v7.h8, v1.b8); dump();
sxtl(v7.h8, v2.b8); dump();
sxtl(v7.h8, v4.b8); dump();
sxtl(v7.h8, v8.b8); dump();
sxtl(v7.h8, v16.b8); dump();
sxtl(v7.h8, v31.b8); dump();
//DataProcSimd_UnaryArithmetic14:1
sxtl(v7.s4, v7.h4); dump();
sxtl(v0.s4, v7.h4); dump();
sxtl(v1.s4, v7.h4); dump();
sxtl(v2.s4, v7.h4); dump();
sxtl(v4.s4, v7.h4); dump();
sxtl(v8.s4, v7.h4); dump();
sxtl(v16.s4, v7.h4); dump();
sxtl(v31.s4, v7.h4); dump();
sxtl(v7.s4, v7.h4); dump();
sxtl(v7.s4, v0.h4); dump();
sxtl(v7.s4, v1.h4); dump();
sxtl(v7.s4, v2.h4); dump();
sxtl(v7.s4, v4.h4); dump();
sxtl(v7.s4, v8.h4); dump();
sxtl(v7.s4, v16.h4); dump();
sxtl(v7.s4, v31.h4); dump();
//DataProcSimd_UnaryArithmetic14:2
sxtl(v7.d2, v7.s2); dump();
sxtl(v0.d2, v7.s2); dump();
sxtl(v1.d2, v7.s2); dump();
sxtl(v2.d2, v7.s2); dump();
sxtl(v4.d2, v7.s2); dump();
sxtl(v8.d2, v7.s2); dump();
sxtl(v16.d2, v7.s2); dump();
sxtl(v31.d2, v7.s2); dump();
sxtl(v7.d2, v7.s2); dump();
sxtl(v7.d2, v0.s2); dump();
sxtl(v7.d2, v1.s2); dump();
sxtl(v7.d2, v2.s2); dump();
sxtl(v7.d2, v4.s2); dump();
sxtl(v7.d2, v8.s2); dump();
sxtl(v7.d2, v16.s2); dump();
sxtl(v7.d2, v31.s2); dump();
//DataProcSimd_UnaryArithmetic15:0
sxtl2(v7.h8, v7.b16); dump();
sxtl2(v0.h8, v7.b16); dump();
sxtl2(v1.h8, v7.b16); dump();
sxtl2(v2.h8, v7.b16); dump();
sxtl2(v4.h8, v7.b16); dump();
sxtl2(v8.h8, v7.b16); dump();
sxtl2(v16.h8, v7.b16); dump();
sxtl2(v31.h8, v7.b16); dump();
sxtl2(v7.h8, v7.b16); dump();
sxtl2(v7.h8, v0.b16); dump();
sxtl2(v7.h8, v1.b16); dump();
sxtl2(v7.h8, v2.b16); dump();
sxtl2(v7.h8, v4.b16); dump();
sxtl2(v7.h8, v8.b16); dump();
sxtl2(v7.h8, v16.b16); dump();
sxtl2(v7.h8, v31.b16); dump();
//DataProcSimd_UnaryArithmetic15:1
sxtl2(v7.s4, v7.h8); dump();
sxtl2(v0.s4, v7.h8); dump();
sxtl2(v1.s4, v7.h8); dump();
sxtl2(v2.s4, v7.h8); dump();
sxtl2(v4.s4, v7.h8); dump();
sxtl2(v8.s4, v7.h8); dump();
sxtl2(v16.s4, v7.h8); dump();
sxtl2(v31.s4, v7.h8); dump();
sxtl2(v7.s4, v7.h8); dump();
sxtl2(v7.s4, v0.h8); dump();
sxtl2(v7.s4, v1.h8); dump();
sxtl2(v7.s4, v2.h8); dump();
sxtl2(v7.s4, v4.h8); dump();
sxtl2(v7.s4, v8.h8); dump();
sxtl2(v7.s4, v16.h8); dump();
sxtl2(v7.s4, v31.h8); dump();
//DataProcSimd_UnaryArithmetic15:2
sxtl2(v7.d2, v7.s4); dump();
sxtl2(v0.d2, v7.s4); dump();
sxtl2(v1.d2, v7.s4); dump();
sxtl2(v2.d2, v7.s4); dump();
sxtl2(v4.d2, v7.s4); dump();
sxtl2(v8.d2, v7.s4); dump();
sxtl2(v16.d2, v7.s4); dump();
sxtl2(v31.d2, v7.s4); dump();
sxtl2(v7.d2, v7.s4); dump();
sxtl2(v7.d2, v0.s4); dump();
sxtl2(v7.d2, v1.s4); dump();
sxtl2(v7.d2, v2.s4); dump();
sxtl2(v7.d2, v4.s4); dump();
sxtl2(v7.d2, v8.s4); dump();
sxtl2(v7.d2, v16.s4); dump();
sxtl2(v7.d2, v31.s4); dump();
//DataProcSimd_UnaryArithmetic16:0
sqabs(b7, b7); dump();
sqabs(b0, b7); dump();
sqabs(b1, b7); dump();
sqabs(b2, b7); dump();
sqabs(b4, b7); dump();
sqabs(b8, b7); dump();
sqabs(b16, b7); dump();
sqabs(b31, b7); dump();
sqabs(b7, b7); dump();
sqabs(b7, b0); dump();
sqabs(b7, b1); dump();
sqabs(b7, b2); dump();
sqabs(b7, b4); dump();
sqabs(b7, b8); dump();
sqabs(b7, b16); dump();
sqabs(b7, b31); dump();
sqneg(b7, b7); dump();
sqneg(b0, b7); dump();
sqneg(b1, b7); dump();
sqneg(b2, b7); dump();
sqneg(b4, b7); dump();
sqneg(b8, b7); dump();
sqneg(b16, b7); dump();
sqneg(b31, b7); dump();
sqneg(b7, b7); dump();
sqneg(b7, b0); dump();
sqneg(b7, b1); dump();
sqneg(b7, b2); dump();
sqneg(b7, b4); dump();
sqneg(b7, b8); dump();
sqneg(b7, b16); dump();
sqneg(b7, b31); dump();
suqadd(b7, b7); dump();
suqadd(b0, b7); dump();
suqadd(b1, b7); dump();
suqadd(b2, b7); dump();
suqadd(b4, b7); dump();
suqadd(b8, b7); dump();
suqadd(b16, b7); dump();
suqadd(b31, b7); dump();
suqadd(b7, b7); dump();
suqadd(b7, b0); dump();
suqadd(b7, b1); dump();
suqadd(b7, b2); dump();
suqadd(b7, b4); dump();
suqadd(b7, b8); dump();
suqadd(b7, b16); dump();
suqadd(b7, b31); dump();
usqadd(b7, b7); dump();
usqadd(b0, b7); dump();
usqadd(b1, b7); dump();
usqadd(b2, b7); dump();
usqadd(b4, b7); dump();
usqadd(b8, b7); dump();
usqadd(b16, b7); dump();
usqadd(b31, b7); dump();
usqadd(b7, b7); dump();
usqadd(b7, b0); dump();
usqadd(b7, b1); dump();
usqadd(b7, b2); dump();
usqadd(b7, b4); dump();
usqadd(b7, b8); dump();
usqadd(b7, b16); dump();
usqadd(b7, b31); dump();
//DataProcSimd_UnaryArithmetic16:1
sqabs(h7, h7); dump();
sqabs(h0, h7); dump();
sqabs(h1, h7); dump();
sqabs(h2, h7); dump();
sqabs(h4, h7); dump();
sqabs(h8, h7); dump();
sqabs(h16, h7); dump();
sqabs(h31, h7); dump();
sqabs(h7, h7); dump();
sqabs(h7, h0); dump();
sqabs(h7, h1); dump();
sqabs(h7, h2); dump();
sqabs(h7, h4); dump();
sqabs(h7, h8); dump();
sqabs(h7, h16); dump();
sqabs(h7, h31); dump();
sqneg(h7, h7); dump();
sqneg(h0, h7); dump();
sqneg(h1, h7); dump();
sqneg(h2, h7); dump();
sqneg(h4, h7); dump();
sqneg(h8, h7); dump();
sqneg(h16, h7); dump();
sqneg(h31, h7); dump();
sqneg(h7, h7); dump();
sqneg(h7, h0); dump();
sqneg(h7, h1); dump();
sqneg(h7, h2); dump();
sqneg(h7, h4); dump();
sqneg(h7, h8); dump();
sqneg(h7, h16); dump();
sqneg(h7, h31); dump();
suqadd(h7, h7); dump();
suqadd(h0, h7); dump();
suqadd(h1, h7); dump();
suqadd(h2, h7); dump();
suqadd(h4, h7); dump();
suqadd(h8, h7); dump();
suqadd(h16, h7); dump();
suqadd(h31, h7); dump();
suqadd(h7, h7); dump();
suqadd(h7, h0); dump();
suqadd(h7, h1); dump();
suqadd(h7, h2); dump();
suqadd(h7, h4); dump();
suqadd(h7, h8); dump();
suqadd(h7, h16); dump();
suqadd(h7, h31); dump();
usqadd(h7, h7); dump();
usqadd(h0, h7); dump();
usqadd(h1, h7); dump();
usqadd(h2, h7); dump();
usqadd(h4, h7); dump();
usqadd(h8, h7); dump();
usqadd(h16, h7); dump();
usqadd(h31, h7); dump();
usqadd(h7, h7); dump();
usqadd(h7, h0); dump();
usqadd(h7, h1); dump();
usqadd(h7, h2); dump();
usqadd(h7, h4); dump();
usqadd(h7, h8); dump();
usqadd(h7, h16); dump();
usqadd(h7, h31); dump();
//DataProcSimd_UnaryArithmetic16:2
sqabs(s7, s7); dump();
sqabs(s0, s7); dump();
sqabs(s1, s7); dump();
sqabs(s2, s7); dump();
sqabs(s4, s7); dump();
sqabs(s8, s7); dump();
sqabs(s16, s7); dump();
sqabs(s31, s7); dump();
sqabs(s7, s7); dump();
sqabs(s7, s0); dump();
sqabs(s7, s1); dump();
sqabs(s7, s2); dump();
sqabs(s7, s4); dump();
sqabs(s7, s8); dump();
sqabs(s7, s16); dump();
sqabs(s7, s31); dump();
sqneg(s7, s7); dump();
sqneg(s0, s7); dump();
sqneg(s1, s7); dump();
sqneg(s2, s7); dump();
sqneg(s4, s7); dump();
sqneg(s8, s7); dump();
sqneg(s16, s7); dump();
sqneg(s31, s7); dump();
sqneg(s7, s7); dump();
sqneg(s7, s0); dump();
sqneg(s7, s1); dump();
sqneg(s7, s2); dump();
sqneg(s7, s4); dump();
sqneg(s7, s8); dump();
sqneg(s7, s16); dump();
sqneg(s7, s31); dump();
suqadd(s7, s7); dump();
suqadd(s0, s7); dump();
suqadd(s1, s7); dump();
suqadd(s2, s7); dump();
suqadd(s4, s7); dump();
suqadd(s8, s7); dump();
suqadd(s16, s7); dump();
suqadd(s31, s7); dump();
suqadd(s7, s7); dump();
suqadd(s7, s0); dump();
suqadd(s7, s1); dump();
suqadd(s7, s2); dump();
suqadd(s7, s4); dump();
suqadd(s7, s8); dump();
suqadd(s7, s16); dump();
suqadd(s7, s31); dump();
usqadd(s7, s7); dump();
usqadd(s0, s7); dump();
usqadd(s1, s7); dump();
usqadd(s2, s7); dump();
usqadd(s4, s7); dump();
usqadd(s8, s7); dump();
usqadd(s16, s7); dump();
usqadd(s31, s7); dump();
usqadd(s7, s7); dump();
usqadd(s7, s0); dump();
usqadd(s7, s1); dump();
usqadd(s7, s2); dump();
usqadd(s7, s4); dump();
usqadd(s7, s8); dump();
usqadd(s7, s16); dump();
usqadd(s7, s31); dump();
//DataProcSimd_UnaryArithmetic16:3
sqabs(d7, d7); dump();
sqabs(d0, d7); dump();
sqabs(d1, d7); dump();
sqabs(d2, d7); dump();
sqabs(d4, d7); dump();
sqabs(d8, d7); dump();
sqabs(d16, d7); dump();
sqabs(d31, d7); dump();
sqabs(d7, d7); dump();
sqabs(d7, d0); dump();
sqabs(d7, d1); dump();
sqabs(d7, d2); dump();
sqabs(d7, d4); dump();
sqabs(d7, d8); dump();
sqabs(d7, d16); dump();
sqabs(d7, d31); dump();
sqneg(d7, d7); dump();
sqneg(d0, d7); dump();
sqneg(d1, d7); dump();
sqneg(d2, d7); dump();
sqneg(d4, d7); dump();
sqneg(d8, d7); dump();
sqneg(d16, d7); dump();
sqneg(d31, d7); dump();
sqneg(d7, d7); dump();
sqneg(d7, d0); dump();
sqneg(d7, d1); dump();
sqneg(d7, d2); dump();
sqneg(d7, d4); dump();
sqneg(d7, d8); dump();
sqneg(d7, d16); dump();
sqneg(d7, d31); dump();
suqadd(d7, d7); dump();
suqadd(d0, d7); dump();
suqadd(d1, d7); dump();
suqadd(d2, d7); dump();
suqadd(d4, d7); dump();
suqadd(d8, d7); dump();
suqadd(d16, d7); dump();
suqadd(d31, d7); dump();
suqadd(d7, d7); dump();
suqadd(d7, d0); dump();
suqadd(d7, d1); dump();
suqadd(d7, d2); dump();
suqadd(d7, d4); dump();
suqadd(d7, d8); dump();
suqadd(d7, d16); dump();
suqadd(d7, d31); dump();
usqadd(d7, d7); dump();
usqadd(d0, d7); dump();
usqadd(d1, d7); dump();
usqadd(d2, d7); dump();
usqadd(d4, d7); dump();
usqadd(d8, d7); dump();
usqadd(d16, d7); dump();
usqadd(d31, d7); dump();
usqadd(d7, d7); dump();
usqadd(d7, d0); dump();
usqadd(d7, d1); dump();
usqadd(d7, d2); dump();
usqadd(d7, d4); dump();
usqadd(d7, d8); dump();
usqadd(d7, d16); dump();
usqadd(d7, d31); dump();
//DataProcSimd_UnaryArithmetic16:4
sqabs(v7.b8, v7.b8); dump();
sqabs(v0.b8, v7.b8); dump();
sqabs(v1.b8, v7.b8); dump();
sqabs(v2.b8, v7.b8); dump();
sqabs(v4.b8, v7.b8); dump();
sqabs(v8.b8, v7.b8); dump();
sqabs(v16.b8, v7.b8); dump();
sqabs(v31.b8, v7.b8); dump();
sqabs(v7.b8, v7.b8); dump();
sqabs(v7.b8, v0.b8); dump();
sqabs(v7.b8, v1.b8); dump();
sqabs(v7.b8, v2.b8); dump();
sqabs(v7.b8, v4.b8); dump();
sqabs(v7.b8, v8.b8); dump();
sqabs(v7.b8, v16.b8); dump();
sqabs(v7.b8, v31.b8); dump();
sqneg(v7.b8, v7.b8); dump();
sqneg(v0.b8, v7.b8); dump();
sqneg(v1.b8, v7.b8); dump();
sqneg(v2.b8, v7.b8); dump();
sqneg(v4.b8, v7.b8); dump();
sqneg(v8.b8, v7.b8); dump();
sqneg(v16.b8, v7.b8); dump();
sqneg(v31.b8, v7.b8); dump();
sqneg(v7.b8, v7.b8); dump();
sqneg(v7.b8, v0.b8); dump();
sqneg(v7.b8, v1.b8); dump();
sqneg(v7.b8, v2.b8); dump();
sqneg(v7.b8, v4.b8); dump();
sqneg(v7.b8, v8.b8); dump();
sqneg(v7.b8, v16.b8); dump();
sqneg(v7.b8, v31.b8); dump();
suqadd(v7.b8, v7.b8); dump();
suqadd(v0.b8, v7.b8); dump();
suqadd(v1.b8, v7.b8); dump();
suqadd(v2.b8, v7.b8); dump();
suqadd(v4.b8, v7.b8); dump();
suqadd(v8.b8, v7.b8); dump();
suqadd(v16.b8, v7.b8); dump();
suqadd(v31.b8, v7.b8); dump();
suqadd(v7.b8, v7.b8); dump();
suqadd(v7.b8, v0.b8); dump();
suqadd(v7.b8, v1.b8); dump();
suqadd(v7.b8, v2.b8); dump();
suqadd(v7.b8, v4.b8); dump();
suqadd(v7.b8, v8.b8); dump();
suqadd(v7.b8, v16.b8); dump();
suqadd(v7.b8, v31.b8); dump();
usqadd(v7.b8, v7.b8); dump();
usqadd(v0.b8, v7.b8); dump();
usqadd(v1.b8, v7.b8); dump();
usqadd(v2.b8, v7.b8); dump();
usqadd(v4.b8, v7.b8); dump();
usqadd(v8.b8, v7.b8); dump();
usqadd(v16.b8, v7.b8); dump();
usqadd(v31.b8, v7.b8); dump();
usqadd(v7.b8, v7.b8); dump();
usqadd(v7.b8, v0.b8); dump();
usqadd(v7.b8, v1.b8); dump();
usqadd(v7.b8, v2.b8); dump();
usqadd(v7.b8, v4.b8); dump();
usqadd(v7.b8, v8.b8); dump();
usqadd(v7.b8, v16.b8); dump();
usqadd(v7.b8, v31.b8); dump();
//DataProcSimd_UnaryArithmetic16:5
sqabs(v7.b16, v7.b16); dump();
sqabs(v0.b16, v7.b16); dump();
sqabs(v1.b16, v7.b16); dump();
sqabs(v2.b16, v7.b16); dump();
sqabs(v4.b16, v7.b16); dump();
sqabs(v8.b16, v7.b16); dump();
sqabs(v16.b16, v7.b16); dump();
sqabs(v31.b16, v7.b16); dump();
sqabs(v7.b16, v7.b16); dump();
sqabs(v7.b16, v0.b16); dump();
sqabs(v7.b16, v1.b16); dump();
sqabs(v7.b16, v2.b16); dump();
sqabs(v7.b16, v4.b16); dump();
sqabs(v7.b16, v8.b16); dump();
sqabs(v7.b16, v16.b16); dump();
sqabs(v7.b16, v31.b16); dump();
sqneg(v7.b16, v7.b16); dump();
sqneg(v0.b16, v7.b16); dump();
sqneg(v1.b16, v7.b16); dump();
sqneg(v2.b16, v7.b16); dump();
sqneg(v4.b16, v7.b16); dump();
sqneg(v8.b16, v7.b16); dump();
sqneg(v16.b16, v7.b16); dump();
sqneg(v31.b16, v7.b16); dump();
sqneg(v7.b16, v7.b16); dump();
sqneg(v7.b16, v0.b16); dump();
sqneg(v7.b16, v1.b16); dump();
sqneg(v7.b16, v2.b16); dump();
sqneg(v7.b16, v4.b16); dump();
sqneg(v7.b16, v8.b16); dump();
sqneg(v7.b16, v16.b16); dump();
sqneg(v7.b16, v31.b16); dump();
suqadd(v7.b16, v7.b16); dump();
suqadd(v0.b16, v7.b16); dump();
suqadd(v1.b16, v7.b16); dump();
suqadd(v2.b16, v7.b16); dump();
suqadd(v4.b16, v7.b16); dump();
suqadd(v8.b16, v7.b16); dump();
suqadd(v16.b16, v7.b16); dump();
suqadd(v31.b16, v7.b16); dump();
suqadd(v7.b16, v7.b16); dump();
suqadd(v7.b16, v0.b16); dump();
suqadd(v7.b16, v1.b16); dump();
suqadd(v7.b16, v2.b16); dump();
suqadd(v7.b16, v4.b16); dump();
suqadd(v7.b16, v8.b16); dump();
suqadd(v7.b16, v16.b16); dump();
suqadd(v7.b16, v31.b16); dump();
usqadd(v7.b16, v7.b16); dump();
usqadd(v0.b16, v7.b16); dump();
usqadd(v1.b16, v7.b16); dump();
usqadd(v2.b16, v7.b16); dump();
usqadd(v4.b16, v7.b16); dump();
usqadd(v8.b16, v7.b16); dump();
usqadd(v16.b16, v7.b16); dump();
usqadd(v31.b16, v7.b16); dump();
usqadd(v7.b16, v7.b16); dump();
usqadd(v7.b16, v0.b16); dump();
usqadd(v7.b16, v1.b16); dump();
usqadd(v7.b16, v2.b16); dump();
usqadd(v7.b16, v4.b16); dump();
usqadd(v7.b16, v8.b16); dump();
usqadd(v7.b16, v16.b16); dump();
usqadd(v7.b16, v31.b16); dump();
//DataProcSimd_UnaryArithmetic16:6
sqabs(v7.h4, v7.h4); dump();
sqabs(v0.h4, v7.h4); dump();
sqabs(v1.h4, v7.h4); dump();
sqabs(v2.h4, v7.h4); dump();
sqabs(v4.h4, v7.h4); dump();
sqabs(v8.h4, v7.h4); dump();
sqabs(v16.h4, v7.h4); dump();
sqabs(v31.h4, v7.h4); dump();
sqabs(v7.h4, v7.h4); dump();
sqabs(v7.h4, v0.h4); dump();
sqabs(v7.h4, v1.h4); dump();
sqabs(v7.h4, v2.h4); dump();
sqabs(v7.h4, v4.h4); dump();
sqabs(v7.h4, v8.h4); dump();
sqabs(v7.h4, v16.h4); dump();
sqabs(v7.h4, v31.h4); dump();
sqneg(v7.h4, v7.h4); dump();
sqneg(v0.h4, v7.h4); dump();
sqneg(v1.h4, v7.h4); dump();
sqneg(v2.h4, v7.h4); dump();
sqneg(v4.h4, v7.h4); dump();
sqneg(v8.h4, v7.h4); dump();
sqneg(v16.h4, v7.h4); dump();
sqneg(v31.h4, v7.h4); dump();
sqneg(v7.h4, v7.h4); dump();
sqneg(v7.h4, v0.h4); dump();
sqneg(v7.h4, v1.h4); dump();
sqneg(v7.h4, v2.h4); dump();
sqneg(v7.h4, v4.h4); dump();
sqneg(v7.h4, v8.h4); dump();
sqneg(v7.h4, v16.h4); dump();
sqneg(v7.h4, v31.h4); dump();
suqadd(v7.h4, v7.h4); dump();
suqadd(v0.h4, v7.h4); dump();
suqadd(v1.h4, v7.h4); dump();
suqadd(v2.h4, v7.h4); dump();
suqadd(v4.h4, v7.h4); dump();
suqadd(v8.h4, v7.h4); dump();
suqadd(v16.h4, v7.h4); dump();
suqadd(v31.h4, v7.h4); dump();
suqadd(v7.h4, v7.h4); dump();
suqadd(v7.h4, v0.h4); dump();
suqadd(v7.h4, v1.h4); dump();
suqadd(v7.h4, v2.h4); dump();
suqadd(v7.h4, v4.h4); dump();
suqadd(v7.h4, v8.h4); dump();
suqadd(v7.h4, v16.h4); dump();
suqadd(v7.h4, v31.h4); dump();
usqadd(v7.h4, v7.h4); dump();
usqadd(v0.h4, v7.h4); dump();
usqadd(v1.h4, v7.h4); dump();
usqadd(v2.h4, v7.h4); dump();
usqadd(v4.h4, v7.h4); dump();
usqadd(v8.h4, v7.h4); dump();
usqadd(v16.h4, v7.h4); dump();
usqadd(v31.h4, v7.h4); dump();
usqadd(v7.h4, v7.h4); dump();
usqadd(v7.h4, v0.h4); dump();
usqadd(v7.h4, v1.h4); dump();
usqadd(v7.h4, v2.h4); dump();
usqadd(v7.h4, v4.h4); dump();
usqadd(v7.h4, v8.h4); dump();
usqadd(v7.h4, v16.h4); dump();
usqadd(v7.h4, v31.h4); dump();
//DataProcSimd_UnaryArithmetic16:7
sqabs(v7.h8, v7.h8); dump();
sqabs(v0.h8, v7.h8); dump();
sqabs(v1.h8, v7.h8); dump();
sqabs(v2.h8, v7.h8); dump();
sqabs(v4.h8, v7.h8); dump();
sqabs(v8.h8, v7.h8); dump();
sqabs(v16.h8, v7.h8); dump();
sqabs(v31.h8, v7.h8); dump();
sqabs(v7.h8, v7.h8); dump();
sqabs(v7.h8, v0.h8); dump();
sqabs(v7.h8, v1.h8); dump();
sqabs(v7.h8, v2.h8); dump();
sqabs(v7.h8, v4.h8); dump();
sqabs(v7.h8, v8.h8); dump();
sqabs(v7.h8, v16.h8); dump();
sqabs(v7.h8, v31.h8); dump();
sqneg(v7.h8, v7.h8); dump();
sqneg(v0.h8, v7.h8); dump();
sqneg(v1.h8, v7.h8); dump();
sqneg(v2.h8, v7.h8); dump();
sqneg(v4.h8, v7.h8); dump();
sqneg(v8.h8, v7.h8); dump();
sqneg(v16.h8, v7.h8); dump();
sqneg(v31.h8, v7.h8); dump();
sqneg(v7.h8, v7.h8); dump();
sqneg(v7.h8, v0.h8); dump();
sqneg(v7.h8, v1.h8); dump();
sqneg(v7.h8, v2.h8); dump();
sqneg(v7.h8, v4.h8); dump();
sqneg(v7.h8, v8.h8); dump();
sqneg(v7.h8, v16.h8); dump();
sqneg(v7.h8, v31.h8); dump();
suqadd(v7.h8, v7.h8); dump();
suqadd(v0.h8, v7.h8); dump();
suqadd(v1.h8, v7.h8); dump();
suqadd(v2.h8, v7.h8); dump();
suqadd(v4.h8, v7.h8); dump();
suqadd(v8.h8, v7.h8); dump();
suqadd(v16.h8, v7.h8); dump();
suqadd(v31.h8, v7.h8); dump();
suqadd(v7.h8, v7.h8); dump();
suqadd(v7.h8, v0.h8); dump();
suqadd(v7.h8, v1.h8); dump();
suqadd(v7.h8, v2.h8); dump();
suqadd(v7.h8, v4.h8); dump();
suqadd(v7.h8, v8.h8); dump();
suqadd(v7.h8, v16.h8); dump();
suqadd(v7.h8, v31.h8); dump();
usqadd(v7.h8, v7.h8); dump();
usqadd(v0.h8, v7.h8); dump();
usqadd(v1.h8, v7.h8); dump();
usqadd(v2.h8, v7.h8); dump();
usqadd(v4.h8, v7.h8); dump();
usqadd(v8.h8, v7.h8); dump();
usqadd(v16.h8, v7.h8); dump();
usqadd(v31.h8, v7.h8); dump();
usqadd(v7.h8, v7.h8); dump();
usqadd(v7.h8, v0.h8); dump();
usqadd(v7.h8, v1.h8); dump();
usqadd(v7.h8, v2.h8); dump();
usqadd(v7.h8, v4.h8); dump();
usqadd(v7.h8, v8.h8); dump();
usqadd(v7.h8, v16.h8); dump();
usqadd(v7.h8, v31.h8); dump();
//DataProcSimd_UnaryArithmetic17:0
sqabs(v7.s2, v7.s2); dump();
sqabs(v0.s2, v7.s2); dump();
sqabs(v1.s2, v7.s2); dump();
sqabs(v2.s2, v7.s2); dump();
sqabs(v4.s2, v7.s2); dump();
sqabs(v8.s2, v7.s2); dump();
sqabs(v16.s2, v7.s2); dump();
sqabs(v31.s2, v7.s2); dump();
sqabs(v7.s2, v7.s2); dump();
sqabs(v7.s2, v0.s2); dump();
sqabs(v7.s2, v1.s2); dump();
sqabs(v7.s2, v2.s2); dump();
sqabs(v7.s2, v4.s2); dump();
sqabs(v7.s2, v8.s2); dump();
sqabs(v7.s2, v16.s2); dump();
sqabs(v7.s2, v31.s2); dump();
sqneg(v7.s2, v7.s2); dump();
sqneg(v0.s2, v7.s2); dump();
sqneg(v1.s2, v7.s2); dump();
sqneg(v2.s2, v7.s2); dump();
sqneg(v4.s2, v7.s2); dump();
sqneg(v8.s2, v7.s2); dump();
sqneg(v16.s2, v7.s2); dump();
sqneg(v31.s2, v7.s2); dump();
sqneg(v7.s2, v7.s2); dump();
sqneg(v7.s2, v0.s2); dump();
sqneg(v7.s2, v1.s2); dump();
sqneg(v7.s2, v2.s2); dump();
sqneg(v7.s2, v4.s2); dump();
sqneg(v7.s2, v8.s2); dump();
sqneg(v7.s2, v16.s2); dump();
sqneg(v7.s2, v31.s2); dump();
suqadd(v7.s2, v7.s2); dump();
suqadd(v0.s2, v7.s2); dump();
suqadd(v1.s2, v7.s2); dump();
suqadd(v2.s2, v7.s2); dump();
suqadd(v4.s2, v7.s2); dump();
suqadd(v8.s2, v7.s2); dump();
suqadd(v16.s2, v7.s2); dump();
suqadd(v31.s2, v7.s2); dump();
suqadd(v7.s2, v7.s2); dump();
suqadd(v7.s2, v0.s2); dump();
suqadd(v7.s2, v1.s2); dump();
suqadd(v7.s2, v2.s2); dump();
suqadd(v7.s2, v4.s2); dump();
suqadd(v7.s2, v8.s2); dump();
suqadd(v7.s2, v16.s2); dump();
suqadd(v7.s2, v31.s2); dump();
usqadd(v7.s2, v7.s2); dump();
usqadd(v0.s2, v7.s2); dump();
usqadd(v1.s2, v7.s2); dump();
usqadd(v2.s2, v7.s2); dump();
usqadd(v4.s2, v7.s2); dump();
usqadd(v8.s2, v7.s2); dump();
usqadd(v16.s2, v7.s2); dump();
usqadd(v31.s2, v7.s2); dump();
usqadd(v7.s2, v7.s2); dump();
usqadd(v7.s2, v0.s2); dump();
usqadd(v7.s2, v1.s2); dump();
usqadd(v7.s2, v2.s2); dump();
usqadd(v7.s2, v4.s2); dump();
usqadd(v7.s2, v8.s2); dump();
usqadd(v7.s2, v16.s2); dump();
usqadd(v7.s2, v31.s2); dump();
//DataProcSimd_UnaryArithmetic17:1
sqabs(v7.s4, v7.s4); dump();
sqabs(v0.s4, v7.s4); dump();
sqabs(v1.s4, v7.s4); dump();
sqabs(v2.s4, v7.s4); dump();
sqabs(v4.s4, v7.s4); dump();
sqabs(v8.s4, v7.s4); dump();
sqabs(v16.s4, v7.s4); dump();
sqabs(v31.s4, v7.s4); dump();
sqabs(v7.s4, v7.s4); dump();
sqabs(v7.s4, v0.s4); dump();
sqabs(v7.s4, v1.s4); dump();
sqabs(v7.s4, v2.s4); dump();
sqabs(v7.s4, v4.s4); dump();
sqabs(v7.s4, v8.s4); dump();
sqabs(v7.s4, v16.s4); dump();
sqabs(v7.s4, v31.s4); dump();
sqneg(v7.s4, v7.s4); dump();
sqneg(v0.s4, v7.s4); dump();
sqneg(v1.s4, v7.s4); dump();
sqneg(v2.s4, v7.s4); dump();
sqneg(v4.s4, v7.s4); dump();
sqneg(v8.s4, v7.s4); dump();
sqneg(v16.s4, v7.s4); dump();
sqneg(v31.s4, v7.s4); dump();
sqneg(v7.s4, v7.s4); dump();
sqneg(v7.s4, v0.s4); dump();
sqneg(v7.s4, v1.s4); dump();
sqneg(v7.s4, v2.s4); dump();
sqneg(v7.s4, v4.s4); dump();
sqneg(v7.s4, v8.s4); dump();
sqneg(v7.s4, v16.s4); dump();
sqneg(v7.s4, v31.s4); dump();
suqadd(v7.s4, v7.s4); dump();
suqadd(v0.s4, v7.s4); dump();
suqadd(v1.s4, v7.s4); dump();
suqadd(v2.s4, v7.s4); dump();
suqadd(v4.s4, v7.s4); dump();
suqadd(v8.s4, v7.s4); dump();
suqadd(v16.s4, v7.s4); dump();
suqadd(v31.s4, v7.s4); dump();
suqadd(v7.s4, v7.s4); dump();
suqadd(v7.s4, v0.s4); dump();
suqadd(v7.s4, v1.s4); dump();
suqadd(v7.s4, v2.s4); dump();
suqadd(v7.s4, v4.s4); dump();
suqadd(v7.s4, v8.s4); dump();
suqadd(v7.s4, v16.s4); dump();
suqadd(v7.s4, v31.s4); dump();
usqadd(v7.s4, v7.s4); dump();
usqadd(v0.s4, v7.s4); dump();
usqadd(v1.s4, v7.s4); dump();
usqadd(v2.s4, v7.s4); dump();
usqadd(v4.s4, v7.s4); dump();
usqadd(v8.s4, v7.s4); dump();
usqadd(v16.s4, v7.s4); dump();
usqadd(v31.s4, v7.s4); dump();
usqadd(v7.s4, v7.s4); dump();
usqadd(v7.s4, v0.s4); dump();
usqadd(v7.s4, v1.s4); dump();
usqadd(v7.s4, v2.s4); dump();
usqadd(v7.s4, v4.s4); dump();
usqadd(v7.s4, v8.s4); dump();
usqadd(v7.s4, v16.s4); dump();
usqadd(v7.s4, v31.s4); dump();
//DataProcSimd_UnaryArithmetic17:2
sqabs(v7.d2, v7.d2); dump();
sqabs(v0.d2, v7.d2); dump();
sqabs(v1.d2, v7.d2); dump();
sqabs(v2.d2, v7.d2); dump();
sqabs(v4.d2, v7.d2); dump();
sqabs(v8.d2, v7.d2); dump();
sqabs(v16.d2, v7.d2); dump();
sqabs(v31.d2, v7.d2); dump();
sqabs(v7.d2, v7.d2); dump();
sqabs(v7.d2, v0.d2); dump();
sqabs(v7.d2, v1.d2); dump();
sqabs(v7.d2, v2.d2); dump();
sqabs(v7.d2, v4.d2); dump();
sqabs(v7.d2, v8.d2); dump();
sqabs(v7.d2, v16.d2); dump();
sqabs(v7.d2, v31.d2); dump();
sqneg(v7.d2, v7.d2); dump();
sqneg(v0.d2, v7.d2); dump();
sqneg(v1.d2, v7.d2); dump();
sqneg(v2.d2, v7.d2); dump();
sqneg(v4.d2, v7.d2); dump();
sqneg(v8.d2, v7.d2); dump();
sqneg(v16.d2, v7.d2); dump();
sqneg(v31.d2, v7.d2); dump();
sqneg(v7.d2, v7.d2); dump();
sqneg(v7.d2, v0.d2); dump();
sqneg(v7.d2, v1.d2); dump();
sqneg(v7.d2, v2.d2); dump();
sqneg(v7.d2, v4.d2); dump();
sqneg(v7.d2, v8.d2); dump();
sqneg(v7.d2, v16.d2); dump();
sqneg(v7.d2, v31.d2); dump();
suqadd(v7.d2, v7.d2); dump();
suqadd(v0.d2, v7.d2); dump();
suqadd(v1.d2, v7.d2); dump();
suqadd(v2.d2, v7.d2); dump();
suqadd(v4.d2, v7.d2); dump();
suqadd(v8.d2, v7.d2); dump();
suqadd(v16.d2, v7.d2); dump();
suqadd(v31.d2, v7.d2); dump();
suqadd(v7.d2, v7.d2); dump();
suqadd(v7.d2, v0.d2); dump();
suqadd(v7.d2, v1.d2); dump();
suqadd(v7.d2, v2.d2); dump();
suqadd(v7.d2, v4.d2); dump();
suqadd(v7.d2, v8.d2); dump();
suqadd(v7.d2, v16.d2); dump();
suqadd(v7.d2, v31.d2); dump();
usqadd(v7.d2, v7.d2); dump();
usqadd(v0.d2, v7.d2); dump();
usqadd(v1.d2, v7.d2); dump();
usqadd(v2.d2, v7.d2); dump();
usqadd(v4.d2, v7.d2); dump();
usqadd(v8.d2, v7.d2); dump();
usqadd(v16.d2, v7.d2); dump();
usqadd(v31.d2, v7.d2); dump();
usqadd(v7.d2, v7.d2); dump();
usqadd(v7.d2, v0.d2); dump();
usqadd(v7.d2, v1.d2); dump();
usqadd(v7.d2, v2.d2); dump();
usqadd(v7.d2, v4.d2); dump();
usqadd(v7.d2, v8.d2); dump();
usqadd(v7.d2, v16.d2); dump();
usqadd(v7.d2, v31.d2); dump();
//DataProcSimd_UnaryArithmetic18:0
sqxtn(b7, h7); dump();
sqxtn(b0, h7); dump();
sqxtn(b1, h7); dump();
sqxtn(b2, h7); dump();
sqxtn(b4, h7); dump();
sqxtn(b8, h7); dump();
sqxtn(b16, h7); dump();
sqxtn(b31, h7); dump();
sqxtn(b7, h7); dump();
sqxtn(b7, h0); dump();
sqxtn(b7, h1); dump();
sqxtn(b7, h2); dump();
sqxtn(b7, h4); dump();
sqxtn(b7, h8); dump();
sqxtn(b7, h16); dump();
sqxtn(b7, h31); dump();
sqxtun(b7, h7); dump();
sqxtun(b0, h7); dump();
sqxtun(b1, h7); dump();
sqxtun(b2, h7); dump();
sqxtun(b4, h7); dump();
sqxtun(b8, h7); dump();
sqxtun(b16, h7); dump();
sqxtun(b31, h7); dump();
sqxtun(b7, h7); dump();
sqxtun(b7, h0); dump();
sqxtun(b7, h1); dump();
sqxtun(b7, h2); dump();
sqxtun(b7, h4); dump();
sqxtun(b7, h8); dump();
sqxtun(b7, h16); dump();
sqxtun(b7, h31); dump();
uqxtn(b7, h7); dump();
uqxtn(b0, h7); dump();
uqxtn(b1, h7); dump();
uqxtn(b2, h7); dump();
uqxtn(b4, h7); dump();
uqxtn(b8, h7); dump();
uqxtn(b16, h7); dump();
uqxtn(b31, h7); dump();
uqxtn(b7, h7); dump();
uqxtn(b7, h0); dump();
uqxtn(b7, h1); dump();
uqxtn(b7, h2); dump();
uqxtn(b7, h4); dump();
uqxtn(b7, h8); dump();
uqxtn(b7, h16); dump();
uqxtn(b7, h31); dump();
//DataProcSimd_UnaryArithmetic18:1
sqxtn(h7, s7); dump();
sqxtn(h0, s7); dump();
sqxtn(h1, s7); dump();
sqxtn(h2, s7); dump();
sqxtn(h4, s7); dump();
sqxtn(h8, s7); dump();
sqxtn(h16, s7); dump();
sqxtn(h31, s7); dump();
sqxtn(h7, s7); dump();
sqxtn(h7, s0); dump();
sqxtn(h7, s1); dump();
sqxtn(h7, s2); dump();
sqxtn(h7, s4); dump();
sqxtn(h7, s8); dump();
sqxtn(h7, s16); dump();
sqxtn(h7, s31); dump();
sqxtun(h7, s7); dump();
sqxtun(h0, s7); dump();
sqxtun(h1, s7); dump();
sqxtun(h2, s7); dump();
sqxtun(h4, s7); dump();
sqxtun(h8, s7); dump();
sqxtun(h16, s7); dump();
sqxtun(h31, s7); dump();
sqxtun(h7, s7); dump();
sqxtun(h7, s0); dump();
sqxtun(h7, s1); dump();
sqxtun(h7, s2); dump();
sqxtun(h7, s4); dump();
sqxtun(h7, s8); dump();
sqxtun(h7, s16); dump();
sqxtun(h7, s31); dump();
uqxtn(h7, s7); dump();
uqxtn(h0, s7); dump();
uqxtn(h1, s7); dump();
uqxtn(h2, s7); dump();
uqxtn(h4, s7); dump();
uqxtn(h8, s7); dump();
uqxtn(h16, s7); dump();
uqxtn(h31, s7); dump();
uqxtn(h7, s7); dump();
uqxtn(h7, s0); dump();
uqxtn(h7, s1); dump();
uqxtn(h7, s2); dump();
uqxtn(h7, s4); dump();
uqxtn(h7, s8); dump();
uqxtn(h7, s16); dump();
uqxtn(h7, s31); dump();
//DataProcSimd_UnaryArithmetic18:2
sqxtn(s7, d7); dump();
sqxtn(s0, d7); dump();
sqxtn(s1, d7); dump();
sqxtn(s2, d7); dump();
sqxtn(s4, d7); dump();
sqxtn(s8, d7); dump();
sqxtn(s16, d7); dump();
sqxtn(s31, d7); dump();
sqxtn(s7, d7); dump();
sqxtn(s7, d0); dump();
sqxtn(s7, d1); dump();
sqxtn(s7, d2); dump();
sqxtn(s7, d4); dump();
sqxtn(s7, d8); dump();
sqxtn(s7, d16); dump();
sqxtn(s7, d31); dump();
sqxtun(s7, d7); dump();
sqxtun(s0, d7); dump();
sqxtun(s1, d7); dump();
sqxtun(s2, d7); dump();
sqxtun(s4, d7); dump();
sqxtun(s8, d7); dump();
sqxtun(s16, d7); dump();
sqxtun(s31, d7); dump();
sqxtun(s7, d7); dump();
sqxtun(s7, d0); dump();
sqxtun(s7, d1); dump();
sqxtun(s7, d2); dump();
sqxtun(s7, d4); dump();
sqxtun(s7, d8); dump();
sqxtun(s7, d16); dump();
sqxtun(s7, d31); dump();
uqxtn(s7, d7); dump();
uqxtn(s0, d7); dump();
uqxtn(s1, d7); dump();
uqxtn(s2, d7); dump();
uqxtn(s4, d7); dump();
uqxtn(s8, d7); dump();
uqxtn(s16, d7); dump();
uqxtn(s31, d7); dump();
uqxtn(s7, d7); dump();
uqxtn(s7, d0); dump();
uqxtn(s7, d1); dump();
uqxtn(s7, d2); dump();
uqxtn(s7, d4); dump();
uqxtn(s7, d8); dump();
uqxtn(s7, d16); dump();
uqxtn(s7, d31); dump();
//DataProcSimd_UnaryArithmetic18:3
sqxtn(v7.b8, v7.h8); dump();
sqxtn(v0.b8, v7.h8); dump();
sqxtn(v1.b8, v7.h8); dump();
sqxtn(v2.b8, v7.h8); dump();
sqxtn(v4.b8, v7.h8); dump();
sqxtn(v8.b8, v7.h8); dump();
sqxtn(v16.b8, v7.h8); dump();
sqxtn(v31.b8, v7.h8); dump();
sqxtn(v7.b8, v7.h8); dump();
sqxtn(v7.b8, v0.h8); dump();
sqxtn(v7.b8, v1.h8); dump();
sqxtn(v7.b8, v2.h8); dump();
sqxtn(v7.b8, v4.h8); dump();
sqxtn(v7.b8, v8.h8); dump();
sqxtn(v7.b8, v16.h8); dump();
sqxtn(v7.b8, v31.h8); dump();
sqxtun(v7.b8, v7.h8); dump();
sqxtun(v0.b8, v7.h8); dump();
sqxtun(v1.b8, v7.h8); dump();
sqxtun(v2.b8, v7.h8); dump();
sqxtun(v4.b8, v7.h8); dump();
sqxtun(v8.b8, v7.h8); dump();
sqxtun(v16.b8, v7.h8); dump();
sqxtun(v31.b8, v7.h8); dump();
sqxtun(v7.b8, v7.h8); dump();
sqxtun(v7.b8, v0.h8); dump();
sqxtun(v7.b8, v1.h8); dump();
sqxtun(v7.b8, v2.h8); dump();
sqxtun(v7.b8, v4.h8); dump();
sqxtun(v7.b8, v8.h8); dump();
sqxtun(v7.b8, v16.h8); dump();
sqxtun(v7.b8, v31.h8); dump();
uqxtn(v7.b8, v7.h8); dump();
uqxtn(v0.b8, v7.h8); dump();
uqxtn(v1.b8, v7.h8); dump();
uqxtn(v2.b8, v7.h8); dump();
uqxtn(v4.b8, v7.h8); dump();
uqxtn(v8.b8, v7.h8); dump();
uqxtn(v16.b8, v7.h8); dump();
uqxtn(v31.b8, v7.h8); dump();
uqxtn(v7.b8, v7.h8); dump();
uqxtn(v7.b8, v0.h8); dump();
uqxtn(v7.b8, v1.h8); dump();
uqxtn(v7.b8, v2.h8); dump();
uqxtn(v7.b8, v4.h8); dump();
uqxtn(v7.b8, v8.h8); dump();
uqxtn(v7.b8, v16.h8); dump();
uqxtn(v7.b8, v31.h8); dump();
//DataProcSimd_UnaryArithmetic18:4
sqxtn(v7.h4, v7.s4); dump();
sqxtn(v0.h4, v7.s4); dump();
sqxtn(v1.h4, v7.s4); dump();
sqxtn(v2.h4, v7.s4); dump();
sqxtn(v4.h4, v7.s4); dump();
sqxtn(v8.h4, v7.s4); dump();
sqxtn(v16.h4, v7.s4); dump();
sqxtn(v31.h4, v7.s4); dump();
sqxtn(v7.h4, v7.s4); dump();
sqxtn(v7.h4, v0.s4); dump();
sqxtn(v7.h4, v1.s4); dump();
sqxtn(v7.h4, v2.s4); dump();
sqxtn(v7.h4, v4.s4); dump();
sqxtn(v7.h4, v8.s4); dump();
sqxtn(v7.h4, v16.s4); dump();
sqxtn(v7.h4, v31.s4); dump();
sqxtun(v7.h4, v7.s4); dump();
sqxtun(v0.h4, v7.s4); dump();
sqxtun(v1.h4, v7.s4); dump();
sqxtun(v2.h4, v7.s4); dump();
sqxtun(v4.h4, v7.s4); dump();
sqxtun(v8.h4, v7.s4); dump();
sqxtun(v16.h4, v7.s4); dump();
sqxtun(v31.h4, v7.s4); dump();
sqxtun(v7.h4, v7.s4); dump();
sqxtun(v7.h4, v0.s4); dump();
sqxtun(v7.h4, v1.s4); dump();
sqxtun(v7.h4, v2.s4); dump();
sqxtun(v7.h4, v4.s4); dump();
sqxtun(v7.h4, v8.s4); dump();
sqxtun(v7.h4, v16.s4); dump();
sqxtun(v7.h4, v31.s4); dump();
uqxtn(v7.h4, v7.s4); dump();
uqxtn(v0.h4, v7.s4); dump();
uqxtn(v1.h4, v7.s4); dump();
uqxtn(v2.h4, v7.s4); dump();
uqxtn(v4.h4, v7.s4); dump();
uqxtn(v8.h4, v7.s4); dump();
uqxtn(v16.h4, v7.s4); dump();
uqxtn(v31.h4, v7.s4); dump();
uqxtn(v7.h4, v7.s4); dump();
uqxtn(v7.h4, v0.s4); dump();
uqxtn(v7.h4, v1.s4); dump();
uqxtn(v7.h4, v2.s4); dump();
uqxtn(v7.h4, v4.s4); dump();
uqxtn(v7.h4, v8.s4); dump();
uqxtn(v7.h4, v16.s4); dump();
uqxtn(v7.h4, v31.s4); dump();
//DataProcSimd_UnaryArithmetic18:5
sqxtn(v7.s2, v7.d2); dump();
sqxtn(v0.s2, v7.d2); dump();
sqxtn(v1.s2, v7.d2); dump();
sqxtn(v2.s2, v7.d2); dump();
sqxtn(v4.s2, v7.d2); dump();
sqxtn(v8.s2, v7.d2); dump();
sqxtn(v16.s2, v7.d2); dump();
sqxtn(v31.s2, v7.d2); dump();
sqxtn(v7.s2, v7.d2); dump();
sqxtn(v7.s2, v0.d2); dump();
sqxtn(v7.s2, v1.d2); dump();
sqxtn(v7.s2, v2.d2); dump();
sqxtn(v7.s2, v4.d2); dump();
sqxtn(v7.s2, v8.d2); dump();
sqxtn(v7.s2, v16.d2); dump();
sqxtn(v7.s2, v31.d2); dump();
sqxtun(v7.s2, v7.d2); dump();
sqxtun(v0.s2, v7.d2); dump();
sqxtun(v1.s2, v7.d2); dump();
sqxtun(v2.s2, v7.d2); dump();
sqxtun(v4.s2, v7.d2); dump();
sqxtun(v8.s2, v7.d2); dump();
sqxtun(v16.s2, v7.d2); dump();
sqxtun(v31.s2, v7.d2); dump();
sqxtun(v7.s2, v7.d2); dump();
sqxtun(v7.s2, v0.d2); dump();
sqxtun(v7.s2, v1.d2); dump();
sqxtun(v7.s2, v2.d2); dump();
sqxtun(v7.s2, v4.d2); dump();
sqxtun(v7.s2, v8.d2); dump();
sqxtun(v7.s2, v16.d2); dump();
sqxtun(v7.s2, v31.d2); dump();
uqxtn(v7.s2, v7.d2); dump();
uqxtn(v0.s2, v7.d2); dump();
uqxtn(v1.s2, v7.d2); dump();
uqxtn(v2.s2, v7.d2); dump();
uqxtn(v4.s2, v7.d2); dump();
uqxtn(v8.s2, v7.d2); dump();
uqxtn(v16.s2, v7.d2); dump();
uqxtn(v31.s2, v7.d2); dump();
uqxtn(v7.s2, v7.d2); dump();
uqxtn(v7.s2, v0.d2); dump();
uqxtn(v7.s2, v1.d2); dump();
uqxtn(v7.s2, v2.d2); dump();
uqxtn(v7.s2, v4.d2); dump();
uqxtn(v7.s2, v8.d2); dump();
uqxtn(v7.s2, v16.d2); dump();
uqxtn(v7.s2, v31.d2); dump();
//DataProcSimd_UnaryArithmetic19:0
sqxtn2(v7.b16, v7.h8); dump();
sqxtn2(v0.b16, v7.h8); dump();
sqxtn2(v1.b16, v7.h8); dump();
sqxtn2(v2.b16, v7.h8); dump();
sqxtn2(v4.b16, v7.h8); dump();
sqxtn2(v8.b16, v7.h8); dump();
sqxtn2(v16.b16, v7.h8); dump();
sqxtn2(v31.b16, v7.h8); dump();
sqxtn2(v7.b16, v7.h8); dump();
sqxtn2(v7.b16, v0.h8); dump();
sqxtn2(v7.b16, v1.h8); dump();
sqxtn2(v7.b16, v2.h8); dump();
sqxtn2(v7.b16, v4.h8); dump();
sqxtn2(v7.b16, v8.h8); dump();
sqxtn2(v7.b16, v16.h8); dump();
sqxtn2(v7.b16, v31.h8); dump();
sqxtun2(v7.b16, v7.h8); dump();
sqxtun2(v0.b16, v7.h8); dump();
sqxtun2(v1.b16, v7.h8); dump();
sqxtun2(v2.b16, v7.h8); dump();
sqxtun2(v4.b16, v7.h8); dump();
sqxtun2(v8.b16, v7.h8); dump();
sqxtun2(v16.b16, v7.h8); dump();
sqxtun2(v31.b16, v7.h8); dump();
sqxtun2(v7.b16, v7.h8); dump();
sqxtun2(v7.b16, v0.h8); dump();
sqxtun2(v7.b16, v1.h8); dump();
sqxtun2(v7.b16, v2.h8); dump();
sqxtun2(v7.b16, v4.h8); dump();
sqxtun2(v7.b16, v8.h8); dump();
sqxtun2(v7.b16, v16.h8); dump();
sqxtun2(v7.b16, v31.h8); dump();
uqxtn2(v7.b16, v7.h8); dump();
uqxtn2(v0.b16, v7.h8); dump();
uqxtn2(v1.b16, v7.h8); dump();
uqxtn2(v2.b16, v7.h8); dump();
uqxtn2(v4.b16, v7.h8); dump();
uqxtn2(v8.b16, v7.h8); dump();
uqxtn2(v16.b16, v7.h8); dump();
uqxtn2(v31.b16, v7.h8); dump();
uqxtn2(v7.b16, v7.h8); dump();
uqxtn2(v7.b16, v0.h8); dump();
uqxtn2(v7.b16, v1.h8); dump();
uqxtn2(v7.b16, v2.h8); dump();
uqxtn2(v7.b16, v4.h8); dump();
uqxtn2(v7.b16, v8.h8); dump();
uqxtn2(v7.b16, v16.h8); dump();
uqxtn2(v7.b16, v31.h8); dump();
//DataProcSimd_UnaryArithmetic19:1
sqxtn2(v7.h8, v7.s4); dump();
sqxtn2(v0.h8, v7.s4); dump();
sqxtn2(v1.h8, v7.s4); dump();
sqxtn2(v2.h8, v7.s4); dump();
sqxtn2(v4.h8, v7.s4); dump();
sqxtn2(v8.h8, v7.s4); dump();
sqxtn2(v16.h8, v7.s4); dump();
sqxtn2(v31.h8, v7.s4); dump();
sqxtn2(v7.h8, v7.s4); dump();
sqxtn2(v7.h8, v0.s4); dump();
sqxtn2(v7.h8, v1.s4); dump();
sqxtn2(v7.h8, v2.s4); dump();
sqxtn2(v7.h8, v4.s4); dump();
sqxtn2(v7.h8, v8.s4); dump();
sqxtn2(v7.h8, v16.s4); dump();
sqxtn2(v7.h8, v31.s4); dump();
sqxtun2(v7.h8, v7.s4); dump();
sqxtun2(v0.h8, v7.s4); dump();
sqxtun2(v1.h8, v7.s4); dump();
sqxtun2(v2.h8, v7.s4); dump();
sqxtun2(v4.h8, v7.s4); dump();
sqxtun2(v8.h8, v7.s4); dump();
sqxtun2(v16.h8, v7.s4); dump();
sqxtun2(v31.h8, v7.s4); dump();
sqxtun2(v7.h8, v7.s4); dump();
sqxtun2(v7.h8, v0.s4); dump();
sqxtun2(v7.h8, v1.s4); dump();
sqxtun2(v7.h8, v2.s4); dump();
sqxtun2(v7.h8, v4.s4); dump();
sqxtun2(v7.h8, v8.s4); dump();
sqxtun2(v7.h8, v16.s4); dump();
sqxtun2(v7.h8, v31.s4); dump();
uqxtn2(v7.h8, v7.s4); dump();
uqxtn2(v0.h8, v7.s4); dump();
uqxtn2(v1.h8, v7.s4); dump();
uqxtn2(v2.h8, v7.s4); dump();
uqxtn2(v4.h8, v7.s4); dump();
uqxtn2(v8.h8, v7.s4); dump();
uqxtn2(v16.h8, v7.s4); dump();
uqxtn2(v31.h8, v7.s4); dump();
uqxtn2(v7.h8, v7.s4); dump();
uqxtn2(v7.h8, v0.s4); dump();
uqxtn2(v7.h8, v1.s4); dump();
uqxtn2(v7.h8, v2.s4); dump();
uqxtn2(v7.h8, v4.s4); dump();
uqxtn2(v7.h8, v8.s4); dump();
uqxtn2(v7.h8, v16.s4); dump();
uqxtn2(v7.h8, v31.s4); dump();
//DataProcSimd_UnaryArithmetic19:2
sqxtn2(v7.s4, v7.d2); dump();
sqxtn2(v0.s4, v7.d2); dump();
sqxtn2(v1.s4, v7.d2); dump();
sqxtn2(v2.s4, v7.d2); dump();
sqxtn2(v4.s4, v7.d2); dump();
sqxtn2(v8.s4, v7.d2); dump();
sqxtn2(v16.s4, v7.d2); dump();
sqxtn2(v31.s4, v7.d2); dump();
sqxtn2(v7.s4, v7.d2); dump();
sqxtn2(v7.s4, v0.d2); dump();
sqxtn2(v7.s4, v1.d2); dump();
sqxtn2(v7.s4, v2.d2); dump();
sqxtn2(v7.s4, v4.d2); dump();
sqxtn2(v7.s4, v8.d2); dump();
sqxtn2(v7.s4, v16.d2); dump();
sqxtn2(v7.s4, v31.d2); dump();
sqxtun2(v7.s4, v7.d2); dump();
sqxtun2(v0.s4, v7.d2); dump();
sqxtun2(v1.s4, v7.d2); dump();
sqxtun2(v2.s4, v7.d2); dump();
sqxtun2(v4.s4, v7.d2); dump();
sqxtun2(v8.s4, v7.d2); dump();
sqxtun2(v16.s4, v7.d2); dump();
sqxtun2(v31.s4, v7.d2); dump();
sqxtun2(v7.s4, v7.d2); dump();
sqxtun2(v7.s4, v0.d2); dump();
sqxtun2(v7.s4, v1.d2); dump();
sqxtun2(v7.s4, v2.d2); dump();
sqxtun2(v7.s4, v4.d2); dump();
sqxtun2(v7.s4, v8.d2); dump();
sqxtun2(v7.s4, v16.d2); dump();
sqxtun2(v7.s4, v31.d2); dump();
uqxtn2(v7.s4, v7.d2); dump();
uqxtn2(v0.s4, v7.d2); dump();
uqxtn2(v1.s4, v7.d2); dump();
uqxtn2(v2.s4, v7.d2); dump();
uqxtn2(v4.s4, v7.d2); dump();
uqxtn2(v8.s4, v7.d2); dump();
uqxtn2(v16.s4, v7.d2); dump();
uqxtn2(v31.s4, v7.d2); dump();
uqxtn2(v7.s4, v7.d2); dump();
uqxtn2(v7.s4, v0.d2); dump();
uqxtn2(v7.s4, v1.d2); dump();
uqxtn2(v7.s4, v2.d2); dump();
uqxtn2(v7.s4, v4.d2); dump();
uqxtn2(v7.s4, v8.d2); dump();
uqxtn2(v7.s4, v16.d2); dump();
uqxtn2(v7.s4, v31.d2); dump();
//DataProcSimd_UnaryArithmetic20:0
urecpe(v7.s2, v7.s2); dump();
urecpe(v0.s2, v7.s2); dump();
urecpe(v1.s2, v7.s2); dump();
urecpe(v2.s2, v7.s2); dump();
urecpe(v4.s2, v7.s2); dump();
urecpe(v8.s2, v7.s2); dump();
urecpe(v16.s2, v7.s2); dump();
urecpe(v31.s2, v7.s2); dump();
urecpe(v7.s2, v7.s2); dump();
urecpe(v7.s2, v0.s2); dump();
urecpe(v7.s2, v1.s2); dump();
urecpe(v7.s2, v2.s2); dump();
urecpe(v7.s2, v4.s2); dump();
urecpe(v7.s2, v8.s2); dump();
urecpe(v7.s2, v16.s2); dump();
urecpe(v7.s2, v31.s2); dump();
ursqrte(v7.s2, v7.s2); dump();
ursqrte(v0.s2, v7.s2); dump();
ursqrte(v1.s2, v7.s2); dump();
ursqrte(v2.s2, v7.s2); dump();
ursqrte(v4.s2, v7.s2); dump();
ursqrte(v8.s2, v7.s2); dump();
ursqrte(v16.s2, v7.s2); dump();
ursqrte(v31.s2, v7.s2); dump();
ursqrte(v7.s2, v7.s2); dump();
ursqrte(v7.s2, v0.s2); dump();
ursqrte(v7.s2, v1.s2); dump();
ursqrte(v7.s2, v2.s2); dump();
ursqrte(v7.s2, v4.s2); dump();
ursqrte(v7.s2, v8.s2); dump();
ursqrte(v7.s2, v16.s2); dump();
ursqrte(v7.s2, v31.s2); dump();
//DataProcSimd_UnaryArithmetic20:1
urecpe(v7.s4, v7.s4); dump();
urecpe(v0.s4, v7.s4); dump();
urecpe(v1.s4, v7.s4); dump();
urecpe(v2.s4, v7.s4); dump();
urecpe(v4.s4, v7.s4); dump();
urecpe(v8.s4, v7.s4); dump();
urecpe(v16.s4, v7.s4); dump();
urecpe(v31.s4, v7.s4); dump();
urecpe(v7.s4, v7.s4); dump();
urecpe(v7.s4, v0.s4); dump();
urecpe(v7.s4, v1.s4); dump();
urecpe(v7.s4, v2.s4); dump();
urecpe(v7.s4, v4.s4); dump();
urecpe(v7.s4, v8.s4); dump();
urecpe(v7.s4, v16.s4); dump();
urecpe(v7.s4, v31.s4); dump();
ursqrte(v7.s4, v7.s4); dump();
ursqrte(v0.s4, v7.s4); dump();
ursqrte(v1.s4, v7.s4); dump();
ursqrte(v2.s4, v7.s4); dump();
ursqrte(v4.s4, v7.s4); dump();
ursqrte(v8.s4, v7.s4); dump();
ursqrte(v16.s4, v7.s4); dump();
ursqrte(v31.s4, v7.s4); dump();
ursqrte(v7.s4, v7.s4); dump();
ursqrte(v7.s4, v0.s4); dump();
ursqrte(v7.s4, v1.s4); dump();
ursqrte(v7.s4, v2.s4); dump();
ursqrte(v7.s4, v4.s4); dump();
ursqrte(v7.s4, v8.s4); dump();
ursqrte(v7.s4, v16.s4); dump();
ursqrte(v7.s4, v31.s4); dump();
//DataProcSimd_UnaryArithmetic21:0
uxtl(v7.h8, v7.b8); dump();
uxtl(v0.h8, v7.b8); dump();
uxtl(v1.h8, v7.b8); dump();
uxtl(v2.h8, v7.b8); dump();
uxtl(v4.h8, v7.b8); dump();
uxtl(v8.h8, v7.b8); dump();
uxtl(v16.h8, v7.b8); dump();
uxtl(v31.h8, v7.b8); dump();
uxtl(v7.h8, v7.b8); dump();
uxtl(v7.h8, v0.b8); dump();
uxtl(v7.h8, v1.b8); dump();
uxtl(v7.h8, v2.b8); dump();
uxtl(v7.h8, v4.b8); dump();
uxtl(v7.h8, v8.b8); dump();
uxtl(v7.h8, v16.b8); dump();
uxtl(v7.h8, v31.b8); dump();
//DataProcSimd_UnaryArithmetic21:1
uxtl(v7.s4, v7.h4); dump();
uxtl(v0.s4, v7.h4); dump();
uxtl(v1.s4, v7.h4); dump();
uxtl(v2.s4, v7.h4); dump();
uxtl(v4.s4, v7.h4); dump();
uxtl(v8.s4, v7.h4); dump();
uxtl(v16.s4, v7.h4); dump();
uxtl(v31.s4, v7.h4); dump();
uxtl(v7.s4, v7.h4); dump();
uxtl(v7.s4, v0.h4); dump();
uxtl(v7.s4, v1.h4); dump();
uxtl(v7.s4, v2.h4); dump();
uxtl(v7.s4, v4.h4); dump();
uxtl(v7.s4, v8.h4); dump();
uxtl(v7.s4, v16.h4); dump();
uxtl(v7.s4, v31.h4); dump();
//DataProcSimd_UnaryArithmetic21:2
uxtl(v7.d2, v7.s2); dump();
uxtl(v0.d2, v7.s2); dump();
uxtl(v1.d2, v7.s2); dump();
uxtl(v2.d2, v7.s2); dump();
uxtl(v4.d2, v7.s2); dump();
uxtl(v8.d2, v7.s2); dump();
uxtl(v16.d2, v7.s2); dump();
uxtl(v31.d2, v7.s2); dump();
uxtl(v7.d2, v7.s2); dump();
uxtl(v7.d2, v0.s2); dump();
uxtl(v7.d2, v1.s2); dump();
uxtl(v7.d2, v2.s2); dump();
uxtl(v7.d2, v4.s2); dump();
uxtl(v7.d2, v8.s2); dump();
uxtl(v7.d2, v16.s2); dump();
uxtl(v7.d2, v31.s2); dump();
//DataProcSimd_UnaryArithmetic22:0
uxtl2(v7.h8, v7.b16); dump();
uxtl2(v0.h8, v7.b16); dump();
uxtl2(v1.h8, v7.b16); dump();
uxtl2(v2.h8, v7.b16); dump();
uxtl2(v4.h8, v7.b16); dump();
uxtl2(v8.h8, v7.b16); dump();
uxtl2(v16.h8, v7.b16); dump();
uxtl2(v31.h8, v7.b16); dump();
uxtl2(v7.h8, v7.b16); dump();
uxtl2(v7.h8, v0.b16); dump();
uxtl2(v7.h8, v1.b16); dump();
uxtl2(v7.h8, v2.b16); dump();
uxtl2(v7.h8, v4.b16); dump();
uxtl2(v7.h8, v8.b16); dump();
uxtl2(v7.h8, v16.b16); dump();
uxtl2(v7.h8, v31.b16); dump();
//DataProcSimd_UnaryArithmetic22:1
uxtl2(v7.s4, v7.h8); dump();
uxtl2(v0.s4, v7.h8); dump();
uxtl2(v1.s4, v7.h8); dump();
uxtl2(v2.s4, v7.h8); dump();
uxtl2(v4.s4, v7.h8); dump();
uxtl2(v8.s4, v7.h8); dump();
uxtl2(v16.s4, v7.h8); dump();
uxtl2(v31.s4, v7.h8); dump();
uxtl2(v7.s4, v7.h8); dump();
uxtl2(v7.s4, v0.h8); dump();
uxtl2(v7.s4, v1.h8); dump();
uxtl2(v7.s4, v2.h8); dump();
uxtl2(v7.s4, v4.h8); dump();
uxtl2(v7.s4, v8.h8); dump();
uxtl2(v7.s4, v16.h8); dump();
uxtl2(v7.s4, v31.h8); dump();
//DataProcSimd_UnaryArithmetic22:2
uxtl2(v7.d2, v7.s4); dump();
uxtl2(v0.d2, v7.s4); dump();
uxtl2(v1.d2, v7.s4); dump();
uxtl2(v2.d2, v7.s4); dump();
uxtl2(v4.d2, v7.s4); dump();
uxtl2(v8.d2, v7.s4); dump();
uxtl2(v16.d2, v7.s4); dump();
uxtl2(v31.d2, v7.s4); dump();
uxtl2(v7.d2, v7.s4); dump();
uxtl2(v7.d2, v0.s4); dump();
uxtl2(v7.d2, v1.s4); dump();
uxtl2(v7.d2, v2.s4); dump();
uxtl2(v7.d2, v4.s4); dump();
uxtl2(v7.d2, v8.s4); dump();
uxtl2(v7.d2, v16.s4); dump();
uxtl2(v7.d2, v31.s4); dump();
//DataProcSimd_UnaryArithmetic23:0
xtn(v7.b8, v7.h8); dump();
xtn(v0.b8, v7.h8); dump();
xtn(v1.b8, v7.h8); dump();
xtn(v2.b8, v7.h8); dump();
xtn(v4.b8, v7.h8); dump();
xtn(v8.b8, v7.h8); dump();
xtn(v16.b8, v7.h8); dump();
xtn(v31.b8, v7.h8); dump();
xtn(v7.b8, v7.h8); dump();
xtn(v7.b8, v0.h8); dump();
xtn(v7.b8, v1.h8); dump();
xtn(v7.b8, v2.h8); dump();
xtn(v7.b8, v4.h8); dump();
xtn(v7.b8, v8.h8); dump();
xtn(v7.b8, v16.h8); dump();
xtn(v7.b8, v31.h8); dump();
//DataProcSimd_UnaryArithmetic23:1
xtn(v7.h4, v7.s4); dump();
xtn(v0.h4, v7.s4); dump();
xtn(v1.h4, v7.s4); dump();
xtn(v2.h4, v7.s4); dump();
xtn(v4.h4, v7.s4); dump();
xtn(v8.h4, v7.s4); dump();
xtn(v16.h4, v7.s4); dump();
xtn(v31.h4, v7.s4); dump();
xtn(v7.h4, v7.s4); dump();
xtn(v7.h4, v0.s4); dump();
xtn(v7.h4, v1.s4); dump();
xtn(v7.h4, v2.s4); dump();
xtn(v7.h4, v4.s4); dump();
xtn(v7.h4, v8.s4); dump();
xtn(v7.h4, v16.s4); dump();
xtn(v7.h4, v31.s4); dump();
//DataProcSimd_UnaryArithmetic23:2
xtn(v7.s2, v7.d2); dump();
xtn(v0.s2, v7.d2); dump();
xtn(v1.s2, v7.d2); dump();
xtn(v2.s2, v7.d2); dump();
xtn(v4.s2, v7.d2); dump();
xtn(v8.s2, v7.d2); dump();
xtn(v16.s2, v7.d2); dump();
xtn(v31.s2, v7.d2); dump();
xtn(v7.s2, v7.d2); dump();
xtn(v7.s2, v0.d2); dump();
xtn(v7.s2, v1.d2); dump();
xtn(v7.s2, v2.d2); dump();
xtn(v7.s2, v4.d2); dump();
xtn(v7.s2, v8.d2); dump();
xtn(v7.s2, v16.d2); dump();
xtn(v7.s2, v31.d2); dump();
//DataProcSimd_UnaryArithmetic24:0
xtn2(v7.b16, v7.h8); dump();
xtn2(v0.b16, v7.h8); dump();
xtn2(v1.b16, v7.h8); dump();
xtn2(v2.b16, v7.h8); dump();
xtn2(v4.b16, v7.h8); dump();
xtn2(v8.b16, v7.h8); dump();
xtn2(v16.b16, v7.h8); dump();
xtn2(v31.b16, v7.h8); dump();
xtn2(v7.b16, v7.h8); dump();
xtn2(v7.b16, v0.h8); dump();
xtn2(v7.b16, v1.h8); dump();
xtn2(v7.b16, v2.h8); dump();
xtn2(v7.b16, v4.h8); dump();
xtn2(v7.b16, v8.h8); dump();
xtn2(v7.b16, v16.h8); dump();
xtn2(v7.b16, v31.h8); dump();
//DataProcSimd_UnaryArithmetic24:1
xtn2(v7.h8, v7.s4); dump();
xtn2(v0.h8, v7.s4); dump();
xtn2(v1.h8, v7.s4); dump();
xtn2(v2.h8, v7.s4); dump();
xtn2(v4.h8, v7.s4); dump();
xtn2(v8.h8, v7.s4); dump();
xtn2(v16.h8, v7.s4); dump();
xtn2(v31.h8, v7.s4); dump();
xtn2(v7.h8, v7.s4); dump();
xtn2(v7.h8, v0.s4); dump();
xtn2(v7.h8, v1.s4); dump();
xtn2(v7.h8, v2.s4); dump();
xtn2(v7.h8, v4.s4); dump();
xtn2(v7.h8, v8.s4); dump();
xtn2(v7.h8, v16.s4); dump();
xtn2(v7.h8, v31.s4); dump();
//DataProcSimd_UnaryArithmetic24:2
xtn2(v7.s4, v7.d2); dump();
xtn2(v0.s4, v7.d2); dump();
xtn2(v1.s4, v7.d2); dump();
xtn2(v2.s4, v7.d2); dump();
xtn2(v4.s4, v7.d2); dump();
xtn2(v8.s4, v7.d2); dump();
xtn2(v16.s4, v7.d2); dump();
xtn2(v31.s4, v7.d2); dump();
xtn2(v7.s4, v7.d2); dump();
xtn2(v7.s4, v0.d2); dump();
xtn2(v7.s4, v1.d2); dump();
xtn2(v7.s4, v2.d2); dump();
xtn2(v7.s4, v4.d2); dump();
xtn2(v7.s4, v8.d2); dump();
xtn2(v7.s4, v16.d2); dump();
xtn2(v7.s4, v31.d2); dump();
//DataProcSimd_ByElementArithmetic0:0
fmla(h7, h7, v6.h8[7]); dump();
fmla(h0, h7, v6.h8[7]); dump();
fmla(h1, h7, v6.h8[7]); dump();
fmla(h2, h7, v6.h8[7]); dump();
fmla(h4, h7, v6.h8[7]); dump();
fmla(h8, h7, v6.h8[7]); dump();
fmla(h16, h7, v6.h8[7]); dump();
fmla(h31, h7, v6.h8[7]); dump();
fmla(h7, h7, v6.h8[7]); dump();
fmla(h7, h0, v6.h8[7]); dump();
fmla(h7, h1, v6.h8[7]); dump();
fmla(h7, h2, v6.h8[7]); dump();
fmla(h7, h4, v6.h8[7]); dump();
fmla(h7, h8, v6.h8[7]); dump();
fmla(h7, h16, v6.h8[7]); dump();
fmla(h7, h31, v6.h8[7]); dump();
fmla(h7, h7, v6.h8[7]); dump();
fmla(h7, h7, v0.h8[7]); dump();
fmla(h7, h7, v1.h8[7]); dump();
fmla(h7, h7, v2.h8[7]); dump();
fmla(h7, h7, v4.h8[7]); dump();
fmla(h7, h7, v8.h8[7]); dump();
fmla(h7, h7, v15.h8[7]); dump();
fmla(h7, h7, v15.h8[0]); dump();
fmla(h7, h7, v15.h8[1]); dump();
fmla(h7, h7, v15.h8[2]); dump();
fmla(h7, h7, v15.h8[4]); dump();
fmls(h7, h7, v6.h8[7]); dump();
fmls(h0, h7, v6.h8[7]); dump();
fmls(h1, h7, v6.h8[7]); dump();
fmls(h2, h7, v6.h8[7]); dump();
fmls(h4, h7, v6.h8[7]); dump();
fmls(h8, h7, v6.h8[7]); dump();
fmls(h16, h7, v6.h8[7]); dump();
fmls(h31, h7, v6.h8[7]); dump();
fmls(h7, h7, v6.h8[7]); dump();
fmls(h7, h0, v6.h8[7]); dump();
fmls(h7, h1, v6.h8[7]); dump();
fmls(h7, h2, v6.h8[7]); dump();
fmls(h7, h4, v6.h8[7]); dump();
fmls(h7, h8, v6.h8[7]); dump();
fmls(h7, h16, v6.h8[7]); dump();
fmls(h7, h31, v6.h8[7]); dump();
fmls(h7, h7, v6.h8[7]); dump();
fmls(h7, h7, v0.h8[7]); dump();
fmls(h7, h7, v1.h8[7]); dump();
fmls(h7, h7, v2.h8[7]); dump();
fmls(h7, h7, v4.h8[7]); dump();
fmls(h7, h7, v8.h8[7]); dump();
fmls(h7, h7, v15.h8[7]); dump();
fmls(h7, h7, v15.h8[0]); dump();
fmls(h7, h7, v15.h8[1]); dump();
fmls(h7, h7, v15.h8[2]); dump();
fmls(h7, h7, v15.h8[4]); dump();
fmul(h7, h7, v6.h8[7]); dump();
fmul(h0, h7, v6.h8[7]); dump();
fmul(h1, h7, v6.h8[7]); dump();
fmul(h2, h7, v6.h8[7]); dump();
fmul(h4, h7, v6.h8[7]); dump();
fmul(h8, h7, v6.h8[7]); dump();
fmul(h16, h7, v6.h8[7]); dump();
fmul(h31, h7, v6.h8[7]); dump();
fmul(h7, h7, v6.h8[7]); dump();
fmul(h7, h0, v6.h8[7]); dump();
fmul(h7, h1, v6.h8[7]); dump();
fmul(h7, h2, v6.h8[7]); dump();
fmul(h7, h4, v6.h8[7]); dump();
fmul(h7, h8, v6.h8[7]); dump();
fmul(h7, h16, v6.h8[7]); dump();
fmul(h7, h31, v6.h8[7]); dump();
fmul(h7, h7, v6.h8[7]); dump();
fmul(h7, h7, v0.h8[7]); dump();
fmul(h7, h7, v1.h8[7]); dump();
fmul(h7, h7, v2.h8[7]); dump();
fmul(h7, h7, v4.h8[7]); dump();
fmul(h7, h7, v8.h8[7]); dump();
fmul(h7, h7, v15.h8[7]); dump();
fmul(h7, h7, v15.h8[0]); dump();
fmul(h7, h7, v15.h8[1]); dump();
fmul(h7, h7, v15.h8[2]); dump();
fmul(h7, h7, v15.h8[4]); dump();
fmulx(h7, h7, v6.h8[7]); dump();
fmulx(h0, h7, v6.h8[7]); dump();
fmulx(h1, h7, v6.h8[7]); dump();
fmulx(h2, h7, v6.h8[7]); dump();
fmulx(h4, h7, v6.h8[7]); dump();
fmulx(h8, h7, v6.h8[7]); dump();
fmulx(h16, h7, v6.h8[7]); dump();
fmulx(h31, h7, v6.h8[7]); dump();
fmulx(h7, h7, v6.h8[7]); dump();
fmulx(h7, h0, v6.h8[7]); dump();
fmulx(h7, h1, v6.h8[7]); dump();
fmulx(h7, h2, v6.h8[7]); dump();
fmulx(h7, h4, v6.h8[7]); dump();
fmulx(h7, h8, v6.h8[7]); dump();
fmulx(h7, h16, v6.h8[7]); dump();
fmulx(h7, h31, v6.h8[7]); dump();
fmulx(h7, h7, v6.h8[7]); dump();
fmulx(h7, h7, v0.h8[7]); dump();
fmulx(h7, h7, v1.h8[7]); dump();
fmulx(h7, h7, v2.h8[7]); dump();
fmulx(h7, h7, v4.h8[7]); dump();
fmulx(h7, h7, v8.h8[7]); dump();
fmulx(h7, h7, v15.h8[7]); dump();
fmulx(h7, h7, v15.h8[0]); dump();
fmulx(h7, h7, v15.h8[1]); dump();
fmulx(h7, h7, v15.h8[2]); dump();
fmulx(h7, h7, v15.h8[4]); dump();
//DataProcSimd_ByElementArithmetic0:1
fmla(s7, s7, v7.s4[3]); dump();
fmla(s0, s7, v7.s4[3]); dump();
fmla(s1, s7, v7.s4[3]); dump();
fmla(s2, s7, v7.s4[3]); dump();
fmla(s4, s7, v7.s4[3]); dump();
fmla(s8, s7, v7.s4[3]); dump();
fmla(s16, s7, v7.s4[3]); dump();
fmla(s31, s7, v7.s4[3]); dump();
fmla(s7, s7, v7.s4[3]); dump();
fmla(s7, s0, v7.s4[3]); dump();
fmla(s7, s1, v7.s4[3]); dump();
fmla(s7, s2, v7.s4[3]); dump();
fmla(s7, s4, v7.s4[3]); dump();
fmla(s7, s8, v7.s4[3]); dump();
fmla(s7, s16, v7.s4[3]); dump();
fmla(s7, s31, v7.s4[3]); dump();
fmla(s7, s7, v7.s4[3]); dump();
fmla(s7, s7, v7s4_3); dump();
fmla(s7, s7, v0.s4[3]); dump();
fmla(s7, s7, v0s4_3); dump();
fmla(s7, s7, v1.s4[3]); dump();
fmla(s7, s7, v1s4_3); dump();
fmla(s7, s7, v2.s4[3]); dump();
fmla(s7, s7, v2s4_3); dump();
fmla(s7, s7, v4.s4[3]); dump();
fmla(s7, s7, v4s4_3); dump();
fmla(s7, s7, v8.s4[3]); dump();
fmla(s7, s7, v8s4_3); dump();
fmla(s7, s7, v16.s4[3]); dump();
fmla(s7, s7, v16s4_3); dump();
fmla(s7, s7, v31.s4[3]); dump();
fmla(s7, s7, v31s4_3); dump();
fmla(s7, s7, v7.s4[0]); dump();
fmla(s7, s7, v7s4_0); dump();
fmla(s7, s7, v7.s4[1]); dump();
fmla(s7, s7, v7s4_1); dump();
fmla(s7, s7, v7.s4[2]); dump();
fmla(s7, s7, v7s4_2); dump();
fmls(s7, s7, v7.s4[3]); dump();
fmls(s0, s7, v7.s4[3]); dump();
fmls(s1, s7, v7.s4[3]); dump();
fmls(s2, s7, v7.s4[3]); dump();
fmls(s4, s7, v7.s4[3]); dump();
fmls(s8, s7, v7.s4[3]); dump();
fmls(s16, s7, v7.s4[3]); dump();
fmls(s31, s7, v7.s4[3]); dump();
fmls(s7, s7, v7.s4[3]); dump();
fmls(s7, s0, v7.s4[3]); dump();
fmls(s7, s1, v7.s4[3]); dump();
fmls(s7, s2, v7.s4[3]); dump();
fmls(s7, s4, v7.s4[3]); dump();
fmls(s7, s8, v7.s4[3]); dump();
fmls(s7, s16, v7.s4[3]); dump();
fmls(s7, s31, v7.s4[3]); dump();
fmls(s7, s7, v7.s4[3]); dump();
fmls(s7, s7, v7s4_3); dump();
fmls(s7, s7, v0.s4[3]); dump();
fmls(s7, s7, v0s4_3); dump();
fmls(s7, s7, v1.s4[3]); dump();
fmls(s7, s7, v1s4_3); dump();
fmls(s7, s7, v2.s4[3]); dump();
fmls(s7, s7, v2s4_3); dump();
fmls(s7, s7, v4.s4[3]); dump();
fmls(s7, s7, v4s4_3); dump();
fmls(s7, s7, v8.s4[3]); dump();
fmls(s7, s7, v8s4_3); dump();
fmls(s7, s7, v16.s4[3]); dump();
fmls(s7, s7, v16s4_3); dump();
fmls(s7, s7, v31.s4[3]); dump();
fmls(s7, s7, v31s4_3); dump();
fmls(s7, s7, v7.s4[0]); dump();
fmls(s7, s7, v7s4_0); dump();
fmls(s7, s7, v7.s4[1]); dump();
fmls(s7, s7, v7s4_1); dump();
fmls(s7, s7, v7.s4[2]); dump();
fmls(s7, s7, v7s4_2); dump();
fmul(s7, s7, v7.s4[3]); dump();
fmul(s0, s7, v7.s4[3]); dump();
fmul(s1, s7, v7.s4[3]); dump();
fmul(s2, s7, v7.s4[3]); dump();
fmul(s4, s7, v7.s4[3]); dump();
fmul(s8, s7, v7.s4[3]); dump();
fmul(s16, s7, v7.s4[3]); dump();
fmul(s31, s7, v7.s4[3]); dump();
fmul(s7, s7, v7.s4[3]); dump();
fmul(s7, s0, v7.s4[3]); dump();
fmul(s7, s1, v7.s4[3]); dump();
fmul(s7, s2, v7.s4[3]); dump();
fmul(s7, s4, v7.s4[3]); dump();
fmul(s7, s8, v7.s4[3]); dump();
fmul(s7, s16, v7.s4[3]); dump();
fmul(s7, s31, v7.s4[3]); dump();
fmul(s7, s7, v7.s4[3]); dump();
fmul(s7, s7, v7s4_3); dump();
fmul(s7, s7, v0.s4[3]); dump();
fmul(s7, s7, v0s4_3); dump();
fmul(s7, s7, v1.s4[3]); dump();
fmul(s7, s7, v1s4_3); dump();
fmul(s7, s7, v2.s4[3]); dump();
fmul(s7, s7, v2s4_3); dump();
fmul(s7, s7, v4.s4[3]); dump();
fmul(s7, s7, v4s4_3); dump();
fmul(s7, s7, v8.s4[3]); dump();
fmul(s7, s7, v8s4_3); dump();
fmul(s7, s7, v16.s4[3]); dump();
fmul(s7, s7, v16s4_3); dump();
fmul(s7, s7, v31.s4[3]); dump();
fmul(s7, s7, v31s4_3); dump();
fmul(s7, s7, v7.s4[0]); dump();
fmul(s7, s7, v7s4_0); dump();
fmul(s7, s7, v7.s4[1]); dump();
fmul(s7, s7, v7s4_1); dump();
fmul(s7, s7, v7.s4[2]); dump();
fmul(s7, s7, v7s4_2); dump();
fmulx(s7, s7, v7.s4[3]); dump();
fmulx(s0, s7, v7.s4[3]); dump();
fmulx(s1, s7, v7.s4[3]); dump();
fmulx(s2, s7, v7.s4[3]); dump();
fmulx(s4, s7, v7.s4[3]); dump();
fmulx(s8, s7, v7.s4[3]); dump();
fmulx(s16, s7, v7.s4[3]); dump();
fmulx(s31, s7, v7.s4[3]); dump();
fmulx(s7, s7, v7.s4[3]); dump();
fmulx(s7, s0, v7.s4[3]); dump();
fmulx(s7, s1, v7.s4[3]); dump();
fmulx(s7, s2, v7.s4[3]); dump();
fmulx(s7, s4, v7.s4[3]); dump();
fmulx(s7, s8, v7.s4[3]); dump();
fmulx(s7, s16, v7.s4[3]); dump();
fmulx(s7, s31, v7.s4[3]); dump();
fmulx(s7, s7, v7.s4[3]); dump();
fmulx(s7, s7, v7s4_3); dump();
fmulx(s7, s7, v0.s4[3]); dump();
fmulx(s7, s7, v0s4_3); dump();
fmulx(s7, s7, v1.s4[3]); dump();
fmulx(s7, s7, v1s4_3); dump();
fmulx(s7, s7, v2.s4[3]); dump();
fmulx(s7, s7, v2s4_3); dump();
fmulx(s7, s7, v4.s4[3]); dump();
fmulx(s7, s7, v4s4_3); dump();
fmulx(s7, s7, v8.s4[3]); dump();
fmulx(s7, s7, v8s4_3); dump();
fmulx(s7, s7, v16.s4[3]); dump();
fmulx(s7, s7, v16s4_3); dump();
fmulx(s7, s7, v31.s4[3]); dump();
fmulx(s7, s7, v31s4_3); dump();
fmulx(s7, s7, v7.s4[0]); dump();
fmulx(s7, s7, v7s4_0); dump();
fmulx(s7, s7, v7.s4[1]); dump();
fmulx(s7, s7, v7s4_1); dump();
fmulx(s7, s7, v7.s4[2]); dump();
fmulx(s7, s7, v7s4_2); dump();
//DataProcSimd_ByElementArithmetic0:2
fmla(d7, d7, v7.d2[1]); dump();
fmla(d0, d7, v7.d2[1]); dump();
fmla(d1, d7, v7.d2[1]); dump();
fmla(d2, d7, v7.d2[1]); dump();
fmla(d4, d7, v7.d2[1]); dump();
fmla(d8, d7, v7.d2[1]); dump();
fmla(d16, d7, v7.d2[1]); dump();
fmla(d31, d7, v7.d2[1]); dump();
fmla(d7, d7, v7.d2[1]); dump();
fmla(d7, d0, v7.d2[1]); dump();
fmla(d7, d1, v7.d2[1]); dump();
fmla(d7, d2, v7.d2[1]); dump();
fmla(d7, d4, v7.d2[1]); dump();
fmla(d7, d8, v7.d2[1]); dump();
fmla(d7, d16, v7.d2[1]); dump();
fmla(d7, d31, v7.d2[1]); dump();
fmla(d7, d7, v7.d2[1]); dump();
fmla(d7, d7, v7d2_1); dump();
fmla(d7, d7, v0.d2[1]); dump();
fmla(d7, d7, v0d2_1); dump();
fmla(d7, d7, v1.d2[1]); dump();
fmla(d7, d7, v1d2_1); dump();
fmla(d7, d7, v2.d2[1]); dump();
fmla(d7, d7, v2d2_1); dump();
fmla(d7, d7, v4.d2[1]); dump();
fmla(d7, d7, v4d2_1); dump();
fmla(d7, d7, v8.d2[1]); dump();
fmla(d7, d7, v8d2_1); dump();
fmla(d7, d7, v16.d2[1]); dump();
fmla(d7, d7, v16d2_1); dump();
fmla(d7, d7, v31.d2[1]); dump();
fmla(d7, d7, v31d2_1); dump();
fmla(d7, d7, v7.d2[0]); dump();
fmla(d7, d7, v7d2_0); dump();
fmls(d7, d7, v7.d2[1]); dump();
fmls(d0, d7, v7.d2[1]); dump();
fmls(d1, d7, v7.d2[1]); dump();
fmls(d2, d7, v7.d2[1]); dump();
fmls(d4, d7, v7.d2[1]); dump();
fmls(d8, d7, v7.d2[1]); dump();
fmls(d16, d7, v7.d2[1]); dump();
fmls(d31, d7, v7.d2[1]); dump();
fmls(d7, d7, v7.d2[1]); dump();
fmls(d7, d0, v7.d2[1]); dump();
fmls(d7, d1, v7.d2[1]); dump();
fmls(d7, d2, v7.d2[1]); dump();
fmls(d7, d4, v7.d2[1]); dump();
fmls(d7, d8, v7.d2[1]); dump();
fmls(d7, d16, v7.d2[1]); dump();
fmls(d7, d31, v7.d2[1]); dump();
fmls(d7, d7, v7.d2[1]); dump();
fmls(d7, d7, v7d2_1); dump();
fmls(d7, d7, v0.d2[1]); dump();
fmls(d7, d7, v0d2_1); dump();
fmls(d7, d7, v1.d2[1]); dump();
fmls(d7, d7, v1d2_1); dump();
fmls(d7, d7, v2.d2[1]); dump();
fmls(d7, d7, v2d2_1); dump();
fmls(d7, d7, v4.d2[1]); dump();
fmls(d7, d7, v4d2_1); dump();
fmls(d7, d7, v8.d2[1]); dump();
fmls(d7, d7, v8d2_1); dump();
fmls(d7, d7, v16.d2[1]); dump();
fmls(d7, d7, v16d2_1); dump();
fmls(d7, d7, v31.d2[1]); dump();
fmls(d7, d7, v31d2_1); dump();
fmls(d7, d7, v7.d2[0]); dump();
fmls(d7, d7, v7d2_0); dump();
fmul(d7, d7, v7.d2[1]); dump();
fmul(d0, d7, v7.d2[1]); dump();
fmul(d1, d7, v7.d2[1]); dump();
fmul(d2, d7, v7.d2[1]); dump();
fmul(d4, d7, v7.d2[1]); dump();
fmul(d8, d7, v7.d2[1]); dump();
fmul(d16, d7, v7.d2[1]); dump();
fmul(d31, d7, v7.d2[1]); dump();
fmul(d7, d7, v7.d2[1]); dump();
fmul(d7, d0, v7.d2[1]); dump();
fmul(d7, d1, v7.d2[1]); dump();
fmul(d7, d2, v7.d2[1]); dump();
fmul(d7, d4, v7.d2[1]); dump();
fmul(d7, d8, v7.d2[1]); dump();
fmul(d7, d16, v7.d2[1]); dump();
fmul(d7, d31, v7.d2[1]); dump();
fmul(d7, d7, v7.d2[1]); dump();
fmul(d7, d7, v7d2_1); dump();
fmul(d7, d7, v0.d2[1]); dump();
fmul(d7, d7, v0d2_1); dump();
fmul(d7, d7, v1.d2[1]); dump();
fmul(d7, d7, v1d2_1); dump();
fmul(d7, d7, v2.d2[1]); dump();
fmul(d7, d7, v2d2_1); dump();
fmul(d7, d7, v4.d2[1]); dump();
fmul(d7, d7, v4d2_1); dump();
fmul(d7, d7, v8.d2[1]); dump();
fmul(d7, d7, v8d2_1); dump();
fmul(d7, d7, v16.d2[1]); dump();
fmul(d7, d7, v16d2_1); dump();
fmul(d7, d7, v31.d2[1]); dump();
fmul(d7, d7, v31d2_1); dump();
fmul(d7, d7, v7.d2[0]); dump();
fmul(d7, d7, v7d2_0); dump();
fmulx(d7, d7, v7.d2[1]); dump();
fmulx(d0, d7, v7.d2[1]); dump();
fmulx(d1, d7, v7.d2[1]); dump();
fmulx(d2, d7, v7.d2[1]); dump();
fmulx(d4, d7, v7.d2[1]); dump();
fmulx(d8, d7, v7.d2[1]); dump();
fmulx(d16, d7, v7.d2[1]); dump();
fmulx(d31, d7, v7.d2[1]); dump();
fmulx(d7, d7, v7.d2[1]); dump();
fmulx(d7, d0, v7.d2[1]); dump();
fmulx(d7, d1, v7.d2[1]); dump();
fmulx(d7, d2, v7.d2[1]); dump();
fmulx(d7, d4, v7.d2[1]); dump();
fmulx(d7, d8, v7.d2[1]); dump();
fmulx(d7, d16, v7.d2[1]); dump();
fmulx(d7, d31, v7.d2[1]); dump();
fmulx(d7, d7, v7.d2[1]); dump();
fmulx(d7, d7, v7d2_1); dump();
fmulx(d7, d7, v0.d2[1]); dump();
fmulx(d7, d7, v0d2_1); dump();
fmulx(d7, d7, v1.d2[1]); dump();
fmulx(d7, d7, v1d2_1); dump();
fmulx(d7, d7, v2.d2[1]); dump();
fmulx(d7, d7, v2d2_1); dump();
fmulx(d7, d7, v4.d2[1]); dump();
fmulx(d7, d7, v4d2_1); dump();
fmulx(d7, d7, v8.d2[1]); dump();
fmulx(d7, d7, v8d2_1); dump();
fmulx(d7, d7, v16.d2[1]); dump();
fmulx(d7, d7, v16d2_1); dump();
fmulx(d7, d7, v31.d2[1]); dump();
fmulx(d7, d7, v31d2_1); dump();
fmulx(d7, d7, v7.d2[0]); dump();
fmulx(d7, d7, v7d2_0); dump();
//DataProcSimd_ByElementArithmetic0:3
fmla(v7.h4, v7.h4, v6.h8[7]); dump();
fmla(v0.h4, v7.h4, v6.h8[7]); dump();
fmla(v1.h4, v7.h4, v6.h8[7]); dump();
fmla(v2.h4, v7.h4, v6.h8[7]); dump();
fmla(v4.h4, v7.h4, v6.h8[7]); dump();
fmla(v8.h4, v7.h4, v6.h8[7]); dump();
fmla(v16.h4, v7.h4, v6.h8[7]); dump();
fmla(v31.h4, v7.h4, v6.h8[7]); dump();
fmla(v7.h4, v7.h4, v6.h8[7]); dump();
fmla(v7.h4, v0.h4, v6.h8[7]); dump();
fmla(v7.h4, v1.h4, v6.h8[7]); dump();
fmla(v7.h4, v2.h4, v6.h8[7]); dump();
fmla(v7.h4, v4.h4, v6.h8[7]); dump();
fmla(v7.h4, v8.h4, v6.h8[7]); dump();
fmla(v7.h4, v16.h4, v6.h8[7]); dump();
fmla(v7.h4, v31.h4, v6.h8[7]); dump();
fmla(v7.h4, v7.h4, v6.h8[7]); dump();
fmla(v7.h4, v7.h4, v0.h8[7]); dump();
fmla(v7.h4, v7.h4, v1.h8[7]); dump();
fmla(v7.h4, v7.h4, v2.h8[7]); dump();
fmla(v7.h4, v7.h4, v4.h8[7]); dump();
fmla(v7.h4, v7.h4, v8.h8[7]); dump();
fmla(v7.h4, v7.h4, v15.h8[7]); dump();
fmla(v7.h4, v7.h4, v15.h8[0]); dump();
fmla(v7.h4, v7.h4, v15.h8[1]); dump();
fmla(v7.h4, v7.h4, v15.h8[2]); dump();
fmla(v7.h4, v7.h4, v15.h8[4]); dump();
fmls(v7.h4, v7.h4, v6.h8[7]); dump();
fmls(v0.h4, v7.h4, v6.h8[7]); dump();
fmls(v1.h4, v7.h4, v6.h8[7]); dump();
fmls(v2.h4, v7.h4, v6.h8[7]); dump();
fmls(v4.h4, v7.h4, v6.h8[7]); dump();
fmls(v8.h4, v7.h4, v6.h8[7]); dump();
fmls(v16.h4, v7.h4, v6.h8[7]); dump();
fmls(v31.h4, v7.h4, v6.h8[7]); dump();
fmls(v7.h4, v7.h4, v6.h8[7]); dump();
fmls(v7.h4, v0.h4, v6.h8[7]); dump();
fmls(v7.h4, v1.h4, v6.h8[7]); dump();
fmls(v7.h4, v2.h4, v6.h8[7]); dump();
fmls(v7.h4, v4.h4, v6.h8[7]); dump();
fmls(v7.h4, v8.h4, v6.h8[7]); dump();
fmls(v7.h4, v16.h4, v6.h8[7]); dump();
fmls(v7.h4, v31.h4, v6.h8[7]); dump();
fmls(v7.h4, v7.h4, v6.h8[7]); dump();
fmls(v7.h4, v7.h4, v0.h8[7]); dump();
fmls(v7.h4, v7.h4, v1.h8[7]); dump();
fmls(v7.h4, v7.h4, v2.h8[7]); dump();
fmls(v7.h4, v7.h4, v4.h8[7]); dump();
fmls(v7.h4, v7.h4, v8.h8[7]); dump();
fmls(v7.h4, v7.h4, v15.h8[7]); dump();
fmls(v7.h4, v7.h4, v15.h8[0]); dump();
fmls(v7.h4, v7.h4, v15.h8[1]); dump();
fmls(v7.h4, v7.h4, v15.h8[2]); dump();
fmls(v7.h4, v7.h4, v15.h8[4]); dump();
fmul(v7.h4, v7.h4, v6.h8[7]); dump();
fmul(v0.h4, v7.h4, v6.h8[7]); dump();
fmul(v1.h4, v7.h4, v6.h8[7]); dump();
fmul(v2.h4, v7.h4, v6.h8[7]); dump();
fmul(v4.h4, v7.h4, v6.h8[7]); dump();
fmul(v8.h4, v7.h4, v6.h8[7]); dump();
fmul(v16.h4, v7.h4, v6.h8[7]); dump();
fmul(v31.h4, v7.h4, v6.h8[7]); dump();
fmul(v7.h4, v7.h4, v6.h8[7]); dump();
fmul(v7.h4, v0.h4, v6.h8[7]); dump();
fmul(v7.h4, v1.h4, v6.h8[7]); dump();
fmul(v7.h4, v2.h4, v6.h8[7]); dump();
fmul(v7.h4, v4.h4, v6.h8[7]); dump();
fmul(v7.h4, v8.h4, v6.h8[7]); dump();
fmul(v7.h4, v16.h4, v6.h8[7]); dump();
fmul(v7.h4, v31.h4, v6.h8[7]); dump();
fmul(v7.h4, v7.h4, v6.h8[7]); dump();
fmul(v7.h4, v7.h4, v0.h8[7]); dump();
fmul(v7.h4, v7.h4, v1.h8[7]); dump();
fmul(v7.h4, v7.h4, v2.h8[7]); dump();
fmul(v7.h4, v7.h4, v4.h8[7]); dump();
fmul(v7.h4, v7.h4, v8.h8[7]); dump();
fmul(v7.h4, v7.h4, v15.h8[7]); dump();
fmul(v7.h4, v7.h4, v15.h8[0]); dump();
fmul(v7.h4, v7.h4, v15.h8[1]); dump();
fmul(v7.h4, v7.h4, v15.h8[2]); dump();
fmul(v7.h4, v7.h4, v15.h8[4]); dump();
fmulx(v7.h4, v7.h4, v6.h8[7]); dump();
fmulx(v0.h4, v7.h4, v6.h8[7]); dump();
fmulx(v1.h4, v7.h4, v6.h8[7]); dump();
fmulx(v2.h4, v7.h4, v6.h8[7]); dump();
fmulx(v4.h4, v7.h4, v6.h8[7]); dump();
fmulx(v8.h4, v7.h4, v6.h8[7]); dump();
fmulx(v16.h4, v7.h4, v6.h8[7]); dump();
fmulx(v31.h4, v7.h4, v6.h8[7]); dump();
fmulx(v7.h4, v7.h4, v6.h8[7]); dump();
fmulx(v7.h4, v0.h4, v6.h8[7]); dump();
fmulx(v7.h4, v1.h4, v6.h8[7]); dump();
fmulx(v7.h4, v2.h4, v6.h8[7]); dump();
fmulx(v7.h4, v4.h4, v6.h8[7]); dump();
fmulx(v7.h4, v8.h4, v6.h8[7]); dump();
fmulx(v7.h4, v16.h4, v6.h8[7]); dump();
fmulx(v7.h4, v31.h4, v6.h8[7]); dump();
fmulx(v7.h4, v7.h4, v6.h8[7]); dump();
fmulx(v7.h4, v7.h4, v0.h8[7]); dump();
fmulx(v7.h4, v7.h4, v1.h8[7]); dump();
fmulx(v7.h4, v7.h4, v2.h8[7]); dump();
fmulx(v7.h4, v7.h4, v4.h8[7]); dump();
fmulx(v7.h4, v7.h4, v8.h8[7]); dump();
fmulx(v7.h4, v7.h4, v15.h8[7]); dump();
fmulx(v7.h4, v7.h4, v15.h8[0]); dump();
fmulx(v7.h4, v7.h4, v15.h8[1]); dump();
fmulx(v7.h4, v7.h4, v15.h8[2]); dump();
fmulx(v7.h4, v7.h4, v15.h8[4]); dump();
//DataProcSimd_ByElementArithmetic0:4
fmla(v7.h8, v7.h8, v6.h8[7]); dump();
fmla(v0.h8, v7.h8, v6.h8[7]); dump();
fmla(v1.h8, v7.h8, v6.h8[7]); dump();
fmla(v2.h8, v7.h8, v6.h8[7]); dump();
fmla(v4.h8, v7.h8, v6.h8[7]); dump();
fmla(v8.h8, v7.h8, v6.h8[7]); dump();
fmla(v16.h8, v7.h8, v6.h8[7]); dump();
fmla(v31.h8, v7.h8, v6.h8[7]); dump();
fmla(v7.h8, v7.h8, v6.h8[7]); dump();
fmla(v7.h8, v0.h8, v6.h8[7]); dump();
fmla(v7.h8, v1.h8, v6.h8[7]); dump();
fmla(v7.h8, v2.h8, v6.h8[7]); dump();
fmla(v7.h8, v4.h8, v6.h8[7]); dump();
fmla(v7.h8, v8.h8, v6.h8[7]); dump();
fmla(v7.h8, v16.h8, v6.h8[7]); dump();
fmla(v7.h8, v31.h8, v6.h8[7]); dump();
fmla(v7.h8, v7.h8, v6.h8[7]); dump();
fmla(v7.h8, v7.h8, v0.h8[7]); dump();
fmla(v7.h8, v7.h8, v1.h8[7]); dump();
fmla(v7.h8, v7.h8, v2.h8[7]); dump();
fmla(v7.h8, v7.h8, v4.h8[7]); dump();
fmla(v7.h8, v7.h8, v8.h8[7]); dump();
fmla(v7.h8, v7.h8, v15.h8[7]); dump();
fmla(v7.h8, v7.h8, v15.h8[0]); dump();
fmla(v7.h8, v7.h8, v15.h8[1]); dump();
fmla(v7.h8, v7.h8, v15.h8[2]); dump();
fmla(v7.h8, v7.h8, v15.h8[4]); dump();
fmls(v7.h8, v7.h8, v6.h8[7]); dump();
fmls(v0.h8, v7.h8, v6.h8[7]); dump();
fmls(v1.h8, v7.h8, v6.h8[7]); dump();
fmls(v2.h8, v7.h8, v6.h8[7]); dump();
fmls(v4.h8, v7.h8, v6.h8[7]); dump();
fmls(v8.h8, v7.h8, v6.h8[7]); dump();
fmls(v16.h8, v7.h8, v6.h8[7]); dump();
fmls(v31.h8, v7.h8, v6.h8[7]); dump();
fmls(v7.h8, v7.h8, v6.h8[7]); dump();
fmls(v7.h8, v0.h8, v6.h8[7]); dump();
fmls(v7.h8, v1.h8, v6.h8[7]); dump();
fmls(v7.h8, v2.h8, v6.h8[7]); dump();
fmls(v7.h8, v4.h8, v6.h8[7]); dump();
fmls(v7.h8, v8.h8, v6.h8[7]); dump();
fmls(v7.h8, v16.h8, v6.h8[7]); dump();
fmls(v7.h8, v31.h8, v6.h8[7]); dump();
fmls(v7.h8, v7.h8, v6.h8[7]); dump();
fmls(v7.h8, v7.h8, v0.h8[7]); dump();
fmls(v7.h8, v7.h8, v1.h8[7]); dump();
fmls(v7.h8, v7.h8, v2.h8[7]); dump();
fmls(v7.h8, v7.h8, v4.h8[7]); dump();
fmls(v7.h8, v7.h8, v8.h8[7]); dump();
fmls(v7.h8, v7.h8, v15.h8[7]); dump();
fmls(v7.h8, v7.h8, v15.h8[0]); dump();
fmls(v7.h8, v7.h8, v15.h8[1]); dump();
fmls(v7.h8, v7.h8, v15.h8[2]); dump();
fmls(v7.h8, v7.h8, v15.h8[4]); dump();
fmul(v7.h8, v7.h8, v6.h8[7]); dump();
fmul(v0.h8, v7.h8, v6.h8[7]); dump();
fmul(v1.h8, v7.h8, v6.h8[7]); dump();
fmul(v2.h8, v7.h8, v6.h8[7]); dump();
fmul(v4.h8, v7.h8, v6.h8[7]); dump();
fmul(v8.h8, v7.h8, v6.h8[7]); dump();
fmul(v16.h8, v7.h8, v6.h8[7]); dump();
fmul(v31.h8, v7.h8, v6.h8[7]); dump();
fmul(v7.h8, v7.h8, v6.h8[7]); dump();
fmul(v7.h8, v0.h8, v6.h8[7]); dump();
fmul(v7.h8, v1.h8, v6.h8[7]); dump();
fmul(v7.h8, v2.h8, v6.h8[7]); dump();
fmul(v7.h8, v4.h8, v6.h8[7]); dump();
fmul(v7.h8, v8.h8, v6.h8[7]); dump();
fmul(v7.h8, v16.h8, v6.h8[7]); dump();
fmul(v7.h8, v31.h8, v6.h8[7]); dump();
fmul(v7.h8, v7.h8, v6.h8[7]); dump();
fmul(v7.h8, v7.h8, v0.h8[7]); dump();
fmul(v7.h8, v7.h8, v1.h8[7]); dump();
fmul(v7.h8, v7.h8, v2.h8[7]); dump();
fmul(v7.h8, v7.h8, v4.h8[7]); dump();
fmul(v7.h8, v7.h8, v8.h8[7]); dump();
fmul(v7.h8, v7.h8, v15.h8[7]); dump();
fmul(v7.h8, v7.h8, v15.h8[0]); dump();
fmul(v7.h8, v7.h8, v15.h8[1]); dump();
fmul(v7.h8, v7.h8, v15.h8[2]); dump();
fmul(v7.h8, v7.h8, v15.h8[4]); dump();
fmulx(v7.h8, v7.h8, v6.h8[7]); dump();
fmulx(v0.h8, v7.h8, v6.h8[7]); dump();
fmulx(v1.h8, v7.h8, v6.h8[7]); dump();
fmulx(v2.h8, v7.h8, v6.h8[7]); dump();
fmulx(v4.h8, v7.h8, v6.h8[7]); dump();
fmulx(v8.h8, v7.h8, v6.h8[7]); dump();
fmulx(v16.h8, v7.h8, v6.h8[7]); dump();
fmulx(v31.h8, v7.h8, v6.h8[7]); dump();
fmulx(v7.h8, v7.h8, v6.h8[7]); dump();
fmulx(v7.h8, v0.h8, v6.h8[7]); dump();
fmulx(v7.h8, v1.h8, v6.h8[7]); dump();
fmulx(v7.h8, v2.h8, v6.h8[7]); dump();
fmulx(v7.h8, v4.h8, v6.h8[7]); dump();
fmulx(v7.h8, v8.h8, v6.h8[7]); dump();
fmulx(v7.h8, v16.h8, v6.h8[7]); dump();
fmulx(v7.h8, v31.h8, v6.h8[7]); dump();
fmulx(v7.h8, v7.h8, v6.h8[7]); dump();
fmulx(v7.h8, v7.h8, v0.h8[7]); dump();
fmulx(v7.h8, v7.h8, v1.h8[7]); dump();
fmulx(v7.h8, v7.h8, v2.h8[7]); dump();
fmulx(v7.h8, v7.h8, v4.h8[7]); dump();
fmulx(v7.h8, v7.h8, v8.h8[7]); dump();
fmulx(v7.h8, v7.h8, v15.h8[7]); dump();
fmulx(v7.h8, v7.h8, v15.h8[0]); dump();
fmulx(v7.h8, v7.h8, v15.h8[1]); dump();
fmulx(v7.h8, v7.h8, v15.h8[2]); dump();
fmulx(v7.h8, v7.h8, v15.h8[4]); dump();
//DataProcSimd_ByElementArithmetic0:5
fmla(v7.s2, v7.s2, v7.s4[3]); dump();
fmla(v0.s2, v7.s2, v7.s4[3]); dump();
fmla(v1.s2, v7.s2, v7.s4[3]); dump();
fmla(v2.s2, v7.s2, v7.s4[3]); dump();
fmla(v4.s2, v7.s2, v7.s4[3]); dump();
fmla(v8.s2, v7.s2, v7.s4[3]); dump();
fmla(v16.s2, v7.s2, v7.s4[3]); dump();
fmla(v31.s2, v7.s2, v7.s4[3]); dump();
fmla(v7.s2, v7.s2, v7.s4[3]); dump();
fmla(v7.s2, v0.s2, v7.s4[3]); dump();
fmla(v7.s2, v1.s2, v7.s4[3]); dump();
fmla(v7.s2, v2.s2, v7.s4[3]); dump();
fmla(v7.s2, v4.s2, v7.s4[3]); dump();
fmla(v7.s2, v8.s2, v7.s4[3]); dump();
fmla(v7.s2, v16.s2, v7.s4[3]); dump();
fmla(v7.s2, v31.s2, v7.s4[3]); dump();
fmla(v7.s2, v7.s2, v7.s4[3]); dump();
fmla(v7.s2, v7.s2, v7s4_3); dump();
fmla(v7.s2, v7.s2, v0.s4[3]); dump();
fmla(v7.s2, v7.s2, v0s4_3); dump();
fmla(v7.s2, v7.s2, v1.s4[3]); dump();
fmla(v7.s2, v7.s2, v1s4_3); dump();
fmla(v7.s2, v7.s2, v2.s4[3]); dump();
fmla(v7.s2, v7.s2, v2s4_3); dump();
fmla(v7.s2, v7.s2, v4.s4[3]); dump();
fmla(v7.s2, v7.s2, v4s4_3); dump();
fmla(v7.s2, v7.s2, v8.s4[3]); dump();
fmla(v7.s2, v7.s2, v8s4_3); dump();
fmla(v7.s2, v7.s2, v16.s4[3]); dump();
fmla(v7.s2, v7.s2, v16s4_3); dump();
fmla(v7.s2, v7.s2, v31.s4[3]); dump();
fmla(v7.s2, v7.s2, v31s4_3); dump();
fmla(v7.s2, v7.s2, v7.s4[0]); dump();
fmla(v7.s2, v7.s2, v7s4_0); dump();
fmla(v7.s2, v7.s2, v7.s4[1]); dump();
fmla(v7.s2, v7.s2, v7s4_1); dump();
fmla(v7.s2, v7.s2, v7.s4[2]); dump();
fmla(v7.s2, v7.s2, v7s4_2); dump();
fmls(v7.s2, v7.s2, v7.s4[3]); dump();
fmls(v0.s2, v7.s2, v7.s4[3]); dump();
fmls(v1.s2, v7.s2, v7.s4[3]); dump();
fmls(v2.s2, v7.s2, v7.s4[3]); dump();
fmls(v4.s2, v7.s2, v7.s4[3]); dump();
fmls(v8.s2, v7.s2, v7.s4[3]); dump();
fmls(v16.s2, v7.s2, v7.s4[3]); dump();
fmls(v31.s2, v7.s2, v7.s4[3]); dump();
fmls(v7.s2, v7.s2, v7.s4[3]); dump();
fmls(v7.s2, v0.s2, v7.s4[3]); dump();
fmls(v7.s2, v1.s2, v7.s4[3]); dump();
fmls(v7.s2, v2.s2, v7.s4[3]); dump();
fmls(v7.s2, v4.s2, v7.s4[3]); dump();
fmls(v7.s2, v8.s2, v7.s4[3]); dump();
fmls(v7.s2, v16.s2, v7.s4[3]); dump();
fmls(v7.s2, v31.s2, v7.s4[3]); dump();
fmls(v7.s2, v7.s2, v7.s4[3]); dump();
fmls(v7.s2, v7.s2, v7s4_3); dump();
fmls(v7.s2, v7.s2, v0.s4[3]); dump();
fmls(v7.s2, v7.s2, v0s4_3); dump();
fmls(v7.s2, v7.s2, v1.s4[3]); dump();
fmls(v7.s2, v7.s2, v1s4_3); dump();
fmls(v7.s2, v7.s2, v2.s4[3]); dump();
fmls(v7.s2, v7.s2, v2s4_3); dump();
fmls(v7.s2, v7.s2, v4.s4[3]); dump();
fmls(v7.s2, v7.s2, v4s4_3); dump();
fmls(v7.s2, v7.s2, v8.s4[3]); dump();
fmls(v7.s2, v7.s2, v8s4_3); dump();
fmls(v7.s2, v7.s2, v16.s4[3]); dump();
fmls(v7.s2, v7.s2, v16s4_3); dump();
fmls(v7.s2, v7.s2, v31.s4[3]); dump();
fmls(v7.s2, v7.s2, v31s4_3); dump();
fmls(v7.s2, v7.s2, v7.s4[0]); dump();
fmls(v7.s2, v7.s2, v7s4_0); dump();
fmls(v7.s2, v7.s2, v7.s4[1]); dump();
fmls(v7.s2, v7.s2, v7s4_1); dump();
fmls(v7.s2, v7.s2, v7.s4[2]); dump();
fmls(v7.s2, v7.s2, v7s4_2); dump();
fmul(v7.s2, v7.s2, v7.s4[3]); dump();
fmul(v0.s2, v7.s2, v7.s4[3]); dump();
fmul(v1.s2, v7.s2, v7.s4[3]); dump();
fmul(v2.s2, v7.s2, v7.s4[3]); dump();
fmul(v4.s2, v7.s2, v7.s4[3]); dump();
fmul(v8.s2, v7.s2, v7.s4[3]); dump();
fmul(v16.s2, v7.s2, v7.s4[3]); dump();
fmul(v31.s2, v7.s2, v7.s4[3]); dump();
fmul(v7.s2, v7.s2, v7.s4[3]); dump();
fmul(v7.s2, v0.s2, v7.s4[3]); dump();
fmul(v7.s2, v1.s2, v7.s4[3]); dump();
fmul(v7.s2, v2.s2, v7.s4[3]); dump();
fmul(v7.s2, v4.s2, v7.s4[3]); dump();
fmul(v7.s2, v8.s2, v7.s4[3]); dump();
fmul(v7.s2, v16.s2, v7.s4[3]); dump();
fmul(v7.s2, v31.s2, v7.s4[3]); dump();
fmul(v7.s2, v7.s2, v7.s4[3]); dump();
fmul(v7.s2, v7.s2, v7s4_3); dump();
fmul(v7.s2, v7.s2, v0.s4[3]); dump();
fmul(v7.s2, v7.s2, v0s4_3); dump();
fmul(v7.s2, v7.s2, v1.s4[3]); dump();
fmul(v7.s2, v7.s2, v1s4_3); dump();
fmul(v7.s2, v7.s2, v2.s4[3]); dump();
fmul(v7.s2, v7.s2, v2s4_3); dump();
fmul(v7.s2, v7.s2, v4.s4[3]); dump();
fmul(v7.s2, v7.s2, v4s4_3); dump();
fmul(v7.s2, v7.s2, v8.s4[3]); dump();
fmul(v7.s2, v7.s2, v8s4_3); dump();
fmul(v7.s2, v7.s2, v16.s4[3]); dump();
fmul(v7.s2, v7.s2, v16s4_3); dump();
fmul(v7.s2, v7.s2, v31.s4[3]); dump();
fmul(v7.s2, v7.s2, v31s4_3); dump();
fmul(v7.s2, v7.s2, v7.s4[0]); dump();
fmul(v7.s2, v7.s2, v7s4_0); dump();
fmul(v7.s2, v7.s2, v7.s4[1]); dump();
fmul(v7.s2, v7.s2, v7s4_1); dump();
fmul(v7.s2, v7.s2, v7.s4[2]); dump();
fmul(v7.s2, v7.s2, v7s4_2); dump();
fmulx(v7.s2, v7.s2, v7.s4[3]); dump();
fmulx(v0.s2, v7.s2, v7.s4[3]); dump();
fmulx(v1.s2, v7.s2, v7.s4[3]); dump();
fmulx(v2.s2, v7.s2, v7.s4[3]); dump();
fmulx(v4.s2, v7.s2, v7.s4[3]); dump();
fmulx(v8.s2, v7.s2, v7.s4[3]); dump();
fmulx(v16.s2, v7.s2, v7.s4[3]); dump();
fmulx(v31.s2, v7.s2, v7.s4[3]); dump();
fmulx(v7.s2, v7.s2, v7.s4[3]); dump();
fmulx(v7.s2, v0.s2, v7.s4[3]); dump();
fmulx(v7.s2, v1.s2, v7.s4[3]); dump();
fmulx(v7.s2, v2.s2, v7.s4[3]); dump();
fmulx(v7.s2, v4.s2, v7.s4[3]); dump();
fmulx(v7.s2, v8.s2, v7.s4[3]); dump();
fmulx(v7.s2, v16.s2, v7.s4[3]); dump();
fmulx(v7.s2, v31.s2, v7.s4[3]); dump();
fmulx(v7.s2, v7.s2, v7.s4[3]); dump();
fmulx(v7.s2, v7.s2, v7s4_3); dump();
fmulx(v7.s2, v7.s2, v0.s4[3]); dump();
fmulx(v7.s2, v7.s2, v0s4_3); dump();
fmulx(v7.s2, v7.s2, v1.s4[3]); dump();
fmulx(v7.s2, v7.s2, v1s4_3); dump();
fmulx(v7.s2, v7.s2, v2.s4[3]); dump();
fmulx(v7.s2, v7.s2, v2s4_3); dump();
fmulx(v7.s2, v7.s2, v4.s4[3]); dump();
fmulx(v7.s2, v7.s2, v4s4_3); dump();
fmulx(v7.s2, v7.s2, v8.s4[3]); dump();
fmulx(v7.s2, v7.s2, v8s4_3); dump();
fmulx(v7.s2, v7.s2, v16.s4[3]); dump();
fmulx(v7.s2, v7.s2, v16s4_3); dump();
fmulx(v7.s2, v7.s2, v31.s4[3]); dump();
fmulx(v7.s2, v7.s2, v31s4_3); dump();
fmulx(v7.s2, v7.s2, v7.s4[0]); dump();
fmulx(v7.s2, v7.s2, v7s4_0); dump();
fmulx(v7.s2, v7.s2, v7.s4[1]); dump();
fmulx(v7.s2, v7.s2, v7s4_1); dump();
fmulx(v7.s2, v7.s2, v7.s4[2]); dump();
fmulx(v7.s2, v7.s2, v7s4_2); dump();
//DataProcSimd_ByElementArithmetic0:6
fmla(v7.s4, v7.s4, v7.s4[3]); dump();
fmla(v0.s4, v7.s4, v7.s4[3]); dump();
fmla(v1.s4, v7.s4, v7.s4[3]); dump();
fmla(v2.s4, v7.s4, v7.s4[3]); dump();
fmla(v4.s4, v7.s4, v7.s4[3]); dump();
fmla(v8.s4, v7.s4, v7.s4[3]); dump();
fmla(v16.s4, v7.s4, v7.s4[3]); dump();
fmla(v31.s4, v7.s4, v7.s4[3]); dump();
fmla(v7.s4, v7.s4, v7.s4[3]); dump();
fmla(v7.s4, v0.s4, v7.s4[3]); dump();
fmla(v7.s4, v1.s4, v7.s4[3]); dump();
fmla(v7.s4, v2.s4, v7.s4[3]); dump();
fmla(v7.s4, v4.s4, v7.s4[3]); dump();
fmla(v7.s4, v8.s4, v7.s4[3]); dump();
fmla(v7.s4, v16.s4, v7.s4[3]); dump();
fmla(v7.s4, v31.s4, v7.s4[3]); dump();
fmla(v7.s4, v7.s4, v7.s4[3]); dump();
fmla(v7.s4, v7.s4, v7s4_3); dump();
fmla(v7.s4, v7.s4, v0.s4[3]); dump();
fmla(v7.s4, v7.s4, v0s4_3); dump();
fmla(v7.s4, v7.s4, v1.s4[3]); dump();
fmla(v7.s4, v7.s4, v1s4_3); dump();
fmla(v7.s4, v7.s4, v2.s4[3]); dump();
fmla(v7.s4, v7.s4, v2s4_3); dump();
fmla(v7.s4, v7.s4, v4.s4[3]); dump();
fmla(v7.s4, v7.s4, v4s4_3); dump();
fmla(v7.s4, v7.s4, v8.s4[3]); dump();
fmla(v7.s4, v7.s4, v8s4_3); dump();
fmla(v7.s4, v7.s4, v16.s4[3]); dump();
fmla(v7.s4, v7.s4, v16s4_3); dump();
fmla(v7.s4, v7.s4, v31.s4[3]); dump();
fmla(v7.s4, v7.s4, v31s4_3); dump();
fmla(v7.s4, v7.s4, v7.s4[0]); dump();
fmla(v7.s4, v7.s4, v7s4_0); dump();
fmla(v7.s4, v7.s4, v7.s4[1]); dump();
fmla(v7.s4, v7.s4, v7s4_1); dump();
fmla(v7.s4, v7.s4, v7.s4[2]); dump();
fmla(v7.s4, v7.s4, v7s4_2); dump();
fmls(v7.s4, v7.s4, v7.s4[3]); dump();
fmls(v0.s4, v7.s4, v7.s4[3]); dump();
fmls(v1.s4, v7.s4, v7.s4[3]); dump();
fmls(v2.s4, v7.s4, v7.s4[3]); dump();
fmls(v4.s4, v7.s4, v7.s4[3]); dump();
fmls(v8.s4, v7.s4, v7.s4[3]); dump();
fmls(v16.s4, v7.s4, v7.s4[3]); dump();
fmls(v31.s4, v7.s4, v7.s4[3]); dump();
fmls(v7.s4, v7.s4, v7.s4[3]); dump();
fmls(v7.s4, v0.s4, v7.s4[3]); dump();
fmls(v7.s4, v1.s4, v7.s4[3]); dump();
fmls(v7.s4, v2.s4, v7.s4[3]); dump();
fmls(v7.s4, v4.s4, v7.s4[3]); dump();
fmls(v7.s4, v8.s4, v7.s4[3]); dump();
fmls(v7.s4, v16.s4, v7.s4[3]); dump();
fmls(v7.s4, v31.s4, v7.s4[3]); dump();
fmls(v7.s4, v7.s4, v7.s4[3]); dump();
fmls(v7.s4, v7.s4, v7s4_3); dump();
fmls(v7.s4, v7.s4, v0.s4[3]); dump();
fmls(v7.s4, v7.s4, v0s4_3); dump();
fmls(v7.s4, v7.s4, v1.s4[3]); dump();
fmls(v7.s4, v7.s4, v1s4_3); dump();
fmls(v7.s4, v7.s4, v2.s4[3]); dump();
fmls(v7.s4, v7.s4, v2s4_3); dump();
fmls(v7.s4, v7.s4, v4.s4[3]); dump();
fmls(v7.s4, v7.s4, v4s4_3); dump();
fmls(v7.s4, v7.s4, v8.s4[3]); dump();
fmls(v7.s4, v7.s4, v8s4_3); dump();
fmls(v7.s4, v7.s4, v16.s4[3]); dump();
fmls(v7.s4, v7.s4, v16s4_3); dump();
fmls(v7.s4, v7.s4, v31.s4[3]); dump();
fmls(v7.s4, v7.s4, v31s4_3); dump();
fmls(v7.s4, v7.s4, v7.s4[0]); dump();
fmls(v7.s4, v7.s4, v7s4_0); dump();
fmls(v7.s4, v7.s4, v7.s4[1]); dump();
fmls(v7.s4, v7.s4, v7s4_1); dump();
fmls(v7.s4, v7.s4, v7.s4[2]); dump();
fmls(v7.s4, v7.s4, v7s4_2); dump();
fmul(v7.s4, v7.s4, v7.s4[3]); dump();
fmul(v0.s4, v7.s4, v7.s4[3]); dump();
fmul(v1.s4, v7.s4, v7.s4[3]); dump();
fmul(v2.s4, v7.s4, v7.s4[3]); dump();
fmul(v4.s4, v7.s4, v7.s4[3]); dump();
fmul(v8.s4, v7.s4, v7.s4[3]); dump();
fmul(v16.s4, v7.s4, v7.s4[3]); dump();
fmul(v31.s4, v7.s4, v7.s4[3]); dump();
fmul(v7.s4, v7.s4, v7.s4[3]); dump();
fmul(v7.s4, v0.s4, v7.s4[3]); dump();
fmul(v7.s4, v1.s4, v7.s4[3]); dump();
fmul(v7.s4, v2.s4, v7.s4[3]); dump();
fmul(v7.s4, v4.s4, v7.s4[3]); dump();
fmul(v7.s4, v8.s4, v7.s4[3]); dump();
fmul(v7.s4, v16.s4, v7.s4[3]); dump();
fmul(v7.s4, v31.s4, v7.s4[3]); dump();
fmul(v7.s4, v7.s4, v7.s4[3]); dump();
fmul(v7.s4, v7.s4, v7s4_3); dump();
fmul(v7.s4, v7.s4, v0.s4[3]); dump();
fmul(v7.s4, v7.s4, v0s4_3); dump();
fmul(v7.s4, v7.s4, v1.s4[3]); dump();
fmul(v7.s4, v7.s4, v1s4_3); dump();
fmul(v7.s4, v7.s4, v2.s4[3]); dump();
fmul(v7.s4, v7.s4, v2s4_3); dump();
fmul(v7.s4, v7.s4, v4.s4[3]); dump();
fmul(v7.s4, v7.s4, v4s4_3); dump();
fmul(v7.s4, v7.s4, v8.s4[3]); dump();
fmul(v7.s4, v7.s4, v8s4_3); dump();
fmul(v7.s4, v7.s4, v16.s4[3]); dump();
fmul(v7.s4, v7.s4, v16s4_3); dump();
fmul(v7.s4, v7.s4, v31.s4[3]); dump();
fmul(v7.s4, v7.s4, v31s4_3); dump();
fmul(v7.s4, v7.s4, v7.s4[0]); dump();
fmul(v7.s4, v7.s4, v7s4_0); dump();
fmul(v7.s4, v7.s4, v7.s4[1]); dump();
fmul(v7.s4, v7.s4, v7s4_1); dump();
fmul(v7.s4, v7.s4, v7.s4[2]); dump();
fmul(v7.s4, v7.s4, v7s4_2); dump();
fmulx(v7.s4, v7.s4, v7.s4[3]); dump();
fmulx(v0.s4, v7.s4, v7.s4[3]); dump();
fmulx(v1.s4, v7.s4, v7.s4[3]); dump();
fmulx(v2.s4, v7.s4, v7.s4[3]); dump();
fmulx(v4.s4, v7.s4, v7.s4[3]); dump();
fmulx(v8.s4, v7.s4, v7.s4[3]); dump();
fmulx(v16.s4, v7.s4, v7.s4[3]); dump();
fmulx(v31.s4, v7.s4, v7.s4[3]); dump();
fmulx(v7.s4, v7.s4, v7.s4[3]); dump();
fmulx(v7.s4, v0.s4, v7.s4[3]); dump();
fmulx(v7.s4, v1.s4, v7.s4[3]); dump();
fmulx(v7.s4, v2.s4, v7.s4[3]); dump();
fmulx(v7.s4, v4.s4, v7.s4[3]); dump();
fmulx(v7.s4, v8.s4, v7.s4[3]); dump();
fmulx(v7.s4, v16.s4, v7.s4[3]); dump();
fmulx(v7.s4, v31.s4, v7.s4[3]); dump();
fmulx(v7.s4, v7.s4, v7.s4[3]); dump();
fmulx(v7.s4, v7.s4, v7s4_3); dump();
fmulx(v7.s4, v7.s4, v0.s4[3]); dump();
fmulx(v7.s4, v7.s4, v0s4_3); dump();
fmulx(v7.s4, v7.s4, v1.s4[3]); dump();
fmulx(v7.s4, v7.s4, v1s4_3); dump();
fmulx(v7.s4, v7.s4, v2.s4[3]); dump();
fmulx(v7.s4, v7.s4, v2s4_3); dump();
fmulx(v7.s4, v7.s4, v4.s4[3]); dump();
fmulx(v7.s4, v7.s4, v4s4_3); dump();
fmulx(v7.s4, v7.s4, v8.s4[3]); dump();
fmulx(v7.s4, v7.s4, v8s4_3); dump();
fmulx(v7.s4, v7.s4, v16.s4[3]); dump();
fmulx(v7.s4, v7.s4, v16s4_3); dump();
fmulx(v7.s4, v7.s4, v31.s4[3]); dump();
fmulx(v7.s4, v7.s4, v31s4_3); dump();
fmulx(v7.s4, v7.s4, v7.s4[0]); dump();
fmulx(v7.s4, v7.s4, v7s4_0); dump();
fmulx(v7.s4, v7.s4, v7.s4[1]); dump();
fmulx(v7.s4, v7.s4, v7s4_1); dump();
fmulx(v7.s4, v7.s4, v7.s4[2]); dump();
fmulx(v7.s4, v7.s4, v7s4_2); dump();
//DataProcSimd_ByElementArithmetic0:7
fmla(v7.d2, v7.d2, v7.d2[1]); dump();
fmla(v0.d2, v7.d2, v7.d2[1]); dump();
fmla(v1.d2, v7.d2, v7.d2[1]); dump();
fmla(v2.d2, v7.d2, v7.d2[1]); dump();
fmla(v4.d2, v7.d2, v7.d2[1]); dump();
fmla(v8.d2, v7.d2, v7.d2[1]); dump();
fmla(v16.d2, v7.d2, v7.d2[1]); dump();
fmla(v31.d2, v7.d2, v7.d2[1]); dump();
fmla(v7.d2, v7.d2, v7.d2[1]); dump();
fmla(v7.d2, v0.d2, v7.d2[1]); dump();
fmla(v7.d2, v1.d2, v7.d2[1]); dump();
fmla(v7.d2, v2.d2, v7.d2[1]); dump();
fmla(v7.d2, v4.d2, v7.d2[1]); dump();
fmla(v7.d2, v8.d2, v7.d2[1]); dump();
fmla(v7.d2, v16.d2, v7.d2[1]); dump();
fmla(v7.d2, v31.d2, v7.d2[1]); dump();
fmla(v7.d2, v7.d2, v7.d2[1]); dump();
fmla(v7.d2, v7.d2, v7d2_1); dump();
fmla(v7.d2, v7.d2, v0.d2[1]); dump();
fmla(v7.d2, v7.d2, v0d2_1); dump();
fmla(v7.d2, v7.d2, v1.d2[1]); dump();
fmla(v7.d2, v7.d2, v1d2_1); dump();
fmla(v7.d2, v7.d2, v2.d2[1]); dump();
fmla(v7.d2, v7.d2, v2d2_1); dump();
fmla(v7.d2, v7.d2, v4.d2[1]); dump();
fmla(v7.d2, v7.d2, v4d2_1); dump();
fmla(v7.d2, v7.d2, v8.d2[1]); dump();
fmla(v7.d2, v7.d2, v8d2_1); dump();
fmla(v7.d2, v7.d2, v16.d2[1]); dump();
fmla(v7.d2, v7.d2, v16d2_1); dump();
fmla(v7.d2, v7.d2, v31.d2[1]); dump();
fmla(v7.d2, v7.d2, v31d2_1); dump();
fmla(v7.d2, v7.d2, v7.d2[0]); dump();
fmla(v7.d2, v7.d2, v7d2_0); dump();
fmls(v7.d2, v7.d2, v7.d2[1]); dump();
fmls(v0.d2, v7.d2, v7.d2[1]); dump();
fmls(v1.d2, v7.d2, v7.d2[1]); dump();
fmls(v2.d2, v7.d2, v7.d2[1]); dump();
fmls(v4.d2, v7.d2, v7.d2[1]); dump();
fmls(v8.d2, v7.d2, v7.d2[1]); dump();
fmls(v16.d2, v7.d2, v7.d2[1]); dump();
fmls(v31.d2, v7.d2, v7.d2[1]); dump();
fmls(v7.d2, v7.d2, v7.d2[1]); dump();
fmls(v7.d2, v0.d2, v7.d2[1]); dump();
fmls(v7.d2, v1.d2, v7.d2[1]); dump();
fmls(v7.d2, v2.d2, v7.d2[1]); dump();
fmls(v7.d2, v4.d2, v7.d2[1]); dump();
fmls(v7.d2, v8.d2, v7.d2[1]); dump();
fmls(v7.d2, v16.d2, v7.d2[1]); dump();
fmls(v7.d2, v31.d2, v7.d2[1]); dump();
fmls(v7.d2, v7.d2, v7.d2[1]); dump();
fmls(v7.d2, v7.d2, v7d2_1); dump();
fmls(v7.d2, v7.d2, v0.d2[1]); dump();
fmls(v7.d2, v7.d2, v0d2_1); dump();
fmls(v7.d2, v7.d2, v1.d2[1]); dump();
fmls(v7.d2, v7.d2, v1d2_1); dump();
fmls(v7.d2, v7.d2, v2.d2[1]); dump();
fmls(v7.d2, v7.d2, v2d2_1); dump();
fmls(v7.d2, v7.d2, v4.d2[1]); dump();
fmls(v7.d2, v7.d2, v4d2_1); dump();
fmls(v7.d2, v7.d2, v8.d2[1]); dump();
fmls(v7.d2, v7.d2, v8d2_1); dump();
fmls(v7.d2, v7.d2, v16.d2[1]); dump();
fmls(v7.d2, v7.d2, v16d2_1); dump();
fmls(v7.d2, v7.d2, v31.d2[1]); dump();
fmls(v7.d2, v7.d2, v31d2_1); dump();
fmls(v7.d2, v7.d2, v7.d2[0]); dump();
fmls(v7.d2, v7.d2, v7d2_0); dump();
fmul(v7.d2, v7.d2, v7.d2[1]); dump();
fmul(v0.d2, v7.d2, v7.d2[1]); dump();
fmul(v1.d2, v7.d2, v7.d2[1]); dump();
fmul(v2.d2, v7.d2, v7.d2[1]); dump();
fmul(v4.d2, v7.d2, v7.d2[1]); dump();
fmul(v8.d2, v7.d2, v7.d2[1]); dump();
fmul(v16.d2, v7.d2, v7.d2[1]); dump();
fmul(v31.d2, v7.d2, v7.d2[1]); dump();
fmul(v7.d2, v7.d2, v7.d2[1]); dump();
fmul(v7.d2, v0.d2, v7.d2[1]); dump();
fmul(v7.d2, v1.d2, v7.d2[1]); dump();
fmul(v7.d2, v2.d2, v7.d2[1]); dump();
fmul(v7.d2, v4.d2, v7.d2[1]); dump();
fmul(v7.d2, v8.d2, v7.d2[1]); dump();
fmul(v7.d2, v16.d2, v7.d2[1]); dump();
fmul(v7.d2, v31.d2, v7.d2[1]); dump();
fmul(v7.d2, v7.d2, v7.d2[1]); dump();
fmul(v7.d2, v7.d2, v7d2_1); dump();
fmul(v7.d2, v7.d2, v0.d2[1]); dump();
fmul(v7.d2, v7.d2, v0d2_1); dump();
fmul(v7.d2, v7.d2, v1.d2[1]); dump();
fmul(v7.d2, v7.d2, v1d2_1); dump();
fmul(v7.d2, v7.d2, v2.d2[1]); dump();
fmul(v7.d2, v7.d2, v2d2_1); dump();
fmul(v7.d2, v7.d2, v4.d2[1]); dump();
fmul(v7.d2, v7.d2, v4d2_1); dump();
fmul(v7.d2, v7.d2, v8.d2[1]); dump();
fmul(v7.d2, v7.d2, v8d2_1); dump();
fmul(v7.d2, v7.d2, v16.d2[1]); dump();
fmul(v7.d2, v7.d2, v16d2_1); dump();
fmul(v7.d2, v7.d2, v31.d2[1]); dump();
fmul(v7.d2, v7.d2, v31d2_1); dump();
fmul(v7.d2, v7.d2, v7.d2[0]); dump();
fmul(v7.d2, v7.d2, v7d2_0); dump();
fmulx(v7.d2, v7.d2, v7.d2[1]); dump();
fmulx(v0.d2, v7.d2, v7.d2[1]); dump();
fmulx(v1.d2, v7.d2, v7.d2[1]); dump();
fmulx(v2.d2, v7.d2, v7.d2[1]); dump();
fmulx(v4.d2, v7.d2, v7.d2[1]); dump();
fmulx(v8.d2, v7.d2, v7.d2[1]); dump();
fmulx(v16.d2, v7.d2, v7.d2[1]); dump();
fmulx(v31.d2, v7.d2, v7.d2[1]); dump();
fmulx(v7.d2, v7.d2, v7.d2[1]); dump();
fmulx(v7.d2, v0.d2, v7.d2[1]); dump();
fmulx(v7.d2, v1.d2, v7.d2[1]); dump();
fmulx(v7.d2, v2.d2, v7.d2[1]); dump();
fmulx(v7.d2, v4.d2, v7.d2[1]); dump();
fmulx(v7.d2, v8.d2, v7.d2[1]); dump();
fmulx(v7.d2, v16.d2, v7.d2[1]); dump();
fmulx(v7.d2, v31.d2, v7.d2[1]); dump();
fmulx(v7.d2, v7.d2, v7.d2[1]); dump();
fmulx(v7.d2, v7.d2, v7d2_1); dump();
fmulx(v7.d2, v7.d2, v0.d2[1]); dump();
fmulx(v7.d2, v7.d2, v0d2_1); dump();
fmulx(v7.d2, v7.d2, v1.d2[1]); dump();
fmulx(v7.d2, v7.d2, v1d2_1); dump();
fmulx(v7.d2, v7.d2, v2.d2[1]); dump();
fmulx(v7.d2, v7.d2, v2d2_1); dump();
fmulx(v7.d2, v7.d2, v4.d2[1]); dump();
fmulx(v7.d2, v7.d2, v4d2_1); dump();
fmulx(v7.d2, v7.d2, v8.d2[1]); dump();
fmulx(v7.d2, v7.d2, v8d2_1); dump();
fmulx(v7.d2, v7.d2, v16.d2[1]); dump();
fmulx(v7.d2, v7.d2, v16d2_1); dump();
fmulx(v7.d2, v7.d2, v31.d2[1]); dump();
fmulx(v7.d2, v7.d2, v31d2_1); dump();
fmulx(v7.d2, v7.d2, v7.d2[0]); dump();
fmulx(v7.d2, v7.d2, v7d2_0); dump();
//DataProcSimd_ByElementArithmetic1:0
fmlal(v7.s2, v7.h2, v6.h8[7]); dump();
fmlal(v0.s2, v7.h2, v6.h8[7]); dump();
fmlal(v1.s2, v7.h2, v6.h8[7]); dump();
fmlal(v2.s2, v7.h2, v6.h8[7]); dump();
fmlal(v4.s2, v7.h2, v6.h8[7]); dump();
fmlal(v8.s2, v7.h2, v6.h8[7]); dump();
fmlal(v16.s2, v7.h2, v6.h8[7]); dump();
fmlal(v31.s2, v7.h2, v6.h8[7]); dump();
fmlal(v7.s2, v7.h2, v6.h8[7]); dump();
fmlal(v7.s2, v0.h2, v6.h8[7]); dump();
fmlal(v7.s2, v1.h2, v6.h8[7]); dump();
fmlal(v7.s2, v2.h2, v6.h8[7]); dump();
fmlal(v7.s2, v4.h2, v6.h8[7]); dump();
fmlal(v7.s2, v8.h2, v6.h8[7]); dump();
fmlal(v7.s2, v16.h2, v6.h8[7]); dump();
fmlal(v7.s2, v31.h2, v6.h8[7]); dump();
fmlal(v7.s2, v7.h2, v6.h8[7]); dump();
fmlal(v7.s2, v7.h2, v0.h8[7]); dump();
fmlal(v7.s2, v7.h2, v1.h8[7]); dump();
fmlal(v7.s2, v7.h2, v2.h8[7]); dump();
fmlal(v7.s2, v7.h2, v4.h8[7]); dump();
fmlal(v7.s2, v7.h2, v8.h8[7]); dump();
fmlal(v7.s2, v7.h2, v15.h8[7]); dump();
fmlal(v7.s2, v7.h2, v15.h8[0]); dump();
fmlal(v7.s2, v7.h2, v15.h8[1]); dump();
fmlal(v7.s2, v7.h2, v15.h8[2]); dump();
fmlal(v7.s2, v7.h2, v15.h8[4]); dump();
fmlal2(v7.s2, v7.h2, v6.h8[7]); dump();
fmlal2(v0.s2, v7.h2, v6.h8[7]); dump();
fmlal2(v1.s2, v7.h2, v6.h8[7]); dump();
fmlal2(v2.s2, v7.h2, v6.h8[7]); dump();
fmlal2(v4.s2, v7.h2, v6.h8[7]); dump();
fmlal2(v8.s2, v7.h2, v6.h8[7]); dump();
fmlal2(v16.s2, v7.h2, v6.h8[7]); dump();
fmlal2(v31.s2, v7.h2, v6.h8[7]); dump();
fmlal2(v7.s2, v7.h2, v6.h8[7]); dump();
fmlal2(v7.s2, v0.h2, v6.h8[7]); dump();
fmlal2(v7.s2, v1.h2, v6.h8[7]); dump();
fmlal2(v7.s2, v2.h2, v6.h8[7]); dump();
fmlal2(v7.s2, v4.h2, v6.h8[7]); dump();
fmlal2(v7.s2, v8.h2, v6.h8[7]); dump();
fmlal2(v7.s2, v16.h2, v6.h8[7]); dump();
fmlal2(v7.s2, v31.h2, v6.h8[7]); dump();
fmlal2(v7.s2, v7.h2, v6.h8[7]); dump();
fmlal2(v7.s2, v7.h2, v0.h8[7]); dump();
fmlal2(v7.s2, v7.h2, v1.h8[7]); dump();
fmlal2(v7.s2, v7.h2, v2.h8[7]); dump();
fmlal2(v7.s2, v7.h2, v4.h8[7]); dump();
fmlal2(v7.s2, v7.h2, v8.h8[7]); dump();
fmlal2(v7.s2, v7.h2, v15.h8[7]); dump();
fmlal2(v7.s2, v7.h2, v15.h8[0]); dump();
fmlal2(v7.s2, v7.h2, v15.h8[1]); dump();
fmlal2(v7.s2, v7.h2, v15.h8[2]); dump();
fmlal2(v7.s2, v7.h2, v15.h8[4]); dump();
fmlsl(v7.s2, v7.h2, v6.h8[7]); dump();
fmlsl(v0.s2, v7.h2, v6.h8[7]); dump();
fmlsl(v1.s2, v7.h2, v6.h8[7]); dump();
fmlsl(v2.s2, v7.h2, v6.h8[7]); dump();
fmlsl(v4.s2, v7.h2, v6.h8[7]); dump();
fmlsl(v8.s2, v7.h2, v6.h8[7]); dump();
fmlsl(v16.s2, v7.h2, v6.h8[7]); dump();
fmlsl(v31.s2, v7.h2, v6.h8[7]); dump();
fmlsl(v7.s2, v7.h2, v6.h8[7]); dump();
fmlsl(v7.s2, v0.h2, v6.h8[7]); dump();
fmlsl(v7.s2, v1.h2, v6.h8[7]); dump();
fmlsl(v7.s2, v2.h2, v6.h8[7]); dump();
fmlsl(v7.s2, v4.h2, v6.h8[7]); dump();
fmlsl(v7.s2, v8.h2, v6.h8[7]); dump();
fmlsl(v7.s2, v16.h2, v6.h8[7]); dump();
fmlsl(v7.s2, v31.h2, v6.h8[7]); dump();
fmlsl(v7.s2, v7.h2, v6.h8[7]); dump();
fmlsl(v7.s2, v7.h2, v0.h8[7]); dump();
fmlsl(v7.s2, v7.h2, v1.h8[7]); dump();
fmlsl(v7.s2, v7.h2, v2.h8[7]); dump();
fmlsl(v7.s2, v7.h2, v4.h8[7]); dump();
fmlsl(v7.s2, v7.h2, v8.h8[7]); dump();
fmlsl(v7.s2, v7.h2, v15.h8[7]); dump();
fmlsl(v7.s2, v7.h2, v15.h8[0]); dump();
fmlsl(v7.s2, v7.h2, v15.h8[1]); dump();
fmlsl(v7.s2, v7.h2, v15.h8[2]); dump();
fmlsl(v7.s2, v7.h2, v15.h8[4]); dump();
fmlsl2(v7.s2, v7.h2, v6.h8[7]); dump();
fmlsl2(v0.s2, v7.h2, v6.h8[7]); dump();
fmlsl2(v1.s2, v7.h2, v6.h8[7]); dump();
fmlsl2(v2.s2, v7.h2, v6.h8[7]); dump();
fmlsl2(v4.s2, v7.h2, v6.h8[7]); dump();
fmlsl2(v8.s2, v7.h2, v6.h8[7]); dump();
fmlsl2(v16.s2, v7.h2, v6.h8[7]); dump();
fmlsl2(v31.s2, v7.h2, v6.h8[7]); dump();
fmlsl2(v7.s2, v7.h2, v6.h8[7]); dump();
fmlsl2(v7.s2, v0.h2, v6.h8[7]); dump();
fmlsl2(v7.s2, v1.h2, v6.h8[7]); dump();
fmlsl2(v7.s2, v2.h2, v6.h8[7]); dump();
fmlsl2(v7.s2, v4.h2, v6.h8[7]); dump();
fmlsl2(v7.s2, v8.h2, v6.h8[7]); dump();
fmlsl2(v7.s2, v16.h2, v6.h8[7]); dump();
fmlsl2(v7.s2, v31.h2, v6.h8[7]); dump();
fmlsl2(v7.s2, v7.h2, v6.h8[7]); dump();
fmlsl2(v7.s2, v7.h2, v0.h8[7]); dump();
fmlsl2(v7.s2, v7.h2, v1.h8[7]); dump();
fmlsl2(v7.s2, v7.h2, v2.h8[7]); dump();
fmlsl2(v7.s2, v7.h2, v4.h8[7]); dump();
fmlsl2(v7.s2, v7.h2, v8.h8[7]); dump();
fmlsl2(v7.s2, v7.h2, v15.h8[7]); dump();
fmlsl2(v7.s2, v7.h2, v15.h8[0]); dump();
fmlsl2(v7.s2, v7.h2, v15.h8[1]); dump();
fmlsl2(v7.s2, v7.h2, v15.h8[2]); dump();
fmlsl2(v7.s2, v7.h2, v15.h8[4]); dump();
//DataProcSimd_ByElementArithmetic1:1
fmlal(v7.s4, v7.h4, v6.h8[7]); dump();
fmlal(v0.s4, v7.h4, v6.h8[7]); dump();
fmlal(v1.s4, v7.h4, v6.h8[7]); dump();
fmlal(v2.s4, v7.h4, v6.h8[7]); dump();
fmlal(v4.s4, v7.h4, v6.h8[7]); dump();
fmlal(v8.s4, v7.h4, v6.h8[7]); dump();
fmlal(v16.s4, v7.h4, v6.h8[7]); dump();
fmlal(v31.s4, v7.h4, v6.h8[7]); dump();
fmlal(v7.s4, v7.h4, v6.h8[7]); dump();
fmlal(v7.s4, v0.h4, v6.h8[7]); dump();
fmlal(v7.s4, v1.h4, v6.h8[7]); dump();
fmlal(v7.s4, v2.h4, v6.h8[7]); dump();
fmlal(v7.s4, v4.h4, v6.h8[7]); dump();
fmlal(v7.s4, v8.h4, v6.h8[7]); dump();
fmlal(v7.s4, v16.h4, v6.h8[7]); dump();
fmlal(v7.s4, v31.h4, v6.h8[7]); dump();
fmlal(v7.s4, v7.h4, v6.h8[7]); dump();
fmlal(v7.s4, v7.h4, v0.h8[7]); dump();
fmlal(v7.s4, v7.h4, v1.h8[7]); dump();
fmlal(v7.s4, v7.h4, v2.h8[7]); dump();
fmlal(v7.s4, v7.h4, v4.h8[7]); dump();
fmlal(v7.s4, v7.h4, v8.h8[7]); dump();
fmlal(v7.s4, v7.h4, v15.h8[7]); dump();
fmlal(v7.s4, v7.h4, v15.h8[0]); dump();
fmlal(v7.s4, v7.h4, v15.h8[1]); dump();
fmlal(v7.s4, v7.h4, v15.h8[2]); dump();
fmlal(v7.s4, v7.h4, v15.h8[4]); dump();
fmlal2(v7.s4, v7.h4, v6.h8[7]); dump();
fmlal2(v0.s4, v7.h4, v6.h8[7]); dump();
fmlal2(v1.s4, v7.h4, v6.h8[7]); dump();
fmlal2(v2.s4, v7.h4, v6.h8[7]); dump();
fmlal2(v4.s4, v7.h4, v6.h8[7]); dump();
fmlal2(v8.s4, v7.h4, v6.h8[7]); dump();
fmlal2(v16.s4, v7.h4, v6.h8[7]); dump();
fmlal2(v31.s4, v7.h4, v6.h8[7]); dump();
fmlal2(v7.s4, v7.h4, v6.h8[7]); dump();
fmlal2(v7.s4, v0.h4, v6.h8[7]); dump();
fmlal2(v7.s4, v1.h4, v6.h8[7]); dump();
fmlal2(v7.s4, v2.h4, v6.h8[7]); dump();
fmlal2(v7.s4, v4.h4, v6.h8[7]); dump();
fmlal2(v7.s4, v8.h4, v6.h8[7]); dump();
fmlal2(v7.s4, v16.h4, v6.h8[7]); dump();
fmlal2(v7.s4, v31.h4, v6.h8[7]); dump();
fmlal2(v7.s4, v7.h4, v6.h8[7]); dump();
fmlal2(v7.s4, v7.h4, v0.h8[7]); dump();
fmlal2(v7.s4, v7.h4, v1.h8[7]); dump();
fmlal2(v7.s4, v7.h4, v2.h8[7]); dump();
fmlal2(v7.s4, v7.h4, v4.h8[7]); dump();
fmlal2(v7.s4, v7.h4, v8.h8[7]); dump();
fmlal2(v7.s4, v7.h4, v15.h8[7]); dump();
fmlal2(v7.s4, v7.h4, v15.h8[0]); dump();
fmlal2(v7.s4, v7.h4, v15.h8[1]); dump();
fmlal2(v7.s4, v7.h4, v15.h8[2]); dump();
fmlal2(v7.s4, v7.h4, v15.h8[4]); dump();
fmlsl(v7.s4, v7.h4, v6.h8[7]); dump();
fmlsl(v0.s4, v7.h4, v6.h8[7]); dump();
fmlsl(v1.s4, v7.h4, v6.h8[7]); dump();
fmlsl(v2.s4, v7.h4, v6.h8[7]); dump();
fmlsl(v4.s4, v7.h4, v6.h8[7]); dump();
fmlsl(v8.s4, v7.h4, v6.h8[7]); dump();
fmlsl(v16.s4, v7.h4, v6.h8[7]); dump();
fmlsl(v31.s4, v7.h4, v6.h8[7]); dump();
fmlsl(v7.s4, v7.h4, v6.h8[7]); dump();
fmlsl(v7.s4, v0.h4, v6.h8[7]); dump();
fmlsl(v7.s4, v1.h4, v6.h8[7]); dump();
fmlsl(v7.s4, v2.h4, v6.h8[7]); dump();
fmlsl(v7.s4, v4.h4, v6.h8[7]); dump();
fmlsl(v7.s4, v8.h4, v6.h8[7]); dump();
fmlsl(v7.s4, v16.h4, v6.h8[7]); dump();
fmlsl(v7.s4, v31.h4, v6.h8[7]); dump();
fmlsl(v7.s4, v7.h4, v6.h8[7]); dump();
fmlsl(v7.s4, v7.h4, v0.h8[7]); dump();
fmlsl(v7.s4, v7.h4, v1.h8[7]); dump();
fmlsl(v7.s4, v7.h4, v2.h8[7]); dump();
fmlsl(v7.s4, v7.h4, v4.h8[7]); dump();
fmlsl(v7.s4, v7.h4, v8.h8[7]); dump();
fmlsl(v7.s4, v7.h4, v15.h8[7]); dump();
fmlsl(v7.s4, v7.h4, v15.h8[0]); dump();
fmlsl(v7.s4, v7.h4, v15.h8[1]); dump();
fmlsl(v7.s4, v7.h4, v15.h8[2]); dump();
fmlsl(v7.s4, v7.h4, v15.h8[4]); dump();
fmlsl2(v7.s4, v7.h4, v6.h8[7]); dump();
fmlsl2(v0.s4, v7.h4, v6.h8[7]); dump();
fmlsl2(v1.s4, v7.h4, v6.h8[7]); dump();
fmlsl2(v2.s4, v7.h4, v6.h8[7]); dump();
fmlsl2(v4.s4, v7.h4, v6.h8[7]); dump();
fmlsl2(v8.s4, v7.h4, v6.h8[7]); dump();
fmlsl2(v16.s4, v7.h4, v6.h8[7]); dump();
fmlsl2(v31.s4, v7.h4, v6.h8[7]); dump();
fmlsl2(v7.s4, v7.h4, v6.h8[7]); dump();
fmlsl2(v7.s4, v0.h4, v6.h8[7]); dump();
fmlsl2(v7.s4, v1.h4, v6.h8[7]); dump();
fmlsl2(v7.s4, v2.h4, v6.h8[7]); dump();
fmlsl2(v7.s4, v4.h4, v6.h8[7]); dump();
fmlsl2(v7.s4, v8.h4, v6.h8[7]); dump();
fmlsl2(v7.s4, v16.h4, v6.h8[7]); dump();
fmlsl2(v7.s4, v31.h4, v6.h8[7]); dump();
fmlsl2(v7.s4, v7.h4, v6.h8[7]); dump();
fmlsl2(v7.s4, v7.h4, v0.h8[7]); dump();
fmlsl2(v7.s4, v7.h4, v1.h8[7]); dump();
fmlsl2(v7.s4, v7.h4, v2.h8[7]); dump();
fmlsl2(v7.s4, v7.h4, v4.h8[7]); dump();
fmlsl2(v7.s4, v7.h4, v8.h8[7]); dump();
fmlsl2(v7.s4, v7.h4, v15.h8[7]); dump();
fmlsl2(v7.s4, v7.h4, v15.h8[0]); dump();
fmlsl2(v7.s4, v7.h4, v15.h8[1]); dump();
fmlsl2(v7.s4, v7.h4, v15.h8[2]); dump();
fmlsl2(v7.s4, v7.h4, v15.h8[4]); dump();
//DataProcSimd_ByElementArithmetic2:0
mla(v7.h4, v7.h4, v6.h8[7]); dump();
mla(v0.h4, v7.h4, v6.h8[7]); dump();
mla(v1.h4, v7.h4, v6.h8[7]); dump();
mla(v2.h4, v7.h4, v6.h8[7]); dump();
mla(v4.h4, v7.h4, v6.h8[7]); dump();
mla(v8.h4, v7.h4, v6.h8[7]); dump();
mla(v16.h4, v7.h4, v6.h8[7]); dump();
mla(v31.h4, v7.h4, v6.h8[7]); dump();
mla(v7.h4, v7.h4, v6.h8[7]); dump();
mla(v7.h4, v0.h4, v6.h8[7]); dump();
mla(v7.h4, v1.h4, v6.h8[7]); dump();
mla(v7.h4, v2.h4, v6.h8[7]); dump();
mla(v7.h4, v4.h4, v6.h8[7]); dump();
mla(v7.h4, v8.h4, v6.h8[7]); dump();
mla(v7.h4, v16.h4, v6.h8[7]); dump();
mla(v7.h4, v31.h4, v6.h8[7]); dump();
mla(v7.h4, v7.h4, v6.h8[7]); dump();
mla(v7.h4, v7.h4, v0.h8[7]); dump();
mla(v7.h4, v7.h4, v1.h8[7]); dump();
mla(v7.h4, v7.h4, v2.h8[7]); dump();
mla(v7.h4, v7.h4, v4.h8[7]); dump();
mla(v7.h4, v7.h4, v8.h8[7]); dump();
mla(v7.h4, v7.h4, v15.h8[7]); dump();
mla(v7.h4, v7.h4, v15.h8[0]); dump();
mla(v7.h4, v7.h4, v15.h8[1]); dump();
mla(v7.h4, v7.h4, v15.h8[2]); dump();
mla(v7.h4, v7.h4, v15.h8[4]); dump();
mls(v7.h4, v7.h4, v6.h8[7]); dump();
mls(v0.h4, v7.h4, v6.h8[7]); dump();
mls(v1.h4, v7.h4, v6.h8[7]); dump();
mls(v2.h4, v7.h4, v6.h8[7]); dump();
mls(v4.h4, v7.h4, v6.h8[7]); dump();
mls(v8.h4, v7.h4, v6.h8[7]); dump();
mls(v16.h4, v7.h4, v6.h8[7]); dump();
mls(v31.h4, v7.h4, v6.h8[7]); dump();
mls(v7.h4, v7.h4, v6.h8[7]); dump();
mls(v7.h4, v0.h4, v6.h8[7]); dump();
mls(v7.h4, v1.h4, v6.h8[7]); dump();
mls(v7.h4, v2.h4, v6.h8[7]); dump();
mls(v7.h4, v4.h4, v6.h8[7]); dump();
mls(v7.h4, v8.h4, v6.h8[7]); dump();
mls(v7.h4, v16.h4, v6.h8[7]); dump();
mls(v7.h4, v31.h4, v6.h8[7]); dump();
mls(v7.h4, v7.h4, v6.h8[7]); dump();
mls(v7.h4, v7.h4, v0.h8[7]); dump();
mls(v7.h4, v7.h4, v1.h8[7]); dump();
mls(v7.h4, v7.h4, v2.h8[7]); dump();
mls(v7.h4, v7.h4, v4.h8[7]); dump();
mls(v7.h4, v7.h4, v8.h8[7]); dump();
mls(v7.h4, v7.h4, v15.h8[7]); dump();
mls(v7.h4, v7.h4, v15.h8[0]); dump();
mls(v7.h4, v7.h4, v15.h8[1]); dump();
mls(v7.h4, v7.h4, v15.h8[2]); dump();
mls(v7.h4, v7.h4, v15.h8[4]); dump();
mul(v7.h4, v7.h4, v6.h8[7]); dump();
mul(v0.h4, v7.h4, v6.h8[7]); dump();
mul(v1.h4, v7.h4, v6.h8[7]); dump();
mul(v2.h4, v7.h4, v6.h8[7]); dump();
mul(v4.h4, v7.h4, v6.h8[7]); dump();
mul(v8.h4, v7.h4, v6.h8[7]); dump();
mul(v16.h4, v7.h4, v6.h8[7]); dump();
mul(v31.h4, v7.h4, v6.h8[7]); dump();
mul(v7.h4, v7.h4, v6.h8[7]); dump();
mul(v7.h4, v0.h4, v6.h8[7]); dump();
mul(v7.h4, v1.h4, v6.h8[7]); dump();
mul(v7.h4, v2.h4, v6.h8[7]); dump();
mul(v7.h4, v4.h4, v6.h8[7]); dump();
mul(v7.h4, v8.h4, v6.h8[7]); dump();
mul(v7.h4, v16.h4, v6.h8[7]); dump();
mul(v7.h4, v31.h4, v6.h8[7]); dump();
mul(v7.h4, v7.h4, v6.h8[7]); dump();
mul(v7.h4, v7.h4, v0.h8[7]); dump();
mul(v7.h4, v7.h4, v1.h8[7]); dump();
mul(v7.h4, v7.h4, v2.h8[7]); dump();
mul(v7.h4, v7.h4, v4.h8[7]); dump();
mul(v7.h4, v7.h4, v8.h8[7]); dump();
mul(v7.h4, v7.h4, v15.h8[7]); dump();
mul(v7.h4, v7.h4, v15.h8[0]); dump();
mul(v7.h4, v7.h4, v15.h8[1]); dump();
mul(v7.h4, v7.h4, v15.h8[2]); dump();
mul(v7.h4, v7.h4, v15.h8[4]); dump();
//DataProcSimd_ByElementArithmetic2:1
mla(v7.h8, v7.h8, v6.h8[7]); dump();
mla(v0.h8, v7.h8, v6.h8[7]); dump();
mla(v1.h8, v7.h8, v6.h8[7]); dump();
mla(v2.h8, v7.h8, v6.h8[7]); dump();
mla(v4.h8, v7.h8, v6.h8[7]); dump();
mla(v8.h8, v7.h8, v6.h8[7]); dump();
mla(v16.h8, v7.h8, v6.h8[7]); dump();
mla(v31.h8, v7.h8, v6.h8[7]); dump();
mla(v7.h8, v7.h8, v6.h8[7]); dump();
mla(v7.h8, v0.h8, v6.h8[7]); dump();
mla(v7.h8, v1.h8, v6.h8[7]); dump();
mla(v7.h8, v2.h8, v6.h8[7]); dump();
mla(v7.h8, v4.h8, v6.h8[7]); dump();
mla(v7.h8, v8.h8, v6.h8[7]); dump();
mla(v7.h8, v16.h8, v6.h8[7]); dump();
mla(v7.h8, v31.h8, v6.h8[7]); dump();
mla(v7.h8, v7.h8, v6.h8[7]); dump();
mla(v7.h8, v7.h8, v0.h8[7]); dump();
mla(v7.h8, v7.h8, v1.h8[7]); dump();
mla(v7.h8, v7.h8, v2.h8[7]); dump();
mla(v7.h8, v7.h8, v4.h8[7]); dump();
mla(v7.h8, v7.h8, v8.h8[7]); dump();
mla(v7.h8, v7.h8, v15.h8[7]); dump();
mla(v7.h8, v7.h8, v15.h8[0]); dump();
mla(v7.h8, v7.h8, v15.h8[1]); dump();
mla(v7.h8, v7.h8, v15.h8[2]); dump();
mla(v7.h8, v7.h8, v15.h8[4]); dump();
mls(v7.h8, v7.h8, v6.h8[7]); dump();
mls(v0.h8, v7.h8, v6.h8[7]); dump();
mls(v1.h8, v7.h8, v6.h8[7]); dump();
mls(v2.h8, v7.h8, v6.h8[7]); dump();
mls(v4.h8, v7.h8, v6.h8[7]); dump();
mls(v8.h8, v7.h8, v6.h8[7]); dump();
mls(v16.h8, v7.h8, v6.h8[7]); dump();
mls(v31.h8, v7.h8, v6.h8[7]); dump();
mls(v7.h8, v7.h8, v6.h8[7]); dump();
mls(v7.h8, v0.h8, v6.h8[7]); dump();
mls(v7.h8, v1.h8, v6.h8[7]); dump();
mls(v7.h8, v2.h8, v6.h8[7]); dump();
mls(v7.h8, v4.h8, v6.h8[7]); dump();
mls(v7.h8, v8.h8, v6.h8[7]); dump();
mls(v7.h8, v16.h8, v6.h8[7]); dump();
mls(v7.h8, v31.h8, v6.h8[7]); dump();
mls(v7.h8, v7.h8, v6.h8[7]); dump();
mls(v7.h8, v7.h8, v0.h8[7]); dump();
mls(v7.h8, v7.h8, v1.h8[7]); dump();
mls(v7.h8, v7.h8, v2.h8[7]); dump();
mls(v7.h8, v7.h8, v4.h8[7]); dump();
mls(v7.h8, v7.h8, v8.h8[7]); dump();
mls(v7.h8, v7.h8, v15.h8[7]); dump();
mls(v7.h8, v7.h8, v15.h8[0]); dump();
mls(v7.h8, v7.h8, v15.h8[1]); dump();
mls(v7.h8, v7.h8, v15.h8[2]); dump();
mls(v7.h8, v7.h8, v15.h8[4]); dump();
mul(v7.h8, v7.h8, v6.h8[7]); dump();
mul(v0.h8, v7.h8, v6.h8[7]); dump();
mul(v1.h8, v7.h8, v6.h8[7]); dump();
mul(v2.h8, v7.h8, v6.h8[7]); dump();
mul(v4.h8, v7.h8, v6.h8[7]); dump();
mul(v8.h8, v7.h8, v6.h8[7]); dump();
mul(v16.h8, v7.h8, v6.h8[7]); dump();
mul(v31.h8, v7.h8, v6.h8[7]); dump();
mul(v7.h8, v7.h8, v6.h8[7]); dump();
mul(v7.h8, v0.h8, v6.h8[7]); dump();
mul(v7.h8, v1.h8, v6.h8[7]); dump();
mul(v7.h8, v2.h8, v6.h8[7]); dump();
mul(v7.h8, v4.h8, v6.h8[7]); dump();
mul(v7.h8, v8.h8, v6.h8[7]); dump();
mul(v7.h8, v16.h8, v6.h8[7]); dump();
mul(v7.h8, v31.h8, v6.h8[7]); dump();
mul(v7.h8, v7.h8, v6.h8[7]); dump();
mul(v7.h8, v7.h8, v0.h8[7]); dump();
mul(v7.h8, v7.h8, v1.h8[7]); dump();
mul(v7.h8, v7.h8, v2.h8[7]); dump();
mul(v7.h8, v7.h8, v4.h8[7]); dump();
mul(v7.h8, v7.h8, v8.h8[7]); dump();
mul(v7.h8, v7.h8, v15.h8[7]); dump();
mul(v7.h8, v7.h8, v15.h8[0]); dump();
mul(v7.h8, v7.h8, v15.h8[1]); dump();
mul(v7.h8, v7.h8, v15.h8[2]); dump();
mul(v7.h8, v7.h8, v15.h8[4]); dump();
//DataProcSimd_ByElementArithmetic2:2
mla(v7.s2, v7.s2, v7.s4[3]); dump();
mla(v0.s2, v7.s2, v7.s4[3]); dump();
mla(v1.s2, v7.s2, v7.s4[3]); dump();
mla(v2.s2, v7.s2, v7.s4[3]); dump();
mla(v4.s2, v7.s2, v7.s4[3]); dump();
mla(v8.s2, v7.s2, v7.s4[3]); dump();
mla(v16.s2, v7.s2, v7.s4[3]); dump();
mla(v31.s2, v7.s2, v7.s4[3]); dump();
mla(v7.s2, v7.s2, v7.s4[3]); dump();
mla(v7.s2, v0.s2, v7.s4[3]); dump();
mla(v7.s2, v1.s2, v7.s4[3]); dump();
mla(v7.s2, v2.s2, v7.s4[3]); dump();
mla(v7.s2, v4.s2, v7.s4[3]); dump();
mla(v7.s2, v8.s2, v7.s4[3]); dump();
mla(v7.s2, v16.s2, v7.s4[3]); dump();
mla(v7.s2, v31.s2, v7.s4[3]); dump();
mla(v7.s2, v7.s2, v7.s4[3]); dump();
mla(v7.s2, v7.s2, v7s4_3); dump();
mla(v7.s2, v7.s2, v0.s4[3]); dump();
mla(v7.s2, v7.s2, v0s4_3); dump();
mla(v7.s2, v7.s2, v1.s4[3]); dump();
mla(v7.s2, v7.s2, v1s4_3); dump();
mla(v7.s2, v7.s2, v2.s4[3]); dump();
mla(v7.s2, v7.s2, v2s4_3); dump();
mla(v7.s2, v7.s2, v4.s4[3]); dump();
mla(v7.s2, v7.s2, v4s4_3); dump();
mla(v7.s2, v7.s2, v8.s4[3]); dump();
mla(v7.s2, v7.s2, v8s4_3); dump();
mla(v7.s2, v7.s2, v16.s4[3]); dump();
mla(v7.s2, v7.s2, v16s4_3); dump();
mla(v7.s2, v7.s2, v31.s4[3]); dump();
mla(v7.s2, v7.s2, v31s4_3); dump();
mla(v7.s2, v7.s2, v7.s4[0]); dump();
mla(v7.s2, v7.s2, v7s4_0); dump();
mla(v7.s2, v7.s2, v7.s4[1]); dump();
mla(v7.s2, v7.s2, v7s4_1); dump();
mla(v7.s2, v7.s2, v7.s4[2]); dump();
mla(v7.s2, v7.s2, v7s4_2); dump();
mls(v7.s2, v7.s2, v7.s4[3]); dump();
mls(v0.s2, v7.s2, v7.s4[3]); dump();
mls(v1.s2, v7.s2, v7.s4[3]); dump();
mls(v2.s2, v7.s2, v7.s4[3]); dump();
mls(v4.s2, v7.s2, v7.s4[3]); dump();
mls(v8.s2, v7.s2, v7.s4[3]); dump();
mls(v16.s2, v7.s2, v7.s4[3]); dump();
mls(v31.s2, v7.s2, v7.s4[3]); dump();
mls(v7.s2, v7.s2, v7.s4[3]); dump();
mls(v7.s2, v0.s2, v7.s4[3]); dump();
mls(v7.s2, v1.s2, v7.s4[3]); dump();
mls(v7.s2, v2.s2, v7.s4[3]); dump();
mls(v7.s2, v4.s2, v7.s4[3]); dump();
mls(v7.s2, v8.s2, v7.s4[3]); dump();
mls(v7.s2, v16.s2, v7.s4[3]); dump();
mls(v7.s2, v31.s2, v7.s4[3]); dump();
mls(v7.s2, v7.s2, v7.s4[3]); dump();
mls(v7.s2, v7.s2, v7s4_3); dump();
mls(v7.s2, v7.s2, v0.s4[3]); dump();
mls(v7.s2, v7.s2, v0s4_3); dump();
mls(v7.s2, v7.s2, v1.s4[3]); dump();
mls(v7.s2, v7.s2, v1s4_3); dump();
mls(v7.s2, v7.s2, v2.s4[3]); dump();
mls(v7.s2, v7.s2, v2s4_3); dump();
mls(v7.s2, v7.s2, v4.s4[3]); dump();
mls(v7.s2, v7.s2, v4s4_3); dump();
mls(v7.s2, v7.s2, v8.s4[3]); dump();
mls(v7.s2, v7.s2, v8s4_3); dump();
mls(v7.s2, v7.s2, v16.s4[3]); dump();
mls(v7.s2, v7.s2, v16s4_3); dump();
mls(v7.s2, v7.s2, v31.s4[3]); dump();
mls(v7.s2, v7.s2, v31s4_3); dump();
mls(v7.s2, v7.s2, v7.s4[0]); dump();
mls(v7.s2, v7.s2, v7s4_0); dump();
mls(v7.s2, v7.s2, v7.s4[1]); dump();
mls(v7.s2, v7.s2, v7s4_1); dump();
mls(v7.s2, v7.s2, v7.s4[2]); dump();
mls(v7.s2, v7.s2, v7s4_2); dump();
mul(v7.s2, v7.s2, v7.s4[3]); dump();
mul(v0.s2, v7.s2, v7.s4[3]); dump();
mul(v1.s2, v7.s2, v7.s4[3]); dump();
mul(v2.s2, v7.s2, v7.s4[3]); dump();
mul(v4.s2, v7.s2, v7.s4[3]); dump();
mul(v8.s2, v7.s2, v7.s4[3]); dump();
mul(v16.s2, v7.s2, v7.s4[3]); dump();
mul(v31.s2, v7.s2, v7.s4[3]); dump();
mul(v7.s2, v7.s2, v7.s4[3]); dump();
mul(v7.s2, v0.s2, v7.s4[3]); dump();
mul(v7.s2, v1.s2, v7.s4[3]); dump();
mul(v7.s2, v2.s2, v7.s4[3]); dump();
mul(v7.s2, v4.s2, v7.s4[3]); dump();
mul(v7.s2, v8.s2, v7.s4[3]); dump();
mul(v7.s2, v16.s2, v7.s4[3]); dump();
mul(v7.s2, v31.s2, v7.s4[3]); dump();
mul(v7.s2, v7.s2, v7.s4[3]); dump();
mul(v7.s2, v7.s2, v7s4_3); dump();
mul(v7.s2, v7.s2, v0.s4[3]); dump();
mul(v7.s2, v7.s2, v0s4_3); dump();
mul(v7.s2, v7.s2, v1.s4[3]); dump();
mul(v7.s2, v7.s2, v1s4_3); dump();
mul(v7.s2, v7.s2, v2.s4[3]); dump();
mul(v7.s2, v7.s2, v2s4_3); dump();
mul(v7.s2, v7.s2, v4.s4[3]); dump();
mul(v7.s2, v7.s2, v4s4_3); dump();
mul(v7.s2, v7.s2, v8.s4[3]); dump();
mul(v7.s2, v7.s2, v8s4_3); dump();
mul(v7.s2, v7.s2, v16.s4[3]); dump();
mul(v7.s2, v7.s2, v16s4_3); dump();
mul(v7.s2, v7.s2, v31.s4[3]); dump();
mul(v7.s2, v7.s2, v31s4_3); dump();
mul(v7.s2, v7.s2, v7.s4[0]); dump();
mul(v7.s2, v7.s2, v7s4_0); dump();
mul(v7.s2, v7.s2, v7.s4[1]); dump();
mul(v7.s2, v7.s2, v7s4_1); dump();
mul(v7.s2, v7.s2, v7.s4[2]); dump();
mul(v7.s2, v7.s2, v7s4_2); dump();
//DataProcSimd_ByElementArithmetic2:3
mla(v7.s4, v7.s4, v7.s4[3]); dump();
mla(v0.s4, v7.s4, v7.s4[3]); dump();
mla(v1.s4, v7.s4, v7.s4[3]); dump();
mla(v2.s4, v7.s4, v7.s4[3]); dump();
mla(v4.s4, v7.s4, v7.s4[3]); dump();
mla(v8.s4, v7.s4, v7.s4[3]); dump();
mla(v16.s4, v7.s4, v7.s4[3]); dump();
mla(v31.s4, v7.s4, v7.s4[3]); dump();
mla(v7.s4, v7.s4, v7.s4[3]); dump();
mla(v7.s4, v0.s4, v7.s4[3]); dump();
mla(v7.s4, v1.s4, v7.s4[3]); dump();
mla(v7.s4, v2.s4, v7.s4[3]); dump();
mla(v7.s4, v4.s4, v7.s4[3]); dump();
mla(v7.s4, v8.s4, v7.s4[3]); dump();
mla(v7.s4, v16.s4, v7.s4[3]); dump();
mla(v7.s4, v31.s4, v7.s4[3]); dump();
mla(v7.s4, v7.s4, v7.s4[3]); dump();
mla(v7.s4, v7.s4, v7s4_3); dump();
mla(v7.s4, v7.s4, v0.s4[3]); dump();
mla(v7.s4, v7.s4, v0s4_3); dump();
mla(v7.s4, v7.s4, v1.s4[3]); dump();
mla(v7.s4, v7.s4, v1s4_3); dump();
mla(v7.s4, v7.s4, v2.s4[3]); dump();
mla(v7.s4, v7.s4, v2s4_3); dump();
mla(v7.s4, v7.s4, v4.s4[3]); dump();
mla(v7.s4, v7.s4, v4s4_3); dump();
mla(v7.s4, v7.s4, v8.s4[3]); dump();
mla(v7.s4, v7.s4, v8s4_3); dump();
mla(v7.s4, v7.s4, v16.s4[3]); dump();
mla(v7.s4, v7.s4, v16s4_3); dump();
mla(v7.s4, v7.s4, v31.s4[3]); dump();
mla(v7.s4, v7.s4, v31s4_3); dump();
mla(v7.s4, v7.s4, v7.s4[0]); dump();
mla(v7.s4, v7.s4, v7s4_0); dump();
mla(v7.s4, v7.s4, v7.s4[1]); dump();
mla(v7.s4, v7.s4, v7s4_1); dump();
mla(v7.s4, v7.s4, v7.s4[2]); dump();
mla(v7.s4, v7.s4, v7s4_2); dump();
mls(v7.s4, v7.s4, v7.s4[3]); dump();
mls(v0.s4, v7.s4, v7.s4[3]); dump();
mls(v1.s4, v7.s4, v7.s4[3]); dump();
mls(v2.s4, v7.s4, v7.s4[3]); dump();
mls(v4.s4, v7.s4, v7.s4[3]); dump();
mls(v8.s4, v7.s4, v7.s4[3]); dump();
mls(v16.s4, v7.s4, v7.s4[3]); dump();
mls(v31.s4, v7.s4, v7.s4[3]); dump();
mls(v7.s4, v7.s4, v7.s4[3]); dump();
mls(v7.s4, v0.s4, v7.s4[3]); dump();
mls(v7.s4, v1.s4, v7.s4[3]); dump();
mls(v7.s4, v2.s4, v7.s4[3]); dump();
mls(v7.s4, v4.s4, v7.s4[3]); dump();
mls(v7.s4, v8.s4, v7.s4[3]); dump();
mls(v7.s4, v16.s4, v7.s4[3]); dump();
mls(v7.s4, v31.s4, v7.s4[3]); dump();
mls(v7.s4, v7.s4, v7.s4[3]); dump();
mls(v7.s4, v7.s4, v7s4_3); dump();
mls(v7.s4, v7.s4, v0.s4[3]); dump();
mls(v7.s4, v7.s4, v0s4_3); dump();
mls(v7.s4, v7.s4, v1.s4[3]); dump();
mls(v7.s4, v7.s4, v1s4_3); dump();
mls(v7.s4, v7.s4, v2.s4[3]); dump();
mls(v7.s4, v7.s4, v2s4_3); dump();
mls(v7.s4, v7.s4, v4.s4[3]); dump();
mls(v7.s4, v7.s4, v4s4_3); dump();
mls(v7.s4, v7.s4, v8.s4[3]); dump();
mls(v7.s4, v7.s4, v8s4_3); dump();
mls(v7.s4, v7.s4, v16.s4[3]); dump();
mls(v7.s4, v7.s4, v16s4_3); dump();
mls(v7.s4, v7.s4, v31.s4[3]); dump();
mls(v7.s4, v7.s4, v31s4_3); dump();
mls(v7.s4, v7.s4, v7.s4[0]); dump();
mls(v7.s4, v7.s4, v7s4_0); dump();
mls(v7.s4, v7.s4, v7.s4[1]); dump();
mls(v7.s4, v7.s4, v7s4_1); dump();
mls(v7.s4, v7.s4, v7.s4[2]); dump();
mls(v7.s4, v7.s4, v7s4_2); dump();
mul(v7.s4, v7.s4, v7.s4[3]); dump();
mul(v0.s4, v7.s4, v7.s4[3]); dump();
mul(v1.s4, v7.s4, v7.s4[3]); dump();
mul(v2.s4, v7.s4, v7.s4[3]); dump();
mul(v4.s4, v7.s4, v7.s4[3]); dump();
mul(v8.s4, v7.s4, v7.s4[3]); dump();
mul(v16.s4, v7.s4, v7.s4[3]); dump();
mul(v31.s4, v7.s4, v7.s4[3]); dump();
mul(v7.s4, v7.s4, v7.s4[3]); dump();
mul(v7.s4, v0.s4, v7.s4[3]); dump();
mul(v7.s4, v1.s4, v7.s4[3]); dump();
mul(v7.s4, v2.s4, v7.s4[3]); dump();
mul(v7.s4, v4.s4, v7.s4[3]); dump();
mul(v7.s4, v8.s4, v7.s4[3]); dump();
mul(v7.s4, v16.s4, v7.s4[3]); dump();
mul(v7.s4, v31.s4, v7.s4[3]); dump();
mul(v7.s4, v7.s4, v7.s4[3]); dump();
mul(v7.s4, v7.s4, v7s4_3); dump();
mul(v7.s4, v7.s4, v0.s4[3]); dump();
mul(v7.s4, v7.s4, v0s4_3); dump();
mul(v7.s4, v7.s4, v1.s4[3]); dump();
mul(v7.s4, v7.s4, v1s4_3); dump();
mul(v7.s4, v7.s4, v2.s4[3]); dump();
mul(v7.s4, v7.s4, v2s4_3); dump();
mul(v7.s4, v7.s4, v4.s4[3]); dump();
mul(v7.s4, v7.s4, v4s4_3); dump();
mul(v7.s4, v7.s4, v8.s4[3]); dump();
mul(v7.s4, v7.s4, v8s4_3); dump();
mul(v7.s4, v7.s4, v16.s4[3]); dump();
mul(v7.s4, v7.s4, v16s4_3); dump();
mul(v7.s4, v7.s4, v31.s4[3]); dump();
mul(v7.s4, v7.s4, v31s4_3); dump();
mul(v7.s4, v7.s4, v7.s4[0]); dump();
mul(v7.s4, v7.s4, v7s4_0); dump();
mul(v7.s4, v7.s4, v7.s4[1]); dump();
mul(v7.s4, v7.s4, v7s4_1); dump();
mul(v7.s4, v7.s4, v7.s4[2]); dump();
mul(v7.s4, v7.s4, v7s4_2); dump();
//DataProcSimd_ByElementArithmetic3:0
smlal(v7.s4, v7.h4, v6.h8[7]); dump();
smlal(v0.s4, v7.h4, v6.h8[7]); dump();
smlal(v1.s4, v7.h4, v6.h8[7]); dump();
smlal(v2.s4, v7.h4, v6.h8[7]); dump();
smlal(v4.s4, v7.h4, v6.h8[7]); dump();
smlal(v8.s4, v7.h4, v6.h8[7]); dump();
smlal(v16.s4, v7.h4, v6.h8[7]); dump();
smlal(v31.s4, v7.h4, v6.h8[7]); dump();
smlal(v7.s4, v7.h4, v6.h8[7]); dump();
smlal(v7.s4, v0.h4, v6.h8[7]); dump();
smlal(v7.s4, v1.h4, v6.h8[7]); dump();
smlal(v7.s4, v2.h4, v6.h8[7]); dump();
smlal(v7.s4, v4.h4, v6.h8[7]); dump();
smlal(v7.s4, v8.h4, v6.h8[7]); dump();
smlal(v7.s4, v16.h4, v6.h8[7]); dump();
smlal(v7.s4, v31.h4, v6.h8[7]); dump();
smlal(v7.s4, v7.h4, v6.h8[7]); dump();
smlal(v7.s4, v7.h4, v0.h8[7]); dump();
smlal(v7.s4, v7.h4, v1.h8[7]); dump();
smlal(v7.s4, v7.h4, v2.h8[7]); dump();
smlal(v7.s4, v7.h4, v4.h8[7]); dump();
smlal(v7.s4, v7.h4, v8.h8[7]); dump();
smlal(v7.s4, v7.h4, v15.h8[7]); dump();
smlal(v7.s4, v7.h4, v15.h8[0]); dump();
smlal(v7.s4, v7.h4, v15.h8[1]); dump();
smlal(v7.s4, v7.h4, v15.h8[2]); dump();
smlal(v7.s4, v7.h4, v15.h8[4]); dump();
smull(v7.s4, v7.h4, v6.h8[7]); dump();
smull(v0.s4, v7.h4, v6.h8[7]); dump();
smull(v1.s4, v7.h4, v6.h8[7]); dump();
smull(v2.s4, v7.h4, v6.h8[7]); dump();
smull(v4.s4, v7.h4, v6.h8[7]); dump();
smull(v8.s4, v7.h4, v6.h8[7]); dump();
smull(v16.s4, v7.h4, v6.h8[7]); dump();
smull(v31.s4, v7.h4, v6.h8[7]); dump();
smull(v7.s4, v7.h4, v6.h8[7]); dump();
smull(v7.s4, v0.h4, v6.h8[7]); dump();
smull(v7.s4, v1.h4, v6.h8[7]); dump();
smull(v7.s4, v2.h4, v6.h8[7]); dump();
smull(v7.s4, v4.h4, v6.h8[7]); dump();
smull(v7.s4, v8.h4, v6.h8[7]); dump();
smull(v7.s4, v16.h4, v6.h8[7]); dump();
smull(v7.s4, v31.h4, v6.h8[7]); dump();
smull(v7.s4, v7.h4, v6.h8[7]); dump();
smull(v7.s4, v7.h4, v0.h8[7]); dump();
smull(v7.s4, v7.h4, v1.h8[7]); dump();
smull(v7.s4, v7.h4, v2.h8[7]); dump();
smull(v7.s4, v7.h4, v4.h8[7]); dump();
smull(v7.s4, v7.h4, v8.h8[7]); dump();
smull(v7.s4, v7.h4, v15.h8[7]); dump();
smull(v7.s4, v7.h4, v15.h8[0]); dump();
smull(v7.s4, v7.h4, v15.h8[1]); dump();
smull(v7.s4, v7.h4, v15.h8[2]); dump();
smull(v7.s4, v7.h4, v15.h8[4]); dump();
//DataProcSimd_ByElementArithmetic3:1
smlal(v7.d2, v7.s2, v7.s4[3]); dump();
smlal(v0.d2, v7.s2, v7.s4[3]); dump();
smlal(v1.d2, v7.s2, v7.s4[3]); dump();
smlal(v2.d2, v7.s2, v7.s4[3]); dump();
smlal(v4.d2, v7.s2, v7.s4[3]); dump();
smlal(v8.d2, v7.s2, v7.s4[3]); dump();
smlal(v16.d2, v7.s2, v7.s4[3]); dump();
smlal(v31.d2, v7.s2, v7.s4[3]); dump();
smlal(v7.d2, v7.s2, v7.s4[3]); dump();
smlal(v7.d2, v0.s2, v7.s4[3]); dump();
smlal(v7.d2, v1.s2, v7.s4[3]); dump();
smlal(v7.d2, v2.s2, v7.s4[3]); dump();
smlal(v7.d2, v4.s2, v7.s4[3]); dump();
smlal(v7.d2, v8.s2, v7.s4[3]); dump();
smlal(v7.d2, v16.s2, v7.s4[3]); dump();
smlal(v7.d2, v31.s2, v7.s4[3]); dump();
smlal(v7.d2, v7.s2, v7.s4[3]); dump();
smlal(v7.d2, v7.s2, v7s4_3); dump();
smlal(v7.d2, v7.s2, v0.s4[3]); dump();
smlal(v7.d2, v7.s2, v0s4_3); dump();
smlal(v7.d2, v7.s2, v1.s4[3]); dump();
smlal(v7.d2, v7.s2, v1s4_3); dump();
smlal(v7.d2, v7.s2, v2.s4[3]); dump();
smlal(v7.d2, v7.s2, v2s4_3); dump();
smlal(v7.d2, v7.s2, v4.s4[3]); dump();
smlal(v7.d2, v7.s2, v4s4_3); dump();
smlal(v7.d2, v7.s2, v8.s4[3]); dump();
smlal(v7.d2, v7.s2, v8s4_3); dump();
smlal(v7.d2, v7.s2, v16.s4[3]); dump();
smlal(v7.d2, v7.s2, v16s4_3); dump();
smlal(v7.d2, v7.s2, v31.s4[3]); dump();
smlal(v7.d2, v7.s2, v31s4_3); dump();
smlal(v7.d2, v7.s2, v7.s4[0]); dump();
smlal(v7.d2, v7.s2, v7s4_0); dump();
smlal(v7.d2, v7.s2, v7.s4[1]); dump();
smlal(v7.d2, v7.s2, v7s4_1); dump();
smlal(v7.d2, v7.s2, v7.s4[2]); dump();
smlal(v7.d2, v7.s2, v7s4_2); dump();
smull(v7.d2, v7.s2, v7.s4[3]); dump();
smull(v0.d2, v7.s2, v7.s4[3]); dump();
smull(v1.d2, v7.s2, v7.s4[3]); dump();
smull(v2.d2, v7.s2, v7.s4[3]); dump();
smull(v4.d2, v7.s2, v7.s4[3]); dump();
smull(v8.d2, v7.s2, v7.s4[3]); dump();
smull(v16.d2, v7.s2, v7.s4[3]); dump();
smull(v31.d2, v7.s2, v7.s4[3]); dump();
smull(v7.d2, v7.s2, v7.s4[3]); dump();
smull(v7.d2, v0.s2, v7.s4[3]); dump();
smull(v7.d2, v1.s2, v7.s4[3]); dump();
smull(v7.d2, v2.s2, v7.s4[3]); dump();
smull(v7.d2, v4.s2, v7.s4[3]); dump();
smull(v7.d2, v8.s2, v7.s4[3]); dump();
smull(v7.d2, v16.s2, v7.s4[3]); dump();
smull(v7.d2, v31.s2, v7.s4[3]); dump();
smull(v7.d2, v7.s2, v7.s4[3]); dump();
smull(v7.d2, v7.s2, v7s4_3); dump();
smull(v7.d2, v7.s2, v0.s4[3]); dump();
smull(v7.d2, v7.s2, v0s4_3); dump();
smull(v7.d2, v7.s2, v1.s4[3]); dump();
smull(v7.d2, v7.s2, v1s4_3); dump();
smull(v7.d2, v7.s2, v2.s4[3]); dump();
smull(v7.d2, v7.s2, v2s4_3); dump();
smull(v7.d2, v7.s2, v4.s4[3]); dump();
smull(v7.d2, v7.s2, v4s4_3); dump();
smull(v7.d2, v7.s2, v8.s4[3]); dump();
smull(v7.d2, v7.s2, v8s4_3); dump();
smull(v7.d2, v7.s2, v16.s4[3]); dump();
smull(v7.d2, v7.s2, v16s4_3); dump();
smull(v7.d2, v7.s2, v31.s4[3]); dump();
smull(v7.d2, v7.s2, v31s4_3); dump();
smull(v7.d2, v7.s2, v7.s4[0]); dump();
smull(v7.d2, v7.s2, v7s4_0); dump();
smull(v7.d2, v7.s2, v7.s4[1]); dump();
smull(v7.d2, v7.s2, v7s4_1); dump();
smull(v7.d2, v7.s2, v7.s4[2]); dump();
smull(v7.d2, v7.s2, v7s4_2); dump();
//DataProcSimd_ByElementArithmetic4:0
smlal2(v7.s4, v7.h8, v6.h8[7]); dump();
smlal2(v0.s4, v7.h8, v6.h8[7]); dump();
smlal2(v1.s4, v7.h8, v6.h8[7]); dump();
smlal2(v2.s4, v7.h8, v6.h8[7]); dump();
smlal2(v4.s4, v7.h8, v6.h8[7]); dump();
smlal2(v8.s4, v7.h8, v6.h8[7]); dump();
smlal2(v16.s4, v7.h8, v6.h8[7]); dump();
smlal2(v31.s4, v7.h8, v6.h8[7]); dump();
smlal2(v7.s4, v7.h8, v6.h8[7]); dump();
smlal2(v7.s4, v0.h8, v6.h8[7]); dump();
smlal2(v7.s4, v1.h8, v6.h8[7]); dump();
smlal2(v7.s4, v2.h8, v6.h8[7]); dump();
smlal2(v7.s4, v4.h8, v6.h8[7]); dump();
smlal2(v7.s4, v8.h8, v6.h8[7]); dump();
smlal2(v7.s4, v16.h8, v6.h8[7]); dump();
smlal2(v7.s4, v31.h8, v6.h8[7]); dump();
smlal2(v7.s4, v7.h8, v6.h8[7]); dump();
smlal2(v7.s4, v7.h8, v0.h8[7]); dump();
smlal2(v7.s4, v7.h8, v1.h8[7]); dump();
smlal2(v7.s4, v7.h8, v2.h8[7]); dump();
smlal2(v7.s4, v7.h8, v4.h8[7]); dump();
smlal2(v7.s4, v7.h8, v8.h8[7]); dump();
smlal2(v7.s4, v7.h8, v15.h8[7]); dump();
smlal2(v7.s4, v7.h8, v15.h8[0]); dump();
smlal2(v7.s4, v7.h8, v15.h8[1]); dump();
smlal2(v7.s4, v7.h8, v15.h8[2]); dump();
smlal2(v7.s4, v7.h8, v15.h8[4]); dump();
smull2(v7.s4, v7.h8, v6.h8[7]); dump();
smull2(v0.s4, v7.h8, v6.h8[7]); dump();
smull2(v1.s4, v7.h8, v6.h8[7]); dump();
smull2(v2.s4, v7.h8, v6.h8[7]); dump();
smull2(v4.s4, v7.h8, v6.h8[7]); dump();
smull2(v8.s4, v7.h8, v6.h8[7]); dump();
smull2(v16.s4, v7.h8, v6.h8[7]); dump();
smull2(v31.s4, v7.h8, v6.h8[7]); dump();
smull2(v7.s4, v7.h8, v6.h8[7]); dump();
smull2(v7.s4, v0.h8, v6.h8[7]); dump();
smull2(v7.s4, v1.h8, v6.h8[7]); dump();
smull2(v7.s4, v2.h8, v6.h8[7]); dump();
smull2(v7.s4, v4.h8, v6.h8[7]); dump();
smull2(v7.s4, v8.h8, v6.h8[7]); dump();
smull2(v7.s4, v16.h8, v6.h8[7]); dump();
smull2(v7.s4, v31.h8, v6.h8[7]); dump();
smull2(v7.s4, v7.h8, v6.h8[7]); dump();
smull2(v7.s4, v7.h8, v0.h8[7]); dump();
smull2(v7.s4, v7.h8, v1.h8[7]); dump();
smull2(v7.s4, v7.h8, v2.h8[7]); dump();
smull2(v7.s4, v7.h8, v4.h8[7]); dump();
smull2(v7.s4, v7.h8, v8.h8[7]); dump();
smull2(v7.s4, v7.h8, v15.h8[7]); dump();
smull2(v7.s4, v7.h8, v15.h8[0]); dump();
smull2(v7.s4, v7.h8, v15.h8[1]); dump();
smull2(v7.s4, v7.h8, v15.h8[2]); dump();
smull2(v7.s4, v7.h8, v15.h8[4]); dump();
//DataProcSimd_ByElementArithmetic4:1
smlal2(v7.d2, v7.s4, v7.s4[3]); dump();
smlal2(v0.d2, v7.s4, v7.s4[3]); dump();
smlal2(v1.d2, v7.s4, v7.s4[3]); dump();
smlal2(v2.d2, v7.s4, v7.s4[3]); dump();
smlal2(v4.d2, v7.s4, v7.s4[3]); dump();
smlal2(v8.d2, v7.s4, v7.s4[3]); dump();
smlal2(v16.d2, v7.s4, v7.s4[3]); dump();
smlal2(v31.d2, v7.s4, v7.s4[3]); dump();
smlal2(v7.d2, v7.s4, v7.s4[3]); dump();
smlal2(v7.d2, v0.s4, v7.s4[3]); dump();
smlal2(v7.d2, v1.s4, v7.s4[3]); dump();
smlal2(v7.d2, v2.s4, v7.s4[3]); dump();
smlal2(v7.d2, v4.s4, v7.s4[3]); dump();
smlal2(v7.d2, v8.s4, v7.s4[3]); dump();
smlal2(v7.d2, v16.s4, v7.s4[3]); dump();
smlal2(v7.d2, v31.s4, v7.s4[3]); dump();
smlal2(v7.d2, v7.s4, v7.s4[3]); dump();
smlal2(v7.d2, v7.s4, v7s4_3); dump();
smlal2(v7.d2, v7.s4, v0.s4[3]); dump();
smlal2(v7.d2, v7.s4, v0s4_3); dump();
smlal2(v7.d2, v7.s4, v1.s4[3]); dump();
smlal2(v7.d2, v7.s4, v1s4_3); dump();
smlal2(v7.d2, v7.s4, v2.s4[3]); dump();
smlal2(v7.d2, v7.s4, v2s4_3); dump();
smlal2(v7.d2, v7.s4, v4.s4[3]); dump();
smlal2(v7.d2, v7.s4, v4s4_3); dump();
smlal2(v7.d2, v7.s4, v8.s4[3]); dump();
smlal2(v7.d2, v7.s4, v8s4_3); dump();
smlal2(v7.d2, v7.s4, v16.s4[3]); dump();
smlal2(v7.d2, v7.s4, v16s4_3); dump();
smlal2(v7.d2, v7.s4, v31.s4[3]); dump();
smlal2(v7.d2, v7.s4, v31s4_3); dump();
smlal2(v7.d2, v7.s4, v7.s4[0]); dump();
smlal2(v7.d2, v7.s4, v7s4_0); dump();
smlal2(v7.d2, v7.s4, v7.s4[1]); dump();
smlal2(v7.d2, v7.s4, v7s4_1); dump();
smlal2(v7.d2, v7.s4, v7.s4[2]); dump();
smlal2(v7.d2, v7.s4, v7s4_2); dump();
smull2(v7.d2, v7.s4, v7.s4[3]); dump();
smull2(v0.d2, v7.s4, v7.s4[3]); dump();
smull2(v1.d2, v7.s4, v7.s4[3]); dump();
smull2(v2.d2, v7.s4, v7.s4[3]); dump();
smull2(v4.d2, v7.s4, v7.s4[3]); dump();
smull2(v8.d2, v7.s4, v7.s4[3]); dump();
smull2(v16.d2, v7.s4, v7.s4[3]); dump();
smull2(v31.d2, v7.s4, v7.s4[3]); dump();
smull2(v7.d2, v7.s4, v7.s4[3]); dump();
smull2(v7.d2, v0.s4, v7.s4[3]); dump();
smull2(v7.d2, v1.s4, v7.s4[3]); dump();
smull2(v7.d2, v2.s4, v7.s4[3]); dump();
smull2(v7.d2, v4.s4, v7.s4[3]); dump();
smull2(v7.d2, v8.s4, v7.s4[3]); dump();
smull2(v7.d2, v16.s4, v7.s4[3]); dump();
smull2(v7.d2, v31.s4, v7.s4[3]); dump();
smull2(v7.d2, v7.s4, v7.s4[3]); dump();
smull2(v7.d2, v7.s4, v7s4_3); dump();
smull2(v7.d2, v7.s4, v0.s4[3]); dump();
smull2(v7.d2, v7.s4, v0s4_3); dump();
smull2(v7.d2, v7.s4, v1.s4[3]); dump();
smull2(v7.d2, v7.s4, v1s4_3); dump();
smull2(v7.d2, v7.s4, v2.s4[3]); dump();
smull2(v7.d2, v7.s4, v2s4_3); dump();
smull2(v7.d2, v7.s4, v4.s4[3]); dump();
smull2(v7.d2, v7.s4, v4s4_3); dump();
smull2(v7.d2, v7.s4, v8.s4[3]); dump();
smull2(v7.d2, v7.s4, v8s4_3); dump();
smull2(v7.d2, v7.s4, v16.s4[3]); dump();
smull2(v7.d2, v7.s4, v16s4_3); dump();
smull2(v7.d2, v7.s4, v31.s4[3]); dump();
smull2(v7.d2, v7.s4, v31s4_3); dump();
smull2(v7.d2, v7.s4, v7.s4[0]); dump();
smull2(v7.d2, v7.s4, v7s4_0); dump();
smull2(v7.d2, v7.s4, v7.s4[1]); dump();
smull2(v7.d2, v7.s4, v7s4_1); dump();
smull2(v7.d2, v7.s4, v7.s4[2]); dump();
smull2(v7.d2, v7.s4, v7s4_2); dump();
//DataProcSimd_ByElementArithmetic5:0
sqdmlal(s7, h7, v6.h8[7]); dump();
sqdmlal(s0, h7, v6.h8[7]); dump();
sqdmlal(s1, h7, v6.h8[7]); dump();
sqdmlal(s2, h7, v6.h8[7]); dump();
sqdmlal(s4, h7, v6.h8[7]); dump();
sqdmlal(s8, h7, v6.h8[7]); dump();
sqdmlal(s16, h7, v6.h8[7]); dump();
sqdmlal(s31, h7, v6.h8[7]); dump();
sqdmlal(s7, h7, v6.h8[7]); dump();
sqdmlal(s7, h0, v6.h8[7]); dump();
sqdmlal(s7, h1, v6.h8[7]); dump();
sqdmlal(s7, h2, v6.h8[7]); dump();
sqdmlal(s7, h4, v6.h8[7]); dump();
sqdmlal(s7, h8, v6.h8[7]); dump();
sqdmlal(s7, h16, v6.h8[7]); dump();
sqdmlal(s7, h31, v6.h8[7]); dump();
sqdmlal(s7, h7, v6.h8[7]); dump();
sqdmlal(s7, h7, v0.h8[7]); dump();
sqdmlal(s7, h7, v1.h8[7]); dump();
sqdmlal(s7, h7, v2.h8[7]); dump();
sqdmlal(s7, h7, v4.h8[7]); dump();
sqdmlal(s7, h7, v8.h8[7]); dump();
sqdmlal(s7, h7, v15.h8[7]); dump();
sqdmlal(s7, h7, v15.h8[0]); dump();
sqdmlal(s7, h7, v15.h8[1]); dump();
sqdmlal(s7, h7, v15.h8[2]); dump();
sqdmlal(s7, h7, v15.h8[4]); dump();
sqdmlsl(s7, h7, v6.h8[7]); dump();
sqdmlsl(s0, h7, v6.h8[7]); dump();
sqdmlsl(s1, h7, v6.h8[7]); dump();
sqdmlsl(s2, h7, v6.h8[7]); dump();
sqdmlsl(s4, h7, v6.h8[7]); dump();
sqdmlsl(s8, h7, v6.h8[7]); dump();
sqdmlsl(s16, h7, v6.h8[7]); dump();
sqdmlsl(s31, h7, v6.h8[7]); dump();
sqdmlsl(s7, h7, v6.h8[7]); dump();
sqdmlsl(s7, h0, v6.h8[7]); dump();
sqdmlsl(s7, h1, v6.h8[7]); dump();
sqdmlsl(s7, h2, v6.h8[7]); dump();
sqdmlsl(s7, h4, v6.h8[7]); dump();
sqdmlsl(s7, h8, v6.h8[7]); dump();
sqdmlsl(s7, h16, v6.h8[7]); dump();
sqdmlsl(s7, h31, v6.h8[7]); dump();
sqdmlsl(s7, h7, v6.h8[7]); dump();
sqdmlsl(s7, h7, v0.h8[7]); dump();
sqdmlsl(s7, h7, v1.h8[7]); dump();
sqdmlsl(s7, h7, v2.h8[7]); dump();
sqdmlsl(s7, h7, v4.h8[7]); dump();
sqdmlsl(s7, h7, v8.h8[7]); dump();
sqdmlsl(s7, h7, v15.h8[7]); dump();
sqdmlsl(s7, h7, v15.h8[0]); dump();
sqdmlsl(s7, h7, v15.h8[1]); dump();
sqdmlsl(s7, h7, v15.h8[2]); dump();
sqdmlsl(s7, h7, v15.h8[4]); dump();
sqdmull(s7, h7, v6.h8[7]); dump();
sqdmull(s0, h7, v6.h8[7]); dump();
sqdmull(s1, h7, v6.h8[7]); dump();
sqdmull(s2, h7, v6.h8[7]); dump();
sqdmull(s4, h7, v6.h8[7]); dump();
sqdmull(s8, h7, v6.h8[7]); dump();
sqdmull(s16, h7, v6.h8[7]); dump();
sqdmull(s31, h7, v6.h8[7]); dump();
sqdmull(s7, h7, v6.h8[7]); dump();
sqdmull(s7, h0, v6.h8[7]); dump();
sqdmull(s7, h1, v6.h8[7]); dump();
sqdmull(s7, h2, v6.h8[7]); dump();
sqdmull(s7, h4, v6.h8[7]); dump();
sqdmull(s7, h8, v6.h8[7]); dump();
sqdmull(s7, h16, v6.h8[7]); dump();
sqdmull(s7, h31, v6.h8[7]); dump();
sqdmull(s7, h7, v6.h8[7]); dump();
sqdmull(s7, h7, v0.h8[7]); dump();
sqdmull(s7, h7, v1.h8[7]); dump();
sqdmull(s7, h7, v2.h8[7]); dump();
sqdmull(s7, h7, v4.h8[7]); dump();
sqdmull(s7, h7, v8.h8[7]); dump();
sqdmull(s7, h7, v15.h8[7]); dump();
sqdmull(s7, h7, v15.h8[0]); dump();
sqdmull(s7, h7, v15.h8[1]); dump();
sqdmull(s7, h7, v15.h8[2]); dump();
sqdmull(s7, h7, v15.h8[4]); dump();
//DataProcSimd_ByElementArithmetic5:1
sqdmlal(d7, s7, v7.s4[3]); dump();
sqdmlal(d0, s7, v7.s4[3]); dump();
sqdmlal(d1, s7, v7.s4[3]); dump();
sqdmlal(d2, s7, v7.s4[3]); dump();
sqdmlal(d4, s7, v7.s4[3]); dump();
sqdmlal(d8, s7, v7.s4[3]); dump();
sqdmlal(d16, s7, v7.s4[3]); dump();
sqdmlal(d31, s7, v7.s4[3]); dump();
sqdmlal(d7, s7, v7.s4[3]); dump();
sqdmlal(d7, s0, v7.s4[3]); dump();
sqdmlal(d7, s1, v7.s4[3]); dump();
sqdmlal(d7, s2, v7.s4[3]); dump();
sqdmlal(d7, s4, v7.s4[3]); dump();
sqdmlal(d7, s8, v7.s4[3]); dump();
sqdmlal(d7, s16, v7.s4[3]); dump();
sqdmlal(d7, s31, v7.s4[3]); dump();
sqdmlal(d7, s7, v7.s4[3]); dump();
sqdmlal(d7, s7, v7s4_3); dump();
sqdmlal(d7, s7, v0.s4[3]); dump();
sqdmlal(d7, s7, v0s4_3); dump();
sqdmlal(d7, s7, v1.s4[3]); dump();
sqdmlal(d7, s7, v1s4_3); dump();
sqdmlal(d7, s7, v2.s4[3]); dump();
sqdmlal(d7, s7, v2s4_3); dump();
sqdmlal(d7, s7, v4.s4[3]); dump();
sqdmlal(d7, s7, v4s4_3); dump();
sqdmlal(d7, s7, v8.s4[3]); dump();
sqdmlal(d7, s7, v8s4_3); dump();
sqdmlal(d7, s7, v16.s4[3]); dump();
sqdmlal(d7, s7, v16s4_3); dump();
sqdmlal(d7, s7, v31.s4[3]); dump();
sqdmlal(d7, s7, v31s4_3); dump();
sqdmlal(d7, s7, v7.s4[0]); dump();
sqdmlal(d7, s7, v7s4_0); dump();
sqdmlal(d7, s7, v7.s4[1]); dump();
sqdmlal(d7, s7, v7s4_1); dump();
sqdmlal(d7, s7, v7.s4[2]); dump();
sqdmlal(d7, s7, v7s4_2); dump();
sqdmlsl(d7, s7, v7.s4[3]); dump();
sqdmlsl(d0, s7, v7.s4[3]); dump();
sqdmlsl(d1, s7, v7.s4[3]); dump();
sqdmlsl(d2, s7, v7.s4[3]); dump();
sqdmlsl(d4, s7, v7.s4[3]); dump();
sqdmlsl(d8, s7, v7.s4[3]); dump();
sqdmlsl(d16, s7, v7.s4[3]); dump();
sqdmlsl(d31, s7, v7.s4[3]); dump();
sqdmlsl(d7, s7, v7.s4[3]); dump();
sqdmlsl(d7, s0, v7.s4[3]); dump();
sqdmlsl(d7, s1, v7.s4[3]); dump();
sqdmlsl(d7, s2, v7.s4[3]); dump();
sqdmlsl(d7, s4, v7.s4[3]); dump();
sqdmlsl(d7, s8, v7.s4[3]); dump();
sqdmlsl(d7, s16, v7.s4[3]); dump();
sqdmlsl(d7, s31, v7.s4[3]); dump();
sqdmlsl(d7, s7, v7.s4[3]); dump();
sqdmlsl(d7, s7, v7s4_3); dump();
sqdmlsl(d7, s7, v0.s4[3]); dump();
sqdmlsl(d7, s7, v0s4_3); dump();
sqdmlsl(d7, s7, v1.s4[3]); dump();
sqdmlsl(d7, s7, v1s4_3); dump();
sqdmlsl(d7, s7, v2.s4[3]); dump();
sqdmlsl(d7, s7, v2s4_3); dump();
sqdmlsl(d7, s7, v4.s4[3]); dump();
sqdmlsl(d7, s7, v4s4_3); dump();
sqdmlsl(d7, s7, v8.s4[3]); dump();
sqdmlsl(d7, s7, v8s4_3); dump();
sqdmlsl(d7, s7, v16.s4[3]); dump();
sqdmlsl(d7, s7, v16s4_3); dump();
sqdmlsl(d7, s7, v31.s4[3]); dump();
sqdmlsl(d7, s7, v31s4_3); dump();
sqdmlsl(d7, s7, v7.s4[0]); dump();
sqdmlsl(d7, s7, v7s4_0); dump();
sqdmlsl(d7, s7, v7.s4[1]); dump();
sqdmlsl(d7, s7, v7s4_1); dump();
sqdmlsl(d7, s7, v7.s4[2]); dump();
sqdmlsl(d7, s7, v7s4_2); dump();
sqdmull(d7, s7, v7.s4[3]); dump();
sqdmull(d0, s7, v7.s4[3]); dump();
sqdmull(d1, s7, v7.s4[3]); dump();
sqdmull(d2, s7, v7.s4[3]); dump();
sqdmull(d4, s7, v7.s4[3]); dump();
sqdmull(d8, s7, v7.s4[3]); dump();
sqdmull(d16, s7, v7.s4[3]); dump();
sqdmull(d31, s7, v7.s4[3]); dump();
sqdmull(d7, s7, v7.s4[3]); dump();
sqdmull(d7, s0, v7.s4[3]); dump();
sqdmull(d7, s1, v7.s4[3]); dump();
sqdmull(d7, s2, v7.s4[3]); dump();
sqdmull(d7, s4, v7.s4[3]); dump();
sqdmull(d7, s8, v7.s4[3]); dump();
sqdmull(d7, s16, v7.s4[3]); dump();
sqdmull(d7, s31, v7.s4[3]); dump();
sqdmull(d7, s7, v7.s4[3]); dump();
sqdmull(d7, s7, v7s4_3); dump();
sqdmull(d7, s7, v0.s4[3]); dump();
sqdmull(d7, s7, v0s4_3); dump();
sqdmull(d7, s7, v1.s4[3]); dump();
sqdmull(d7, s7, v1s4_3); dump();
sqdmull(d7, s7, v2.s4[3]); dump();
sqdmull(d7, s7, v2s4_3); dump();
sqdmull(d7, s7, v4.s4[3]); dump();
sqdmull(d7, s7, v4s4_3); dump();
sqdmull(d7, s7, v8.s4[3]); dump();
sqdmull(d7, s7, v8s4_3); dump();
sqdmull(d7, s7, v16.s4[3]); dump();
sqdmull(d7, s7, v16s4_3); dump();
sqdmull(d7, s7, v31.s4[3]); dump();
sqdmull(d7, s7, v31s4_3); dump();
sqdmull(d7, s7, v7.s4[0]); dump();
sqdmull(d7, s7, v7s4_0); dump();
sqdmull(d7, s7, v7.s4[1]); dump();
sqdmull(d7, s7, v7s4_1); dump();
sqdmull(d7, s7, v7.s4[2]); dump();
sqdmull(d7, s7, v7s4_2); dump();
//DataProcSimd_ByElementArithmetic5:2
sqdmlal(v7.s4, v7.h4, v6.h8[7]); dump();
sqdmlal(v0.s4, v7.h4, v6.h8[7]); dump();
sqdmlal(v1.s4, v7.h4, v6.h8[7]); dump();
sqdmlal(v2.s4, v7.h4, v6.h8[7]); dump();
sqdmlal(v4.s4, v7.h4, v6.h8[7]); dump();
sqdmlal(v8.s4, v7.h4, v6.h8[7]); dump();
sqdmlal(v16.s4, v7.h4, v6.h8[7]); dump();
sqdmlal(v31.s4, v7.h4, v6.h8[7]); dump();
sqdmlal(v7.s4, v7.h4, v6.h8[7]); dump();
sqdmlal(v7.s4, v0.h4, v6.h8[7]); dump();
sqdmlal(v7.s4, v1.h4, v6.h8[7]); dump();
sqdmlal(v7.s4, v2.h4, v6.h8[7]); dump();
sqdmlal(v7.s4, v4.h4, v6.h8[7]); dump();
sqdmlal(v7.s4, v8.h4, v6.h8[7]); dump();
sqdmlal(v7.s4, v16.h4, v6.h8[7]); dump();
sqdmlal(v7.s4, v31.h4, v6.h8[7]); dump();
sqdmlal(v7.s4, v7.h4, v6.h8[7]); dump();
sqdmlal(v7.s4, v7.h4, v0.h8[7]); dump();
sqdmlal(v7.s4, v7.h4, v1.h8[7]); dump();
sqdmlal(v7.s4, v7.h4, v2.h8[7]); dump();
sqdmlal(v7.s4, v7.h4, v4.h8[7]); dump();
sqdmlal(v7.s4, v7.h4, v8.h8[7]); dump();
sqdmlal(v7.s4, v7.h4, v15.h8[7]); dump();
sqdmlal(v7.s4, v7.h4, v15.h8[0]); dump();
sqdmlal(v7.s4, v7.h4, v15.h8[1]); dump();
sqdmlal(v7.s4, v7.h4, v15.h8[2]); dump();
sqdmlal(v7.s4, v7.h4, v15.h8[4]); dump();
sqdmlsl(v7.s4, v7.h4, v6.h8[7]); dump();
sqdmlsl(v0.s4, v7.h4, v6.h8[7]); dump();
sqdmlsl(v1.s4, v7.h4, v6.h8[7]); dump();
sqdmlsl(v2.s4, v7.h4, v6.h8[7]); dump();
sqdmlsl(v4.s4, v7.h4, v6.h8[7]); dump();
sqdmlsl(v8.s4, v7.h4, v6.h8[7]); dump();
sqdmlsl(v16.s4, v7.h4, v6.h8[7]); dump();
sqdmlsl(v31.s4, v7.h4, v6.h8[7]); dump();
sqdmlsl(v7.s4, v7.h4, v6.h8[7]); dump();
sqdmlsl(v7.s4, v0.h4, v6.h8[7]); dump();
sqdmlsl(v7.s4, v1.h4, v6.h8[7]); dump();
sqdmlsl(v7.s4, v2.h4, v6.h8[7]); dump();
sqdmlsl(v7.s4, v4.h4, v6.h8[7]); dump();
sqdmlsl(v7.s4, v8.h4, v6.h8[7]); dump();
sqdmlsl(v7.s4, v16.h4, v6.h8[7]); dump();
sqdmlsl(v7.s4, v31.h4, v6.h8[7]); dump();
sqdmlsl(v7.s4, v7.h4, v6.h8[7]); dump();
sqdmlsl(v7.s4, v7.h4, v0.h8[7]); dump();
sqdmlsl(v7.s4, v7.h4, v1.h8[7]); dump();
sqdmlsl(v7.s4, v7.h4, v2.h8[7]); dump();
sqdmlsl(v7.s4, v7.h4, v4.h8[7]); dump();
sqdmlsl(v7.s4, v7.h4, v8.h8[7]); dump();
sqdmlsl(v7.s4, v7.h4, v15.h8[7]); dump();
sqdmlsl(v7.s4, v7.h4, v15.h8[0]); dump();
sqdmlsl(v7.s4, v7.h4, v15.h8[1]); dump();
sqdmlsl(v7.s4, v7.h4, v15.h8[2]); dump();
sqdmlsl(v7.s4, v7.h4, v15.h8[4]); dump();
sqdmull(v7.s4, v7.h4, v6.h8[7]); dump();
sqdmull(v0.s4, v7.h4, v6.h8[7]); dump();
sqdmull(v1.s4, v7.h4, v6.h8[7]); dump();
sqdmull(v2.s4, v7.h4, v6.h8[7]); dump();
sqdmull(v4.s4, v7.h4, v6.h8[7]); dump();
sqdmull(v8.s4, v7.h4, v6.h8[7]); dump();
sqdmull(v16.s4, v7.h4, v6.h8[7]); dump();
sqdmull(v31.s4, v7.h4, v6.h8[7]); dump();
sqdmull(v7.s4, v7.h4, v6.h8[7]); dump();
sqdmull(v7.s4, v0.h4, v6.h8[7]); dump();
sqdmull(v7.s4, v1.h4, v6.h8[7]); dump();
sqdmull(v7.s4, v2.h4, v6.h8[7]); dump();
sqdmull(v7.s4, v4.h4, v6.h8[7]); dump();
sqdmull(v7.s4, v8.h4, v6.h8[7]); dump();
sqdmull(v7.s4, v16.h4, v6.h8[7]); dump();
sqdmull(v7.s4, v31.h4, v6.h8[7]); dump();
sqdmull(v7.s4, v7.h4, v6.h8[7]); dump();
sqdmull(v7.s4, v7.h4, v0.h8[7]); dump();
sqdmull(v7.s4, v7.h4, v1.h8[7]); dump();
sqdmull(v7.s4, v7.h4, v2.h8[7]); dump();
sqdmull(v7.s4, v7.h4, v4.h8[7]); dump();
sqdmull(v7.s4, v7.h4, v8.h8[7]); dump();
sqdmull(v7.s4, v7.h4, v15.h8[7]); dump();
sqdmull(v7.s4, v7.h4, v15.h8[0]); dump();
sqdmull(v7.s4, v7.h4, v15.h8[1]); dump();
sqdmull(v7.s4, v7.h4, v15.h8[2]); dump();
sqdmull(v7.s4, v7.h4, v15.h8[4]); dump();
//DataProcSimd_ByElementArithmetic5:3
sqdmlal(v7.d2, v7.s2, v7.s4[3]); dump();
sqdmlal(v0.d2, v7.s2, v7.s4[3]); dump();
sqdmlal(v1.d2, v7.s2, v7.s4[3]); dump();
sqdmlal(v2.d2, v7.s2, v7.s4[3]); dump();
sqdmlal(v4.d2, v7.s2, v7.s4[3]); dump();
sqdmlal(v8.d2, v7.s2, v7.s4[3]); dump();
sqdmlal(v16.d2, v7.s2, v7.s4[3]); dump();
sqdmlal(v31.d2, v7.s2, v7.s4[3]); dump();
sqdmlal(v7.d2, v7.s2, v7.s4[3]); dump();
sqdmlal(v7.d2, v0.s2, v7.s4[3]); dump();
sqdmlal(v7.d2, v1.s2, v7.s4[3]); dump();
sqdmlal(v7.d2, v2.s2, v7.s4[3]); dump();
sqdmlal(v7.d2, v4.s2, v7.s4[3]); dump();
sqdmlal(v7.d2, v8.s2, v7.s4[3]); dump();
sqdmlal(v7.d2, v16.s2, v7.s4[3]); dump();
sqdmlal(v7.d2, v31.s2, v7.s4[3]); dump();
sqdmlal(v7.d2, v7.s2, v7.s4[3]); dump();
sqdmlal(v7.d2, v7.s2, v7s4_3); dump();
sqdmlal(v7.d2, v7.s2, v0.s4[3]); dump();
sqdmlal(v7.d2, v7.s2, v0s4_3); dump();
sqdmlal(v7.d2, v7.s2, v1.s4[3]); dump();
sqdmlal(v7.d2, v7.s2, v1s4_3); dump();
sqdmlal(v7.d2, v7.s2, v2.s4[3]); dump();
sqdmlal(v7.d2, v7.s2, v2s4_3); dump();
sqdmlal(v7.d2, v7.s2, v4.s4[3]); dump();
sqdmlal(v7.d2, v7.s2, v4s4_3); dump();
sqdmlal(v7.d2, v7.s2, v8.s4[3]); dump();
sqdmlal(v7.d2, v7.s2, v8s4_3); dump();
sqdmlal(v7.d2, v7.s2, v16.s4[3]); dump();
sqdmlal(v7.d2, v7.s2, v16s4_3); dump();
sqdmlal(v7.d2, v7.s2, v31.s4[3]); dump();
sqdmlal(v7.d2, v7.s2, v31s4_3); dump();
sqdmlal(v7.d2, v7.s2, v7.s4[0]); dump();
sqdmlal(v7.d2, v7.s2, v7s4_0); dump();
sqdmlal(v7.d2, v7.s2, v7.s4[1]); dump();
sqdmlal(v7.d2, v7.s2, v7s4_1); dump();
sqdmlal(v7.d2, v7.s2, v7.s4[2]); dump();
sqdmlal(v7.d2, v7.s2, v7s4_2); dump();
sqdmlsl(v7.d2, v7.s2, v7.s4[3]); dump();
sqdmlsl(v0.d2, v7.s2, v7.s4[3]); dump();
sqdmlsl(v1.d2, v7.s2, v7.s4[3]); dump();
sqdmlsl(v2.d2, v7.s2, v7.s4[3]); dump();
sqdmlsl(v4.d2, v7.s2, v7.s4[3]); dump();
sqdmlsl(v8.d2, v7.s2, v7.s4[3]); dump();
sqdmlsl(v16.d2, v7.s2, v7.s4[3]); dump();
sqdmlsl(v31.d2, v7.s2, v7.s4[3]); dump();
sqdmlsl(v7.d2, v7.s2, v7.s4[3]); dump();
sqdmlsl(v7.d2, v0.s2, v7.s4[3]); dump();
sqdmlsl(v7.d2, v1.s2, v7.s4[3]); dump();
sqdmlsl(v7.d2, v2.s2, v7.s4[3]); dump();
sqdmlsl(v7.d2, v4.s2, v7.s4[3]); dump();
sqdmlsl(v7.d2, v8.s2, v7.s4[3]); dump();
sqdmlsl(v7.d2, v16.s2, v7.s4[3]); dump();
sqdmlsl(v7.d2, v31.s2, v7.s4[3]); dump();
sqdmlsl(v7.d2, v7.s2, v7.s4[3]); dump();
sqdmlsl(v7.d2, v7.s2, v7s4_3); dump();
sqdmlsl(v7.d2, v7.s2, v0.s4[3]); dump();
sqdmlsl(v7.d2, v7.s2, v0s4_3); dump();
sqdmlsl(v7.d2, v7.s2, v1.s4[3]); dump();
sqdmlsl(v7.d2, v7.s2, v1s4_3); dump();
sqdmlsl(v7.d2, v7.s2, v2.s4[3]); dump();
sqdmlsl(v7.d2, v7.s2, v2s4_3); dump();
sqdmlsl(v7.d2, v7.s2, v4.s4[3]); dump();
sqdmlsl(v7.d2, v7.s2, v4s4_3); dump();
sqdmlsl(v7.d2, v7.s2, v8.s4[3]); dump();
sqdmlsl(v7.d2, v7.s2, v8s4_3); dump();
sqdmlsl(v7.d2, v7.s2, v16.s4[3]); dump();
sqdmlsl(v7.d2, v7.s2, v16s4_3); dump();
sqdmlsl(v7.d2, v7.s2, v31.s4[3]); dump();
sqdmlsl(v7.d2, v7.s2, v31s4_3); dump();
sqdmlsl(v7.d2, v7.s2, v7.s4[0]); dump();
sqdmlsl(v7.d2, v7.s2, v7s4_0); dump();
sqdmlsl(v7.d2, v7.s2, v7.s4[1]); dump();
sqdmlsl(v7.d2, v7.s2, v7s4_1); dump();
sqdmlsl(v7.d2, v7.s2, v7.s4[2]); dump();
sqdmlsl(v7.d2, v7.s2, v7s4_2); dump();
sqdmull(v7.d2, v7.s2, v7.s4[3]); dump();
sqdmull(v0.d2, v7.s2, v7.s4[3]); dump();
sqdmull(v1.d2, v7.s2, v7.s4[3]); dump();
sqdmull(v2.d2, v7.s2, v7.s4[3]); dump();
sqdmull(v4.d2, v7.s2, v7.s4[3]); dump();
sqdmull(v8.d2, v7.s2, v7.s4[3]); dump();
sqdmull(v16.d2, v7.s2, v7.s4[3]); dump();
sqdmull(v31.d2, v7.s2, v7.s4[3]); dump();
sqdmull(v7.d2, v7.s2, v7.s4[3]); dump();
sqdmull(v7.d2, v0.s2, v7.s4[3]); dump();
sqdmull(v7.d2, v1.s2, v7.s4[3]); dump();
sqdmull(v7.d2, v2.s2, v7.s4[3]); dump();
sqdmull(v7.d2, v4.s2, v7.s4[3]); dump();
sqdmull(v7.d2, v8.s2, v7.s4[3]); dump();
sqdmull(v7.d2, v16.s2, v7.s4[3]); dump();
sqdmull(v7.d2, v31.s2, v7.s4[3]); dump();
sqdmull(v7.d2, v7.s2, v7.s4[3]); dump();
sqdmull(v7.d2, v7.s2, v7s4_3); dump();
sqdmull(v7.d2, v7.s2, v0.s4[3]); dump();
sqdmull(v7.d2, v7.s2, v0s4_3); dump();
sqdmull(v7.d2, v7.s2, v1.s4[3]); dump();
sqdmull(v7.d2, v7.s2, v1s4_3); dump();
sqdmull(v7.d2, v7.s2, v2.s4[3]); dump();
sqdmull(v7.d2, v7.s2, v2s4_3); dump();
sqdmull(v7.d2, v7.s2, v4.s4[3]); dump();
sqdmull(v7.d2, v7.s2, v4s4_3); dump();
sqdmull(v7.d2, v7.s2, v8.s4[3]); dump();
sqdmull(v7.d2, v7.s2, v8s4_3); dump();
sqdmull(v7.d2, v7.s2, v16.s4[3]); dump();
sqdmull(v7.d2, v7.s2, v16s4_3); dump();
sqdmull(v7.d2, v7.s2, v31.s4[3]); dump();
sqdmull(v7.d2, v7.s2, v31s4_3); dump();
sqdmull(v7.d2, v7.s2, v7.s4[0]); dump();
sqdmull(v7.d2, v7.s2, v7s4_0); dump();
sqdmull(v7.d2, v7.s2, v7.s4[1]); dump();
sqdmull(v7.d2, v7.s2, v7s4_1); dump();
sqdmull(v7.d2, v7.s2, v7.s4[2]); dump();
sqdmull(v7.d2, v7.s2, v7s4_2); dump();
//DataProcSimd_ByElementArithmetic6:0
sqdmlal2(v7.s4, v7.h8, v6.h8[7]); dump();
sqdmlal2(v0.s4, v7.h8, v6.h8[7]); dump();
sqdmlal2(v1.s4, v7.h8, v6.h8[7]); dump();
sqdmlal2(v2.s4, v7.h8, v6.h8[7]); dump();
sqdmlal2(v4.s4, v7.h8, v6.h8[7]); dump();
sqdmlal2(v8.s4, v7.h8, v6.h8[7]); dump();
sqdmlal2(v16.s4, v7.h8, v6.h8[7]); dump();
sqdmlal2(v31.s4, v7.h8, v6.h8[7]); dump();
sqdmlal2(v7.s4, v7.h8, v6.h8[7]); dump();
sqdmlal2(v7.s4, v0.h8, v6.h8[7]); dump();
sqdmlal2(v7.s4, v1.h8, v6.h8[7]); dump();
sqdmlal2(v7.s4, v2.h8, v6.h8[7]); dump();
sqdmlal2(v7.s4, v4.h8, v6.h8[7]); dump();
sqdmlal2(v7.s4, v8.h8, v6.h8[7]); dump();
sqdmlal2(v7.s4, v16.h8, v6.h8[7]); dump();
sqdmlal2(v7.s4, v31.h8, v6.h8[7]); dump();
sqdmlal2(v7.s4, v7.h8, v6.h8[7]); dump();
sqdmlal2(v7.s4, v7.h8, v0.h8[7]); dump();
sqdmlal2(v7.s4, v7.h8, v1.h8[7]); dump();
sqdmlal2(v7.s4, v7.h8, v2.h8[7]); dump();
sqdmlal2(v7.s4, v7.h8, v4.h8[7]); dump();
sqdmlal2(v7.s4, v7.h8, v8.h8[7]); dump();
sqdmlal2(v7.s4, v7.h8, v15.h8[7]); dump();
sqdmlal2(v7.s4, v7.h8, v15.h8[0]); dump();
sqdmlal2(v7.s4, v7.h8, v15.h8[1]); dump();
sqdmlal2(v7.s4, v7.h8, v15.h8[2]); dump();
sqdmlal2(v7.s4, v7.h8, v15.h8[4]); dump();
sqdmlsl2(v7.s4, v7.h8, v6.h8[7]); dump();
sqdmlsl2(v0.s4, v7.h8, v6.h8[7]); dump();
sqdmlsl2(v1.s4, v7.h8, v6.h8[7]); dump();
sqdmlsl2(v2.s4, v7.h8, v6.h8[7]); dump();
sqdmlsl2(v4.s4, v7.h8, v6.h8[7]); dump();
sqdmlsl2(v8.s4, v7.h8, v6.h8[7]); dump();
sqdmlsl2(v16.s4, v7.h8, v6.h8[7]); dump();
sqdmlsl2(v31.s4, v7.h8, v6.h8[7]); dump();
sqdmlsl2(v7.s4, v7.h8, v6.h8[7]); dump();
sqdmlsl2(v7.s4, v0.h8, v6.h8[7]); dump();
sqdmlsl2(v7.s4, v1.h8, v6.h8[7]); dump();
sqdmlsl2(v7.s4, v2.h8, v6.h8[7]); dump();
sqdmlsl2(v7.s4, v4.h8, v6.h8[7]); dump();
sqdmlsl2(v7.s4, v8.h8, v6.h8[7]); dump();
sqdmlsl2(v7.s4, v16.h8, v6.h8[7]); dump();
sqdmlsl2(v7.s4, v31.h8, v6.h8[7]); dump();
sqdmlsl2(v7.s4, v7.h8, v6.h8[7]); dump();
sqdmlsl2(v7.s4, v7.h8, v0.h8[7]); dump();
sqdmlsl2(v7.s4, v7.h8, v1.h8[7]); dump();
sqdmlsl2(v7.s4, v7.h8, v2.h8[7]); dump();
sqdmlsl2(v7.s4, v7.h8, v4.h8[7]); dump();
sqdmlsl2(v7.s4, v7.h8, v8.h8[7]); dump();
sqdmlsl2(v7.s4, v7.h8, v15.h8[7]); dump();
sqdmlsl2(v7.s4, v7.h8, v15.h8[0]); dump();
sqdmlsl2(v7.s4, v7.h8, v15.h8[1]); dump();
sqdmlsl2(v7.s4, v7.h8, v15.h8[2]); dump();
sqdmlsl2(v7.s4, v7.h8, v15.h8[4]); dump();
sqdmull2(v7.s4, v7.h8, v6.h8[7]); dump();
sqdmull2(v0.s4, v7.h8, v6.h8[7]); dump();
sqdmull2(v1.s4, v7.h8, v6.h8[7]); dump();
sqdmull2(v2.s4, v7.h8, v6.h8[7]); dump();
sqdmull2(v4.s4, v7.h8, v6.h8[7]); dump();
sqdmull2(v8.s4, v7.h8, v6.h8[7]); dump();
sqdmull2(v16.s4, v7.h8, v6.h8[7]); dump();
sqdmull2(v31.s4, v7.h8, v6.h8[7]); dump();
sqdmull2(v7.s4, v7.h8, v6.h8[7]); dump();
sqdmull2(v7.s4, v0.h8, v6.h8[7]); dump();
sqdmull2(v7.s4, v1.h8, v6.h8[7]); dump();
sqdmull2(v7.s4, v2.h8, v6.h8[7]); dump();
sqdmull2(v7.s4, v4.h8, v6.h8[7]); dump();
sqdmull2(v7.s4, v8.h8, v6.h8[7]); dump();
sqdmull2(v7.s4, v16.h8, v6.h8[7]); dump();
sqdmull2(v7.s4, v31.h8, v6.h8[7]); dump();
sqdmull2(v7.s4, v7.h8, v6.h8[7]); dump();
sqdmull2(v7.s4, v7.h8, v0.h8[7]); dump();
sqdmull2(v7.s4, v7.h8, v1.h8[7]); dump();
sqdmull2(v7.s4, v7.h8, v2.h8[7]); dump();
sqdmull2(v7.s4, v7.h8, v4.h8[7]); dump();
sqdmull2(v7.s4, v7.h8, v8.h8[7]); dump();
sqdmull2(v7.s4, v7.h8, v15.h8[7]); dump();
sqdmull2(v7.s4, v7.h8, v15.h8[0]); dump();
sqdmull2(v7.s4, v7.h8, v15.h8[1]); dump();
sqdmull2(v7.s4, v7.h8, v15.h8[2]); dump();
sqdmull2(v7.s4, v7.h8, v15.h8[4]); dump();
//DataProcSimd_ByElementArithmetic6:1
sqdmlal2(v7.d2, v7.s4, v7.s4[3]); dump();
sqdmlal2(v0.d2, v7.s4, v7.s4[3]); dump();
sqdmlal2(v1.d2, v7.s4, v7.s4[3]); dump();
sqdmlal2(v2.d2, v7.s4, v7.s4[3]); dump();
sqdmlal2(v4.d2, v7.s4, v7.s4[3]); dump();
sqdmlal2(v8.d2, v7.s4, v7.s4[3]); dump();
sqdmlal2(v16.d2, v7.s4, v7.s4[3]); dump();
sqdmlal2(v31.d2, v7.s4, v7.s4[3]); dump();
sqdmlal2(v7.d2, v7.s4, v7.s4[3]); dump();
sqdmlal2(v7.d2, v0.s4, v7.s4[3]); dump();
sqdmlal2(v7.d2, v1.s4, v7.s4[3]); dump();
sqdmlal2(v7.d2, v2.s4, v7.s4[3]); dump();
sqdmlal2(v7.d2, v4.s4, v7.s4[3]); dump();
sqdmlal2(v7.d2, v8.s4, v7.s4[3]); dump();
sqdmlal2(v7.d2, v16.s4, v7.s4[3]); dump();
sqdmlal2(v7.d2, v31.s4, v7.s4[3]); dump();
sqdmlal2(v7.d2, v7.s4, v7.s4[3]); dump();
sqdmlal2(v7.d2, v7.s4, v7s4_3); dump();
sqdmlal2(v7.d2, v7.s4, v0.s4[3]); dump();
sqdmlal2(v7.d2, v7.s4, v0s4_3); dump();
sqdmlal2(v7.d2, v7.s4, v1.s4[3]); dump();
sqdmlal2(v7.d2, v7.s4, v1s4_3); dump();
sqdmlal2(v7.d2, v7.s4, v2.s4[3]); dump();
sqdmlal2(v7.d2, v7.s4, v2s4_3); dump();
sqdmlal2(v7.d2, v7.s4, v4.s4[3]); dump();
sqdmlal2(v7.d2, v7.s4, v4s4_3); dump();
sqdmlal2(v7.d2, v7.s4, v8.s4[3]); dump();
sqdmlal2(v7.d2, v7.s4, v8s4_3); dump();
sqdmlal2(v7.d2, v7.s4, v16.s4[3]); dump();
sqdmlal2(v7.d2, v7.s4, v16s4_3); dump();
sqdmlal2(v7.d2, v7.s4, v31.s4[3]); dump();
sqdmlal2(v7.d2, v7.s4, v31s4_3); dump();
sqdmlal2(v7.d2, v7.s4, v7.s4[0]); dump();
sqdmlal2(v7.d2, v7.s4, v7s4_0); dump();
sqdmlal2(v7.d2, v7.s4, v7.s4[1]); dump();
sqdmlal2(v7.d2, v7.s4, v7s4_1); dump();
sqdmlal2(v7.d2, v7.s4, v7.s4[2]); dump();
sqdmlal2(v7.d2, v7.s4, v7s4_2); dump();
sqdmlsl2(v7.d2, v7.s4, v7.s4[3]); dump();
sqdmlsl2(v0.d2, v7.s4, v7.s4[3]); dump();
sqdmlsl2(v1.d2, v7.s4, v7.s4[3]); dump();
sqdmlsl2(v2.d2, v7.s4, v7.s4[3]); dump();
sqdmlsl2(v4.d2, v7.s4, v7.s4[3]); dump();
sqdmlsl2(v8.d2, v7.s4, v7.s4[3]); dump();
sqdmlsl2(v16.d2, v7.s4, v7.s4[3]); dump();
sqdmlsl2(v31.d2, v7.s4, v7.s4[3]); dump();
sqdmlsl2(v7.d2, v7.s4, v7.s4[3]); dump();
sqdmlsl2(v7.d2, v0.s4, v7.s4[3]); dump();
sqdmlsl2(v7.d2, v1.s4, v7.s4[3]); dump();
sqdmlsl2(v7.d2, v2.s4, v7.s4[3]); dump();
sqdmlsl2(v7.d2, v4.s4, v7.s4[3]); dump();
sqdmlsl2(v7.d2, v8.s4, v7.s4[3]); dump();
sqdmlsl2(v7.d2, v16.s4, v7.s4[3]); dump();
sqdmlsl2(v7.d2, v31.s4, v7.s4[3]); dump();
sqdmlsl2(v7.d2, v7.s4, v7.s4[3]); dump();
sqdmlsl2(v7.d2, v7.s4, v7s4_3); dump();
sqdmlsl2(v7.d2, v7.s4, v0.s4[3]); dump();
sqdmlsl2(v7.d2, v7.s4, v0s4_3); dump();
sqdmlsl2(v7.d2, v7.s4, v1.s4[3]); dump();
sqdmlsl2(v7.d2, v7.s4, v1s4_3); dump();
sqdmlsl2(v7.d2, v7.s4, v2.s4[3]); dump();
sqdmlsl2(v7.d2, v7.s4, v2s4_3); dump();
sqdmlsl2(v7.d2, v7.s4, v4.s4[3]); dump();
sqdmlsl2(v7.d2, v7.s4, v4s4_3); dump();
sqdmlsl2(v7.d2, v7.s4, v8.s4[3]); dump();
sqdmlsl2(v7.d2, v7.s4, v8s4_3); dump();
sqdmlsl2(v7.d2, v7.s4, v16.s4[3]); dump();
sqdmlsl2(v7.d2, v7.s4, v16s4_3); dump();
sqdmlsl2(v7.d2, v7.s4, v31.s4[3]); dump();
sqdmlsl2(v7.d2, v7.s4, v31s4_3); dump();
sqdmlsl2(v7.d2, v7.s4, v7.s4[0]); dump();
sqdmlsl2(v7.d2, v7.s4, v7s4_0); dump();
sqdmlsl2(v7.d2, v7.s4, v7.s4[1]); dump();
sqdmlsl2(v7.d2, v7.s4, v7s4_1); dump();
sqdmlsl2(v7.d2, v7.s4, v7.s4[2]); dump();
sqdmlsl2(v7.d2, v7.s4, v7s4_2); dump();
sqdmull2(v7.d2, v7.s4, v7.s4[3]); dump();
sqdmull2(v0.d2, v7.s4, v7.s4[3]); dump();
sqdmull2(v1.d2, v7.s4, v7.s4[3]); dump();
sqdmull2(v2.d2, v7.s4, v7.s4[3]); dump();
sqdmull2(v4.d2, v7.s4, v7.s4[3]); dump();
sqdmull2(v8.d2, v7.s4, v7.s4[3]); dump();
sqdmull2(v16.d2, v7.s4, v7.s4[3]); dump();
sqdmull2(v31.d2, v7.s4, v7.s4[3]); dump();
sqdmull2(v7.d2, v7.s4, v7.s4[3]); dump();
sqdmull2(v7.d2, v0.s4, v7.s4[3]); dump();
sqdmull2(v7.d2, v1.s4, v7.s4[3]); dump();
sqdmull2(v7.d2, v2.s4, v7.s4[3]); dump();
sqdmull2(v7.d2, v4.s4, v7.s4[3]); dump();
sqdmull2(v7.d2, v8.s4, v7.s4[3]); dump();
sqdmull2(v7.d2, v16.s4, v7.s4[3]); dump();
sqdmull2(v7.d2, v31.s4, v7.s4[3]); dump();
sqdmull2(v7.d2, v7.s4, v7.s4[3]); dump();
sqdmull2(v7.d2, v7.s4, v7s4_3); dump();
sqdmull2(v7.d2, v7.s4, v0.s4[3]); dump();
sqdmull2(v7.d2, v7.s4, v0s4_3); dump();
sqdmull2(v7.d2, v7.s4, v1.s4[3]); dump();
sqdmull2(v7.d2, v7.s4, v1s4_3); dump();
sqdmull2(v7.d2, v7.s4, v2.s4[3]); dump();
sqdmull2(v7.d2, v7.s4, v2s4_3); dump();
sqdmull2(v7.d2, v7.s4, v4.s4[3]); dump();
sqdmull2(v7.d2, v7.s4, v4s4_3); dump();
sqdmull2(v7.d2, v7.s4, v8.s4[3]); dump();
sqdmull2(v7.d2, v7.s4, v8s4_3); dump();
sqdmull2(v7.d2, v7.s4, v16.s4[3]); dump();
sqdmull2(v7.d2, v7.s4, v16s4_3); dump();
sqdmull2(v7.d2, v7.s4, v31.s4[3]); dump();
sqdmull2(v7.d2, v7.s4, v31s4_3); dump();
sqdmull2(v7.d2, v7.s4, v7.s4[0]); dump();
sqdmull2(v7.d2, v7.s4, v7s4_0); dump();
sqdmull2(v7.d2, v7.s4, v7.s4[1]); dump();
sqdmull2(v7.d2, v7.s4, v7s4_1); dump();
sqdmull2(v7.d2, v7.s4, v7.s4[2]); dump();
sqdmull2(v7.d2, v7.s4, v7s4_2); dump();
//DataProcSimd_ByElementArithmetic7:0
sqdmulh(h7, h7, v6.h8[7]); dump();
sqdmulh(h0, h7, v6.h8[7]); dump();
sqdmulh(h1, h7, v6.h8[7]); dump();
sqdmulh(h2, h7, v6.h8[7]); dump();
sqdmulh(h4, h7, v6.h8[7]); dump();
sqdmulh(h8, h7, v6.h8[7]); dump();
sqdmulh(h16, h7, v6.h8[7]); dump();
sqdmulh(h31, h7, v6.h8[7]); dump();
sqdmulh(h7, h7, v6.h8[7]); dump();
sqdmulh(h7, h0, v6.h8[7]); dump();
sqdmulh(h7, h1, v6.h8[7]); dump();
sqdmulh(h7, h2, v6.h8[7]); dump();
sqdmulh(h7, h4, v6.h8[7]); dump();
sqdmulh(h7, h8, v6.h8[7]); dump();
sqdmulh(h7, h16, v6.h8[7]); dump();
sqdmulh(h7, h31, v6.h8[7]); dump();
sqdmulh(h7, h7, v6.h8[7]); dump();
sqdmulh(h7, h7, v0.h8[7]); dump();
sqdmulh(h7, h7, v1.h8[7]); dump();
sqdmulh(h7, h7, v2.h8[7]); dump();
sqdmulh(h7, h7, v4.h8[7]); dump();
sqdmulh(h7, h7, v8.h8[7]); dump();
sqdmulh(h7, h7, v15.h8[7]); dump();
sqdmulh(h7, h7, v15.h8[0]); dump();
sqdmulh(h7, h7, v15.h8[1]); dump();
sqdmulh(h7, h7, v15.h8[2]); dump();
sqdmulh(h7, h7, v15.h8[4]); dump();
sqrdmlsh(h7, h7, v6.h8[7]); dump();
sqrdmlsh(h0, h7, v6.h8[7]); dump();
sqrdmlsh(h1, h7, v6.h8[7]); dump();
sqrdmlsh(h2, h7, v6.h8[7]); dump();
sqrdmlsh(h4, h7, v6.h8[7]); dump();
sqrdmlsh(h8, h7, v6.h8[7]); dump();
sqrdmlsh(h16, h7, v6.h8[7]); dump();
sqrdmlsh(h31, h7, v6.h8[7]); dump();
sqrdmlsh(h7, h7, v6.h8[7]); dump();
sqrdmlsh(h7, h0, v6.h8[7]); dump();
sqrdmlsh(h7, h1, v6.h8[7]); dump();
sqrdmlsh(h7, h2, v6.h8[7]); dump();
sqrdmlsh(h7, h4, v6.h8[7]); dump();
sqrdmlsh(h7, h8, v6.h8[7]); dump();
sqrdmlsh(h7, h16, v6.h8[7]); dump();
sqrdmlsh(h7, h31, v6.h8[7]); dump();
sqrdmlsh(h7, h7, v6.h8[7]); dump();
sqrdmlsh(h7, h7, v0.h8[7]); dump();
sqrdmlsh(h7, h7, v1.h8[7]); dump();
sqrdmlsh(h7, h7, v2.h8[7]); dump();
sqrdmlsh(h7, h7, v4.h8[7]); dump();
sqrdmlsh(h7, h7, v8.h8[7]); dump();
sqrdmlsh(h7, h7, v15.h8[7]); dump();
sqrdmlsh(h7, h7, v15.h8[0]); dump();
sqrdmlsh(h7, h7, v15.h8[1]); dump();
sqrdmlsh(h7, h7, v15.h8[2]); dump();
sqrdmlsh(h7, h7, v15.h8[4]); dump();
sqrdmulh(h7, h7, v6.h8[7]); dump();
sqrdmulh(h0, h7, v6.h8[7]); dump();
sqrdmulh(h1, h7, v6.h8[7]); dump();
sqrdmulh(h2, h7, v6.h8[7]); dump();
sqrdmulh(h4, h7, v6.h8[7]); dump();
sqrdmulh(h8, h7, v6.h8[7]); dump();
sqrdmulh(h16, h7, v6.h8[7]); dump();
sqrdmulh(h31, h7, v6.h8[7]); dump();
sqrdmulh(h7, h7, v6.h8[7]); dump();
sqrdmulh(h7, h0, v6.h8[7]); dump();
sqrdmulh(h7, h1, v6.h8[7]); dump();
sqrdmulh(h7, h2, v6.h8[7]); dump();
sqrdmulh(h7, h4, v6.h8[7]); dump();
sqrdmulh(h7, h8, v6.h8[7]); dump();
sqrdmulh(h7, h16, v6.h8[7]); dump();
sqrdmulh(h7, h31, v6.h8[7]); dump();
sqrdmulh(h7, h7, v6.h8[7]); dump();
sqrdmulh(h7, h7, v0.h8[7]); dump();
sqrdmulh(h7, h7, v1.h8[7]); dump();
sqrdmulh(h7, h7, v2.h8[7]); dump();
sqrdmulh(h7, h7, v4.h8[7]); dump();
sqrdmulh(h7, h7, v8.h8[7]); dump();
sqrdmulh(h7, h7, v15.h8[7]); dump();
sqrdmulh(h7, h7, v15.h8[0]); dump();
sqrdmulh(h7, h7, v15.h8[1]); dump();
sqrdmulh(h7, h7, v15.h8[2]); dump();
sqrdmulh(h7, h7, v15.h8[4]); dump();
//DataProcSimd_ByElementArithmetic7:1
sqdmulh(s7, s7, v7.s4[3]); dump();
sqdmulh(s0, s7, v7.s4[3]); dump();
sqdmulh(s1, s7, v7.s4[3]); dump();
sqdmulh(s2, s7, v7.s4[3]); dump();
sqdmulh(s4, s7, v7.s4[3]); dump();
sqdmulh(s8, s7, v7.s4[3]); dump();
sqdmulh(s16, s7, v7.s4[3]); dump();
sqdmulh(s31, s7, v7.s4[3]); dump();
sqdmulh(s7, s7, v7.s4[3]); dump();
sqdmulh(s7, s0, v7.s4[3]); dump();
sqdmulh(s7, s1, v7.s4[3]); dump();
sqdmulh(s7, s2, v7.s4[3]); dump();
sqdmulh(s7, s4, v7.s4[3]); dump();
sqdmulh(s7, s8, v7.s4[3]); dump();
sqdmulh(s7, s16, v7.s4[3]); dump();
sqdmulh(s7, s31, v7.s4[3]); dump();
sqdmulh(s7, s7, v7.s4[3]); dump();
sqdmulh(s7, s7, v7s4_3); dump();
sqdmulh(s7, s7, v0.s4[3]); dump();
sqdmulh(s7, s7, v0s4_3); dump();
sqdmulh(s7, s7, v1.s4[3]); dump();
sqdmulh(s7, s7, v1s4_3); dump();
sqdmulh(s7, s7, v2.s4[3]); dump();
sqdmulh(s7, s7, v2s4_3); dump();
sqdmulh(s7, s7, v4.s4[3]); dump();
sqdmulh(s7, s7, v4s4_3); dump();
sqdmulh(s7, s7, v8.s4[3]); dump();
sqdmulh(s7, s7, v8s4_3); dump();
sqdmulh(s7, s7, v16.s4[3]); dump();
sqdmulh(s7, s7, v16s4_3); dump();
sqdmulh(s7, s7, v31.s4[3]); dump();
sqdmulh(s7, s7, v31s4_3); dump();
sqdmulh(s7, s7, v7.s4[0]); dump();
sqdmulh(s7, s7, v7s4_0); dump();
sqdmulh(s7, s7, v7.s4[1]); dump();
sqdmulh(s7, s7, v7s4_1); dump();
sqdmulh(s7, s7, v7.s4[2]); dump();
sqdmulh(s7, s7, v7s4_2); dump();
sqrdmlsh(s7, s7, v7.s4[3]); dump();
sqrdmlsh(s0, s7, v7.s4[3]); dump();
sqrdmlsh(s1, s7, v7.s4[3]); dump();
sqrdmlsh(s2, s7, v7.s4[3]); dump();
sqrdmlsh(s4, s7, v7.s4[3]); dump();
sqrdmlsh(s8, s7, v7.s4[3]); dump();
sqrdmlsh(s16, s7, v7.s4[3]); dump();
sqrdmlsh(s31, s7, v7.s4[3]); dump();
sqrdmlsh(s7, s7, v7.s4[3]); dump();
sqrdmlsh(s7, s0, v7.s4[3]); dump();
sqrdmlsh(s7, s1, v7.s4[3]); dump();
sqrdmlsh(s7, s2, v7.s4[3]); dump();
sqrdmlsh(s7, s4, v7.s4[3]); dump();
sqrdmlsh(s7, s8, v7.s4[3]); dump();
sqrdmlsh(s7, s16, v7.s4[3]); dump();
sqrdmlsh(s7, s31, v7.s4[3]); dump();
sqrdmlsh(s7, s7, v7.s4[3]); dump();
sqrdmlsh(s7, s7, v7s4_3); dump();
sqrdmlsh(s7, s7, v0.s4[3]); dump();
sqrdmlsh(s7, s7, v0s4_3); dump();
sqrdmlsh(s7, s7, v1.s4[3]); dump();
sqrdmlsh(s7, s7, v1s4_3); dump();
sqrdmlsh(s7, s7, v2.s4[3]); dump();
sqrdmlsh(s7, s7, v2s4_3); dump();
sqrdmlsh(s7, s7, v4.s4[3]); dump();
sqrdmlsh(s7, s7, v4s4_3); dump();
sqrdmlsh(s7, s7, v8.s4[3]); dump();
sqrdmlsh(s7, s7, v8s4_3); dump();
sqrdmlsh(s7, s7, v16.s4[3]); dump();
sqrdmlsh(s7, s7, v16s4_3); dump();
sqrdmlsh(s7, s7, v31.s4[3]); dump();
sqrdmlsh(s7, s7, v31s4_3); dump();
sqrdmlsh(s7, s7, v7.s4[0]); dump();
sqrdmlsh(s7, s7, v7s4_0); dump();
sqrdmlsh(s7, s7, v7.s4[1]); dump();
sqrdmlsh(s7, s7, v7s4_1); dump();
sqrdmlsh(s7, s7, v7.s4[2]); dump();
sqrdmlsh(s7, s7, v7s4_2); dump();
sqrdmulh(s7, s7, v7.s4[3]); dump();
sqrdmulh(s0, s7, v7.s4[3]); dump();
sqrdmulh(s1, s7, v7.s4[3]); dump();
sqrdmulh(s2, s7, v7.s4[3]); dump();
sqrdmulh(s4, s7, v7.s4[3]); dump();
sqrdmulh(s8, s7, v7.s4[3]); dump();
sqrdmulh(s16, s7, v7.s4[3]); dump();
sqrdmulh(s31, s7, v7.s4[3]); dump();
sqrdmulh(s7, s7, v7.s4[3]); dump();
sqrdmulh(s7, s0, v7.s4[3]); dump();
sqrdmulh(s7, s1, v7.s4[3]); dump();
sqrdmulh(s7, s2, v7.s4[3]); dump();
sqrdmulh(s7, s4, v7.s4[3]); dump();
sqrdmulh(s7, s8, v7.s4[3]); dump();
sqrdmulh(s7, s16, v7.s4[3]); dump();
sqrdmulh(s7, s31, v7.s4[3]); dump();
sqrdmulh(s7, s7, v7.s4[3]); dump();
sqrdmulh(s7, s7, v7s4_3); dump();
sqrdmulh(s7, s7, v0.s4[3]); dump();
sqrdmulh(s7, s7, v0s4_3); dump();
sqrdmulh(s7, s7, v1.s4[3]); dump();
sqrdmulh(s7, s7, v1s4_3); dump();
sqrdmulh(s7, s7, v2.s4[3]); dump();
sqrdmulh(s7, s7, v2s4_3); dump();
sqrdmulh(s7, s7, v4.s4[3]); dump();
sqrdmulh(s7, s7, v4s4_3); dump();
sqrdmulh(s7, s7, v8.s4[3]); dump();
sqrdmulh(s7, s7, v8s4_3); dump();
sqrdmulh(s7, s7, v16.s4[3]); dump();
sqrdmulh(s7, s7, v16s4_3); dump();
sqrdmulh(s7, s7, v31.s4[3]); dump();
sqrdmulh(s7, s7, v31s4_3); dump();
sqrdmulh(s7, s7, v7.s4[0]); dump();
sqrdmulh(s7, s7, v7s4_0); dump();
sqrdmulh(s7, s7, v7.s4[1]); dump();
sqrdmulh(s7, s7, v7s4_1); dump();
sqrdmulh(s7, s7, v7.s4[2]); dump();
sqrdmulh(s7, s7, v7s4_2); dump();
//DataProcSimd_ByElementArithmetic7:2
sqdmulh(v7.h4, v7.h4, v6.h8[7]); dump();
sqdmulh(v0.h4, v7.h4, v6.h8[7]); dump();
sqdmulh(v1.h4, v7.h4, v6.h8[7]); dump();
sqdmulh(v2.h4, v7.h4, v6.h8[7]); dump();
sqdmulh(v4.h4, v7.h4, v6.h8[7]); dump();
sqdmulh(v8.h4, v7.h4, v6.h8[7]); dump();
sqdmulh(v16.h4, v7.h4, v6.h8[7]); dump();
sqdmulh(v31.h4, v7.h4, v6.h8[7]); dump();
sqdmulh(v7.h4, v7.h4, v6.h8[7]); dump();
sqdmulh(v7.h4, v0.h4, v6.h8[7]); dump();
sqdmulh(v7.h4, v1.h4, v6.h8[7]); dump();
sqdmulh(v7.h4, v2.h4, v6.h8[7]); dump();
sqdmulh(v7.h4, v4.h4, v6.h8[7]); dump();
sqdmulh(v7.h4, v8.h4, v6.h8[7]); dump();
sqdmulh(v7.h4, v16.h4, v6.h8[7]); dump();
sqdmulh(v7.h4, v31.h4, v6.h8[7]); dump();
sqdmulh(v7.h4, v7.h4, v6.h8[7]); dump();
sqdmulh(v7.h4, v7.h4, v0.h8[7]); dump();
sqdmulh(v7.h4, v7.h4, v1.h8[7]); dump();
sqdmulh(v7.h4, v7.h4, v2.h8[7]); dump();
sqdmulh(v7.h4, v7.h4, v4.h8[7]); dump();
sqdmulh(v7.h4, v7.h4, v8.h8[7]); dump();
sqdmulh(v7.h4, v7.h4, v15.h8[7]); dump();
sqdmulh(v7.h4, v7.h4, v15.h8[0]); dump();
sqdmulh(v7.h4, v7.h4, v15.h8[1]); dump();
sqdmulh(v7.h4, v7.h4, v15.h8[2]); dump();
sqdmulh(v7.h4, v7.h4, v15.h8[4]); dump();
sqrdmlsh(v7.h4, v7.h4, v6.h8[7]); dump();
sqrdmlsh(v0.h4, v7.h4, v6.h8[7]); dump();
sqrdmlsh(v1.h4, v7.h4, v6.h8[7]); dump();
sqrdmlsh(v2.h4, v7.h4, v6.h8[7]); dump();
sqrdmlsh(v4.h4, v7.h4, v6.h8[7]); dump();
sqrdmlsh(v8.h4, v7.h4, v6.h8[7]); dump();
sqrdmlsh(v16.h4, v7.h4, v6.h8[7]); dump();
sqrdmlsh(v31.h4, v7.h4, v6.h8[7]); dump();
sqrdmlsh(v7.h4, v7.h4, v6.h8[7]); dump();
sqrdmlsh(v7.h4, v0.h4, v6.h8[7]); dump();
sqrdmlsh(v7.h4, v1.h4, v6.h8[7]); dump();
sqrdmlsh(v7.h4, v2.h4, v6.h8[7]); dump();
sqrdmlsh(v7.h4, v4.h4, v6.h8[7]); dump();
sqrdmlsh(v7.h4, v8.h4, v6.h8[7]); dump();
sqrdmlsh(v7.h4, v16.h4, v6.h8[7]); dump();
sqrdmlsh(v7.h4, v31.h4, v6.h8[7]); dump();
sqrdmlsh(v7.h4, v7.h4, v6.h8[7]); dump();
sqrdmlsh(v7.h4, v7.h4, v0.h8[7]); dump();
sqrdmlsh(v7.h4, v7.h4, v1.h8[7]); dump();
sqrdmlsh(v7.h4, v7.h4, v2.h8[7]); dump();
sqrdmlsh(v7.h4, v7.h4, v4.h8[7]); dump();
sqrdmlsh(v7.h4, v7.h4, v8.h8[7]); dump();
sqrdmlsh(v7.h4, v7.h4, v15.h8[7]); dump();
sqrdmlsh(v7.h4, v7.h4, v15.h8[0]); dump();
sqrdmlsh(v7.h4, v7.h4, v15.h8[1]); dump();
sqrdmlsh(v7.h4, v7.h4, v15.h8[2]); dump();
sqrdmlsh(v7.h4, v7.h4, v15.h8[4]); dump();
sqrdmulh(v7.h4, v7.h4, v6.h8[7]); dump();
sqrdmulh(v0.h4, v7.h4, v6.h8[7]); dump();
sqrdmulh(v1.h4, v7.h4, v6.h8[7]); dump();
sqrdmulh(v2.h4, v7.h4, v6.h8[7]); dump();
sqrdmulh(v4.h4, v7.h4, v6.h8[7]); dump();
sqrdmulh(v8.h4, v7.h4, v6.h8[7]); dump();
sqrdmulh(v16.h4, v7.h4, v6.h8[7]); dump();
sqrdmulh(v31.h4, v7.h4, v6.h8[7]); dump();
sqrdmulh(v7.h4, v7.h4, v6.h8[7]); dump();
sqrdmulh(v7.h4, v0.h4, v6.h8[7]); dump();
sqrdmulh(v7.h4, v1.h4, v6.h8[7]); dump();
sqrdmulh(v7.h4, v2.h4, v6.h8[7]); dump();
sqrdmulh(v7.h4, v4.h4, v6.h8[7]); dump();
sqrdmulh(v7.h4, v8.h4, v6.h8[7]); dump();
sqrdmulh(v7.h4, v16.h4, v6.h8[7]); dump();
sqrdmulh(v7.h4, v31.h4, v6.h8[7]); dump();
sqrdmulh(v7.h4, v7.h4, v6.h8[7]); dump();
sqrdmulh(v7.h4, v7.h4, v0.h8[7]); dump();
sqrdmulh(v7.h4, v7.h4, v1.h8[7]); dump();
sqrdmulh(v7.h4, v7.h4, v2.h8[7]); dump();
sqrdmulh(v7.h4, v7.h4, v4.h8[7]); dump();
sqrdmulh(v7.h4, v7.h4, v8.h8[7]); dump();
sqrdmulh(v7.h4, v7.h4, v15.h8[7]); dump();
sqrdmulh(v7.h4, v7.h4, v15.h8[0]); dump();
sqrdmulh(v7.h4, v7.h4, v15.h8[1]); dump();
sqrdmulh(v7.h4, v7.h4, v15.h8[2]); dump();
sqrdmulh(v7.h4, v7.h4, v15.h8[4]); dump();
//DataProcSimd_ByElementArithmetic7:3
sqdmulh(v7.h8, v7.h8, v6.h8[7]); dump();
sqdmulh(v0.h8, v7.h8, v6.h8[7]); dump();
sqdmulh(v1.h8, v7.h8, v6.h8[7]); dump();
sqdmulh(v2.h8, v7.h8, v6.h8[7]); dump();
sqdmulh(v4.h8, v7.h8, v6.h8[7]); dump();
sqdmulh(v8.h8, v7.h8, v6.h8[7]); dump();
sqdmulh(v16.h8, v7.h8, v6.h8[7]); dump();
sqdmulh(v31.h8, v7.h8, v6.h8[7]); dump();
sqdmulh(v7.h8, v7.h8, v6.h8[7]); dump();
sqdmulh(v7.h8, v0.h8, v6.h8[7]); dump();
sqdmulh(v7.h8, v1.h8, v6.h8[7]); dump();
sqdmulh(v7.h8, v2.h8, v6.h8[7]); dump();
sqdmulh(v7.h8, v4.h8, v6.h8[7]); dump();
sqdmulh(v7.h8, v8.h8, v6.h8[7]); dump();
sqdmulh(v7.h8, v16.h8, v6.h8[7]); dump();
sqdmulh(v7.h8, v31.h8, v6.h8[7]); dump();
sqdmulh(v7.h8, v7.h8, v6.h8[7]); dump();
sqdmulh(v7.h8, v7.h8, v0.h8[7]); dump();
sqdmulh(v7.h8, v7.h8, v1.h8[7]); dump();
sqdmulh(v7.h8, v7.h8, v2.h8[7]); dump();
sqdmulh(v7.h8, v7.h8, v4.h8[7]); dump();
sqdmulh(v7.h8, v7.h8, v8.h8[7]); dump();
sqdmulh(v7.h8, v7.h8, v15.h8[7]); dump();
sqdmulh(v7.h8, v7.h8, v15.h8[0]); dump();
sqdmulh(v7.h8, v7.h8, v15.h8[1]); dump();
sqdmulh(v7.h8, v7.h8, v15.h8[2]); dump();
sqdmulh(v7.h8, v7.h8, v15.h8[4]); dump();
sqrdmlsh(v7.h8, v7.h8, v6.h8[7]); dump();
sqrdmlsh(v0.h8, v7.h8, v6.h8[7]); dump();
sqrdmlsh(v1.h8, v7.h8, v6.h8[7]); dump();
sqrdmlsh(v2.h8, v7.h8, v6.h8[7]); dump();
sqrdmlsh(v4.h8, v7.h8, v6.h8[7]); dump();
sqrdmlsh(v8.h8, v7.h8, v6.h8[7]); dump();
sqrdmlsh(v16.h8, v7.h8, v6.h8[7]); dump();
sqrdmlsh(v31.h8, v7.h8, v6.h8[7]); dump();
sqrdmlsh(v7.h8, v7.h8, v6.h8[7]); dump();
sqrdmlsh(v7.h8, v0.h8, v6.h8[7]); dump();
sqrdmlsh(v7.h8, v1.h8, v6.h8[7]); dump();
sqrdmlsh(v7.h8, v2.h8, v6.h8[7]); dump();
sqrdmlsh(v7.h8, v4.h8, v6.h8[7]); dump();
sqrdmlsh(v7.h8, v8.h8, v6.h8[7]); dump();
sqrdmlsh(v7.h8, v16.h8, v6.h8[7]); dump();
sqrdmlsh(v7.h8, v31.h8, v6.h8[7]); dump();
sqrdmlsh(v7.h8, v7.h8, v6.h8[7]); dump();
sqrdmlsh(v7.h8, v7.h8, v0.h8[7]); dump();
sqrdmlsh(v7.h8, v7.h8, v1.h8[7]); dump();
sqrdmlsh(v7.h8, v7.h8, v2.h8[7]); dump();
sqrdmlsh(v7.h8, v7.h8, v4.h8[7]); dump();
sqrdmlsh(v7.h8, v7.h8, v8.h8[7]); dump();
sqrdmlsh(v7.h8, v7.h8, v15.h8[7]); dump();
sqrdmlsh(v7.h8, v7.h8, v15.h8[0]); dump();
sqrdmlsh(v7.h8, v7.h8, v15.h8[1]); dump();
sqrdmlsh(v7.h8, v7.h8, v15.h8[2]); dump();
sqrdmlsh(v7.h8, v7.h8, v15.h8[4]); dump();
sqrdmulh(v7.h8, v7.h8, v6.h8[7]); dump();
sqrdmulh(v0.h8, v7.h8, v6.h8[7]); dump();
sqrdmulh(v1.h8, v7.h8, v6.h8[7]); dump();
sqrdmulh(v2.h8, v7.h8, v6.h8[7]); dump();
sqrdmulh(v4.h8, v7.h8, v6.h8[7]); dump();
sqrdmulh(v8.h8, v7.h8, v6.h8[7]); dump();
sqrdmulh(v16.h8, v7.h8, v6.h8[7]); dump();
sqrdmulh(v31.h8, v7.h8, v6.h8[7]); dump();
sqrdmulh(v7.h8, v7.h8, v6.h8[7]); dump();
sqrdmulh(v7.h8, v0.h8, v6.h8[7]); dump();
sqrdmulh(v7.h8, v1.h8, v6.h8[7]); dump();
sqrdmulh(v7.h8, v2.h8, v6.h8[7]); dump();
sqrdmulh(v7.h8, v4.h8, v6.h8[7]); dump();
sqrdmulh(v7.h8, v8.h8, v6.h8[7]); dump();
sqrdmulh(v7.h8, v16.h8, v6.h8[7]); dump();
sqrdmulh(v7.h8, v31.h8, v6.h8[7]); dump();
sqrdmulh(v7.h8, v7.h8, v6.h8[7]); dump();
sqrdmulh(v7.h8, v7.h8, v0.h8[7]); dump();
sqrdmulh(v7.h8, v7.h8, v1.h8[7]); dump();
sqrdmulh(v7.h8, v7.h8, v2.h8[7]); dump();
sqrdmulh(v7.h8, v7.h8, v4.h8[7]); dump();
sqrdmulh(v7.h8, v7.h8, v8.h8[7]); dump();
sqrdmulh(v7.h8, v7.h8, v15.h8[7]); dump();
sqrdmulh(v7.h8, v7.h8, v15.h8[0]); dump();
sqrdmulh(v7.h8, v7.h8, v15.h8[1]); dump();
sqrdmulh(v7.h8, v7.h8, v15.h8[2]); dump();
sqrdmulh(v7.h8, v7.h8, v15.h8[4]); dump();
//DataProcSimd_ByElementArithmetic7:4
sqdmulh(v7.s2, v7.s2, v7.s4[3]); dump();
sqdmulh(v0.s2, v7.s2, v7.s4[3]); dump();
sqdmulh(v1.s2, v7.s2, v7.s4[3]); dump();
sqdmulh(v2.s2, v7.s2, v7.s4[3]); dump();
sqdmulh(v4.s2, v7.s2, v7.s4[3]); dump();
sqdmulh(v8.s2, v7.s2, v7.s4[3]); dump();
sqdmulh(v16.s2, v7.s2, v7.s4[3]); dump();
sqdmulh(v31.s2, v7.s2, v7.s4[3]); dump();
sqdmulh(v7.s2, v7.s2, v7.s4[3]); dump();
sqdmulh(v7.s2, v0.s2, v7.s4[3]); dump();
sqdmulh(v7.s2, v1.s2, v7.s4[3]); dump();
sqdmulh(v7.s2, v2.s2, v7.s4[3]); dump();
sqdmulh(v7.s2, v4.s2, v7.s4[3]); dump();
sqdmulh(v7.s2, v8.s2, v7.s4[3]); dump();
sqdmulh(v7.s2, v16.s2, v7.s4[3]); dump();
sqdmulh(v7.s2, v31.s2, v7.s4[3]); dump();
sqdmulh(v7.s2, v7.s2, v7.s4[3]); dump();
sqdmulh(v7.s2, v7.s2, v7s4_3); dump();
sqdmulh(v7.s2, v7.s2, v0.s4[3]); dump();
sqdmulh(v7.s2, v7.s2, v0s4_3); dump();
sqdmulh(v7.s2, v7.s2, v1.s4[3]); dump();
sqdmulh(v7.s2, v7.s2, v1s4_3); dump();
sqdmulh(v7.s2, v7.s2, v2.s4[3]); dump();
sqdmulh(v7.s2, v7.s2, v2s4_3); dump();
sqdmulh(v7.s2, v7.s2, v4.s4[3]); dump();
sqdmulh(v7.s2, v7.s2, v4s4_3); dump();
sqdmulh(v7.s2, v7.s2, v8.s4[3]); dump();
sqdmulh(v7.s2, v7.s2, v8s4_3); dump();
sqdmulh(v7.s2, v7.s2, v16.s4[3]); dump();
sqdmulh(v7.s2, v7.s2, v16s4_3); dump();
sqdmulh(v7.s2, v7.s2, v31.s4[3]); dump();
sqdmulh(v7.s2, v7.s2, v31s4_3); dump();
sqdmulh(v7.s2, v7.s2, v7.s4[0]); dump();
sqdmulh(v7.s2, v7.s2, v7s4_0); dump();
sqdmulh(v7.s2, v7.s2, v7.s4[1]); dump();
sqdmulh(v7.s2, v7.s2, v7s4_1); dump();
sqdmulh(v7.s2, v7.s2, v7.s4[2]); dump();
sqdmulh(v7.s2, v7.s2, v7s4_2); dump();
sqrdmlsh(v7.s2, v7.s2, v7.s4[3]); dump();
sqrdmlsh(v0.s2, v7.s2, v7.s4[3]); dump();
sqrdmlsh(v1.s2, v7.s2, v7.s4[3]); dump();
sqrdmlsh(v2.s2, v7.s2, v7.s4[3]); dump();
sqrdmlsh(v4.s2, v7.s2, v7.s4[3]); dump();
sqrdmlsh(v8.s2, v7.s2, v7.s4[3]); dump();
sqrdmlsh(v16.s2, v7.s2, v7.s4[3]); dump();
sqrdmlsh(v31.s2, v7.s2, v7.s4[3]); dump();
sqrdmlsh(v7.s2, v7.s2, v7.s4[3]); dump();
sqrdmlsh(v7.s2, v0.s2, v7.s4[3]); dump();
sqrdmlsh(v7.s2, v1.s2, v7.s4[3]); dump();
sqrdmlsh(v7.s2, v2.s2, v7.s4[3]); dump();
sqrdmlsh(v7.s2, v4.s2, v7.s4[3]); dump();
sqrdmlsh(v7.s2, v8.s2, v7.s4[3]); dump();
sqrdmlsh(v7.s2, v16.s2, v7.s4[3]); dump();
sqrdmlsh(v7.s2, v31.s2, v7.s4[3]); dump();
sqrdmlsh(v7.s2, v7.s2, v7.s4[3]); dump();
sqrdmlsh(v7.s2, v7.s2, v7s4_3); dump();
sqrdmlsh(v7.s2, v7.s2, v0.s4[3]); dump();
sqrdmlsh(v7.s2, v7.s2, v0s4_3); dump();
sqrdmlsh(v7.s2, v7.s2, v1.s4[3]); dump();
sqrdmlsh(v7.s2, v7.s2, v1s4_3); dump();
sqrdmlsh(v7.s2, v7.s2, v2.s4[3]); dump();
sqrdmlsh(v7.s2, v7.s2, v2s4_3); dump();
sqrdmlsh(v7.s2, v7.s2, v4.s4[3]); dump();
sqrdmlsh(v7.s2, v7.s2, v4s4_3); dump();
sqrdmlsh(v7.s2, v7.s2, v8.s4[3]); dump();
sqrdmlsh(v7.s2, v7.s2, v8s4_3); dump();
sqrdmlsh(v7.s2, v7.s2, v16.s4[3]); dump();
sqrdmlsh(v7.s2, v7.s2, v16s4_3); dump();
sqrdmlsh(v7.s2, v7.s2, v31.s4[3]); dump();
sqrdmlsh(v7.s2, v7.s2, v31s4_3); dump();
sqrdmlsh(v7.s2, v7.s2, v7.s4[0]); dump();
sqrdmlsh(v7.s2, v7.s2, v7s4_0); dump();
sqrdmlsh(v7.s2, v7.s2, v7.s4[1]); dump();
sqrdmlsh(v7.s2, v7.s2, v7s4_1); dump();
sqrdmlsh(v7.s2, v7.s2, v7.s4[2]); dump();
sqrdmlsh(v7.s2, v7.s2, v7s4_2); dump();
sqrdmulh(v7.s2, v7.s2, v7.s4[3]); dump();
sqrdmulh(v0.s2, v7.s2, v7.s4[3]); dump();
sqrdmulh(v1.s2, v7.s2, v7.s4[3]); dump();
sqrdmulh(v2.s2, v7.s2, v7.s4[3]); dump();
sqrdmulh(v4.s2, v7.s2, v7.s4[3]); dump();
sqrdmulh(v8.s2, v7.s2, v7.s4[3]); dump();
sqrdmulh(v16.s2, v7.s2, v7.s4[3]); dump();
sqrdmulh(v31.s2, v7.s2, v7.s4[3]); dump();
sqrdmulh(v7.s2, v7.s2, v7.s4[3]); dump();
sqrdmulh(v7.s2, v0.s2, v7.s4[3]); dump();
sqrdmulh(v7.s2, v1.s2, v7.s4[3]); dump();
sqrdmulh(v7.s2, v2.s2, v7.s4[3]); dump();
sqrdmulh(v7.s2, v4.s2, v7.s4[3]); dump();
sqrdmulh(v7.s2, v8.s2, v7.s4[3]); dump();
sqrdmulh(v7.s2, v16.s2, v7.s4[3]); dump();
sqrdmulh(v7.s2, v31.s2, v7.s4[3]); dump();
sqrdmulh(v7.s2, v7.s2, v7.s4[3]); dump();
sqrdmulh(v7.s2, v7.s2, v7s4_3); dump();
sqrdmulh(v7.s2, v7.s2, v0.s4[3]); dump();
sqrdmulh(v7.s2, v7.s2, v0s4_3); dump();
sqrdmulh(v7.s2, v7.s2, v1.s4[3]); dump();
sqrdmulh(v7.s2, v7.s2, v1s4_3); dump();
sqrdmulh(v7.s2, v7.s2, v2.s4[3]); dump();
sqrdmulh(v7.s2, v7.s2, v2s4_3); dump();
sqrdmulh(v7.s2, v7.s2, v4.s4[3]); dump();
sqrdmulh(v7.s2, v7.s2, v4s4_3); dump();
sqrdmulh(v7.s2, v7.s2, v8.s4[3]); dump();
sqrdmulh(v7.s2, v7.s2, v8s4_3); dump();
sqrdmulh(v7.s2, v7.s2, v16.s4[3]); dump();
sqrdmulh(v7.s2, v7.s2, v16s4_3); dump();
sqrdmulh(v7.s2, v7.s2, v31.s4[3]); dump();
sqrdmulh(v7.s2, v7.s2, v31s4_3); dump();
sqrdmulh(v7.s2, v7.s2, v7.s4[0]); dump();
sqrdmulh(v7.s2, v7.s2, v7s4_0); dump();
sqrdmulh(v7.s2, v7.s2, v7.s4[1]); dump();
sqrdmulh(v7.s2, v7.s2, v7s4_1); dump();
sqrdmulh(v7.s2, v7.s2, v7.s4[2]); dump();
sqrdmulh(v7.s2, v7.s2, v7s4_2); dump();
//DataProcSimd_ByElementArithmetic7:5
sqdmulh(v7.s4, v7.s4, v7.s4[3]); dump();
sqdmulh(v0.s4, v7.s4, v7.s4[3]); dump();
sqdmulh(v1.s4, v7.s4, v7.s4[3]); dump();
sqdmulh(v2.s4, v7.s4, v7.s4[3]); dump();
sqdmulh(v4.s4, v7.s4, v7.s4[3]); dump();
sqdmulh(v8.s4, v7.s4, v7.s4[3]); dump();
sqdmulh(v16.s4, v7.s4, v7.s4[3]); dump();
sqdmulh(v31.s4, v7.s4, v7.s4[3]); dump();
sqdmulh(v7.s4, v7.s4, v7.s4[3]); dump();
sqdmulh(v7.s4, v0.s4, v7.s4[3]); dump();
sqdmulh(v7.s4, v1.s4, v7.s4[3]); dump();
sqdmulh(v7.s4, v2.s4, v7.s4[3]); dump();
sqdmulh(v7.s4, v4.s4, v7.s4[3]); dump();
sqdmulh(v7.s4, v8.s4, v7.s4[3]); dump();
sqdmulh(v7.s4, v16.s4, v7.s4[3]); dump();
sqdmulh(v7.s4, v31.s4, v7.s4[3]); dump();
sqdmulh(v7.s4, v7.s4, v7.s4[3]); dump();
sqdmulh(v7.s4, v7.s4, v7s4_3); dump();
sqdmulh(v7.s4, v7.s4, v0.s4[3]); dump();
sqdmulh(v7.s4, v7.s4, v0s4_3); dump();
sqdmulh(v7.s4, v7.s4, v1.s4[3]); dump();
sqdmulh(v7.s4, v7.s4, v1s4_3); dump();
sqdmulh(v7.s4, v7.s4, v2.s4[3]); dump();
sqdmulh(v7.s4, v7.s4, v2s4_3); dump();
sqdmulh(v7.s4, v7.s4, v4.s4[3]); dump();
sqdmulh(v7.s4, v7.s4, v4s4_3); dump();
sqdmulh(v7.s4, v7.s4, v8.s4[3]); dump();
sqdmulh(v7.s4, v7.s4, v8s4_3); dump();
sqdmulh(v7.s4, v7.s4, v16.s4[3]); dump();
sqdmulh(v7.s4, v7.s4, v16s4_3); dump();
sqdmulh(v7.s4, v7.s4, v31.s4[3]); dump();
sqdmulh(v7.s4, v7.s4, v31s4_3); dump();
sqdmulh(v7.s4, v7.s4, v7.s4[0]); dump();
sqdmulh(v7.s4, v7.s4, v7s4_0); dump();
sqdmulh(v7.s4, v7.s4, v7.s4[1]); dump();
sqdmulh(v7.s4, v7.s4, v7s4_1); dump();
sqdmulh(v7.s4, v7.s4, v7.s4[2]); dump();
sqdmulh(v7.s4, v7.s4, v7s4_2); dump();
sqrdmlsh(v7.s4, v7.s4, v7.s4[3]); dump();
sqrdmlsh(v0.s4, v7.s4, v7.s4[3]); dump();
sqrdmlsh(v1.s4, v7.s4, v7.s4[3]); dump();
sqrdmlsh(v2.s4, v7.s4, v7.s4[3]); dump();
sqrdmlsh(v4.s4, v7.s4, v7.s4[3]); dump();
sqrdmlsh(v8.s4, v7.s4, v7.s4[3]); dump();
sqrdmlsh(v16.s4, v7.s4, v7.s4[3]); dump();
sqrdmlsh(v31.s4, v7.s4, v7.s4[3]); dump();
sqrdmlsh(v7.s4, v7.s4, v7.s4[3]); dump();
sqrdmlsh(v7.s4, v0.s4, v7.s4[3]); dump();
sqrdmlsh(v7.s4, v1.s4, v7.s4[3]); dump();
sqrdmlsh(v7.s4, v2.s4, v7.s4[3]); dump();
sqrdmlsh(v7.s4, v4.s4, v7.s4[3]); dump();
sqrdmlsh(v7.s4, v8.s4, v7.s4[3]); dump();
sqrdmlsh(v7.s4, v16.s4, v7.s4[3]); dump();
sqrdmlsh(v7.s4, v31.s4, v7.s4[3]); dump();
sqrdmlsh(v7.s4, v7.s4, v7.s4[3]); dump();
sqrdmlsh(v7.s4, v7.s4, v7s4_3); dump();
sqrdmlsh(v7.s4, v7.s4, v0.s4[3]); dump();
sqrdmlsh(v7.s4, v7.s4, v0s4_3); dump();
sqrdmlsh(v7.s4, v7.s4, v1.s4[3]); dump();
sqrdmlsh(v7.s4, v7.s4, v1s4_3); dump();
sqrdmlsh(v7.s4, v7.s4, v2.s4[3]); dump();
sqrdmlsh(v7.s4, v7.s4, v2s4_3); dump();
sqrdmlsh(v7.s4, v7.s4, v4.s4[3]); dump();
sqrdmlsh(v7.s4, v7.s4, v4s4_3); dump();
sqrdmlsh(v7.s4, v7.s4, v8.s4[3]); dump();
sqrdmlsh(v7.s4, v7.s4, v8s4_3); dump();
sqrdmlsh(v7.s4, v7.s4, v16.s4[3]); dump();
sqrdmlsh(v7.s4, v7.s4, v16s4_3); dump();
sqrdmlsh(v7.s4, v7.s4, v31.s4[3]); dump();
sqrdmlsh(v7.s4, v7.s4, v31s4_3); dump();
sqrdmlsh(v7.s4, v7.s4, v7.s4[0]); dump();
sqrdmlsh(v7.s4, v7.s4, v7s4_0); dump();
sqrdmlsh(v7.s4, v7.s4, v7.s4[1]); dump();
sqrdmlsh(v7.s4, v7.s4, v7s4_1); dump();
sqrdmlsh(v7.s4, v7.s4, v7.s4[2]); dump();
sqrdmlsh(v7.s4, v7.s4, v7s4_2); dump();
sqrdmulh(v7.s4, v7.s4, v7.s4[3]); dump();
sqrdmulh(v0.s4, v7.s4, v7.s4[3]); dump();
sqrdmulh(v1.s4, v7.s4, v7.s4[3]); dump();
sqrdmulh(v2.s4, v7.s4, v7.s4[3]); dump();
sqrdmulh(v4.s4, v7.s4, v7.s4[3]); dump();
sqrdmulh(v8.s4, v7.s4, v7.s4[3]); dump();
sqrdmulh(v16.s4, v7.s4, v7.s4[3]); dump();
sqrdmulh(v31.s4, v7.s4, v7.s4[3]); dump();
sqrdmulh(v7.s4, v7.s4, v7.s4[3]); dump();
sqrdmulh(v7.s4, v0.s4, v7.s4[3]); dump();
sqrdmulh(v7.s4, v1.s4, v7.s4[3]); dump();
sqrdmulh(v7.s4, v2.s4, v7.s4[3]); dump();
sqrdmulh(v7.s4, v4.s4, v7.s4[3]); dump();
sqrdmulh(v7.s4, v8.s4, v7.s4[3]); dump();
sqrdmulh(v7.s4, v16.s4, v7.s4[3]); dump();
sqrdmulh(v7.s4, v31.s4, v7.s4[3]); dump();
sqrdmulh(v7.s4, v7.s4, v7.s4[3]); dump();
sqrdmulh(v7.s4, v7.s4, v7s4_3); dump();
sqrdmulh(v7.s4, v7.s4, v0.s4[3]); dump();
sqrdmulh(v7.s4, v7.s4, v0s4_3); dump();
sqrdmulh(v7.s4, v7.s4, v1.s4[3]); dump();
sqrdmulh(v7.s4, v7.s4, v1s4_3); dump();
sqrdmulh(v7.s4, v7.s4, v2.s4[3]); dump();
sqrdmulh(v7.s4, v7.s4, v2s4_3); dump();
sqrdmulh(v7.s4, v7.s4, v4.s4[3]); dump();
sqrdmulh(v7.s4, v7.s4, v4s4_3); dump();
sqrdmulh(v7.s4, v7.s4, v8.s4[3]); dump();
sqrdmulh(v7.s4, v7.s4, v8s4_3); dump();
sqrdmulh(v7.s4, v7.s4, v16.s4[3]); dump();
sqrdmulh(v7.s4, v7.s4, v16s4_3); dump();
sqrdmulh(v7.s4, v7.s4, v31.s4[3]); dump();
sqrdmulh(v7.s4, v7.s4, v31s4_3); dump();
sqrdmulh(v7.s4, v7.s4, v7.s4[0]); dump();
sqrdmulh(v7.s4, v7.s4, v7s4_0); dump();
sqrdmulh(v7.s4, v7.s4, v7.s4[1]); dump();
sqrdmulh(v7.s4, v7.s4, v7s4_1); dump();
sqrdmulh(v7.s4, v7.s4, v7.s4[2]); dump();
sqrdmulh(v7.s4, v7.s4, v7s4_2); dump();
//DataProcSimd_ByElementArithmetic8:0
sqrdmlsh(h7, h7, h7); dump();
sqrdmlsh(h0, h7, h7); dump();
sqrdmlsh(h1, h7, h7); dump();
sqrdmlsh(h2, h7, h7); dump();
sqrdmlsh(h4, h7, h7); dump();
sqrdmlsh(h8, h7, h7); dump();
sqrdmlsh(h16, h7, h7); dump();
sqrdmlsh(h31, h7, h7); dump();
sqrdmlsh(h7, h7, h7); dump();
sqrdmlsh(h7, h0, h7); dump();
sqrdmlsh(h7, h1, h7); dump();
sqrdmlsh(h7, h2, h7); dump();
sqrdmlsh(h7, h4, h7); dump();
sqrdmlsh(h7, h8, h7); dump();
sqrdmlsh(h7, h16, h7); dump();
sqrdmlsh(h7, h31, h7); dump();
sqrdmlsh(h7, h7, h7); dump();
sqrdmlsh(h7, h7, h0); dump();
sqrdmlsh(h7, h7, h1); dump();
sqrdmlsh(h7, h7, h2); dump();
sqrdmlsh(h7, h7, h4); dump();
sqrdmlsh(h7, h7, h8); dump();
sqrdmlsh(h7, h7, h16); dump();
sqrdmlsh(h7, h7, h31); dump();
//DataProcSimd_ByElementArithmetic8:1
sqrdmlsh(s7, s7, s7); dump();
sqrdmlsh(s0, s7, s7); dump();
sqrdmlsh(s1, s7, s7); dump();
sqrdmlsh(s2, s7, s7); dump();
sqrdmlsh(s4, s7, s7); dump();
sqrdmlsh(s8, s7, s7); dump();
sqrdmlsh(s16, s7, s7); dump();
sqrdmlsh(s31, s7, s7); dump();
sqrdmlsh(s7, s7, s7); dump();
sqrdmlsh(s7, s0, s7); dump();
sqrdmlsh(s7, s1, s7); dump();
sqrdmlsh(s7, s2, s7); dump();
sqrdmlsh(s7, s4, s7); dump();
sqrdmlsh(s7, s8, s7); dump();
sqrdmlsh(s7, s16, s7); dump();
sqrdmlsh(s7, s31, s7); dump();
sqrdmlsh(s7, s7, s7); dump();
sqrdmlsh(s7, s7, s0); dump();
sqrdmlsh(s7, s7, s1); dump();
sqrdmlsh(s7, s7, s2); dump();
sqrdmlsh(s7, s7, s4); dump();
sqrdmlsh(s7, s7, s8); dump();
sqrdmlsh(s7, s7, s16); dump();
sqrdmlsh(s7, s7, s31); dump();
//DataProcSimd_ByElementArithmetic8:2
sqrdmlsh(v7.h4, v7.h4, v7.h4); dump();
sqrdmlsh(v0.h4, v7.h4, v7.h4); dump();
sqrdmlsh(v1.h4, v7.h4, v7.h4); dump();
sqrdmlsh(v2.h4, v7.h4, v7.h4); dump();
sqrdmlsh(v4.h4, v7.h4, v7.h4); dump();
sqrdmlsh(v8.h4, v7.h4, v7.h4); dump();
sqrdmlsh(v16.h4, v7.h4, v7.h4); dump();
sqrdmlsh(v31.h4, v7.h4, v7.h4); dump();
sqrdmlsh(v7.h4, v7.h4, v7.h4); dump();
sqrdmlsh(v7.h4, v0.h4, v7.h4); dump();
sqrdmlsh(v7.h4, v1.h4, v7.h4); dump();
sqrdmlsh(v7.h4, v2.h4, v7.h4); dump();
sqrdmlsh(v7.h4, v4.h4, v7.h4); dump();
sqrdmlsh(v7.h4, v8.h4, v7.h4); dump();
sqrdmlsh(v7.h4, v16.h4, v7.h4); dump();
sqrdmlsh(v7.h4, v31.h4, v7.h4); dump();
sqrdmlsh(v7.h4, v7.h4, v7.h4); dump();
sqrdmlsh(v7.h4, v7.h4, v0.h4); dump();
sqrdmlsh(v7.h4, v7.h4, v1.h4); dump();
sqrdmlsh(v7.h4, v7.h4, v2.h4); dump();
sqrdmlsh(v7.h4, v7.h4, v4.h4); dump();
sqrdmlsh(v7.h4, v7.h4, v8.h4); dump();
sqrdmlsh(v7.h4, v7.h4, v16.h4); dump();
sqrdmlsh(v7.h4, v7.h4, v31.h4); dump();
//DataProcSimd_ByElementArithmetic8:3
sqrdmlsh(v7.h8, v7.h8, v7.h8); dump();
sqrdmlsh(v0.h8, v7.h8, v7.h8); dump();
sqrdmlsh(v1.h8, v7.h8, v7.h8); dump();
sqrdmlsh(v2.h8, v7.h8, v7.h8); dump();
sqrdmlsh(v4.h8, v7.h8, v7.h8); dump();
sqrdmlsh(v8.h8, v7.h8, v7.h8); dump();
sqrdmlsh(v16.h8, v7.h8, v7.h8); dump();
sqrdmlsh(v31.h8, v7.h8, v7.h8); dump();
sqrdmlsh(v7.h8, v7.h8, v7.h8); dump();
sqrdmlsh(v7.h8, v0.h8, v7.h8); dump();
sqrdmlsh(v7.h8, v1.h8, v7.h8); dump();
sqrdmlsh(v7.h8, v2.h8, v7.h8); dump();
sqrdmlsh(v7.h8, v4.h8, v7.h8); dump();
sqrdmlsh(v7.h8, v8.h8, v7.h8); dump();
sqrdmlsh(v7.h8, v16.h8, v7.h8); dump();
sqrdmlsh(v7.h8, v31.h8, v7.h8); dump();
sqrdmlsh(v7.h8, v7.h8, v7.h8); dump();
sqrdmlsh(v7.h8, v7.h8, v0.h8); dump();
sqrdmlsh(v7.h8, v7.h8, v1.h8); dump();
sqrdmlsh(v7.h8, v7.h8, v2.h8); dump();
sqrdmlsh(v7.h8, v7.h8, v4.h8); dump();
sqrdmlsh(v7.h8, v7.h8, v8.h8); dump();
sqrdmlsh(v7.h8, v7.h8, v16.h8); dump();
sqrdmlsh(v7.h8, v7.h8, v31.h8); dump();
//DataProcSimd_ByElementArithmetic8:4
sqrdmlsh(v7.s2, v7.s2, v7.s2); dump();
sqrdmlsh(v0.s2, v7.s2, v7.s2); dump();
sqrdmlsh(v1.s2, v7.s2, v7.s2); dump();
sqrdmlsh(v2.s2, v7.s2, v7.s2); dump();
sqrdmlsh(v4.s2, v7.s2, v7.s2); dump();
sqrdmlsh(v8.s2, v7.s2, v7.s2); dump();
sqrdmlsh(v16.s2, v7.s2, v7.s2); dump();
sqrdmlsh(v31.s2, v7.s2, v7.s2); dump();
sqrdmlsh(v7.s2, v7.s2, v7.s2); dump();
sqrdmlsh(v7.s2, v0.s2, v7.s2); dump();
sqrdmlsh(v7.s2, v1.s2, v7.s2); dump();
sqrdmlsh(v7.s2, v2.s2, v7.s2); dump();
sqrdmlsh(v7.s2, v4.s2, v7.s2); dump();
sqrdmlsh(v7.s2, v8.s2, v7.s2); dump();
sqrdmlsh(v7.s2, v16.s2, v7.s2); dump();
sqrdmlsh(v7.s2, v31.s2, v7.s2); dump();
sqrdmlsh(v7.s2, v7.s2, v7.s2); dump();
sqrdmlsh(v7.s2, v7.s2, v0.s2); dump();
sqrdmlsh(v7.s2, v7.s2, v1.s2); dump();
sqrdmlsh(v7.s2, v7.s2, v2.s2); dump();
sqrdmlsh(v7.s2, v7.s2, v4.s2); dump();
sqrdmlsh(v7.s2, v7.s2, v8.s2); dump();
sqrdmlsh(v7.s2, v7.s2, v16.s2); dump();
sqrdmlsh(v7.s2, v7.s2, v31.s2); dump();
//DataProcSimd_ByElementArithmetic8:5
sqrdmlsh(v7.s4, v7.s4, v7.s4); dump();
sqrdmlsh(v0.s4, v7.s4, v7.s4); dump();
sqrdmlsh(v1.s4, v7.s4, v7.s4); dump();
sqrdmlsh(v2.s4, v7.s4, v7.s4); dump();
sqrdmlsh(v4.s4, v7.s4, v7.s4); dump();
sqrdmlsh(v8.s4, v7.s4, v7.s4); dump();
sqrdmlsh(v16.s4, v7.s4, v7.s4); dump();
sqrdmlsh(v31.s4, v7.s4, v7.s4); dump();
sqrdmlsh(v7.s4, v7.s4, v7.s4); dump();
sqrdmlsh(v7.s4, v0.s4, v7.s4); dump();
sqrdmlsh(v7.s4, v1.s4, v7.s4); dump();
sqrdmlsh(v7.s4, v2.s4, v7.s4); dump();
sqrdmlsh(v7.s4, v4.s4, v7.s4); dump();
sqrdmlsh(v7.s4, v8.s4, v7.s4); dump();
sqrdmlsh(v7.s4, v16.s4, v7.s4); dump();
sqrdmlsh(v7.s4, v31.s4, v7.s4); dump();
sqrdmlsh(v7.s4, v7.s4, v7.s4); dump();
sqrdmlsh(v7.s4, v7.s4, v0.s4); dump();
sqrdmlsh(v7.s4, v7.s4, v1.s4); dump();
sqrdmlsh(v7.s4, v7.s4, v2.s4); dump();
sqrdmlsh(v7.s4, v7.s4, v4.s4); dump();
sqrdmlsh(v7.s4, v7.s4, v8.s4); dump();
sqrdmlsh(v7.s4, v7.s4, v16.s4); dump();
sqrdmlsh(v7.s4, v7.s4, v31.s4); dump();
//DataProcSimd_ByElementArithmetic9:0
umlal(v7.s4, v7.h4, v6.h8[7]); dump();
umlal(v0.s4, v7.h4, v6.h8[7]); dump();
umlal(v1.s4, v7.h4, v6.h8[7]); dump();
umlal(v2.s4, v7.h4, v6.h8[7]); dump();
umlal(v4.s4, v7.h4, v6.h8[7]); dump();
umlal(v8.s4, v7.h4, v6.h8[7]); dump();
umlal(v16.s4, v7.h4, v6.h8[7]); dump();
umlal(v31.s4, v7.h4, v6.h8[7]); dump();
umlal(v7.s4, v7.h4, v6.h8[7]); dump();
umlal(v7.s4, v0.h4, v6.h8[7]); dump();
umlal(v7.s4, v1.h4, v6.h8[7]); dump();
umlal(v7.s4, v2.h4, v6.h8[7]); dump();
umlal(v7.s4, v4.h4, v6.h8[7]); dump();
umlal(v7.s4, v8.h4, v6.h8[7]); dump();
umlal(v7.s4, v16.h4, v6.h8[7]); dump();
umlal(v7.s4, v31.h4, v6.h8[7]); dump();
umlal(v7.s4, v7.h4, v6.h8[7]); dump();
umlal(v7.s4, v7.h4, v0.h8[7]); dump();
umlal(v7.s4, v7.h4, v1.h8[7]); dump();
umlal(v7.s4, v7.h4, v2.h8[7]); dump();
umlal(v7.s4, v7.h4, v4.h8[7]); dump();
umlal(v7.s4, v7.h4, v8.h8[7]); dump();
umlal(v7.s4, v7.h4, v15.h8[7]); dump();
umlal(v7.s4, v7.h4, v15.h8[0]); dump();
umlal(v7.s4, v7.h4, v15.h8[1]); dump();
umlal(v7.s4, v7.h4, v15.h8[2]); dump();
umlal(v7.s4, v7.h4, v15.h8[4]); dump();
umlsl(v7.s4, v7.h4, v6.h8[7]); dump();
umlsl(v0.s4, v7.h4, v6.h8[7]); dump();
umlsl(v1.s4, v7.h4, v6.h8[7]); dump();
umlsl(v2.s4, v7.h4, v6.h8[7]); dump();
umlsl(v4.s4, v7.h4, v6.h8[7]); dump();
umlsl(v8.s4, v7.h4, v6.h8[7]); dump();
umlsl(v16.s4, v7.h4, v6.h8[7]); dump();
umlsl(v31.s4, v7.h4, v6.h8[7]); dump();
umlsl(v7.s4, v7.h4, v6.h8[7]); dump();
umlsl(v7.s4, v0.h4, v6.h8[7]); dump();
umlsl(v7.s4, v1.h4, v6.h8[7]); dump();
umlsl(v7.s4, v2.h4, v6.h8[7]); dump();
umlsl(v7.s4, v4.h4, v6.h8[7]); dump();
umlsl(v7.s4, v8.h4, v6.h8[7]); dump();
umlsl(v7.s4, v16.h4, v6.h8[7]); dump();
umlsl(v7.s4, v31.h4, v6.h8[7]); dump();
umlsl(v7.s4, v7.h4, v6.h8[7]); dump();
umlsl(v7.s4, v7.h4, v0.h8[7]); dump();
umlsl(v7.s4, v7.h4, v1.h8[7]); dump();
umlsl(v7.s4, v7.h4, v2.h8[7]); dump();
umlsl(v7.s4, v7.h4, v4.h8[7]); dump();
umlsl(v7.s4, v7.h4, v8.h8[7]); dump();
umlsl(v7.s4, v7.h4, v15.h8[7]); dump();
umlsl(v7.s4, v7.h4, v15.h8[0]); dump();
umlsl(v7.s4, v7.h4, v15.h8[1]); dump();
umlsl(v7.s4, v7.h4, v15.h8[2]); dump();
umlsl(v7.s4, v7.h4, v15.h8[4]); dump();
umull(v7.s4, v7.h4, v6.h8[7]); dump();
umull(v0.s4, v7.h4, v6.h8[7]); dump();
umull(v1.s4, v7.h4, v6.h8[7]); dump();
umull(v2.s4, v7.h4, v6.h8[7]); dump();
umull(v4.s4, v7.h4, v6.h8[7]); dump();
umull(v8.s4, v7.h4, v6.h8[7]); dump();
umull(v16.s4, v7.h4, v6.h8[7]); dump();
umull(v31.s4, v7.h4, v6.h8[7]); dump();
umull(v7.s4, v7.h4, v6.h8[7]); dump();
umull(v7.s4, v0.h4, v6.h8[7]); dump();
umull(v7.s4, v1.h4, v6.h8[7]); dump();
umull(v7.s4, v2.h4, v6.h8[7]); dump();
umull(v7.s4, v4.h4, v6.h8[7]); dump();
umull(v7.s4, v8.h4, v6.h8[7]); dump();
umull(v7.s4, v16.h4, v6.h8[7]); dump();
umull(v7.s4, v31.h4, v6.h8[7]); dump();
umull(v7.s4, v7.h4, v6.h8[7]); dump();
umull(v7.s4, v7.h4, v0.h8[7]); dump();
umull(v7.s4, v7.h4, v1.h8[7]); dump();
umull(v7.s4, v7.h4, v2.h8[7]); dump();
umull(v7.s4, v7.h4, v4.h8[7]); dump();
umull(v7.s4, v7.h4, v8.h8[7]); dump();
umull(v7.s4, v7.h4, v15.h8[7]); dump();
umull(v7.s4, v7.h4, v15.h8[0]); dump();
umull(v7.s4, v7.h4, v15.h8[1]); dump();
umull(v7.s4, v7.h4, v15.h8[2]); dump();
umull(v7.s4, v7.h4, v15.h8[4]); dump();
//DataProcSimd_ByElementArithmetic9:1
umlal(v7.d2, v7.s2, v7.s4[3]); dump();
umlal(v0.d2, v7.s2, v7.s4[3]); dump();
umlal(v1.d2, v7.s2, v7.s4[3]); dump();
umlal(v2.d2, v7.s2, v7.s4[3]); dump();
umlal(v4.d2, v7.s2, v7.s4[3]); dump();
umlal(v8.d2, v7.s2, v7.s4[3]); dump();
umlal(v16.d2, v7.s2, v7.s4[3]); dump();
umlal(v31.d2, v7.s2, v7.s4[3]); dump();
umlal(v7.d2, v7.s2, v7.s4[3]); dump();
umlal(v7.d2, v0.s2, v7.s4[3]); dump();
umlal(v7.d2, v1.s2, v7.s4[3]); dump();
umlal(v7.d2, v2.s2, v7.s4[3]); dump();
umlal(v7.d2, v4.s2, v7.s4[3]); dump();
umlal(v7.d2, v8.s2, v7.s4[3]); dump();
umlal(v7.d2, v16.s2, v7.s4[3]); dump();
umlal(v7.d2, v31.s2, v7.s4[3]); dump();
umlal(v7.d2, v7.s2, v7.s4[3]); dump();
umlal(v7.d2, v7.s2, v7s4_3); dump();
umlal(v7.d2, v7.s2, v0.s4[3]); dump();
umlal(v7.d2, v7.s2, v0s4_3); dump();
umlal(v7.d2, v7.s2, v1.s4[3]); dump();
umlal(v7.d2, v7.s2, v1s4_3); dump();
umlal(v7.d2, v7.s2, v2.s4[3]); dump();
umlal(v7.d2, v7.s2, v2s4_3); dump();
umlal(v7.d2, v7.s2, v4.s4[3]); dump();
umlal(v7.d2, v7.s2, v4s4_3); dump();
umlal(v7.d2, v7.s2, v8.s4[3]); dump();
umlal(v7.d2, v7.s2, v8s4_3); dump();
umlal(v7.d2, v7.s2, v16.s4[3]); dump();
umlal(v7.d2, v7.s2, v16s4_3); dump();
umlal(v7.d2, v7.s2, v31.s4[3]); dump();
umlal(v7.d2, v7.s2, v31s4_3); dump();
umlal(v7.d2, v7.s2, v7.s4[0]); dump();
umlal(v7.d2, v7.s2, v7s4_0); dump();
umlal(v7.d2, v7.s2, v7.s4[1]); dump();
umlal(v7.d2, v7.s2, v7s4_1); dump();
umlal(v7.d2, v7.s2, v7.s4[2]); dump();
umlal(v7.d2, v7.s2, v7s4_2); dump();
umlsl(v7.d2, v7.s2, v7.s4[3]); dump();
umlsl(v0.d2, v7.s2, v7.s4[3]); dump();
umlsl(v1.d2, v7.s2, v7.s4[3]); dump();
umlsl(v2.d2, v7.s2, v7.s4[3]); dump();
umlsl(v4.d2, v7.s2, v7.s4[3]); dump();
umlsl(v8.d2, v7.s2, v7.s4[3]); dump();
umlsl(v16.d2, v7.s2, v7.s4[3]); dump();
umlsl(v31.d2, v7.s2, v7.s4[3]); dump();
umlsl(v7.d2, v7.s2, v7.s4[3]); dump();
umlsl(v7.d2, v0.s2, v7.s4[3]); dump();
umlsl(v7.d2, v1.s2, v7.s4[3]); dump();
umlsl(v7.d2, v2.s2, v7.s4[3]); dump();
umlsl(v7.d2, v4.s2, v7.s4[3]); dump();
umlsl(v7.d2, v8.s2, v7.s4[3]); dump();
umlsl(v7.d2, v16.s2, v7.s4[3]); dump();
umlsl(v7.d2, v31.s2, v7.s4[3]); dump();
umlsl(v7.d2, v7.s2, v7.s4[3]); dump();
umlsl(v7.d2, v7.s2, v7s4_3); dump();
umlsl(v7.d2, v7.s2, v0.s4[3]); dump();
umlsl(v7.d2, v7.s2, v0s4_3); dump();
umlsl(v7.d2, v7.s2, v1.s4[3]); dump();
umlsl(v7.d2, v7.s2, v1s4_3); dump();
umlsl(v7.d2, v7.s2, v2.s4[3]); dump();
umlsl(v7.d2, v7.s2, v2s4_3); dump();
umlsl(v7.d2, v7.s2, v4.s4[3]); dump();
umlsl(v7.d2, v7.s2, v4s4_3); dump();
umlsl(v7.d2, v7.s2, v8.s4[3]); dump();
umlsl(v7.d2, v7.s2, v8s4_3); dump();
umlsl(v7.d2, v7.s2, v16.s4[3]); dump();
umlsl(v7.d2, v7.s2, v16s4_3); dump();
umlsl(v7.d2, v7.s2, v31.s4[3]); dump();
umlsl(v7.d2, v7.s2, v31s4_3); dump();
umlsl(v7.d2, v7.s2, v7.s4[0]); dump();
umlsl(v7.d2, v7.s2, v7s4_0); dump();
umlsl(v7.d2, v7.s2, v7.s4[1]); dump();
umlsl(v7.d2, v7.s2, v7s4_1); dump();
umlsl(v7.d2, v7.s2, v7.s4[2]); dump();
umlsl(v7.d2, v7.s2, v7s4_2); dump();
umull(v7.d2, v7.s2, v7.s4[3]); dump();
umull(v0.d2, v7.s2, v7.s4[3]); dump();
umull(v1.d2, v7.s2, v7.s4[3]); dump();
umull(v2.d2, v7.s2, v7.s4[3]); dump();
umull(v4.d2, v7.s2, v7.s4[3]); dump();
umull(v8.d2, v7.s2, v7.s4[3]); dump();
umull(v16.d2, v7.s2, v7.s4[3]); dump();
umull(v31.d2, v7.s2, v7.s4[3]); dump();
umull(v7.d2, v7.s2, v7.s4[3]); dump();
umull(v7.d2, v0.s2, v7.s4[3]); dump();
umull(v7.d2, v1.s2, v7.s4[3]); dump();
umull(v7.d2, v2.s2, v7.s4[3]); dump();
umull(v7.d2, v4.s2, v7.s4[3]); dump();
umull(v7.d2, v8.s2, v7.s4[3]); dump();
umull(v7.d2, v16.s2, v7.s4[3]); dump();
umull(v7.d2, v31.s2, v7.s4[3]); dump();
umull(v7.d2, v7.s2, v7.s4[3]); dump();
umull(v7.d2, v7.s2, v7s4_3); dump();
umull(v7.d2, v7.s2, v0.s4[3]); dump();
umull(v7.d2, v7.s2, v0s4_3); dump();
umull(v7.d2, v7.s2, v1.s4[3]); dump();
umull(v7.d2, v7.s2, v1s4_3); dump();
umull(v7.d2, v7.s2, v2.s4[3]); dump();
umull(v7.d2, v7.s2, v2s4_3); dump();
umull(v7.d2, v7.s2, v4.s4[3]); dump();
umull(v7.d2, v7.s2, v4s4_3); dump();
umull(v7.d2, v7.s2, v8.s4[3]); dump();
umull(v7.d2, v7.s2, v8s4_3); dump();
umull(v7.d2, v7.s2, v16.s4[3]); dump();
umull(v7.d2, v7.s2, v16s4_3); dump();
umull(v7.d2, v7.s2, v31.s4[3]); dump();
umull(v7.d2, v7.s2, v31s4_3); dump();
umull(v7.d2, v7.s2, v7.s4[0]); dump();
umull(v7.d2, v7.s2, v7s4_0); dump();
umull(v7.d2, v7.s2, v7.s4[1]); dump();
umull(v7.d2, v7.s2, v7s4_1); dump();
umull(v7.d2, v7.s2, v7.s4[2]); dump();
umull(v7.d2, v7.s2, v7s4_2); dump();
//DataProcSimd_ByElementArithmetic10:0
umlal2(v7.s4, v7.h8, v6.h8[7]); dump();
umlal2(v0.s4, v7.h8, v6.h8[7]); dump();
umlal2(v1.s4, v7.h8, v6.h8[7]); dump();
umlal2(v2.s4, v7.h8, v6.h8[7]); dump();
umlal2(v4.s4, v7.h8, v6.h8[7]); dump();
umlal2(v8.s4, v7.h8, v6.h8[7]); dump();
umlal2(v16.s4, v7.h8, v6.h8[7]); dump();
umlal2(v31.s4, v7.h8, v6.h8[7]); dump();
umlal2(v7.s4, v7.h8, v6.h8[7]); dump();
umlal2(v7.s4, v0.h8, v6.h8[7]); dump();
umlal2(v7.s4, v1.h8, v6.h8[7]); dump();
umlal2(v7.s4, v2.h8, v6.h8[7]); dump();
umlal2(v7.s4, v4.h8, v6.h8[7]); dump();
umlal2(v7.s4, v8.h8, v6.h8[7]); dump();
umlal2(v7.s4, v16.h8, v6.h8[7]); dump();
umlal2(v7.s4, v31.h8, v6.h8[7]); dump();
umlal2(v7.s4, v7.h8, v6.h8[7]); dump();
umlal2(v7.s4, v7.h8, v0.h8[7]); dump();
umlal2(v7.s4, v7.h8, v1.h8[7]); dump();
umlal2(v7.s4, v7.h8, v2.h8[7]); dump();
umlal2(v7.s4, v7.h8, v4.h8[7]); dump();
umlal2(v7.s4, v7.h8, v8.h8[7]); dump();
umlal2(v7.s4, v7.h8, v15.h8[7]); dump();
umlal2(v7.s4, v7.h8, v15.h8[0]); dump();
umlal2(v7.s4, v7.h8, v15.h8[1]); dump();
umlal2(v7.s4, v7.h8, v15.h8[2]); dump();
umlal2(v7.s4, v7.h8, v15.h8[4]); dump();
umlsl2(v7.s4, v7.h8, v6.h8[7]); dump();
umlsl2(v0.s4, v7.h8, v6.h8[7]); dump();
umlsl2(v1.s4, v7.h8, v6.h8[7]); dump();
umlsl2(v2.s4, v7.h8, v6.h8[7]); dump();
umlsl2(v4.s4, v7.h8, v6.h8[7]); dump();
umlsl2(v8.s4, v7.h8, v6.h8[7]); dump();
umlsl2(v16.s4, v7.h8, v6.h8[7]); dump();
umlsl2(v31.s4, v7.h8, v6.h8[7]); dump();
umlsl2(v7.s4, v7.h8, v6.h8[7]); dump();
umlsl2(v7.s4, v0.h8, v6.h8[7]); dump();
umlsl2(v7.s4, v1.h8, v6.h8[7]); dump();
umlsl2(v7.s4, v2.h8, v6.h8[7]); dump();
umlsl2(v7.s4, v4.h8, v6.h8[7]); dump();
umlsl2(v7.s4, v8.h8, v6.h8[7]); dump();
umlsl2(v7.s4, v16.h8, v6.h8[7]); dump();
umlsl2(v7.s4, v31.h8, v6.h8[7]); dump();
umlsl2(v7.s4, v7.h8, v6.h8[7]); dump();
umlsl2(v7.s4, v7.h8, v0.h8[7]); dump();
umlsl2(v7.s4, v7.h8, v1.h8[7]); dump();
umlsl2(v7.s4, v7.h8, v2.h8[7]); dump();
umlsl2(v7.s4, v7.h8, v4.h8[7]); dump();
umlsl2(v7.s4, v7.h8, v8.h8[7]); dump();
umlsl2(v7.s4, v7.h8, v15.h8[7]); dump();
umlsl2(v7.s4, v7.h8, v15.h8[0]); dump();
umlsl2(v7.s4, v7.h8, v15.h8[1]); dump();
umlsl2(v7.s4, v7.h8, v15.h8[2]); dump();
umlsl2(v7.s4, v7.h8, v15.h8[4]); dump();
umull2(v7.s4, v7.h8, v6.h8[7]); dump();
umull2(v0.s4, v7.h8, v6.h8[7]); dump();
umull2(v1.s4, v7.h8, v6.h8[7]); dump();
umull2(v2.s4, v7.h8, v6.h8[7]); dump();
umull2(v4.s4, v7.h8, v6.h8[7]); dump();
umull2(v8.s4, v7.h8, v6.h8[7]); dump();
umull2(v16.s4, v7.h8, v6.h8[7]); dump();
umull2(v31.s4, v7.h8, v6.h8[7]); dump();
umull2(v7.s4, v7.h8, v6.h8[7]); dump();
umull2(v7.s4, v0.h8, v6.h8[7]); dump();
umull2(v7.s4, v1.h8, v6.h8[7]); dump();
umull2(v7.s4, v2.h8, v6.h8[7]); dump();
umull2(v7.s4, v4.h8, v6.h8[7]); dump();
umull2(v7.s4, v8.h8, v6.h8[7]); dump();
umull2(v7.s4, v16.h8, v6.h8[7]); dump();
umull2(v7.s4, v31.h8, v6.h8[7]); dump();
umull2(v7.s4, v7.h8, v6.h8[7]); dump();
umull2(v7.s4, v7.h8, v0.h8[7]); dump();
umull2(v7.s4, v7.h8, v1.h8[7]); dump();
umull2(v7.s4, v7.h8, v2.h8[7]); dump();
umull2(v7.s4, v7.h8, v4.h8[7]); dump();
umull2(v7.s4, v7.h8, v8.h8[7]); dump();
umull2(v7.s4, v7.h8, v15.h8[7]); dump();
umull2(v7.s4, v7.h8, v15.h8[0]); dump();
umull2(v7.s4, v7.h8, v15.h8[1]); dump();
umull2(v7.s4, v7.h8, v15.h8[2]); dump();
umull2(v7.s4, v7.h8, v15.h8[4]); dump();
//DataProcSimd_ByElementArithmetic10:1
umlal2(v7.d2, v7.s4, v7.s4[3]); dump();
umlal2(v0.d2, v7.s4, v7.s4[3]); dump();
umlal2(v1.d2, v7.s4, v7.s4[3]); dump();
umlal2(v2.d2, v7.s4, v7.s4[3]); dump();
umlal2(v4.d2, v7.s4, v7.s4[3]); dump();
umlal2(v8.d2, v7.s4, v7.s4[3]); dump();
umlal2(v16.d2, v7.s4, v7.s4[3]); dump();
umlal2(v31.d2, v7.s4, v7.s4[3]); dump();
umlal2(v7.d2, v7.s4, v7.s4[3]); dump();
umlal2(v7.d2, v0.s4, v7.s4[3]); dump();
umlal2(v7.d2, v1.s4, v7.s4[3]); dump();
umlal2(v7.d2, v2.s4, v7.s4[3]); dump();
umlal2(v7.d2, v4.s4, v7.s4[3]); dump();
umlal2(v7.d2, v8.s4, v7.s4[3]); dump();
umlal2(v7.d2, v16.s4, v7.s4[3]); dump();
umlal2(v7.d2, v31.s4, v7.s4[3]); dump();
umlal2(v7.d2, v7.s4, v7.s4[3]); dump();
umlal2(v7.d2, v7.s4, v7s4_3); dump();
umlal2(v7.d2, v7.s4, v0.s4[3]); dump();
umlal2(v7.d2, v7.s4, v0s4_3); dump();
umlal2(v7.d2, v7.s4, v1.s4[3]); dump();
umlal2(v7.d2, v7.s4, v1s4_3); dump();
umlal2(v7.d2, v7.s4, v2.s4[3]); dump();
umlal2(v7.d2, v7.s4, v2s4_3); dump();
umlal2(v7.d2, v7.s4, v4.s4[3]); dump();
umlal2(v7.d2, v7.s4, v4s4_3); dump();
umlal2(v7.d2, v7.s4, v8.s4[3]); dump();
umlal2(v7.d2, v7.s4, v8s4_3); dump();
umlal2(v7.d2, v7.s4, v16.s4[3]); dump();
umlal2(v7.d2, v7.s4, v16s4_3); dump();
umlal2(v7.d2, v7.s4, v31.s4[3]); dump();
umlal2(v7.d2, v7.s4, v31s4_3); dump();
umlal2(v7.d2, v7.s4, v7.s4[0]); dump();
umlal2(v7.d2, v7.s4, v7s4_0); dump();
umlal2(v7.d2, v7.s4, v7.s4[1]); dump();
umlal2(v7.d2, v7.s4, v7s4_1); dump();
umlal2(v7.d2, v7.s4, v7.s4[2]); dump();
umlal2(v7.d2, v7.s4, v7s4_2); dump();
umlsl2(v7.d2, v7.s4, v7.s4[3]); dump();
umlsl2(v0.d2, v7.s4, v7.s4[3]); dump();
umlsl2(v1.d2, v7.s4, v7.s4[3]); dump();
umlsl2(v2.d2, v7.s4, v7.s4[3]); dump();
umlsl2(v4.d2, v7.s4, v7.s4[3]); dump();
umlsl2(v8.d2, v7.s4, v7.s4[3]); dump();
umlsl2(v16.d2, v7.s4, v7.s4[3]); dump();
umlsl2(v31.d2, v7.s4, v7.s4[3]); dump();
umlsl2(v7.d2, v7.s4, v7.s4[3]); dump();
umlsl2(v7.d2, v0.s4, v7.s4[3]); dump();
umlsl2(v7.d2, v1.s4, v7.s4[3]); dump();
umlsl2(v7.d2, v2.s4, v7.s4[3]); dump();
umlsl2(v7.d2, v4.s4, v7.s4[3]); dump();
umlsl2(v7.d2, v8.s4, v7.s4[3]); dump();
umlsl2(v7.d2, v16.s4, v7.s4[3]); dump();
umlsl2(v7.d2, v31.s4, v7.s4[3]); dump();
umlsl2(v7.d2, v7.s4, v7.s4[3]); dump();
umlsl2(v7.d2, v7.s4, v7s4_3); dump();
umlsl2(v7.d2, v7.s4, v0.s4[3]); dump();
umlsl2(v7.d2, v7.s4, v0s4_3); dump();
umlsl2(v7.d2, v7.s4, v1.s4[3]); dump();
umlsl2(v7.d2, v7.s4, v1s4_3); dump();
umlsl2(v7.d2, v7.s4, v2.s4[3]); dump();
umlsl2(v7.d2, v7.s4, v2s4_3); dump();
umlsl2(v7.d2, v7.s4, v4.s4[3]); dump();
umlsl2(v7.d2, v7.s4, v4s4_3); dump();
umlsl2(v7.d2, v7.s4, v8.s4[3]); dump();
umlsl2(v7.d2, v7.s4, v8s4_3); dump();
umlsl2(v7.d2, v7.s4, v16.s4[3]); dump();
umlsl2(v7.d2, v7.s4, v16s4_3); dump();
umlsl2(v7.d2, v7.s4, v31.s4[3]); dump();
umlsl2(v7.d2, v7.s4, v31s4_3); dump();
umlsl2(v7.d2, v7.s4, v7.s4[0]); dump();
umlsl2(v7.d2, v7.s4, v7s4_0); dump();
umlsl2(v7.d2, v7.s4, v7.s4[1]); dump();
umlsl2(v7.d2, v7.s4, v7s4_1); dump();
umlsl2(v7.d2, v7.s4, v7.s4[2]); dump();
umlsl2(v7.d2, v7.s4, v7s4_2); dump();
umull2(v7.d2, v7.s4, v7.s4[3]); dump();
umull2(v0.d2, v7.s4, v7.s4[3]); dump();
umull2(v1.d2, v7.s4, v7.s4[3]); dump();
umull2(v2.d2, v7.s4, v7.s4[3]); dump();
umull2(v4.d2, v7.s4, v7.s4[3]); dump();
umull2(v8.d2, v7.s4, v7.s4[3]); dump();
umull2(v16.d2, v7.s4, v7.s4[3]); dump();
umull2(v31.d2, v7.s4, v7.s4[3]); dump();
umull2(v7.d2, v7.s4, v7.s4[3]); dump();
umull2(v7.d2, v0.s4, v7.s4[3]); dump();
umull2(v7.d2, v1.s4, v7.s4[3]); dump();
umull2(v7.d2, v2.s4, v7.s4[3]); dump();
umull2(v7.d2, v4.s4, v7.s4[3]); dump();
umull2(v7.d2, v8.s4, v7.s4[3]); dump();
umull2(v7.d2, v16.s4, v7.s4[3]); dump();
umull2(v7.d2, v31.s4, v7.s4[3]); dump();
umull2(v7.d2, v7.s4, v7.s4[3]); dump();
umull2(v7.d2, v7.s4, v7s4_3); dump();
umull2(v7.d2, v7.s4, v0.s4[3]); dump();
umull2(v7.d2, v7.s4, v0s4_3); dump();
umull2(v7.d2, v7.s4, v1.s4[3]); dump();
umull2(v7.d2, v7.s4, v1s4_3); dump();
umull2(v7.d2, v7.s4, v2.s4[3]); dump();
umull2(v7.d2, v7.s4, v2s4_3); dump();
umull2(v7.d2, v7.s4, v4.s4[3]); dump();
umull2(v7.d2, v7.s4, v4s4_3); dump();
umull2(v7.d2, v7.s4, v8.s4[3]); dump();
umull2(v7.d2, v7.s4, v8s4_3); dump();
umull2(v7.d2, v7.s4, v16.s4[3]); dump();
umull2(v7.d2, v7.s4, v16s4_3); dump();
umull2(v7.d2, v7.s4, v31.s4[3]); dump();
umull2(v7.d2, v7.s4, v31s4_3); dump();
umull2(v7.d2, v7.s4, v7.s4[0]); dump();
umull2(v7.d2, v7.s4, v7s4_0); dump();
umull2(v7.d2, v7.s4, v7.s4[1]); dump();
umull2(v7.d2, v7.s4, v7s4_1); dump();
umull2(v7.d2, v7.s4, v7.s4[2]); dump();
umull2(v7.d2, v7.s4, v7s4_2); dump();
//DataProcSimd_Permute0:0
ext(v7.b8, v7.b8, v7.b8, 7); dump();
ext(v0.b8, v7.b8, v7.b8, 7); dump();
ext(v1.b8, v7.b8, v7.b8, 7); dump();
ext(v2.b8, v7.b8, v7.b8, 7); dump();
ext(v4.b8, v7.b8, v7.b8, 7); dump();
ext(v8.b8, v7.b8, v7.b8, 7); dump();
ext(v16.b8, v7.b8, v7.b8, 7); dump();
ext(v31.b8, v7.b8, v7.b8, 7); dump();
ext(v7.b8, v7.b8, v7.b8, 7); dump();
ext(v7.b8, v0.b8, v7.b8, 7); dump();
ext(v7.b8, v1.b8, v7.b8, 7); dump();
ext(v7.b8, v2.b8, v7.b8, 7); dump();
ext(v7.b8, v4.b8, v7.b8, 7); dump();
ext(v7.b8, v8.b8, v7.b8, 7); dump();
ext(v7.b8, v16.b8, v7.b8, 7); dump();
ext(v7.b8, v31.b8, v7.b8, 7); dump();
ext(v7.b8, v7.b8, v7.b8, 7); dump();
ext(v7.b8, v7.b8, v0.b8, 7); dump();
ext(v7.b8, v7.b8, v1.b8, 7); dump();
ext(v7.b8, v7.b8, v2.b8, 7); dump();
ext(v7.b8, v7.b8, v4.b8, 7); dump();
ext(v7.b8, v7.b8, v8.b8, 7); dump();
ext(v7.b8, v7.b8, v16.b8, 7); dump();
ext(v7.b8, v7.b8, v31.b8, 7); dump();
ext(v7.b8, v7.b8, v7.b8, 7); dump();
ext(v7.b8, v7.b8, v7.b8, 0); dump();
ext(v7.b8, v7.b8, v7.b8, 1); dump();
ext(v7.b8, v7.b8, v7.b8, 2); dump();
ext(v7.b8, v7.b8, v7.b8, 4); dump();
//DataProcSimd_Permute0:1
ext(v7.b16, v7.b16, v7.b16, 7); dump();
ext(v0.b16, v7.b16, v7.b16, 7); dump();
ext(v1.b16, v7.b16, v7.b16, 7); dump();
ext(v2.b16, v7.b16, v7.b16, 7); dump();
ext(v4.b16, v7.b16, v7.b16, 7); dump();
ext(v8.b16, v7.b16, v7.b16, 7); dump();
ext(v16.b16, v7.b16, v7.b16, 7); dump();
ext(v31.b16, v7.b16, v7.b16, 7); dump();
ext(v7.b16, v7.b16, v7.b16, 7); dump();
ext(v7.b16, v0.b16, v7.b16, 7); dump();
ext(v7.b16, v1.b16, v7.b16, 7); dump();
ext(v7.b16, v2.b16, v7.b16, 7); dump();
ext(v7.b16, v4.b16, v7.b16, 7); dump();
ext(v7.b16, v8.b16, v7.b16, 7); dump();
ext(v7.b16, v16.b16, v7.b16, 7); dump();
ext(v7.b16, v31.b16, v7.b16, 7); dump();
ext(v7.b16, v7.b16, v7.b16, 7); dump();
ext(v7.b16, v7.b16, v0.b16, 7); dump();
ext(v7.b16, v7.b16, v1.b16, 7); dump();
ext(v7.b16, v7.b16, v2.b16, 7); dump();
ext(v7.b16, v7.b16, v4.b16, 7); dump();
ext(v7.b16, v7.b16, v8.b16, 7); dump();
ext(v7.b16, v7.b16, v16.b16, 7); dump();
ext(v7.b16, v7.b16, v31.b16, 7); dump();
ext(v7.b16, v7.b16, v7.b16, 7); dump();
ext(v7.b16, v7.b16, v7.b16, 0); dump();
ext(v7.b16, v7.b16, v7.b16, 1); dump();
ext(v7.b16, v7.b16, v7.b16, 2); dump();
ext(v7.b16, v7.b16, v7.b16, 4); dump();
ext(v7.b16, v7.b16, v7.b16, 8); dump();
ext(v7.b16, v7.b16, v7.b16, 15); dump();
//DataProcSimd_Permute1:0
trn1(v7.b8, v7.b8, v7.b8); dump();
trn1(v0.b8, v7.b8, v7.b8); dump();
trn1(v1.b8, v7.b8, v7.b8); dump();
trn1(v2.b8, v7.b8, v7.b8); dump();
trn1(v4.b8, v7.b8, v7.b8); dump();
trn1(v8.b8, v7.b8, v7.b8); dump();
trn1(v16.b8, v7.b8, v7.b8); dump();
trn1(v31.b8, v7.b8, v7.b8); dump();
trn1(v7.b8, v7.b8, v7.b8); dump();
trn1(v7.b8, v0.b8, v7.b8); dump();
trn1(v7.b8, v1.b8, v7.b8); dump();
trn1(v7.b8, v2.b8, v7.b8); dump();
trn1(v7.b8, v4.b8, v7.b8); dump();
trn1(v7.b8, v8.b8, v7.b8); dump();
trn1(v7.b8, v16.b8, v7.b8); dump();
trn1(v7.b8, v31.b8, v7.b8); dump();
trn1(v7.b8, v7.b8, v7.b8); dump();
trn1(v7.b8, v7.b8, v0.b8); dump();
trn1(v7.b8, v7.b8, v1.b8); dump();
trn1(v7.b8, v7.b8, v2.b8); dump();
trn1(v7.b8, v7.b8, v4.b8); dump();
trn1(v7.b8, v7.b8, v8.b8); dump();
trn1(v7.b8, v7.b8, v16.b8); dump();
trn1(v7.b8, v7.b8, v31.b8); dump();
trn2(v7.b8, v7.b8, v7.b8); dump();
trn2(v0.b8, v7.b8, v7.b8); dump();
trn2(v1.b8, v7.b8, v7.b8); dump();
trn2(v2.b8, v7.b8, v7.b8); dump();
trn2(v4.b8, v7.b8, v7.b8); dump();
trn2(v8.b8, v7.b8, v7.b8); dump();
trn2(v16.b8, v7.b8, v7.b8); dump();
trn2(v31.b8, v7.b8, v7.b8); dump();
trn2(v7.b8, v7.b8, v7.b8); dump();
trn2(v7.b8, v0.b8, v7.b8); dump();
trn2(v7.b8, v1.b8, v7.b8); dump();
trn2(v7.b8, v2.b8, v7.b8); dump();
trn2(v7.b8, v4.b8, v7.b8); dump();
trn2(v7.b8, v8.b8, v7.b8); dump();
trn2(v7.b8, v16.b8, v7.b8); dump();
trn2(v7.b8, v31.b8, v7.b8); dump();
trn2(v7.b8, v7.b8, v7.b8); dump();
trn2(v7.b8, v7.b8, v0.b8); dump();
trn2(v7.b8, v7.b8, v1.b8); dump();
trn2(v7.b8, v7.b8, v2.b8); dump();
trn2(v7.b8, v7.b8, v4.b8); dump();
trn2(v7.b8, v7.b8, v8.b8); dump();
trn2(v7.b8, v7.b8, v16.b8); dump();
trn2(v7.b8, v7.b8, v31.b8); dump();
uzp1(v7.b8, v7.b8, v7.b8); dump();
uzp1(v0.b8, v7.b8, v7.b8); dump();
uzp1(v1.b8, v7.b8, v7.b8); dump();
uzp1(v2.b8, v7.b8, v7.b8); dump();
uzp1(v4.b8, v7.b8, v7.b8); dump();
uzp1(v8.b8, v7.b8, v7.b8); dump();
uzp1(v16.b8, v7.b8, v7.b8); dump();
uzp1(v31.b8, v7.b8, v7.b8); dump();
uzp1(v7.b8, v7.b8, v7.b8); dump();
uzp1(v7.b8, v0.b8, v7.b8); dump();
uzp1(v7.b8, v1.b8, v7.b8); dump();
uzp1(v7.b8, v2.b8, v7.b8); dump();
uzp1(v7.b8, v4.b8, v7.b8); dump();
uzp1(v7.b8, v8.b8, v7.b8); dump();
uzp1(v7.b8, v16.b8, v7.b8); dump();
uzp1(v7.b8, v31.b8, v7.b8); dump();
uzp1(v7.b8, v7.b8, v7.b8); dump();
uzp1(v7.b8, v7.b8, v0.b8); dump();
uzp1(v7.b8, v7.b8, v1.b8); dump();
uzp1(v7.b8, v7.b8, v2.b8); dump();
uzp1(v7.b8, v7.b8, v4.b8); dump();
uzp1(v7.b8, v7.b8, v8.b8); dump();
uzp1(v7.b8, v7.b8, v16.b8); dump();
uzp1(v7.b8, v7.b8, v31.b8); dump();
uzp2(v7.b8, v7.b8, v7.b8); dump();
uzp2(v0.b8, v7.b8, v7.b8); dump();
uzp2(v1.b8, v7.b8, v7.b8); dump();
uzp2(v2.b8, v7.b8, v7.b8); dump();
uzp2(v4.b8, v7.b8, v7.b8); dump();
uzp2(v8.b8, v7.b8, v7.b8); dump();
uzp2(v16.b8, v7.b8, v7.b8); dump();
uzp2(v31.b8, v7.b8, v7.b8); dump();
uzp2(v7.b8, v7.b8, v7.b8); dump();
uzp2(v7.b8, v0.b8, v7.b8); dump();
uzp2(v7.b8, v1.b8, v7.b8); dump();
uzp2(v7.b8, v2.b8, v7.b8); dump();
uzp2(v7.b8, v4.b8, v7.b8); dump();
uzp2(v7.b8, v8.b8, v7.b8); dump();
uzp2(v7.b8, v16.b8, v7.b8); dump();
uzp2(v7.b8, v31.b8, v7.b8); dump();
uzp2(v7.b8, v7.b8, v7.b8); dump();
uzp2(v7.b8, v7.b8, v0.b8); dump();
uzp2(v7.b8, v7.b8, v1.b8); dump();
uzp2(v7.b8, v7.b8, v2.b8); dump();
uzp2(v7.b8, v7.b8, v4.b8); dump();
uzp2(v7.b8, v7.b8, v8.b8); dump();
uzp2(v7.b8, v7.b8, v16.b8); dump();
uzp2(v7.b8, v7.b8, v31.b8); dump();
zip1(v7.b8, v7.b8, v7.b8); dump();
zip1(v0.b8, v7.b8, v7.b8); dump();
zip1(v1.b8, v7.b8, v7.b8); dump();
zip1(v2.b8, v7.b8, v7.b8); dump();
zip1(v4.b8, v7.b8, v7.b8); dump();
zip1(v8.b8, v7.b8, v7.b8); dump();
zip1(v16.b8, v7.b8, v7.b8); dump();
zip1(v31.b8, v7.b8, v7.b8); dump();
zip1(v7.b8, v7.b8, v7.b8); dump();
zip1(v7.b8, v0.b8, v7.b8); dump();
zip1(v7.b8, v1.b8, v7.b8); dump();
zip1(v7.b8, v2.b8, v7.b8); dump();
zip1(v7.b8, v4.b8, v7.b8); dump();
zip1(v7.b8, v8.b8, v7.b8); dump();
zip1(v7.b8, v16.b8, v7.b8); dump();
zip1(v7.b8, v31.b8, v7.b8); dump();
zip1(v7.b8, v7.b8, v7.b8); dump();
zip1(v7.b8, v7.b8, v0.b8); dump();
zip1(v7.b8, v7.b8, v1.b8); dump();
zip1(v7.b8, v7.b8, v2.b8); dump();
zip1(v7.b8, v7.b8, v4.b8); dump();
zip1(v7.b8, v7.b8, v8.b8); dump();
zip1(v7.b8, v7.b8, v16.b8); dump();
zip1(v7.b8, v7.b8, v31.b8); dump();
zip2(v7.b8, v7.b8, v7.b8); dump();
zip2(v0.b8, v7.b8, v7.b8); dump();
zip2(v1.b8, v7.b8, v7.b8); dump();
zip2(v2.b8, v7.b8, v7.b8); dump();
zip2(v4.b8, v7.b8, v7.b8); dump();
zip2(v8.b8, v7.b8, v7.b8); dump();
zip2(v16.b8, v7.b8, v7.b8); dump();
zip2(v31.b8, v7.b8, v7.b8); dump();
zip2(v7.b8, v7.b8, v7.b8); dump();
zip2(v7.b8, v0.b8, v7.b8); dump();
zip2(v7.b8, v1.b8, v7.b8); dump();
zip2(v7.b8, v2.b8, v7.b8); dump();
zip2(v7.b8, v4.b8, v7.b8); dump();
zip2(v7.b8, v8.b8, v7.b8); dump();
zip2(v7.b8, v16.b8, v7.b8); dump();
zip2(v7.b8, v31.b8, v7.b8); dump();
zip2(v7.b8, v7.b8, v7.b8); dump();
zip2(v7.b8, v7.b8, v0.b8); dump();
zip2(v7.b8, v7.b8, v1.b8); dump();
zip2(v7.b8, v7.b8, v2.b8); dump();
zip2(v7.b8, v7.b8, v4.b8); dump();
zip2(v7.b8, v7.b8, v8.b8); dump();
zip2(v7.b8, v7.b8, v16.b8); dump();
zip2(v7.b8, v7.b8, v31.b8); dump();
//DataProcSimd_Permute1:1
trn1(v7.b16, v7.b16, v7.b16); dump();
trn1(v0.b16, v7.b16, v7.b16); dump();
trn1(v1.b16, v7.b16, v7.b16); dump();
trn1(v2.b16, v7.b16, v7.b16); dump();
trn1(v4.b16, v7.b16, v7.b16); dump();
trn1(v8.b16, v7.b16, v7.b16); dump();
trn1(v16.b16, v7.b16, v7.b16); dump();
trn1(v31.b16, v7.b16, v7.b16); dump();
trn1(v7.b16, v7.b16, v7.b16); dump();
trn1(v7.b16, v0.b16, v7.b16); dump();
trn1(v7.b16, v1.b16, v7.b16); dump();
trn1(v7.b16, v2.b16, v7.b16); dump();
trn1(v7.b16, v4.b16, v7.b16); dump();
trn1(v7.b16, v8.b16, v7.b16); dump();
trn1(v7.b16, v16.b16, v7.b16); dump();
trn1(v7.b16, v31.b16, v7.b16); dump();
trn1(v7.b16, v7.b16, v7.b16); dump();
trn1(v7.b16, v7.b16, v0.b16); dump();
trn1(v7.b16, v7.b16, v1.b16); dump();
trn1(v7.b16, v7.b16, v2.b16); dump();
trn1(v7.b16, v7.b16, v4.b16); dump();
trn1(v7.b16, v7.b16, v8.b16); dump();
trn1(v7.b16, v7.b16, v16.b16); dump();
trn1(v7.b16, v7.b16, v31.b16); dump();
trn2(v7.b16, v7.b16, v7.b16); dump();
trn2(v0.b16, v7.b16, v7.b16); dump();
trn2(v1.b16, v7.b16, v7.b16); dump();
trn2(v2.b16, v7.b16, v7.b16); dump();
trn2(v4.b16, v7.b16, v7.b16); dump();
trn2(v8.b16, v7.b16, v7.b16); dump();
trn2(v16.b16, v7.b16, v7.b16); dump();
trn2(v31.b16, v7.b16, v7.b16); dump();
trn2(v7.b16, v7.b16, v7.b16); dump();
trn2(v7.b16, v0.b16, v7.b16); dump();
trn2(v7.b16, v1.b16, v7.b16); dump();
trn2(v7.b16, v2.b16, v7.b16); dump();
trn2(v7.b16, v4.b16, v7.b16); dump();
trn2(v7.b16, v8.b16, v7.b16); dump();
trn2(v7.b16, v16.b16, v7.b16); dump();
trn2(v7.b16, v31.b16, v7.b16); dump();
trn2(v7.b16, v7.b16, v7.b16); dump();
trn2(v7.b16, v7.b16, v0.b16); dump();
trn2(v7.b16, v7.b16, v1.b16); dump();
trn2(v7.b16, v7.b16, v2.b16); dump();
trn2(v7.b16, v7.b16, v4.b16); dump();
trn2(v7.b16, v7.b16, v8.b16); dump();
trn2(v7.b16, v7.b16, v16.b16); dump();
trn2(v7.b16, v7.b16, v31.b16); dump();
uzp1(v7.b16, v7.b16, v7.b16); dump();
uzp1(v0.b16, v7.b16, v7.b16); dump();
uzp1(v1.b16, v7.b16, v7.b16); dump();
uzp1(v2.b16, v7.b16, v7.b16); dump();
uzp1(v4.b16, v7.b16, v7.b16); dump();
uzp1(v8.b16, v7.b16, v7.b16); dump();
uzp1(v16.b16, v7.b16, v7.b16); dump();
uzp1(v31.b16, v7.b16, v7.b16); dump();
uzp1(v7.b16, v7.b16, v7.b16); dump();
uzp1(v7.b16, v0.b16, v7.b16); dump();
uzp1(v7.b16, v1.b16, v7.b16); dump();
uzp1(v7.b16, v2.b16, v7.b16); dump();
uzp1(v7.b16, v4.b16, v7.b16); dump();
uzp1(v7.b16, v8.b16, v7.b16); dump();
uzp1(v7.b16, v16.b16, v7.b16); dump();
uzp1(v7.b16, v31.b16, v7.b16); dump();
uzp1(v7.b16, v7.b16, v7.b16); dump();
uzp1(v7.b16, v7.b16, v0.b16); dump();
uzp1(v7.b16, v7.b16, v1.b16); dump();
uzp1(v7.b16, v7.b16, v2.b16); dump();
uzp1(v7.b16, v7.b16, v4.b16); dump();
uzp1(v7.b16, v7.b16, v8.b16); dump();
uzp1(v7.b16, v7.b16, v16.b16); dump();
uzp1(v7.b16, v7.b16, v31.b16); dump();
uzp2(v7.b16, v7.b16, v7.b16); dump();
uzp2(v0.b16, v7.b16, v7.b16); dump();
uzp2(v1.b16, v7.b16, v7.b16); dump();
uzp2(v2.b16, v7.b16, v7.b16); dump();
uzp2(v4.b16, v7.b16, v7.b16); dump();
uzp2(v8.b16, v7.b16, v7.b16); dump();
uzp2(v16.b16, v7.b16, v7.b16); dump();
uzp2(v31.b16, v7.b16, v7.b16); dump();
uzp2(v7.b16, v7.b16, v7.b16); dump();
uzp2(v7.b16, v0.b16, v7.b16); dump();
uzp2(v7.b16, v1.b16, v7.b16); dump();
uzp2(v7.b16, v2.b16, v7.b16); dump();
uzp2(v7.b16, v4.b16, v7.b16); dump();
uzp2(v7.b16, v8.b16, v7.b16); dump();
uzp2(v7.b16, v16.b16, v7.b16); dump();
uzp2(v7.b16, v31.b16, v7.b16); dump();
uzp2(v7.b16, v7.b16, v7.b16); dump();
uzp2(v7.b16, v7.b16, v0.b16); dump();
uzp2(v7.b16, v7.b16, v1.b16); dump();
uzp2(v7.b16, v7.b16, v2.b16); dump();
uzp2(v7.b16, v7.b16, v4.b16); dump();
uzp2(v7.b16, v7.b16, v8.b16); dump();
uzp2(v7.b16, v7.b16, v16.b16); dump();
uzp2(v7.b16, v7.b16, v31.b16); dump();
zip1(v7.b16, v7.b16, v7.b16); dump();
zip1(v0.b16, v7.b16, v7.b16); dump();
zip1(v1.b16, v7.b16, v7.b16); dump();
zip1(v2.b16, v7.b16, v7.b16); dump();
zip1(v4.b16, v7.b16, v7.b16); dump();
zip1(v8.b16, v7.b16, v7.b16); dump();
zip1(v16.b16, v7.b16, v7.b16); dump();
zip1(v31.b16, v7.b16, v7.b16); dump();
zip1(v7.b16, v7.b16, v7.b16); dump();
zip1(v7.b16, v0.b16, v7.b16); dump();
zip1(v7.b16, v1.b16, v7.b16); dump();
zip1(v7.b16, v2.b16, v7.b16); dump();
zip1(v7.b16, v4.b16, v7.b16); dump();
zip1(v7.b16, v8.b16, v7.b16); dump();
zip1(v7.b16, v16.b16, v7.b16); dump();
zip1(v7.b16, v31.b16, v7.b16); dump();
zip1(v7.b16, v7.b16, v7.b16); dump();
zip1(v7.b16, v7.b16, v0.b16); dump();
zip1(v7.b16, v7.b16, v1.b16); dump();
zip1(v7.b16, v7.b16, v2.b16); dump();
zip1(v7.b16, v7.b16, v4.b16); dump();
zip1(v7.b16, v7.b16, v8.b16); dump();
zip1(v7.b16, v7.b16, v16.b16); dump();
zip1(v7.b16, v7.b16, v31.b16); dump();
zip2(v7.b16, v7.b16, v7.b16); dump();
zip2(v0.b16, v7.b16, v7.b16); dump();
zip2(v1.b16, v7.b16, v7.b16); dump();
zip2(v2.b16, v7.b16, v7.b16); dump();
zip2(v4.b16, v7.b16, v7.b16); dump();
zip2(v8.b16, v7.b16, v7.b16); dump();
zip2(v16.b16, v7.b16, v7.b16); dump();
zip2(v31.b16, v7.b16, v7.b16); dump();
zip2(v7.b16, v7.b16, v7.b16); dump();
zip2(v7.b16, v0.b16, v7.b16); dump();
zip2(v7.b16, v1.b16, v7.b16); dump();
zip2(v7.b16, v2.b16, v7.b16); dump();
zip2(v7.b16, v4.b16, v7.b16); dump();
zip2(v7.b16, v8.b16, v7.b16); dump();
zip2(v7.b16, v16.b16, v7.b16); dump();
zip2(v7.b16, v31.b16, v7.b16); dump();
zip2(v7.b16, v7.b16, v7.b16); dump();
zip2(v7.b16, v7.b16, v0.b16); dump();
zip2(v7.b16, v7.b16, v1.b16); dump();
zip2(v7.b16, v7.b16, v2.b16); dump();
zip2(v7.b16, v7.b16, v4.b16); dump();
zip2(v7.b16, v7.b16, v8.b16); dump();
zip2(v7.b16, v7.b16, v16.b16); dump();
zip2(v7.b16, v7.b16, v31.b16); dump();
//DataProcSimd_Permute1:2
trn1(v7.h4, v7.h4, v7.h4); dump();
trn1(v0.h4, v7.h4, v7.h4); dump();
trn1(v1.h4, v7.h4, v7.h4); dump();
trn1(v2.h4, v7.h4, v7.h4); dump();
trn1(v4.h4, v7.h4, v7.h4); dump();
trn1(v8.h4, v7.h4, v7.h4); dump();
trn1(v16.h4, v7.h4, v7.h4); dump();
trn1(v31.h4, v7.h4, v7.h4); dump();
trn1(v7.h4, v7.h4, v7.h4); dump();
trn1(v7.h4, v0.h4, v7.h4); dump();
trn1(v7.h4, v1.h4, v7.h4); dump();
trn1(v7.h4, v2.h4, v7.h4); dump();
trn1(v7.h4, v4.h4, v7.h4); dump();
trn1(v7.h4, v8.h4, v7.h4); dump();
trn1(v7.h4, v16.h4, v7.h4); dump();
trn1(v7.h4, v31.h4, v7.h4); dump();
trn1(v7.h4, v7.h4, v7.h4); dump();
trn1(v7.h4, v7.h4, v0.h4); dump();
trn1(v7.h4, v7.h4, v1.h4); dump();
trn1(v7.h4, v7.h4, v2.h4); dump();
trn1(v7.h4, v7.h4, v4.h4); dump();
trn1(v7.h4, v7.h4, v8.h4); dump();
trn1(v7.h4, v7.h4, v16.h4); dump();
trn1(v7.h4, v7.h4, v31.h4); dump();
trn2(v7.h4, v7.h4, v7.h4); dump();
trn2(v0.h4, v7.h4, v7.h4); dump();
trn2(v1.h4, v7.h4, v7.h4); dump();
trn2(v2.h4, v7.h4, v7.h4); dump();
trn2(v4.h4, v7.h4, v7.h4); dump();
trn2(v8.h4, v7.h4, v7.h4); dump();
trn2(v16.h4, v7.h4, v7.h4); dump();
trn2(v31.h4, v7.h4, v7.h4); dump();
trn2(v7.h4, v7.h4, v7.h4); dump();
trn2(v7.h4, v0.h4, v7.h4); dump();
trn2(v7.h4, v1.h4, v7.h4); dump();
trn2(v7.h4, v2.h4, v7.h4); dump();
trn2(v7.h4, v4.h4, v7.h4); dump();
trn2(v7.h4, v8.h4, v7.h4); dump();
trn2(v7.h4, v16.h4, v7.h4); dump();
trn2(v7.h4, v31.h4, v7.h4); dump();
trn2(v7.h4, v7.h4, v7.h4); dump();
trn2(v7.h4, v7.h4, v0.h4); dump();
trn2(v7.h4, v7.h4, v1.h4); dump();
trn2(v7.h4, v7.h4, v2.h4); dump();
trn2(v7.h4, v7.h4, v4.h4); dump();
trn2(v7.h4, v7.h4, v8.h4); dump();
trn2(v7.h4, v7.h4, v16.h4); dump();
trn2(v7.h4, v7.h4, v31.h4); dump();
uzp1(v7.h4, v7.h4, v7.h4); dump();
uzp1(v0.h4, v7.h4, v7.h4); dump();
uzp1(v1.h4, v7.h4, v7.h4); dump();
uzp1(v2.h4, v7.h4, v7.h4); dump();
uzp1(v4.h4, v7.h4, v7.h4); dump();
uzp1(v8.h4, v7.h4, v7.h4); dump();
uzp1(v16.h4, v7.h4, v7.h4); dump();
uzp1(v31.h4, v7.h4, v7.h4); dump();
uzp1(v7.h4, v7.h4, v7.h4); dump();
uzp1(v7.h4, v0.h4, v7.h4); dump();
uzp1(v7.h4, v1.h4, v7.h4); dump();
uzp1(v7.h4, v2.h4, v7.h4); dump();
uzp1(v7.h4, v4.h4, v7.h4); dump();
uzp1(v7.h4, v8.h4, v7.h4); dump();
uzp1(v7.h4, v16.h4, v7.h4); dump();
uzp1(v7.h4, v31.h4, v7.h4); dump();
uzp1(v7.h4, v7.h4, v7.h4); dump();
uzp1(v7.h4, v7.h4, v0.h4); dump();
uzp1(v7.h4, v7.h4, v1.h4); dump();
uzp1(v7.h4, v7.h4, v2.h4); dump();
uzp1(v7.h4, v7.h4, v4.h4); dump();
uzp1(v7.h4, v7.h4, v8.h4); dump();
uzp1(v7.h4, v7.h4, v16.h4); dump();
uzp1(v7.h4, v7.h4, v31.h4); dump();
uzp2(v7.h4, v7.h4, v7.h4); dump();
uzp2(v0.h4, v7.h4, v7.h4); dump();
uzp2(v1.h4, v7.h4, v7.h4); dump();
uzp2(v2.h4, v7.h4, v7.h4); dump();
uzp2(v4.h4, v7.h4, v7.h4); dump();
uzp2(v8.h4, v7.h4, v7.h4); dump();
uzp2(v16.h4, v7.h4, v7.h4); dump();
uzp2(v31.h4, v7.h4, v7.h4); dump();
uzp2(v7.h4, v7.h4, v7.h4); dump();
uzp2(v7.h4, v0.h4, v7.h4); dump();
uzp2(v7.h4, v1.h4, v7.h4); dump();
uzp2(v7.h4, v2.h4, v7.h4); dump();
uzp2(v7.h4, v4.h4, v7.h4); dump();
uzp2(v7.h4, v8.h4, v7.h4); dump();
uzp2(v7.h4, v16.h4, v7.h4); dump();
uzp2(v7.h4, v31.h4, v7.h4); dump();
uzp2(v7.h4, v7.h4, v7.h4); dump();
uzp2(v7.h4, v7.h4, v0.h4); dump();
uzp2(v7.h4, v7.h4, v1.h4); dump();
uzp2(v7.h4, v7.h4, v2.h4); dump();
uzp2(v7.h4, v7.h4, v4.h4); dump();
uzp2(v7.h4, v7.h4, v8.h4); dump();
uzp2(v7.h4, v7.h4, v16.h4); dump();
uzp2(v7.h4, v7.h4, v31.h4); dump();
zip1(v7.h4, v7.h4, v7.h4); dump();
zip1(v0.h4, v7.h4, v7.h4); dump();
zip1(v1.h4, v7.h4, v7.h4); dump();
zip1(v2.h4, v7.h4, v7.h4); dump();
zip1(v4.h4, v7.h4, v7.h4); dump();
zip1(v8.h4, v7.h4, v7.h4); dump();
zip1(v16.h4, v7.h4, v7.h4); dump();
zip1(v31.h4, v7.h4, v7.h4); dump();
zip1(v7.h4, v7.h4, v7.h4); dump();
zip1(v7.h4, v0.h4, v7.h4); dump();
zip1(v7.h4, v1.h4, v7.h4); dump();
zip1(v7.h4, v2.h4, v7.h4); dump();
zip1(v7.h4, v4.h4, v7.h4); dump();
zip1(v7.h4, v8.h4, v7.h4); dump();
zip1(v7.h4, v16.h4, v7.h4); dump();
zip1(v7.h4, v31.h4, v7.h4); dump();
zip1(v7.h4, v7.h4, v7.h4); dump();
zip1(v7.h4, v7.h4, v0.h4); dump();
zip1(v7.h4, v7.h4, v1.h4); dump();
zip1(v7.h4, v7.h4, v2.h4); dump();
zip1(v7.h4, v7.h4, v4.h4); dump();
zip1(v7.h4, v7.h4, v8.h4); dump();
zip1(v7.h4, v7.h4, v16.h4); dump();
zip1(v7.h4, v7.h4, v31.h4); dump();
zip2(v7.h4, v7.h4, v7.h4); dump();
zip2(v0.h4, v7.h4, v7.h4); dump();
zip2(v1.h4, v7.h4, v7.h4); dump();
zip2(v2.h4, v7.h4, v7.h4); dump();
zip2(v4.h4, v7.h4, v7.h4); dump();
zip2(v8.h4, v7.h4, v7.h4); dump();
zip2(v16.h4, v7.h4, v7.h4); dump();
zip2(v31.h4, v7.h4, v7.h4); dump();
zip2(v7.h4, v7.h4, v7.h4); dump();
zip2(v7.h4, v0.h4, v7.h4); dump();
zip2(v7.h4, v1.h4, v7.h4); dump();
zip2(v7.h4, v2.h4, v7.h4); dump();
zip2(v7.h4, v4.h4, v7.h4); dump();
zip2(v7.h4, v8.h4, v7.h4); dump();
zip2(v7.h4, v16.h4, v7.h4); dump();
zip2(v7.h4, v31.h4, v7.h4); dump();
zip2(v7.h4, v7.h4, v7.h4); dump();
zip2(v7.h4, v7.h4, v0.h4); dump();
zip2(v7.h4, v7.h4, v1.h4); dump();
zip2(v7.h4, v7.h4, v2.h4); dump();
zip2(v7.h4, v7.h4, v4.h4); dump();
zip2(v7.h4, v7.h4, v8.h4); dump();
zip2(v7.h4, v7.h4, v16.h4); dump();
zip2(v7.h4, v7.h4, v31.h4); dump();
//DataProcSimd_Permute1:3
trn1(v7.h8, v7.h8, v7.h8); dump();
trn1(v0.h8, v7.h8, v7.h8); dump();
trn1(v1.h8, v7.h8, v7.h8); dump();
trn1(v2.h8, v7.h8, v7.h8); dump();
trn1(v4.h8, v7.h8, v7.h8); dump();
trn1(v8.h8, v7.h8, v7.h8); dump();
trn1(v16.h8, v7.h8, v7.h8); dump();
trn1(v31.h8, v7.h8, v7.h8); dump();
trn1(v7.h8, v7.h8, v7.h8); dump();
trn1(v7.h8, v0.h8, v7.h8); dump();
trn1(v7.h8, v1.h8, v7.h8); dump();
trn1(v7.h8, v2.h8, v7.h8); dump();
trn1(v7.h8, v4.h8, v7.h8); dump();
trn1(v7.h8, v8.h8, v7.h8); dump();
trn1(v7.h8, v16.h8, v7.h8); dump();
trn1(v7.h8, v31.h8, v7.h8); dump();
trn1(v7.h8, v7.h8, v7.h8); dump();
trn1(v7.h8, v7.h8, v0.h8); dump();
trn1(v7.h8, v7.h8, v1.h8); dump();
trn1(v7.h8, v7.h8, v2.h8); dump();
trn1(v7.h8, v7.h8, v4.h8); dump();
trn1(v7.h8, v7.h8, v8.h8); dump();
trn1(v7.h8, v7.h8, v16.h8); dump();
trn1(v7.h8, v7.h8, v31.h8); dump();
trn2(v7.h8, v7.h8, v7.h8); dump();
trn2(v0.h8, v7.h8, v7.h8); dump();
trn2(v1.h8, v7.h8, v7.h8); dump();
trn2(v2.h8, v7.h8, v7.h8); dump();
trn2(v4.h8, v7.h8, v7.h8); dump();
trn2(v8.h8, v7.h8, v7.h8); dump();
trn2(v16.h8, v7.h8, v7.h8); dump();
trn2(v31.h8, v7.h8, v7.h8); dump();
trn2(v7.h8, v7.h8, v7.h8); dump();
trn2(v7.h8, v0.h8, v7.h8); dump();
trn2(v7.h8, v1.h8, v7.h8); dump();
trn2(v7.h8, v2.h8, v7.h8); dump();
trn2(v7.h8, v4.h8, v7.h8); dump();
trn2(v7.h8, v8.h8, v7.h8); dump();
trn2(v7.h8, v16.h8, v7.h8); dump();
trn2(v7.h8, v31.h8, v7.h8); dump();
trn2(v7.h8, v7.h8, v7.h8); dump();
trn2(v7.h8, v7.h8, v0.h8); dump();
trn2(v7.h8, v7.h8, v1.h8); dump();
trn2(v7.h8, v7.h8, v2.h8); dump();
trn2(v7.h8, v7.h8, v4.h8); dump();
trn2(v7.h8, v7.h8, v8.h8); dump();
trn2(v7.h8, v7.h8, v16.h8); dump();
trn2(v7.h8, v7.h8, v31.h8); dump();
uzp1(v7.h8, v7.h8, v7.h8); dump();
uzp1(v0.h8, v7.h8, v7.h8); dump();
uzp1(v1.h8, v7.h8, v7.h8); dump();
uzp1(v2.h8, v7.h8, v7.h8); dump();
uzp1(v4.h8, v7.h8, v7.h8); dump();
uzp1(v8.h8, v7.h8, v7.h8); dump();
uzp1(v16.h8, v7.h8, v7.h8); dump();
uzp1(v31.h8, v7.h8, v7.h8); dump();
uzp1(v7.h8, v7.h8, v7.h8); dump();
uzp1(v7.h8, v0.h8, v7.h8); dump();
uzp1(v7.h8, v1.h8, v7.h8); dump();
uzp1(v7.h8, v2.h8, v7.h8); dump();
uzp1(v7.h8, v4.h8, v7.h8); dump();
uzp1(v7.h8, v8.h8, v7.h8); dump();
uzp1(v7.h8, v16.h8, v7.h8); dump();
uzp1(v7.h8, v31.h8, v7.h8); dump();
uzp1(v7.h8, v7.h8, v7.h8); dump();
uzp1(v7.h8, v7.h8, v0.h8); dump();
uzp1(v7.h8, v7.h8, v1.h8); dump();
uzp1(v7.h8, v7.h8, v2.h8); dump();
uzp1(v7.h8, v7.h8, v4.h8); dump();
uzp1(v7.h8, v7.h8, v8.h8); dump();
uzp1(v7.h8, v7.h8, v16.h8); dump();
uzp1(v7.h8, v7.h8, v31.h8); dump();
uzp2(v7.h8, v7.h8, v7.h8); dump();
uzp2(v0.h8, v7.h8, v7.h8); dump();
uzp2(v1.h8, v7.h8, v7.h8); dump();
uzp2(v2.h8, v7.h8, v7.h8); dump();
uzp2(v4.h8, v7.h8, v7.h8); dump();
uzp2(v8.h8, v7.h8, v7.h8); dump();
uzp2(v16.h8, v7.h8, v7.h8); dump();
uzp2(v31.h8, v7.h8, v7.h8); dump();
uzp2(v7.h8, v7.h8, v7.h8); dump();
uzp2(v7.h8, v0.h8, v7.h8); dump();
uzp2(v7.h8, v1.h8, v7.h8); dump();
uzp2(v7.h8, v2.h8, v7.h8); dump();
uzp2(v7.h8, v4.h8, v7.h8); dump();
uzp2(v7.h8, v8.h8, v7.h8); dump();
uzp2(v7.h8, v16.h8, v7.h8); dump();
uzp2(v7.h8, v31.h8, v7.h8); dump();
uzp2(v7.h8, v7.h8, v7.h8); dump();
uzp2(v7.h8, v7.h8, v0.h8); dump();
uzp2(v7.h8, v7.h8, v1.h8); dump();
uzp2(v7.h8, v7.h8, v2.h8); dump();
uzp2(v7.h8, v7.h8, v4.h8); dump();
uzp2(v7.h8, v7.h8, v8.h8); dump();
uzp2(v7.h8, v7.h8, v16.h8); dump();
uzp2(v7.h8, v7.h8, v31.h8); dump();
zip1(v7.h8, v7.h8, v7.h8); dump();
zip1(v0.h8, v7.h8, v7.h8); dump();
zip1(v1.h8, v7.h8, v7.h8); dump();
zip1(v2.h8, v7.h8, v7.h8); dump();
zip1(v4.h8, v7.h8, v7.h8); dump();
zip1(v8.h8, v7.h8, v7.h8); dump();
zip1(v16.h8, v7.h8, v7.h8); dump();
zip1(v31.h8, v7.h8, v7.h8); dump();
zip1(v7.h8, v7.h8, v7.h8); dump();
zip1(v7.h8, v0.h8, v7.h8); dump();
zip1(v7.h8, v1.h8, v7.h8); dump();
zip1(v7.h8, v2.h8, v7.h8); dump();
zip1(v7.h8, v4.h8, v7.h8); dump();
zip1(v7.h8, v8.h8, v7.h8); dump();
zip1(v7.h8, v16.h8, v7.h8); dump();
zip1(v7.h8, v31.h8, v7.h8); dump();
zip1(v7.h8, v7.h8, v7.h8); dump();
zip1(v7.h8, v7.h8, v0.h8); dump();
zip1(v7.h8, v7.h8, v1.h8); dump();
zip1(v7.h8, v7.h8, v2.h8); dump();
zip1(v7.h8, v7.h8, v4.h8); dump();
zip1(v7.h8, v7.h8, v8.h8); dump();
zip1(v7.h8, v7.h8, v16.h8); dump();
zip1(v7.h8, v7.h8, v31.h8); dump();
zip2(v7.h8, v7.h8, v7.h8); dump();
zip2(v0.h8, v7.h8, v7.h8); dump();
zip2(v1.h8, v7.h8, v7.h8); dump();
zip2(v2.h8, v7.h8, v7.h8); dump();
zip2(v4.h8, v7.h8, v7.h8); dump();
zip2(v8.h8, v7.h8, v7.h8); dump();
zip2(v16.h8, v7.h8, v7.h8); dump();
zip2(v31.h8, v7.h8, v7.h8); dump();
zip2(v7.h8, v7.h8, v7.h8); dump();
zip2(v7.h8, v0.h8, v7.h8); dump();
zip2(v7.h8, v1.h8, v7.h8); dump();
zip2(v7.h8, v2.h8, v7.h8); dump();
zip2(v7.h8, v4.h8, v7.h8); dump();
zip2(v7.h8, v8.h8, v7.h8); dump();
zip2(v7.h8, v16.h8, v7.h8); dump();
zip2(v7.h8, v31.h8, v7.h8); dump();
zip2(v7.h8, v7.h8, v7.h8); dump();
zip2(v7.h8, v7.h8, v0.h8); dump();
zip2(v7.h8, v7.h8, v1.h8); dump();
zip2(v7.h8, v7.h8, v2.h8); dump();
zip2(v7.h8, v7.h8, v4.h8); dump();
zip2(v7.h8, v7.h8, v8.h8); dump();
zip2(v7.h8, v7.h8, v16.h8); dump();
zip2(v7.h8, v7.h8, v31.h8); dump();
//DataProcSimd_Permute1:4
trn1(v7.s2, v7.s2, v7.s2); dump();
trn1(v0.s2, v7.s2, v7.s2); dump();
trn1(v1.s2, v7.s2, v7.s2); dump();
trn1(v2.s2, v7.s2, v7.s2); dump();
trn1(v4.s2, v7.s2, v7.s2); dump();
trn1(v8.s2, v7.s2, v7.s2); dump();
trn1(v16.s2, v7.s2, v7.s2); dump();
trn1(v31.s2, v7.s2, v7.s2); dump();
trn1(v7.s2, v7.s2, v7.s2); dump();
trn1(v7.s2, v0.s2, v7.s2); dump();
trn1(v7.s2, v1.s2, v7.s2); dump();
trn1(v7.s2, v2.s2, v7.s2); dump();
trn1(v7.s2, v4.s2, v7.s2); dump();
trn1(v7.s2, v8.s2, v7.s2); dump();
trn1(v7.s2, v16.s2, v7.s2); dump();
trn1(v7.s2, v31.s2, v7.s2); dump();
trn1(v7.s2, v7.s2, v7.s2); dump();
trn1(v7.s2, v7.s2, v0.s2); dump();
trn1(v7.s2, v7.s2, v1.s2); dump();
trn1(v7.s2, v7.s2, v2.s2); dump();
trn1(v7.s2, v7.s2, v4.s2); dump();
trn1(v7.s2, v7.s2, v8.s2); dump();
trn1(v7.s2, v7.s2, v16.s2); dump();
trn1(v7.s2, v7.s2, v31.s2); dump();
trn2(v7.s2, v7.s2, v7.s2); dump();
trn2(v0.s2, v7.s2, v7.s2); dump();
trn2(v1.s2, v7.s2, v7.s2); dump();
trn2(v2.s2, v7.s2, v7.s2); dump();
trn2(v4.s2, v7.s2, v7.s2); dump();
trn2(v8.s2, v7.s2, v7.s2); dump();
trn2(v16.s2, v7.s2, v7.s2); dump();
trn2(v31.s2, v7.s2, v7.s2); dump();
trn2(v7.s2, v7.s2, v7.s2); dump();
trn2(v7.s2, v0.s2, v7.s2); dump();
trn2(v7.s2, v1.s2, v7.s2); dump();
trn2(v7.s2, v2.s2, v7.s2); dump();
trn2(v7.s2, v4.s2, v7.s2); dump();
trn2(v7.s2, v8.s2, v7.s2); dump();
trn2(v7.s2, v16.s2, v7.s2); dump();
trn2(v7.s2, v31.s2, v7.s2); dump();
trn2(v7.s2, v7.s2, v7.s2); dump();
trn2(v7.s2, v7.s2, v0.s2); dump();
trn2(v7.s2, v7.s2, v1.s2); dump();
trn2(v7.s2, v7.s2, v2.s2); dump();
trn2(v7.s2, v7.s2, v4.s2); dump();
trn2(v7.s2, v7.s2, v8.s2); dump();
trn2(v7.s2, v7.s2, v16.s2); dump();
trn2(v7.s2, v7.s2, v31.s2); dump();
uzp1(v7.s2, v7.s2, v7.s2); dump();
uzp1(v0.s2, v7.s2, v7.s2); dump();
uzp1(v1.s2, v7.s2, v7.s2); dump();
uzp1(v2.s2, v7.s2, v7.s2); dump();
uzp1(v4.s2, v7.s2, v7.s2); dump();
uzp1(v8.s2, v7.s2, v7.s2); dump();
uzp1(v16.s2, v7.s2, v7.s2); dump();
uzp1(v31.s2, v7.s2, v7.s2); dump();
uzp1(v7.s2, v7.s2, v7.s2); dump();
uzp1(v7.s2, v0.s2, v7.s2); dump();
uzp1(v7.s2, v1.s2, v7.s2); dump();
uzp1(v7.s2, v2.s2, v7.s2); dump();
uzp1(v7.s2, v4.s2, v7.s2); dump();
uzp1(v7.s2, v8.s2, v7.s2); dump();
uzp1(v7.s2, v16.s2, v7.s2); dump();
uzp1(v7.s2, v31.s2, v7.s2); dump();
uzp1(v7.s2, v7.s2, v7.s2); dump();
uzp1(v7.s2, v7.s2, v0.s2); dump();
uzp1(v7.s2, v7.s2, v1.s2); dump();
uzp1(v7.s2, v7.s2, v2.s2); dump();
uzp1(v7.s2, v7.s2, v4.s2); dump();
uzp1(v7.s2, v7.s2, v8.s2); dump();
uzp1(v7.s2, v7.s2, v16.s2); dump();
uzp1(v7.s2, v7.s2, v31.s2); dump();
uzp2(v7.s2, v7.s2, v7.s2); dump();
uzp2(v0.s2, v7.s2, v7.s2); dump();
uzp2(v1.s2, v7.s2, v7.s2); dump();
uzp2(v2.s2, v7.s2, v7.s2); dump();
uzp2(v4.s2, v7.s2, v7.s2); dump();
uzp2(v8.s2, v7.s2, v7.s2); dump();
uzp2(v16.s2, v7.s2, v7.s2); dump();
uzp2(v31.s2, v7.s2, v7.s2); dump();
uzp2(v7.s2, v7.s2, v7.s2); dump();
uzp2(v7.s2, v0.s2, v7.s2); dump();
uzp2(v7.s2, v1.s2, v7.s2); dump();
uzp2(v7.s2, v2.s2, v7.s2); dump();
uzp2(v7.s2, v4.s2, v7.s2); dump();
uzp2(v7.s2, v8.s2, v7.s2); dump();
uzp2(v7.s2, v16.s2, v7.s2); dump();
uzp2(v7.s2, v31.s2, v7.s2); dump();
uzp2(v7.s2, v7.s2, v7.s2); dump();
uzp2(v7.s2, v7.s2, v0.s2); dump();
uzp2(v7.s2, v7.s2, v1.s2); dump();
uzp2(v7.s2, v7.s2, v2.s2); dump();
uzp2(v7.s2, v7.s2, v4.s2); dump();
uzp2(v7.s2, v7.s2, v8.s2); dump();
uzp2(v7.s2, v7.s2, v16.s2); dump();
uzp2(v7.s2, v7.s2, v31.s2); dump();
zip1(v7.s2, v7.s2, v7.s2); dump();
zip1(v0.s2, v7.s2, v7.s2); dump();
zip1(v1.s2, v7.s2, v7.s2); dump();
zip1(v2.s2, v7.s2, v7.s2); dump();
zip1(v4.s2, v7.s2, v7.s2); dump();
zip1(v8.s2, v7.s2, v7.s2); dump();
zip1(v16.s2, v7.s2, v7.s2); dump();
zip1(v31.s2, v7.s2, v7.s2); dump();
zip1(v7.s2, v7.s2, v7.s2); dump();
zip1(v7.s2, v0.s2, v7.s2); dump();
zip1(v7.s2, v1.s2, v7.s2); dump();
zip1(v7.s2, v2.s2, v7.s2); dump();
zip1(v7.s2, v4.s2, v7.s2); dump();
zip1(v7.s2, v8.s2, v7.s2); dump();
zip1(v7.s2, v16.s2, v7.s2); dump();
zip1(v7.s2, v31.s2, v7.s2); dump();
zip1(v7.s2, v7.s2, v7.s2); dump();
zip1(v7.s2, v7.s2, v0.s2); dump();
zip1(v7.s2, v7.s2, v1.s2); dump();
zip1(v7.s2, v7.s2, v2.s2); dump();
zip1(v7.s2, v7.s2, v4.s2); dump();
zip1(v7.s2, v7.s2, v8.s2); dump();
zip1(v7.s2, v7.s2, v16.s2); dump();
zip1(v7.s2, v7.s2, v31.s2); dump();
zip2(v7.s2, v7.s2, v7.s2); dump();
zip2(v0.s2, v7.s2, v7.s2); dump();
zip2(v1.s2, v7.s2, v7.s2); dump();
zip2(v2.s2, v7.s2, v7.s2); dump();
zip2(v4.s2, v7.s2, v7.s2); dump();
zip2(v8.s2, v7.s2, v7.s2); dump();
zip2(v16.s2, v7.s2, v7.s2); dump();
zip2(v31.s2, v7.s2, v7.s2); dump();
zip2(v7.s2, v7.s2, v7.s2); dump();
zip2(v7.s2, v0.s2, v7.s2); dump();
zip2(v7.s2, v1.s2, v7.s2); dump();
zip2(v7.s2, v2.s2, v7.s2); dump();
zip2(v7.s2, v4.s2, v7.s2); dump();
zip2(v7.s2, v8.s2, v7.s2); dump();
zip2(v7.s2, v16.s2, v7.s2); dump();
zip2(v7.s2, v31.s2, v7.s2); dump();
zip2(v7.s2, v7.s2, v7.s2); dump();
zip2(v7.s2, v7.s2, v0.s2); dump();
zip2(v7.s2, v7.s2, v1.s2); dump();
zip2(v7.s2, v7.s2, v2.s2); dump();
zip2(v7.s2, v7.s2, v4.s2); dump();
zip2(v7.s2, v7.s2, v8.s2); dump();
zip2(v7.s2, v7.s2, v16.s2); dump();
zip2(v7.s2, v7.s2, v31.s2); dump();
//DataProcSimd_Permute1:5
trn1(v7.s4, v7.s4, v7.s4); dump();
trn1(v0.s4, v7.s4, v7.s4); dump();
trn1(v1.s4, v7.s4, v7.s4); dump();
trn1(v2.s4, v7.s4, v7.s4); dump();
trn1(v4.s4, v7.s4, v7.s4); dump();
trn1(v8.s4, v7.s4, v7.s4); dump();
trn1(v16.s4, v7.s4, v7.s4); dump();
trn1(v31.s4, v7.s4, v7.s4); dump();
trn1(v7.s4, v7.s4, v7.s4); dump();
trn1(v7.s4, v0.s4, v7.s4); dump();
trn1(v7.s4, v1.s4, v7.s4); dump();
trn1(v7.s4, v2.s4, v7.s4); dump();
trn1(v7.s4, v4.s4, v7.s4); dump();
trn1(v7.s4, v8.s4, v7.s4); dump();
trn1(v7.s4, v16.s4, v7.s4); dump();
trn1(v7.s4, v31.s4, v7.s4); dump();
trn1(v7.s4, v7.s4, v7.s4); dump();
trn1(v7.s4, v7.s4, v0.s4); dump();
trn1(v7.s4, v7.s4, v1.s4); dump();
trn1(v7.s4, v7.s4, v2.s4); dump();
trn1(v7.s4, v7.s4, v4.s4); dump();
trn1(v7.s4, v7.s4, v8.s4); dump();
trn1(v7.s4, v7.s4, v16.s4); dump();
trn1(v7.s4, v7.s4, v31.s4); dump();
trn2(v7.s4, v7.s4, v7.s4); dump();
trn2(v0.s4, v7.s4, v7.s4); dump();
trn2(v1.s4, v7.s4, v7.s4); dump();
trn2(v2.s4, v7.s4, v7.s4); dump();
trn2(v4.s4, v7.s4, v7.s4); dump();
trn2(v8.s4, v7.s4, v7.s4); dump();
trn2(v16.s4, v7.s4, v7.s4); dump();
trn2(v31.s4, v7.s4, v7.s4); dump();
trn2(v7.s4, v7.s4, v7.s4); dump();
trn2(v7.s4, v0.s4, v7.s4); dump();
trn2(v7.s4, v1.s4, v7.s4); dump();
trn2(v7.s4, v2.s4, v7.s4); dump();
trn2(v7.s4, v4.s4, v7.s4); dump();
trn2(v7.s4, v8.s4, v7.s4); dump();
trn2(v7.s4, v16.s4, v7.s4); dump();
trn2(v7.s4, v31.s4, v7.s4); dump();
trn2(v7.s4, v7.s4, v7.s4); dump();
trn2(v7.s4, v7.s4, v0.s4); dump();
trn2(v7.s4, v7.s4, v1.s4); dump();
trn2(v7.s4, v7.s4, v2.s4); dump();
trn2(v7.s4, v7.s4, v4.s4); dump();
trn2(v7.s4, v7.s4, v8.s4); dump();
trn2(v7.s4, v7.s4, v16.s4); dump();
trn2(v7.s4, v7.s4, v31.s4); dump();
uzp1(v7.s4, v7.s4, v7.s4); dump();
uzp1(v0.s4, v7.s4, v7.s4); dump();
uzp1(v1.s4, v7.s4, v7.s4); dump();
uzp1(v2.s4, v7.s4, v7.s4); dump();
uzp1(v4.s4, v7.s4, v7.s4); dump();
uzp1(v8.s4, v7.s4, v7.s4); dump();
uzp1(v16.s4, v7.s4, v7.s4); dump();
uzp1(v31.s4, v7.s4, v7.s4); dump();
uzp1(v7.s4, v7.s4, v7.s4); dump();
uzp1(v7.s4, v0.s4, v7.s4); dump();
uzp1(v7.s4, v1.s4, v7.s4); dump();
uzp1(v7.s4, v2.s4, v7.s4); dump();
uzp1(v7.s4, v4.s4, v7.s4); dump();
uzp1(v7.s4, v8.s4, v7.s4); dump();
uzp1(v7.s4, v16.s4, v7.s4); dump();
uzp1(v7.s4, v31.s4, v7.s4); dump();
uzp1(v7.s4, v7.s4, v7.s4); dump();
uzp1(v7.s4, v7.s4, v0.s4); dump();
uzp1(v7.s4, v7.s4, v1.s4); dump();
uzp1(v7.s4, v7.s4, v2.s4); dump();
uzp1(v7.s4, v7.s4, v4.s4); dump();
uzp1(v7.s4, v7.s4, v8.s4); dump();
uzp1(v7.s4, v7.s4, v16.s4); dump();
uzp1(v7.s4, v7.s4, v31.s4); dump();
uzp2(v7.s4, v7.s4, v7.s4); dump();
uzp2(v0.s4, v7.s4, v7.s4); dump();
uzp2(v1.s4, v7.s4, v7.s4); dump();
uzp2(v2.s4, v7.s4, v7.s4); dump();
uzp2(v4.s4, v7.s4, v7.s4); dump();
uzp2(v8.s4, v7.s4, v7.s4); dump();
uzp2(v16.s4, v7.s4, v7.s4); dump();
uzp2(v31.s4, v7.s4, v7.s4); dump();
uzp2(v7.s4, v7.s4, v7.s4); dump();
uzp2(v7.s4, v0.s4, v7.s4); dump();
uzp2(v7.s4, v1.s4, v7.s4); dump();
uzp2(v7.s4, v2.s4, v7.s4); dump();
uzp2(v7.s4, v4.s4, v7.s4); dump();
uzp2(v7.s4, v8.s4, v7.s4); dump();
uzp2(v7.s4, v16.s4, v7.s4); dump();
uzp2(v7.s4, v31.s4, v7.s4); dump();
uzp2(v7.s4, v7.s4, v7.s4); dump();
uzp2(v7.s4, v7.s4, v0.s4); dump();
uzp2(v7.s4, v7.s4, v1.s4); dump();
uzp2(v7.s4, v7.s4, v2.s4); dump();
uzp2(v7.s4, v7.s4, v4.s4); dump();
uzp2(v7.s4, v7.s4, v8.s4); dump();
uzp2(v7.s4, v7.s4, v16.s4); dump();
uzp2(v7.s4, v7.s4, v31.s4); dump();
zip1(v7.s4, v7.s4, v7.s4); dump();
zip1(v0.s4, v7.s4, v7.s4); dump();
zip1(v1.s4, v7.s4, v7.s4); dump();
zip1(v2.s4, v7.s4, v7.s4); dump();
zip1(v4.s4, v7.s4, v7.s4); dump();
zip1(v8.s4, v7.s4, v7.s4); dump();
zip1(v16.s4, v7.s4, v7.s4); dump();
zip1(v31.s4, v7.s4, v7.s4); dump();
zip1(v7.s4, v7.s4, v7.s4); dump();
zip1(v7.s4, v0.s4, v7.s4); dump();
zip1(v7.s4, v1.s4, v7.s4); dump();
zip1(v7.s4, v2.s4, v7.s4); dump();
zip1(v7.s4, v4.s4, v7.s4); dump();
zip1(v7.s4, v8.s4, v7.s4); dump();
zip1(v7.s4, v16.s4, v7.s4); dump();
zip1(v7.s4, v31.s4, v7.s4); dump();
zip1(v7.s4, v7.s4, v7.s4); dump();
zip1(v7.s4, v7.s4, v0.s4); dump();
zip1(v7.s4, v7.s4, v1.s4); dump();
zip1(v7.s4, v7.s4, v2.s4); dump();
zip1(v7.s4, v7.s4, v4.s4); dump();
zip1(v7.s4, v7.s4, v8.s4); dump();
zip1(v7.s4, v7.s4, v16.s4); dump();
zip1(v7.s4, v7.s4, v31.s4); dump();
zip2(v7.s4, v7.s4, v7.s4); dump();
zip2(v0.s4, v7.s4, v7.s4); dump();
zip2(v1.s4, v7.s4, v7.s4); dump();
zip2(v2.s4, v7.s4, v7.s4); dump();
zip2(v4.s4, v7.s4, v7.s4); dump();
zip2(v8.s4, v7.s4, v7.s4); dump();
zip2(v16.s4, v7.s4, v7.s4); dump();
zip2(v31.s4, v7.s4, v7.s4); dump();
zip2(v7.s4, v7.s4, v7.s4); dump();
zip2(v7.s4, v0.s4, v7.s4); dump();
zip2(v7.s4, v1.s4, v7.s4); dump();
zip2(v7.s4, v2.s4, v7.s4); dump();
zip2(v7.s4, v4.s4, v7.s4); dump();
zip2(v7.s4, v8.s4, v7.s4); dump();
zip2(v7.s4, v16.s4, v7.s4); dump();
zip2(v7.s4, v31.s4, v7.s4); dump();
zip2(v7.s4, v7.s4, v7.s4); dump();
zip2(v7.s4, v7.s4, v0.s4); dump();
zip2(v7.s4, v7.s4, v1.s4); dump();
zip2(v7.s4, v7.s4, v2.s4); dump();
zip2(v7.s4, v7.s4, v4.s4); dump();
zip2(v7.s4, v7.s4, v8.s4); dump();
zip2(v7.s4, v7.s4, v16.s4); dump();
zip2(v7.s4, v7.s4, v31.s4); dump();
//DataProcSimd_Permute1:6
trn1(v7.d2, v7.d2, v7.d2); dump();
trn1(v0.d2, v7.d2, v7.d2); dump();
trn1(v1.d2, v7.d2, v7.d2); dump();
trn1(v2.d2, v7.d2, v7.d2); dump();
trn1(v4.d2, v7.d2, v7.d2); dump();
trn1(v8.d2, v7.d2, v7.d2); dump();
trn1(v16.d2, v7.d2, v7.d2); dump();
trn1(v31.d2, v7.d2, v7.d2); dump();
trn1(v7.d2, v7.d2, v7.d2); dump();
trn1(v7.d2, v0.d2, v7.d2); dump();
trn1(v7.d2, v1.d2, v7.d2); dump();
trn1(v7.d2, v2.d2, v7.d2); dump();
trn1(v7.d2, v4.d2, v7.d2); dump();
trn1(v7.d2, v8.d2, v7.d2); dump();
trn1(v7.d2, v16.d2, v7.d2); dump();
trn1(v7.d2, v31.d2, v7.d2); dump();
trn1(v7.d2, v7.d2, v7.d2); dump();
trn1(v7.d2, v7.d2, v0.d2); dump();
trn1(v7.d2, v7.d2, v1.d2); dump();
trn1(v7.d2, v7.d2, v2.d2); dump();
trn1(v7.d2, v7.d2, v4.d2); dump();
trn1(v7.d2, v7.d2, v8.d2); dump();
trn1(v7.d2, v7.d2, v16.d2); dump();
trn1(v7.d2, v7.d2, v31.d2); dump();
trn2(v7.d2, v7.d2, v7.d2); dump();
trn2(v0.d2, v7.d2, v7.d2); dump();
trn2(v1.d2, v7.d2, v7.d2); dump();
trn2(v2.d2, v7.d2, v7.d2); dump();
trn2(v4.d2, v7.d2, v7.d2); dump();
trn2(v8.d2, v7.d2, v7.d2); dump();
trn2(v16.d2, v7.d2, v7.d2); dump();
trn2(v31.d2, v7.d2, v7.d2); dump();
trn2(v7.d2, v7.d2, v7.d2); dump();
trn2(v7.d2, v0.d2, v7.d2); dump();
trn2(v7.d2, v1.d2, v7.d2); dump();
trn2(v7.d2, v2.d2, v7.d2); dump();
trn2(v7.d2, v4.d2, v7.d2); dump();
trn2(v7.d2, v8.d2, v7.d2); dump();
trn2(v7.d2, v16.d2, v7.d2); dump();
trn2(v7.d2, v31.d2, v7.d2); dump();
trn2(v7.d2, v7.d2, v7.d2); dump();
trn2(v7.d2, v7.d2, v0.d2); dump();
trn2(v7.d2, v7.d2, v1.d2); dump();
trn2(v7.d2, v7.d2, v2.d2); dump();
trn2(v7.d2, v7.d2, v4.d2); dump();
trn2(v7.d2, v7.d2, v8.d2); dump();
trn2(v7.d2, v7.d2, v16.d2); dump();
trn2(v7.d2, v7.d2, v31.d2); dump();
uzp1(v7.d2, v7.d2, v7.d2); dump();
uzp1(v0.d2, v7.d2, v7.d2); dump();
uzp1(v1.d2, v7.d2, v7.d2); dump();
uzp1(v2.d2, v7.d2, v7.d2); dump();
uzp1(v4.d2, v7.d2, v7.d2); dump();
uzp1(v8.d2, v7.d2, v7.d2); dump();
uzp1(v16.d2, v7.d2, v7.d2); dump();
uzp1(v31.d2, v7.d2, v7.d2); dump();
uzp1(v7.d2, v7.d2, v7.d2); dump();
uzp1(v7.d2, v0.d2, v7.d2); dump();
uzp1(v7.d2, v1.d2, v7.d2); dump();
uzp1(v7.d2, v2.d2, v7.d2); dump();
uzp1(v7.d2, v4.d2, v7.d2); dump();
uzp1(v7.d2, v8.d2, v7.d2); dump();
uzp1(v7.d2, v16.d2, v7.d2); dump();
uzp1(v7.d2, v31.d2, v7.d2); dump();
uzp1(v7.d2, v7.d2, v7.d2); dump();
uzp1(v7.d2, v7.d2, v0.d2); dump();
uzp1(v7.d2, v7.d2, v1.d2); dump();
uzp1(v7.d2, v7.d2, v2.d2); dump();
uzp1(v7.d2, v7.d2, v4.d2); dump();
uzp1(v7.d2, v7.d2, v8.d2); dump();
uzp1(v7.d2, v7.d2, v16.d2); dump();
uzp1(v7.d2, v7.d2, v31.d2); dump();
uzp2(v7.d2, v7.d2, v7.d2); dump();
uzp2(v0.d2, v7.d2, v7.d2); dump();
uzp2(v1.d2, v7.d2, v7.d2); dump();
uzp2(v2.d2, v7.d2, v7.d2); dump();
uzp2(v4.d2, v7.d2, v7.d2); dump();
uzp2(v8.d2, v7.d2, v7.d2); dump();
uzp2(v16.d2, v7.d2, v7.d2); dump();
uzp2(v31.d2, v7.d2, v7.d2); dump();
uzp2(v7.d2, v7.d2, v7.d2); dump();
uzp2(v7.d2, v0.d2, v7.d2); dump();
uzp2(v7.d2, v1.d2, v7.d2); dump();
uzp2(v7.d2, v2.d2, v7.d2); dump();
uzp2(v7.d2, v4.d2, v7.d2); dump();
uzp2(v7.d2, v8.d2, v7.d2); dump();
uzp2(v7.d2, v16.d2, v7.d2); dump();
uzp2(v7.d2, v31.d2, v7.d2); dump();
uzp2(v7.d2, v7.d2, v7.d2); dump();
uzp2(v7.d2, v7.d2, v0.d2); dump();
uzp2(v7.d2, v7.d2, v1.d2); dump();
uzp2(v7.d2, v7.d2, v2.d2); dump();
uzp2(v7.d2, v7.d2, v4.d2); dump();
uzp2(v7.d2, v7.d2, v8.d2); dump();
uzp2(v7.d2, v7.d2, v16.d2); dump();
uzp2(v7.d2, v7.d2, v31.d2); dump();
zip1(v7.d2, v7.d2, v7.d2); dump();
zip1(v0.d2, v7.d2, v7.d2); dump();
zip1(v1.d2, v7.d2, v7.d2); dump();
zip1(v2.d2, v7.d2, v7.d2); dump();
zip1(v4.d2, v7.d2, v7.d2); dump();
zip1(v8.d2, v7.d2, v7.d2); dump();
zip1(v16.d2, v7.d2, v7.d2); dump();
zip1(v31.d2, v7.d2, v7.d2); dump();
zip1(v7.d2, v7.d2, v7.d2); dump();
zip1(v7.d2, v0.d2, v7.d2); dump();
zip1(v7.d2, v1.d2, v7.d2); dump();
zip1(v7.d2, v2.d2, v7.d2); dump();
zip1(v7.d2, v4.d2, v7.d2); dump();
zip1(v7.d2, v8.d2, v7.d2); dump();
zip1(v7.d2, v16.d2, v7.d2); dump();
zip1(v7.d2, v31.d2, v7.d2); dump();
zip1(v7.d2, v7.d2, v7.d2); dump();
zip1(v7.d2, v7.d2, v0.d2); dump();
zip1(v7.d2, v7.d2, v1.d2); dump();
zip1(v7.d2, v7.d2, v2.d2); dump();
zip1(v7.d2, v7.d2, v4.d2); dump();
zip1(v7.d2, v7.d2, v8.d2); dump();
zip1(v7.d2, v7.d2, v16.d2); dump();
zip1(v7.d2, v7.d2, v31.d2); dump();
zip2(v7.d2, v7.d2, v7.d2); dump();
zip2(v0.d2, v7.d2, v7.d2); dump();
zip2(v1.d2, v7.d2, v7.d2); dump();
zip2(v2.d2, v7.d2, v7.d2); dump();
zip2(v4.d2, v7.d2, v7.d2); dump();
zip2(v8.d2, v7.d2, v7.d2); dump();
zip2(v16.d2, v7.d2, v7.d2); dump();
zip2(v31.d2, v7.d2, v7.d2); dump();
zip2(v7.d2, v7.d2, v7.d2); dump();
zip2(v7.d2, v0.d2, v7.d2); dump();
zip2(v7.d2, v1.d2, v7.d2); dump();
zip2(v7.d2, v2.d2, v7.d2); dump();
zip2(v7.d2, v4.d2, v7.d2); dump();
zip2(v7.d2, v8.d2, v7.d2); dump();
zip2(v7.d2, v16.d2, v7.d2); dump();
zip2(v7.d2, v31.d2, v7.d2); dump();
zip2(v7.d2, v7.d2, v7.d2); dump();
zip2(v7.d2, v7.d2, v0.d2); dump();
zip2(v7.d2, v7.d2, v1.d2); dump();
zip2(v7.d2, v7.d2, v2.d2); dump();
zip2(v7.d2, v7.d2, v4.d2); dump();
zip2(v7.d2, v7.d2, v8.d2); dump();
zip2(v7.d2, v7.d2, v16.d2); dump();
zip2(v7.d2, v7.d2, v31.d2); dump();
//DataProcSimd_Immediate0:0
bic(v7.h4, 0x39); dump();
bic(v0.h4, 0x39); dump();
bic(v1.h4, 0x39); dump();
bic(v2.h4, 0x39); dump();
bic(v4.h4, 0x39); dump();
bic(v8.h4, 0x39); dump();
bic(v16.h4, 0x39); dump();
bic(v31.h4, 0x39); dump();
bic(v7.h4, 0x39); dump();
bic(v7.h4, 0); dump();
bic(v7.h4, 1); dump();
bic(v7.h4, 2); dump();
bic(v7.h4, 4); dump();
bic(v7.h4, 8); dump();
bic(v7.h4, 16); dump();
bic(v7.h4, 32); dump();
bic(v7.h4, 64); dump();
bic(v7.h4, 128); dump();
bic(v7.h4, 255); dump();
//DataProcSimd_Immediate0:1
bic(v7.h4, 0x39, LSL, 8); dump();
bic(v0.h4, 0x39, LSL, 8); dump();
bic(v1.h4, 0x39, LSL, 8); dump();
bic(v2.h4, 0x39, LSL, 8); dump();
bic(v4.h4, 0x39, LSL, 8); dump();
bic(v8.h4, 0x39, LSL, 8); dump();
bic(v16.h4, 0x39, LSL, 8); dump();
bic(v31.h4, 0x39, LSL, 8); dump();
bic(v7.h4, 0x39, LSL, 8); dump();
bic(v7.h4, 0, LSL, 8); dump();
bic(v7.h4, 1, LSL, 8); dump();
bic(v7.h4, 2, LSL, 8); dump();
bic(v7.h4, 4, LSL, 8); dump();
bic(v7.h4, 8, LSL, 8); dump();
bic(v7.h4, 16, LSL, 8); dump();
bic(v7.h4, 32, LSL, 8); dump();
bic(v7.h4, 64, LSL, 8); dump();
bic(v7.h4, 128, LSL, 8); dump();
bic(v7.h4, 255, LSL, 8); dump();
bic(v7.h4, 0x39, LSL, 8); dump();
bic(v7.h4, 0x39, LSL, 0); dump();
//DataProcSimd_Immediate0:2
bic(v7.h8, 0x39); dump();
bic(v0.h8, 0x39); dump();
bic(v1.h8, 0x39); dump();
bic(v2.h8, 0x39); dump();
bic(v4.h8, 0x39); dump();
bic(v8.h8, 0x39); dump();
bic(v16.h8, 0x39); dump();
bic(v31.h8, 0x39); dump();
bic(v7.h8, 0x39); dump();
bic(v7.h8, 0); dump();
bic(v7.h8, 1); dump();
bic(v7.h8, 2); dump();
bic(v7.h8, 4); dump();
bic(v7.h8, 8); dump();
bic(v7.h8, 16); dump();
bic(v7.h8, 32); dump();
bic(v7.h8, 64); dump();
bic(v7.h8, 128); dump();
bic(v7.h8, 255); dump();
//DataProcSimd_Immediate0:3
bic(v7.h8, 0x39, LSL, 8); dump();
bic(v0.h8, 0x39, LSL, 8); dump();
bic(v1.h8, 0x39, LSL, 8); dump();
bic(v2.h8, 0x39, LSL, 8); dump();
bic(v4.h8, 0x39, LSL, 8); dump();
bic(v8.h8, 0x39, LSL, 8); dump();
bic(v16.h8, 0x39, LSL, 8); dump();
bic(v31.h8, 0x39, LSL, 8); dump();
bic(v7.h8, 0x39, LSL, 8); dump();
bic(v7.h8, 0, LSL, 8); dump();
bic(v7.h8, 1, LSL, 8); dump();
bic(v7.h8, 2, LSL, 8); dump();
bic(v7.h8, 4, LSL, 8); dump();
bic(v7.h8, 8, LSL, 8); dump();
bic(v7.h8, 16, LSL, 8); dump();
bic(v7.h8, 32, LSL, 8); dump();
bic(v7.h8, 64, LSL, 8); dump();
bic(v7.h8, 128, LSL, 8); dump();
bic(v7.h8, 255, LSL, 8); dump();
bic(v7.h8, 0x39, LSL, 8); dump();
bic(v7.h8, 0x39, LSL, 0); dump();
//DataProcSimd_Immediate0:4
bic(v7.s2, 0x39); dump();
bic(v0.s2, 0x39); dump();
bic(v1.s2, 0x39); dump();
bic(v2.s2, 0x39); dump();
bic(v4.s2, 0x39); dump();
bic(v8.s2, 0x39); dump();
bic(v16.s2, 0x39); dump();
bic(v31.s2, 0x39); dump();
bic(v7.s2, 0x39); dump();
bic(v7.s2, 0); dump();
bic(v7.s2, 1); dump();
bic(v7.s2, 2); dump();
bic(v7.s2, 4); dump();
bic(v7.s2, 8); dump();
bic(v7.s2, 16); dump();
bic(v7.s2, 32); dump();
bic(v7.s2, 64); dump();
bic(v7.s2, 128); dump();
bic(v7.s2, 255); dump();
//DataProcSimd_Immediate0:5
bic(v7.s2, 0x39, LSL, 24); dump();
bic(v0.s2, 0x39, LSL, 24); dump();
bic(v1.s2, 0x39, LSL, 24); dump();
bic(v2.s2, 0x39, LSL, 24); dump();
bic(v4.s2, 0x39, LSL, 24); dump();
bic(v8.s2, 0x39, LSL, 24); dump();
bic(v16.s2, 0x39, LSL, 24); dump();
bic(v31.s2, 0x39, LSL, 24); dump();
bic(v7.s2, 0x39, LSL, 24); dump();
bic(v7.s2, 0, LSL, 24); dump();
bic(v7.s2, 1, LSL, 24); dump();
bic(v7.s2, 2, LSL, 24); dump();
bic(v7.s2, 4, LSL, 24); dump();
bic(v7.s2, 8, LSL, 24); dump();
bic(v7.s2, 16, LSL, 24); dump();
bic(v7.s2, 32, LSL, 24); dump();
bic(v7.s2, 64, LSL, 24); dump();
bic(v7.s2, 128, LSL, 24); dump();
bic(v7.s2, 255, LSL, 24); dump();
bic(v7.s2, 0x39, LSL, 24); dump();
bic(v7.s2, 0x39, LSL, 0); dump();
bic(v7.s2, 0x39, LSL, 8); dump();
bic(v7.s2, 0x39, LSL, 16); dump();
bic(v7.s2, 0x39, LSL, 24); dump();
//DataProcSimd_Immediate0:6
bic(v7.s4, 0x39); dump();
bic(v0.s4, 0x39); dump();
bic(v1.s4, 0x39); dump();
bic(v2.s4, 0x39); dump();
bic(v4.s4, 0x39); dump();
bic(v8.s4, 0x39); dump();
bic(v16.s4, 0x39); dump();
bic(v31.s4, 0x39); dump();
bic(v7.s4, 0x39); dump();
bic(v7.s4, 0); dump();
bic(v7.s4, 1); dump();
bic(v7.s4, 2); dump();
bic(v7.s4, 4); dump();
bic(v7.s4, 8); dump();
bic(v7.s4, 16); dump();
bic(v7.s4, 32); dump();
bic(v7.s4, 64); dump();
bic(v7.s4, 128); dump();
bic(v7.s4, 255); dump();
//DataProcSimd_Immediate0:7
bic(v7.s4, 0x39, LSL, 24); dump();
bic(v0.s4, 0x39, LSL, 24); dump();
bic(v1.s4, 0x39, LSL, 24); dump();
bic(v2.s4, 0x39, LSL, 24); dump();
bic(v4.s4, 0x39, LSL, 24); dump();
bic(v8.s4, 0x39, LSL, 24); dump();
bic(v16.s4, 0x39, LSL, 24); dump();
bic(v31.s4, 0x39, LSL, 24); dump();
bic(v7.s4, 0x39, LSL, 24); dump();
bic(v7.s4, 0, LSL, 24); dump();
bic(v7.s4, 1, LSL, 24); dump();
bic(v7.s4, 2, LSL, 24); dump();
bic(v7.s4, 4, LSL, 24); dump();
bic(v7.s4, 8, LSL, 24); dump();
bic(v7.s4, 16, LSL, 24); dump();
bic(v7.s4, 32, LSL, 24); dump();
bic(v7.s4, 64, LSL, 24); dump();
bic(v7.s4, 128, LSL, 24); dump();
bic(v7.s4, 255, LSL, 24); dump();
bic(v7.s4, 0x39, LSL, 24); dump();
bic(v7.s4, 0x39, LSL, 0); dump();
bic(v7.s4, 0x39, LSL, 8); dump();
bic(v7.s4, 0x39, LSL, 16); dump();
bic(v7.s4, 0x39, LSL, 24); dump();
//DataProcSimd_Immediate1:0
fmov(v7.h4, 2.0); dump();
fmov(v0.h4, 2.0); dump();
fmov(v1.h4, 2.0); dump();
fmov(v2.h4, 2.0); dump();
fmov(v4.h4, 2.0); dump();
fmov(v8.h4, 2.0); dump();
fmov(v16.h4, 2.0); dump();
fmov(v31.h4, 2.0); dump();
fmov(v7.h4, 2.0); dump();
fmov(v7.h4, 4.0); dump();
fmov(v7.h4, 8.0); dump();
fmov(v7.h4, 16.0); dump();
fmov(v7.h4, 0.125); dump();
fmov(v7.h4, 0.25); dump();
fmov(v7.h4, 0.5); dump();
fmov(v7.h4, 1.0); dump();
fmov(v7.h4, 2.125); dump();
fmov(v7.h4, 4.5); dump();
fmov(v7.h4, 9.5); dump();
fmov(v7.h4, 20.0); dump();
fmov(v7.h4, 0.1640625); dump();
fmov(v7.h4, 0.34375); dump();
fmov(v7.h4, 0.71875); dump();
fmov(v7.h4, 1.5); dump();
fmov(v7.h4, 0.78125); dump();
fmov(v7.h4, 0.40625); dump();
fmov(v7.h4, 0.2109375); dump();
fmov(v7.h4, 28.0); dump();
fmov(v7.h4, 14.5); dump();
fmov(v7.h4, 7.5); dump();
fmov(v7.h4, 3.875); dump();
fmov(v7.h4, 1.9375); dump();
//DataProcSimd_Immediate1:1
fmov(v7.h8, 2.0); dump();
fmov(v0.h8, 2.0); dump();
fmov(v1.h8, 2.0); dump();
fmov(v2.h8, 2.0); dump();
fmov(v4.h8, 2.0); dump();
fmov(v8.h8, 2.0); dump();
fmov(v16.h8, 2.0); dump();
fmov(v31.h8, 2.0); dump();
fmov(v7.h8, 2.0); dump();
fmov(v7.h8, 4.0); dump();
fmov(v7.h8, 8.0); dump();
fmov(v7.h8, 16.0); dump();
fmov(v7.h8, 0.125); dump();
fmov(v7.h8, 0.25); dump();
fmov(v7.h8, 0.5); dump();
fmov(v7.h8, 1.0); dump();
fmov(v7.h8, 2.125); dump();
fmov(v7.h8, 4.5); dump();
fmov(v7.h8, 9.5); dump();
fmov(v7.h8, 20.0); dump();
fmov(v7.h8, 0.1640625); dump();
fmov(v7.h8, 0.34375); dump();
fmov(v7.h8, 0.71875); dump();
fmov(v7.h8, 1.5); dump();
fmov(v7.h8, 0.78125); dump();
fmov(v7.h8, 0.40625); dump();
fmov(v7.h8, 0.2109375); dump();
fmov(v7.h8, 28.0); dump();
fmov(v7.h8, 14.5); dump();
fmov(v7.h8, 7.5); dump();
fmov(v7.h8, 3.875); dump();
fmov(v7.h8, 1.9375); dump();
//DataProcSimd_Immediate1:2
fmov(v7.s2, 2.0); dump();
fmov(v0.s2, 2.0); dump();
fmov(v1.s2, 2.0); dump();
fmov(v2.s2, 2.0); dump();
fmov(v4.s2, 2.0); dump();
fmov(v8.s2, 2.0); dump();
fmov(v16.s2, 2.0); dump();
fmov(v31.s2, 2.0); dump();
fmov(v7.s2, 2.0); dump();
fmov(v7.s2, 4.0); dump();
fmov(v7.s2, 8.0); dump();
fmov(v7.s2, 16.0); dump();
fmov(v7.s2, 0.125); dump();
fmov(v7.s2, 0.25); dump();
fmov(v7.s2, 0.5); dump();
fmov(v7.s2, 1.0); dump();
fmov(v7.s2, 2.125); dump();
fmov(v7.s2, 4.5); dump();
fmov(v7.s2, 9.5); dump();
fmov(v7.s2, 20.0); dump();
fmov(v7.s2, 0.1640625); dump();
fmov(v7.s2, 0.34375); dump();
fmov(v7.s2, 0.71875); dump();
fmov(v7.s2, 1.5); dump();
fmov(v7.s2, 0.78125); dump();
fmov(v7.s2, 0.40625); dump();
fmov(v7.s2, 0.2109375); dump();
fmov(v7.s2, 28.0); dump();
fmov(v7.s2, 14.5); dump();
fmov(v7.s2, 7.5); dump();
fmov(v7.s2, 3.875); dump();
fmov(v7.s2, 1.9375); dump();
//DataProcSimd_Immediate1:3
fmov(v7.s2, 2.0); dump();
fmov(v0.s2, 2.0); dump();
fmov(v1.s2, 2.0); dump();
fmov(v2.s2, 2.0); dump();
fmov(v4.s2, 2.0); dump();
fmov(v8.s2, 2.0); dump();
fmov(v16.s2, 2.0); dump();
fmov(v31.s2, 2.0); dump();
fmov(v7.s2, 2.0); dump();
fmov(v7.s2, 4.0); dump();
fmov(v7.s2, 8.0); dump();
fmov(v7.s2, 16.0); dump();
fmov(v7.s2, 0.125); dump();
fmov(v7.s2, 0.25); dump();
fmov(v7.s2, 0.5); dump();
fmov(v7.s2, 1.0); dump();
fmov(v7.s2, 2.125); dump();
fmov(v7.s2, 4.5); dump();
fmov(v7.s2, 9.5); dump();
fmov(v7.s2, 20.0); dump();
fmov(v7.s2, 0.1640625); dump();
fmov(v7.s2, 0.34375); dump();
fmov(v7.s2, 0.71875); dump();
fmov(v7.s2, 1.5); dump();
fmov(v7.s2, 0.78125); dump();
fmov(v7.s2, 0.40625); dump();
fmov(v7.s2, 0.2109375); dump();
fmov(v7.s2, 28.0); dump();
fmov(v7.s2, 14.5); dump();
fmov(v7.s2, 7.5); dump();
fmov(v7.s2, 3.875); dump();
fmov(v7.s2, 1.9375); dump();
//DataProcSimd_Immediate1:4
fmov(v7.s4, 2.0); dump();
fmov(v0.s4, 2.0); dump();
fmov(v1.s4, 2.0); dump();
fmov(v2.s4, 2.0); dump();
fmov(v4.s4, 2.0); dump();
fmov(v8.s4, 2.0); dump();
fmov(v16.s4, 2.0); dump();
fmov(v31.s4, 2.0); dump();
fmov(v7.s4, 2.0); dump();
fmov(v7.s4, 4.0); dump();
fmov(v7.s4, 8.0); dump();
fmov(v7.s4, 16.0); dump();
fmov(v7.s4, 0.125); dump();
fmov(v7.s4, 0.25); dump();
fmov(v7.s4, 0.5); dump();
fmov(v7.s4, 1.0); dump();
fmov(v7.s4, 2.125); dump();
fmov(v7.s4, 4.5); dump();
fmov(v7.s4, 9.5); dump();
fmov(v7.s4, 20.0); dump();
fmov(v7.s4, 0.1640625); dump();
fmov(v7.s4, 0.34375); dump();
fmov(v7.s4, 0.71875); dump();
fmov(v7.s4, 1.5); dump();
fmov(v7.s4, 0.78125); dump();
fmov(v7.s4, 0.40625); dump();
fmov(v7.s4, 0.2109375); dump();
fmov(v7.s4, 28.0); dump();
fmov(v7.s4, 14.5); dump();
fmov(v7.s4, 7.5); dump();
fmov(v7.s4, 3.875); dump();
fmov(v7.s4, 1.9375); dump();
//DataProcSimd_Immediate1:5
fmov(v7.s4, 2.0); dump();
fmov(v0.s4, 2.0); dump();
fmov(v1.s4, 2.0); dump();
fmov(v2.s4, 2.0); dump();
fmov(v4.s4, 2.0); dump();
fmov(v8.s4, 2.0); dump();
fmov(v16.s4, 2.0); dump();
fmov(v31.s4, 2.0); dump();
fmov(v7.s4, 2.0); dump();
fmov(v7.s4, 4.0); dump();
fmov(v7.s4, 8.0); dump();
fmov(v7.s4, 16.0); dump();
fmov(v7.s4, 0.125); dump();
fmov(v7.s4, 0.25); dump();
fmov(v7.s4, 0.5); dump();
fmov(v7.s4, 1.0); dump();
fmov(v7.s4, 2.125); dump();
fmov(v7.s4, 4.5); dump();
fmov(v7.s4, 9.5); dump();
fmov(v7.s4, 20.0); dump();
fmov(v7.s4, 0.1640625); dump();
fmov(v7.s4, 0.34375); dump();
fmov(v7.s4, 0.71875); dump();
fmov(v7.s4, 1.5); dump();
fmov(v7.s4, 0.78125); dump();
fmov(v7.s4, 0.40625); dump();
fmov(v7.s4, 0.2109375); dump();
fmov(v7.s4, 28.0); dump();
fmov(v7.s4, 14.5); dump();
fmov(v7.s4, 7.5); dump();
fmov(v7.s4, 3.875); dump();
fmov(v7.s4, 1.9375); dump();
//DataProcSimd_Immediate1:6
fmov(v7.d2, 2.0); dump();
fmov(v0.d2, 2.0); dump();
fmov(v1.d2, 2.0); dump();
fmov(v2.d2, 2.0); dump();
fmov(v4.d2, 2.0); dump();
fmov(v8.d2, 2.0); dump();
fmov(v16.d2, 2.0); dump();
fmov(v31.d2, 2.0); dump();
fmov(v7.d2, 2.0); dump();
fmov(v7.d2, 4.0); dump();
fmov(v7.d2, 8.0); dump();
fmov(v7.d2, 16.0); dump();
fmov(v7.d2, 0.125); dump();
fmov(v7.d2, 0.25); dump();
fmov(v7.d2, 0.5); dump();
fmov(v7.d2, 1.0); dump();
fmov(v7.d2, 2.125); dump();
fmov(v7.d2, 4.5); dump();
fmov(v7.d2, 9.5); dump();
fmov(v7.d2, 20.0); dump();
fmov(v7.d2, 0.1640625); dump();
fmov(v7.d2, 0.34375); dump();
fmov(v7.d2, 0.71875); dump();
fmov(v7.d2, 1.5); dump();
fmov(v7.d2, 0.78125); dump();
fmov(v7.d2, 0.40625); dump();
fmov(v7.d2, 0.2109375); dump();
fmov(v7.d2, 28.0); dump();
fmov(v7.d2, 14.5); dump();
fmov(v7.d2, 7.5); dump();
fmov(v7.d2, 3.875); dump();
fmov(v7.d2, 1.9375); dump();
//DataProcSimd_Immediate2:0
movi(v7.b8, 0x39); dump();
movi(v0.b8, 0x39); dump();
movi(v1.b8, 0x39); dump();
movi(v2.b8, 0x39); dump();
movi(v4.b8, 0x39); dump();
movi(v8.b8, 0x39); dump();
movi(v16.b8, 0x39); dump();
movi(v31.b8, 0x39); dump();
movi(v7.b8, 0x39); dump();
movi(v7.b8, 0); dump();
movi(v7.b8, 1); dump();
movi(v7.b8, 2); dump();
movi(v7.b8, 4); dump();
movi(v7.b8, 8); dump();
movi(v7.b8, 16); dump();
movi(v7.b8, 32); dump();
movi(v7.b8, 64); dump();
movi(v7.b8, 128); dump();
movi(v7.b8, 255); dump();
//DataProcSimd_Immediate2:1
movi(v7.b8, 0x39, LSL, 0); dump();
movi(v0.b8, 0x39, LSL, 0); dump();
movi(v1.b8, 0x39, LSL, 0); dump();
movi(v2.b8, 0x39, LSL, 0); dump();
movi(v4.b8, 0x39, LSL, 0); dump();
movi(v8.b8, 0x39, LSL, 0); dump();
movi(v16.b8, 0x39, LSL, 0); dump();
movi(v31.b8, 0x39, LSL, 0); dump();
movi(v7.b8, 0x39, LSL, 0); dump();
movi(v7.b8, 0, LSL, 0); dump();
movi(v7.b8, 1, LSL, 0); dump();
movi(v7.b8, 2, LSL, 0); dump();
movi(v7.b8, 4, LSL, 0); dump();
movi(v7.b8, 8, LSL, 0); dump();
movi(v7.b8, 16, LSL, 0); dump();
movi(v7.b8, 32, LSL, 0); dump();
movi(v7.b8, 64, LSL, 0); dump();
movi(v7.b8, 128, LSL, 0); dump();
movi(v7.b8, 255, LSL, 0); dump();
movi(v7.b8, 0x39, LSL, 0); dump();
//DataProcSimd_Immediate2:2
movi(v7.b16, 0x39); dump();
movi(v0.b16, 0x39); dump();
movi(v1.b16, 0x39); dump();
movi(v2.b16, 0x39); dump();
movi(v4.b16, 0x39); dump();
movi(v8.b16, 0x39); dump();
movi(v16.b16, 0x39); dump();
movi(v31.b16, 0x39); dump();
movi(v7.b16, 0x39); dump();
movi(v7.b16, 0); dump();
movi(v7.b16, 1); dump();
movi(v7.b16, 2); dump();
movi(v7.b16, 4); dump();
movi(v7.b16, 8); dump();
movi(v7.b16, 16); dump();
movi(v7.b16, 32); dump();
movi(v7.b16, 64); dump();
movi(v7.b16, 128); dump();
movi(v7.b16, 255); dump();
//DataProcSimd_Immediate2:3
movi(v7.b16, 0x39, LSL, 0); dump();
movi(v0.b16, 0x39, LSL, 0); dump();
movi(v1.b16, 0x39, LSL, 0); dump();
movi(v2.b16, 0x39, LSL, 0); dump();
movi(v4.b16, 0x39, LSL, 0); dump();
movi(v8.b16, 0x39, LSL, 0); dump();
movi(v16.b16, 0x39, LSL, 0); dump();
movi(v31.b16, 0x39, LSL, 0); dump();
movi(v7.b16, 0x39, LSL, 0); dump();
movi(v7.b16, 0, LSL, 0); dump();
movi(v7.b16, 1, LSL, 0); dump();
movi(v7.b16, 2, LSL, 0); dump();
movi(v7.b16, 4, LSL, 0); dump();
movi(v7.b16, 8, LSL, 0); dump();
movi(v7.b16, 16, LSL, 0); dump();
movi(v7.b16, 32, LSL, 0); dump();
movi(v7.b16, 63, LSL, 0); dump();
movi(v7.b16, 0x39, LSL, 0); dump();
//DataProcSimd_Immediate2:4
movi(v7.h4, 0x39); dump();
movi(v0.h4, 0x39); dump();
movi(v1.h4, 0x39); dump();
movi(v2.h4, 0x39); dump();
movi(v4.h4, 0x39); dump();
movi(v8.h4, 0x39); dump();
movi(v16.h4, 0x39); dump();
movi(v31.h4, 0x39); dump();
movi(v7.h4, 0x39); dump();
movi(v7.h4, 0); dump();
movi(v7.h4, 1); dump();
movi(v7.h4, 2); dump();
movi(v7.h4, 4); dump();
movi(v7.h4, 8); dump();
movi(v7.h4, 16); dump();
movi(v7.h4, 32); dump();
movi(v7.h4, 64); dump();
movi(v7.h4, 128); dump();
movi(v7.h4, 255); dump();
//DataProcSimd_Immediate2:5
movi(v7.h4, 0x39, LSL, 8); dump();
movi(v0.h4, 0x39, LSL, 8); dump();
movi(v1.h4, 0x39, LSL, 8); dump();
movi(v2.h4, 0x39, LSL, 8); dump();
movi(v4.h4, 0x39, LSL, 8); dump();
movi(v8.h4, 0x39, LSL, 8); dump();
movi(v16.h4, 0x39, LSL, 8); dump();
movi(v31.h4, 0x39, LSL, 8); dump();
movi(v7.h4, 0x39, LSL, 8); dump();
movi(v7.h4, 0, LSL, 8); dump();
movi(v7.h4, 1, LSL, 8); dump();
movi(v7.h4, 2, LSL, 8); dump();
movi(v7.h4, 4, LSL, 8); dump();
movi(v7.h4, 8, LSL, 8); dump();
movi(v7.h4, 16, LSL, 8); dump();
movi(v7.h4, 32, LSL, 8); dump();
movi(v7.h4, 64, LSL, 8); dump();
movi(v7.h4, 128, LSL, 8); dump();
movi(v7.h4, 255, LSL, 8); dump();
movi(v7.h4, 0x39, LSL, 8); dump();
movi(v7.h4, 0x39, LSL, 0); dump();
//DataProcSimd_Immediate2:6
movi(v7.h8, 0x39); dump();
movi(v0.h8, 0x39); dump();
movi(v1.h8, 0x39); dump();
movi(v2.h8, 0x39); dump();
movi(v4.h8, 0x39); dump();
movi(v8.h8, 0x39); dump();
movi(v16.h8, 0x39); dump();
movi(v31.h8, 0x39); dump();
movi(v7.h8, 0x39); dump();
movi(v7.h8, 0); dump();
movi(v7.h8, 1); dump();
movi(v7.h8, 2); dump();
movi(v7.h8, 4); dump();
movi(v7.h8, 8); dump();
movi(v7.h8, 16); dump();
movi(v7.h8, 32); dump();
movi(v7.h8, 64); dump();
movi(v7.h8, 128); dump();
movi(v7.h8, 255); dump();
//DataProcSimd_Immediate2:7
movi(v7.h8, 0x39, LSL, 8); dump();
movi(v0.h8, 0x39, LSL, 8); dump();
movi(v1.h8, 0x39, LSL, 8); dump();
movi(v2.h8, 0x39, LSL, 8); dump();
movi(v4.h8, 0x39, LSL, 8); dump();
movi(v8.h8, 0x39, LSL, 8); dump();
movi(v16.h8, 0x39, LSL, 8); dump();
movi(v31.h8, 0x39, LSL, 8); dump();
movi(v7.h8, 0x39, LSL, 8); dump();
movi(v7.h8, 0, LSL, 8); dump();
movi(v7.h8, 1, LSL, 8); dump();
movi(v7.h8, 2, LSL, 8); dump();
movi(v7.h8, 4, LSL, 8); dump();
movi(v7.h8, 8, LSL, 8); dump();
movi(v7.h8, 16, LSL, 8); dump();
movi(v7.h8, 32, LSL, 8); dump();
movi(v7.h8, 64, LSL, 8); dump();
movi(v7.h8, 128, LSL, 8); dump();
movi(v7.h8, 255, LSL, 8); dump();
movi(v7.h8, 0x39, LSL, 8); dump();
movi(v7.h8, 0x39, LSL, 0); dump();
//DataProcSimd_Immediate3:0
movi(v7.s2, 0x39); dump();
movi(v0.s2, 0x39); dump();
movi(v1.s2, 0x39); dump();
movi(v2.s2, 0x39); dump();
movi(v4.s2, 0x39); dump();
movi(v8.s2, 0x39); dump();
movi(v16.s2, 0x39); dump();
movi(v31.s2, 0x39); dump();
movi(v7.s2, 0x39); dump();
movi(v7.s2, 0); dump();
movi(v7.s2, 1); dump();
movi(v7.s2, 2); dump();
movi(v7.s2, 4); dump();
movi(v7.s2, 8); dump();
movi(v7.s2, 16); dump();
movi(v7.s2, 32); dump();
movi(v7.s2, 64); dump();
movi(v7.s2, 128); dump();
movi(v7.s2, 255); dump();
//DataProcSimd_Immediate3:1
movi(v7.s2, 0x39, LSL, 24); dump();
movi(v0.s2, 0x39, LSL, 24); dump();
movi(v1.s2, 0x39, LSL, 24); dump();
movi(v2.s2, 0x39, LSL, 24); dump();
movi(v4.s2, 0x39, LSL, 24); dump();
movi(v8.s2, 0x39, LSL, 24); dump();
movi(v16.s2, 0x39, LSL, 24); dump();
movi(v31.s2, 0x39, LSL, 24); dump();
movi(v7.s2, 0x39, LSL, 24); dump();
movi(v7.s2, 0, LSL, 24); dump();
movi(v7.s2, 1, LSL, 24); dump();
movi(v7.s2, 2, LSL, 24); dump();
movi(v7.s2, 4, LSL, 24); dump();
movi(v7.s2, 8, LSL, 24); dump();
movi(v7.s2, 16, LSL, 24); dump();
movi(v7.s2, 32, LSL, 24); dump();
movi(v7.s2, 64, LSL, 24); dump();
movi(v7.s2, 128, LSL, 24); dump();
movi(v7.s2, 255, LSL, 24); dump();
movi(v7.s2, 0x39, LSL, 24); dump();
movi(v7.s2, 0x39, LSL, 0); dump();
movi(v7.s2, 0x39, LSL, 8); dump();
movi(v7.s2, 0x39, LSL, 16); dump();
movi(v7.s2, 0x39, LSL, 24); dump();
//DataProcSimd_Immediate3:2
movi(v7.s4, 0x39); dump();
movi(v0.s4, 0x39); dump();
movi(v1.s4, 0x39); dump();
movi(v2.s4, 0x39); dump();
movi(v4.s4, 0x39); dump();
movi(v8.s4, 0x39); dump();
movi(v16.s4, 0x39); dump();
movi(v31.s4, 0x39); dump();
movi(v7.s4, 0x39); dump();
movi(v7.s4, 0); dump();
movi(v7.s4, 1); dump();
movi(v7.s4, 2); dump();
movi(v7.s4, 4); dump();
movi(v7.s4, 8); dump();
movi(v7.s4, 16); dump();
movi(v7.s4, 32); dump();
movi(v7.s4, 64); dump();
movi(v7.s4, 128); dump();
movi(v7.s4, 255); dump();
//DataProcSimd_Immediate3:3
movi(v7.s4, 0x39, LSL, 24); dump();
movi(v0.s4, 0x39, LSL, 24); dump();
movi(v1.s4, 0x39, LSL, 24); dump();
movi(v2.s4, 0x39, LSL, 24); dump();
movi(v4.s4, 0x39, LSL, 24); dump();
movi(v8.s4, 0x39, LSL, 24); dump();
movi(v16.s4, 0x39, LSL, 24); dump();
movi(v31.s4, 0x39, LSL, 24); dump();
movi(v7.s4, 0x39, LSL, 24); dump();
movi(v7.s4, 0, LSL, 24); dump();
movi(v7.s4, 1, LSL, 24); dump();
movi(v7.s4, 2, LSL, 24); dump();
movi(v7.s4, 4, LSL, 24); dump();
movi(v7.s4, 8, LSL, 24); dump();
movi(v7.s4, 16, LSL, 24); dump();
movi(v7.s4, 32, LSL, 24); dump();
movi(v7.s4, 64, LSL, 24); dump();
movi(v7.s4, 128, LSL, 24); dump();
movi(v7.s4, 255, LSL, 24); dump();
movi(v7.s4, 0x39, LSL, 24); dump();
movi(v7.s4, 0x39, LSL, 0); dump();
movi(v7.s4, 0x39, LSL, 8); dump();
movi(v7.s4, 0x39, LSL, 16); dump();
movi(v7.s4, 0x39, LSL, 24); dump();
//DataProcSimd_Immediate3:4
movi(v7.s2, 0x39, LSL, 8); dump();
movi(v0.s2, 0x39, LSL, 8); dump();
movi(v1.s2, 0x39, LSL, 8); dump();
movi(v2.s2, 0x39, LSL, 8); dump();
movi(v4.s2, 0x39, LSL, 8); dump();
movi(v8.s2, 0x39, LSL, 8); dump();
movi(v16.s2, 0x39, LSL, 8); dump();
movi(v31.s2, 0x39, LSL, 8); dump();
movi(v7.s2, 0x39, LSL, 8); dump();
movi(v7.s2, 0, LSL, 8); dump();
movi(v7.s2, 1, LSL, 8); dump();
movi(v7.s2, 2, LSL, 8); dump();
movi(v7.s2, 4, LSL, 8); dump();
movi(v7.s2, 8, LSL, 8); dump();
movi(v7.s2, 16, LSL, 8); dump();
movi(v7.s2, 32, LSL, 8); dump();
movi(v7.s2, 64, LSL, 8); dump();
movi(v7.s2, 128, LSL, 8); dump();
movi(v7.s2, 255, LSL, 8); dump();
movi(v7.s2, 0x39, LSL, 8); dump();
movi(v7.s2, 0x39, LSL, 0); dump();
//DataProcSimd_Immediate3:5
movi(v7.s4, 0x39, LSL, 8); dump();
movi(v0.s4, 0x39, LSL, 8); dump();
movi(v1.s4, 0x39, LSL, 8); dump();
movi(v2.s4, 0x39, LSL, 8); dump();
movi(v4.s4, 0x39, LSL, 8); dump();
movi(v8.s4, 0x39, LSL, 8); dump();
movi(v16.s4, 0x39, LSL, 8); dump();
movi(v31.s4, 0x39, LSL, 8); dump();
movi(v7.s4, 0x39, LSL, 8); dump();
movi(v7.s4, 0, LSL, 8); dump();
movi(v7.s4, 1, LSL, 8); dump();
movi(v7.s4, 2, LSL, 8); dump();
movi(v7.s4, 4, LSL, 8); dump();
movi(v7.s4, 8, LSL, 8); dump();
movi(v7.s4, 16, LSL, 8); dump();
movi(v7.s4, 32, LSL, 8); dump();
movi(v7.s4, 64, LSL, 8); dump();
movi(v7.s4, 128, LSL, 8); dump();
movi(v7.s4, 255, LSL, 8); dump();
movi(v7.s4, 0x39, LSL, 8); dump();
movi(v7.s4, 0x39, LSL, 0); dump();
//DataProcSimd_Immediate3:6
movi(d7, 0xff); dump();
movi(d0, 0xff); dump();
movi(d1, 0xff); dump();
movi(d2, 0xff); dump();
movi(d4, 0xff); dump();
movi(d8, 0xff); dump();
movi(d16, 0xff); dump();
movi(d31, 0xff); dump();
movi(d7, 0xff); dump();
movi(d7, 0xff00); dump();
movi(d7, 0x00ff0000); dump();
movi(d7, 0xff000000); dump();
movi(d7, 0x00ff00000000); dump();
movi(d7, 0xff0000000000); dump();
movi(d7, 0x00ff000000000000); dump();
movi(d7, 0xff00000000000000); dump();
//DataProcSimd_Immediate3:7
movi(v7.d2, 0xff); dump();
movi(v0.d2, 0xff); dump();
movi(v1.d2, 0xff); dump();
movi(v2.d2, 0xff); dump();
movi(v4.d2, 0xff); dump();
movi(v8.d2, 0xff); dump();
movi(v16.d2, 0xff); dump();
movi(v31.d2, 0xff); dump();
movi(v7.d2, 0xff); dump();
movi(v7.d2, 0xff00); dump();
movi(v7.d2, 0x00ff0000); dump();
movi(v7.d2, 0xff000000); dump();
movi(v7.d2, 0x00ff00000000); dump();
movi(v7.d2, 0xff0000000000); dump();
movi(v7.d2, 0x00ff000000000000); dump();
movi(v7.d2, 0xff00000000000000); dump();
//DataProcSimd_Immediate4:0
mvni(v7.h4, 0x39); dump();
mvni(v0.h4, 0x39); dump();
mvni(v1.h4, 0x39); dump();
mvni(v2.h4, 0x39); dump();
mvni(v4.h4, 0x39); dump();
mvni(v8.h4, 0x39); dump();
mvni(v16.h4, 0x39); dump();
mvni(v31.h4, 0x39); dump();
mvni(v7.h4, 0x39); dump();
mvni(v7.h4, 0); dump();
mvni(v7.h4, 1); dump();
mvni(v7.h4, 2); dump();
mvni(v7.h4, 4); dump();
mvni(v7.h4, 8); dump();
mvni(v7.h4, 16); dump();
mvni(v7.h4, 32); dump();
mvni(v7.h4, 64); dump();
mvni(v7.h4, 128); dump();
mvni(v7.h4, 255); dump();
//DataProcSimd_Immediate4:1
mvni(v7.h4, 0x39, LSL, 8); dump();
mvni(v0.h4, 0x39, LSL, 8); dump();
mvni(v1.h4, 0x39, LSL, 8); dump();
mvni(v2.h4, 0x39, LSL, 8); dump();
mvni(v4.h4, 0x39, LSL, 8); dump();
mvni(v8.h4, 0x39, LSL, 8); dump();
mvni(v16.h4, 0x39, LSL, 8); dump();
mvni(v31.h4, 0x39, LSL, 8); dump();
mvni(v7.h4, 0x39, LSL, 8); dump();
mvni(v7.h4, 0, LSL, 8); dump();
mvni(v7.h4, 1, LSL, 8); dump();
mvni(v7.h4, 2, LSL, 8); dump();
mvni(v7.h4, 4, LSL, 8); dump();
mvni(v7.h4, 8, LSL, 8); dump();
mvni(v7.h4, 16, LSL, 8); dump();
mvni(v7.h4, 32, LSL, 8); dump();
mvni(v7.h4, 64, LSL, 8); dump();
mvni(v7.h4, 128, LSL, 8); dump();
mvni(v7.h4, 255, LSL, 8); dump();
mvni(v7.h4, 0x39, LSL, 8); dump();
mvni(v7.h4, 0x39, LSL, 0); dump();
//DataProcSimd_Immediate4:2
mvni(v7.h8, 0x39); dump();
mvni(v0.h8, 0x39); dump();
mvni(v1.h8, 0x39); dump();
mvni(v2.h8, 0x39); dump();
mvni(v4.h8, 0x39); dump();
mvni(v8.h8, 0x39); dump();
mvni(v16.h8, 0x39); dump();
mvni(v31.h8, 0x39); dump();
mvni(v7.h8, 0x39); dump();
mvni(v7.h8, 0); dump();
mvni(v7.h8, 1); dump();
mvni(v7.h8, 2); dump();
mvni(v7.h8, 4); dump();
mvni(v7.h8, 8); dump();
mvni(v7.h8, 16); dump();
mvni(v7.h8, 32); dump();
mvni(v7.h8, 64); dump();
mvni(v7.h8, 128); dump();
mvni(v7.h8, 255); dump();
//DataProcSimd_Immediate4:3
mvni(v7.h8, 0x39, LSL, 8); dump();
mvni(v0.h8, 0x39, LSL, 8); dump();
mvni(v1.h8, 0x39, LSL, 8); dump();
mvni(v2.h8, 0x39, LSL, 8); dump();
mvni(v4.h8, 0x39, LSL, 8); dump();
mvni(v8.h8, 0x39, LSL, 8); dump();
mvni(v16.h8, 0x39, LSL, 8); dump();
mvni(v31.h8, 0x39, LSL, 8); dump();
mvni(v7.h8, 0x39, LSL, 8); dump();
mvni(v7.h8, 0, LSL, 8); dump();
mvni(v7.h8, 1, LSL, 8); dump();
mvni(v7.h8, 2, LSL, 8); dump();
mvni(v7.h8, 4, LSL, 8); dump();
mvni(v7.h8, 8, LSL, 8); dump();
mvni(v7.h8, 16, LSL, 8); dump();
mvni(v7.h8, 32, LSL, 8); dump();
mvni(v7.h8, 64, LSL, 8); dump();
mvni(v7.h8, 128, LSL, 8); dump();
mvni(v7.h8, 255, LSL, 8); dump();
mvni(v7.h8, 0x39, LSL, 8); dump();
mvni(v7.h8, 0x39, LSL, 0); dump();
//DataProcSimd_Immediate4:4
mvni(v7.s2, 0x39); dump();
mvni(v0.s2, 0x39); dump();
mvni(v1.s2, 0x39); dump();
mvni(v2.s2, 0x39); dump();
mvni(v4.s2, 0x39); dump();
mvni(v8.s2, 0x39); dump();
mvni(v16.s2, 0x39); dump();
mvni(v31.s2, 0x39); dump();
mvni(v7.s2, 0x39); dump();
mvni(v7.s2, 0); dump();
mvni(v7.s2, 1); dump();
mvni(v7.s2, 2); dump();
mvni(v7.s2, 4); dump();
mvni(v7.s2, 8); dump();
mvni(v7.s2, 16); dump();
mvni(v7.s2, 32); dump();
mvni(v7.s2, 64); dump();
mvni(v7.s2, 128); dump();
mvni(v7.s2, 255); dump();
//DataProcSimd_Immediate4:5
mvni(v7.s2, 0x39, LSL, 24); dump();
mvni(v0.s2, 0x39, LSL, 24); dump();
mvni(v1.s2, 0x39, LSL, 24); dump();
mvni(v2.s2, 0x39, LSL, 24); dump();
mvni(v4.s2, 0x39, LSL, 24); dump();
mvni(v8.s2, 0x39, LSL, 24); dump();
mvni(v16.s2, 0x39, LSL, 24); dump();
mvni(v31.s2, 0x39, LSL, 24); dump();
mvni(v7.s2, 0x39, LSL, 24); dump();
mvni(v7.s2, 0, LSL, 24); dump();
mvni(v7.s2, 1, LSL, 24); dump();
mvni(v7.s2, 2, LSL, 24); dump();
mvni(v7.s2, 4, LSL, 24); dump();
mvni(v7.s2, 8, LSL, 24); dump();
mvni(v7.s2, 16, LSL, 24); dump();
mvni(v7.s2, 32, LSL, 24); dump();
mvni(v7.s2, 64, LSL, 24); dump();
mvni(v7.s2, 128, LSL, 24); dump();
mvni(v7.s2, 255, LSL, 24); dump();
mvni(v7.s2, 0x39, LSL, 24); dump();
mvni(v7.s2, 0x39, LSL, 0); dump();
mvni(v7.s2, 0x39, LSL, 8); dump();
mvni(v7.s2, 0x39, LSL, 16); dump();
mvni(v7.s2, 0x39, LSL, 24); dump();
//DataProcSimd_Immediate4:6
mvni(v7.s2, 0x39, MSL, 8); dump();
mvni(v0.s2, 0x39, MSL, 8); dump();
mvni(v1.s2, 0x39, MSL, 8); dump();
mvni(v2.s2, 0x39, MSL, 8); dump();
mvni(v4.s2, 0x39, MSL, 8); dump();
mvni(v8.s2, 0x39, MSL, 8); dump();
mvni(v16.s2, 0x39, MSL, 8); dump();
mvni(v31.s2, 0x39, MSL, 8); dump();
mvni(v7.s2, 0x39, MSL, 8); dump();
mvni(v7.s2, 0, MSL, 8); dump();
mvni(v7.s2, 1, MSL, 8); dump();
mvni(v7.s2, 2, MSL, 8); dump();
mvni(v7.s2, 4, MSL, 8); dump();
mvni(v7.s2, 8, MSL, 8); dump();
mvni(v7.s2, 16, MSL, 8); dump();
mvni(v7.s2, 32, MSL, 8); dump();
mvni(v7.s2, 64, MSL, 8); dump();
mvni(v7.s2, 128, MSL, 8); dump();
mvni(v7.s2, 255, MSL, 8); dump();
mvni(v7.s2, 0x39, MSL, 8); dump();
mvni(v7.s2, 0x39, MSL, 16); dump();
//DataProcSimd_Immediate4:7
mvni(v7.s4, 0x39, MSL, 8); dump();
mvni(v0.s4, 0x39, MSL, 8); dump();
mvni(v1.s4, 0x39, MSL, 8); dump();
mvni(v2.s4, 0x39, MSL, 8); dump();
mvni(v4.s4, 0x39, MSL, 8); dump();
mvni(v8.s4, 0x39, MSL, 8); dump();
mvni(v16.s4, 0x39, MSL, 8); dump();
mvni(v31.s4, 0x39, MSL, 8); dump();
mvni(v7.s4, 0x39, MSL, 8); dump();
mvni(v7.s4, 0, MSL, 8); dump();
mvni(v7.s4, 1, MSL, 8); dump();
mvni(v7.s4, 2, MSL, 8); dump();
mvni(v7.s4, 4, MSL, 8); dump();
mvni(v7.s4, 8, MSL, 8); dump();
mvni(v7.s4, 16, MSL, 8); dump();
mvni(v7.s4, 32, MSL, 8); dump();
mvni(v7.s4, 64, MSL, 8); dump();
mvni(v7.s4, 128, MSL, 8); dump();
mvni(v7.s4, 255, MSL, 8); dump();
mvni(v7.s4, 0x39, MSL, 8); dump();
mvni(v7.s4, 0x39, MSL, 16); dump();
//DataProcSimd_ShiftImmediate0:0
rshrn(v7.b8, v7.h8, 1); dump();
rshrn(v0.b8, v7.h8, 1); dump();
rshrn(v1.b8, v7.h8, 1); dump();
rshrn(v2.b8, v7.h8, 1); dump();
rshrn(v4.b8, v7.h8, 1); dump();
rshrn(v8.b8, v7.h8, 1); dump();
rshrn(v16.b8, v7.h8, 1); dump();
rshrn(v31.b8, v7.h8, 1); dump();
rshrn(v7.b8, v7.h8, 1); dump();
rshrn(v7.b8, v0.h8, 1); dump();
rshrn(v7.b8, v1.h8, 1); dump();
rshrn(v7.b8, v2.h8, 1); dump();
rshrn(v7.b8, v4.h8, 1); dump();
rshrn(v7.b8, v8.h8, 1); dump();
rshrn(v7.b8, v16.h8, 1); dump();
rshrn(v7.b8, v31.h8, 1); dump();
rshrn(v7.b8, v7.h8, 1); dump();
rshrn(v7.b8, v7.h8, 2); dump();
rshrn(v7.b8, v7.h8, 4); dump();
rshrn(v7.b8, v7.h8, 8); dump();
shrn(v7.b8, v7.h8, 1); dump();
shrn(v0.b8, v7.h8, 1); dump();
shrn(v1.b8, v7.h8, 1); dump();
shrn(v2.b8, v7.h8, 1); dump();
shrn(v4.b8, v7.h8, 1); dump();
shrn(v8.b8, v7.h8, 1); dump();
shrn(v16.b8, v7.h8, 1); dump();
shrn(v31.b8, v7.h8, 1); dump();
shrn(v7.b8, v7.h8, 1); dump();
shrn(v7.b8, v0.h8, 1); dump();
shrn(v7.b8, v1.h8, 1); dump();
shrn(v7.b8, v2.h8, 1); dump();
shrn(v7.b8, v4.h8, 1); dump();
shrn(v7.b8, v8.h8, 1); dump();
shrn(v7.b8, v16.h8, 1); dump();
shrn(v7.b8, v31.h8, 1); dump();
shrn(v7.b8, v7.h8, 1); dump();
shrn(v7.b8, v7.h8, 2); dump();
shrn(v7.b8, v7.h8, 4); dump();
shrn(v7.b8, v7.h8, 8); dump();
//DataProcSimd_ShiftImmediate0:1
rshrn(v7.h4, v7.s4, 1); dump();
rshrn(v0.h4, v7.s4, 1); dump();
rshrn(v1.h4, v7.s4, 1); dump();
rshrn(v2.h4, v7.s4, 1); dump();
rshrn(v4.h4, v7.s4, 1); dump();
rshrn(v8.h4, v7.s4, 1); dump();
rshrn(v16.h4, v7.s4, 1); dump();
rshrn(v31.h4, v7.s4, 1); dump();
rshrn(v7.h4, v7.s4, 1); dump();
rshrn(v7.h4, v0.s4, 1); dump();
rshrn(v7.h4, v1.s4, 1); dump();
rshrn(v7.h4, v2.s4, 1); dump();
rshrn(v7.h4, v4.s4, 1); dump();
rshrn(v7.h4, v8.s4, 1); dump();
rshrn(v7.h4, v16.s4, 1); dump();
rshrn(v7.h4, v31.s4, 1); dump();
rshrn(v7.h4, v7.s4, 1); dump();
rshrn(v7.h4, v7.s4, 2); dump();
rshrn(v7.h4, v7.s4, 4); dump();
rshrn(v7.h4, v7.s4, 8); dump();
rshrn(v7.h4, v7.s4, 16); dump();
shrn(v7.h4, v7.s4, 1); dump();
shrn(v0.h4, v7.s4, 1); dump();
shrn(v1.h4, v7.s4, 1); dump();
shrn(v2.h4, v7.s4, 1); dump();
shrn(v4.h4, v7.s4, 1); dump();
shrn(v8.h4, v7.s4, 1); dump();
shrn(v16.h4, v7.s4, 1); dump();
shrn(v31.h4, v7.s4, 1); dump();
shrn(v7.h4, v7.s4, 1); dump();
shrn(v7.h4, v0.s4, 1); dump();
shrn(v7.h4, v1.s4, 1); dump();
shrn(v7.h4, v2.s4, 1); dump();
shrn(v7.h4, v4.s4, 1); dump();
shrn(v7.h4, v8.s4, 1); dump();
shrn(v7.h4, v16.s4, 1); dump();
shrn(v7.h4, v31.s4, 1); dump();
shrn(v7.h4, v7.s4, 1); dump();
shrn(v7.h4, v7.s4, 2); dump();
shrn(v7.h4, v7.s4, 4); dump();
shrn(v7.h4, v7.s4, 8); dump();
shrn(v7.h4, v7.s4, 16); dump();
//DataProcSimd_ShiftImmediate0:2
rshrn(v7.s2, v7.d2, 1); dump();
rshrn(v0.s2, v7.d2, 1); dump();
rshrn(v1.s2, v7.d2, 1); dump();
rshrn(v2.s2, v7.d2, 1); dump();
rshrn(v4.s2, v7.d2, 1); dump();
rshrn(v8.s2, v7.d2, 1); dump();
rshrn(v16.s2, v7.d2, 1); dump();
rshrn(v31.s2, v7.d2, 1); dump();
rshrn(v7.s2, v7.d2, 1); dump();
rshrn(v7.s2, v0.d2, 1); dump();
rshrn(v7.s2, v1.d2, 1); dump();
rshrn(v7.s2, v2.d2, 1); dump();
rshrn(v7.s2, v4.d2, 1); dump();
rshrn(v7.s2, v8.d2, 1); dump();
rshrn(v7.s2, v16.d2, 1); dump();
rshrn(v7.s2, v31.d2, 1); dump();
rshrn(v7.s2, v7.d2, 1); dump();
rshrn(v7.s2, v7.d2, 2); dump();
rshrn(v7.s2, v7.d2, 4); dump();
rshrn(v7.s2, v7.d2, 8); dump();
rshrn(v7.s2, v7.d2, 16); dump();
rshrn(v7.s2, v7.d2, 32); dump();
shrn(v7.s2, v7.d2, 1); dump();
shrn(v0.s2, v7.d2, 1); dump();
shrn(v1.s2, v7.d2, 1); dump();
shrn(v2.s2, v7.d2, 1); dump();
shrn(v4.s2, v7.d2, 1); dump();
shrn(v8.s2, v7.d2, 1); dump();
shrn(v16.s2, v7.d2, 1); dump();
shrn(v31.s2, v7.d2, 1); dump();
shrn(v7.s2, v7.d2, 1); dump();
shrn(v7.s2, v0.d2, 1); dump();
shrn(v7.s2, v1.d2, 1); dump();
shrn(v7.s2, v2.d2, 1); dump();
shrn(v7.s2, v4.d2, 1); dump();
shrn(v7.s2, v8.d2, 1); dump();
shrn(v7.s2, v16.d2, 1); dump();
shrn(v7.s2, v31.d2, 1); dump();
shrn(v7.s2, v7.d2, 1); dump();
shrn(v7.s2, v7.d2, 2); dump();
shrn(v7.s2, v7.d2, 4); dump();
shrn(v7.s2, v7.d2, 8); dump();
shrn(v7.s2, v7.d2, 16); dump();
shrn(v7.s2, v7.d2, 32); dump();
//DataProcSimd_ShiftImmediate1:0
rshrn2(v7.b16, v7.h8, 1); dump();
rshrn2(v0.b16, v7.h8, 1); dump();
rshrn2(v1.b16, v7.h8, 1); dump();
rshrn2(v2.b16, v7.h8, 1); dump();
rshrn2(v4.b16, v7.h8, 1); dump();
rshrn2(v8.b16, v7.h8, 1); dump();
rshrn2(v16.b16, v7.h8, 1); dump();
rshrn2(v31.b16, v7.h8, 1); dump();
rshrn2(v7.b16, v7.h8, 1); dump();
rshrn2(v7.b16, v0.h8, 1); dump();
rshrn2(v7.b16, v1.h8, 1); dump();
rshrn2(v7.b16, v2.h8, 1); dump();
rshrn2(v7.b16, v4.h8, 1); dump();
rshrn2(v7.b16, v8.h8, 1); dump();
rshrn2(v7.b16, v16.h8, 1); dump();
rshrn2(v7.b16, v31.h8, 1); dump();
rshrn2(v7.b16, v7.h8, 1); dump();
rshrn2(v7.b16, v7.h8, 2); dump();
rshrn2(v7.b16, v7.h8, 4); dump();
rshrn2(v7.b16, v7.h8, 8); dump();
shrn2(v7.b16, v7.h8, 1); dump();
shrn2(v0.b16, v7.h8, 1); dump();
shrn2(v1.b16, v7.h8, 1); dump();
shrn2(v2.b16, v7.h8, 1); dump();
shrn2(v4.b16, v7.h8, 1); dump();
shrn2(v8.b16, v7.h8, 1); dump();
shrn2(v16.b16, v7.h8, 1); dump();
shrn2(v31.b16, v7.h8, 1); dump();
shrn2(v7.b16, v7.h8, 1); dump();
shrn2(v7.b16, v0.h8, 1); dump();
shrn2(v7.b16, v1.h8, 1); dump();
shrn2(v7.b16, v2.h8, 1); dump();
shrn2(v7.b16, v4.h8, 1); dump();
shrn2(v7.b16, v8.h8, 1); dump();
shrn2(v7.b16, v16.h8, 1); dump();
shrn2(v7.b16, v31.h8, 1); dump();
shrn2(v7.b16, v7.h8, 1); dump();
shrn2(v7.b16, v7.h8, 2); dump();
shrn2(v7.b16, v7.h8, 4); dump();
shrn2(v7.b16, v7.h8, 8); dump();
//DataProcSimd_ShiftImmediate1:1
rshrn2(v7.h8, v7.s4, 1); dump();
rshrn2(v0.h8, v7.s4, 1); dump();
rshrn2(v1.h8, v7.s4, 1); dump();
rshrn2(v2.h8, v7.s4, 1); dump();
rshrn2(v4.h8, v7.s4, 1); dump();
rshrn2(v8.h8, v7.s4, 1); dump();
rshrn2(v16.h8, v7.s4, 1); dump();
rshrn2(v31.h8, v7.s4, 1); dump();
rshrn2(v7.h8, v7.s4, 1); dump();
rshrn2(v7.h8, v0.s4, 1); dump();
rshrn2(v7.h8, v1.s4, 1); dump();
rshrn2(v7.h8, v2.s4, 1); dump();
rshrn2(v7.h8, v4.s4, 1); dump();
rshrn2(v7.h8, v8.s4, 1); dump();
rshrn2(v7.h8, v16.s4, 1); dump();
rshrn2(v7.h8, v31.s4, 1); dump();
rshrn2(v7.h8, v7.s4, 1); dump();
rshrn2(v7.h8, v7.s4, 2); dump();
rshrn2(v7.h8, v7.s4, 4); dump();
rshrn2(v7.h8, v7.s4, 8); dump();
rshrn2(v7.h8, v7.s4, 16); dump();
shrn2(v7.h8, v7.s4, 1); dump();
shrn2(v0.h8, v7.s4, 1); dump();
shrn2(v1.h8, v7.s4, 1); dump();
shrn2(v2.h8, v7.s4, 1); dump();
shrn2(v4.h8, v7.s4, 1); dump();
shrn2(v8.h8, v7.s4, 1); dump();
shrn2(v16.h8, v7.s4, 1); dump();
shrn2(v31.h8, v7.s4, 1); dump();
shrn2(v7.h8, v7.s4, 1); dump();
shrn2(v7.h8, v0.s4, 1); dump();
shrn2(v7.h8, v1.s4, 1); dump();
shrn2(v7.h8, v2.s4, 1); dump();
shrn2(v7.h8, v4.s4, 1); dump();
shrn2(v7.h8, v8.s4, 1); dump();
shrn2(v7.h8, v16.s4, 1); dump();
shrn2(v7.h8, v31.s4, 1); dump();
shrn2(v7.h8, v7.s4, 1); dump();
shrn2(v7.h8, v7.s4, 2); dump();
shrn2(v7.h8, v7.s4, 4); dump();
shrn2(v7.h8, v7.s4, 8); dump();
shrn2(v7.h8, v7.s4, 16); dump();
//DataProcSimd_ShiftImmediate1:2
rshrn2(v7.s4, v7.d2, 1); dump();
rshrn2(v0.s4, v7.d2, 1); dump();
rshrn2(v1.s4, v7.d2, 1); dump();
rshrn2(v2.s4, v7.d2, 1); dump();
rshrn2(v4.s4, v7.d2, 1); dump();
rshrn2(v8.s4, v7.d2, 1); dump();
rshrn2(v16.s4, v7.d2, 1); dump();
rshrn2(v31.s4, v7.d2, 1); dump();
rshrn2(v7.s4, v7.d2, 1); dump();
rshrn2(v7.s4, v0.d2, 1); dump();
rshrn2(v7.s4, v1.d2, 1); dump();
rshrn2(v7.s4, v2.d2, 1); dump();
rshrn2(v7.s4, v4.d2, 1); dump();
rshrn2(v7.s4, v8.d2, 1); dump();
rshrn2(v7.s4, v16.d2, 1); dump();
rshrn2(v7.s4, v31.d2, 1); dump();
rshrn2(v7.s4, v7.d2, 1); dump();
rshrn2(v7.s4, v7.d2, 2); dump();
rshrn2(v7.s4, v7.d2, 4); dump();
rshrn2(v7.s4, v7.d2, 8); dump();
rshrn2(v7.s4, v7.d2, 16); dump();
rshrn2(v7.s4, v7.d2, 32); dump();
shrn2(v7.s4, v7.d2, 1); dump();
shrn2(v0.s4, v7.d2, 1); dump();
shrn2(v1.s4, v7.d2, 1); dump();
shrn2(v2.s4, v7.d2, 1); dump();
shrn2(v4.s4, v7.d2, 1); dump();
shrn2(v8.s4, v7.d2, 1); dump();
shrn2(v16.s4, v7.d2, 1); dump();
shrn2(v31.s4, v7.d2, 1); dump();
shrn2(v7.s4, v7.d2, 1); dump();
shrn2(v7.s4, v0.d2, 1); dump();
shrn2(v7.s4, v1.d2, 1); dump();
shrn2(v7.s4, v2.d2, 1); dump();
shrn2(v7.s4, v4.d2, 1); dump();
shrn2(v7.s4, v8.d2, 1); dump();
shrn2(v7.s4, v16.d2, 1); dump();
shrn2(v7.s4, v31.d2, 1); dump();
shrn2(v7.s4, v7.d2, 1); dump();
shrn2(v7.s4, v7.d2, 2); dump();
shrn2(v7.s4, v7.d2, 4); dump();
shrn2(v7.s4, v7.d2, 8); dump();
shrn2(v7.s4, v7.d2, 16); dump();
shrn2(v7.s4, v7.d2, 32); dump();
//DataProcSimd_ShiftImmediate2:0
shl(d7, d7, 0x39); dump();
shl(d0, d7, 0x39); dump();
shl(d1, d7, 0x39); dump();
shl(d2, d7, 0x39); dump();
shl(d4, d7, 0x39); dump();
shl(d8, d7, 0x39); dump();
shl(d16, d7, 0x39); dump();
shl(d31, d7, 0x39); dump();
shl(d7, d7, 0x39); dump();
shl(d7, d0, 0x39); dump();
shl(d7, d1, 0x39); dump();
shl(d7, d2, 0x39); dump();
shl(d7, d4, 0x39); dump();
shl(d7, d8, 0x39); dump();
shl(d7, d16, 0x39); dump();
shl(d7, d31, 0x39); dump();
shl(d7, d7, 0x39); dump();
shl(d7, d7, 0); dump();
shl(d7, d7, 1); dump();
shl(d7, d7, 2); dump();
shl(d7, d7, 4); dump();
shl(d7, d7, 8); dump();
shl(d7, d7, 16); dump();
shl(d7, d7, 32); dump();
shl(d7, d7, 63); dump();
sli(d7, d7, 0x39); dump();
sli(d0, d7, 0x39); dump();
sli(d1, d7, 0x39); dump();
sli(d2, d7, 0x39); dump();
sli(d4, d7, 0x39); dump();
sli(d8, d7, 0x39); dump();
sli(d16, d7, 0x39); dump();
sli(d31, d7, 0x39); dump();
sli(d7, d7, 0x39); dump();
sli(d7, d0, 0x39); dump();
sli(d7, d1, 0x39); dump();
sli(d7, d2, 0x39); dump();
sli(d7, d4, 0x39); dump();
sli(d7, d8, 0x39); dump();
sli(d7, d16, 0x39); dump();
sli(d7, d31, 0x39); dump();
sli(d7, d7, 0x39); dump();
sli(d7, d7, 0); dump();
sli(d7, d7, 1); dump();
sli(d7, d7, 2); dump();
sli(d7, d7, 4); dump();
sli(d7, d7, 8); dump();
sli(d7, d7, 16); dump();
sli(d7, d7, 32); dump();
sli(d7, d7, 63); dump();
//DataProcSimd_ShiftImmediate2:1
shl(v7.b8, v7.b8, 7); dump();
shl(v0.b8, v7.b8, 7); dump();
shl(v1.b8, v7.b8, 7); dump();
shl(v2.b8, v7.b8, 7); dump();
shl(v4.b8, v7.b8, 7); dump();
shl(v8.b8, v7.b8, 7); dump();
shl(v16.b8, v7.b8, 7); dump();
shl(v31.b8, v7.b8, 7); dump();
shl(v7.b8, v7.b8, 7); dump();
shl(v7.b8, v0.b8, 7); dump();
shl(v7.b8, v1.b8, 7); dump();
shl(v7.b8, v2.b8, 7); dump();
shl(v7.b8, v4.b8, 7); dump();
shl(v7.b8, v8.b8, 7); dump();
shl(v7.b8, v16.b8, 7); dump();
shl(v7.b8, v31.b8, 7); dump();
shl(v7.b8, v7.b8, 7); dump();
shl(v7.b8, v7.b8, 0); dump();
shl(v7.b8, v7.b8, 1); dump();
shl(v7.b8, v7.b8, 2); dump();
shl(v7.b8, v7.b8, 4); dump();
sli(v7.b8, v7.b8, 7); dump();
sli(v0.b8, v7.b8, 7); dump();
sli(v1.b8, v7.b8, 7); dump();
sli(v2.b8, v7.b8, 7); dump();
sli(v4.b8, v7.b8, 7); dump();
sli(v8.b8, v7.b8, 7); dump();
sli(v16.b8, v7.b8, 7); dump();
sli(v31.b8, v7.b8, 7); dump();
sli(v7.b8, v7.b8, 7); dump();
sli(v7.b8, v0.b8, 7); dump();
sli(v7.b8, v1.b8, 7); dump();
sli(v7.b8, v2.b8, 7); dump();
sli(v7.b8, v4.b8, 7); dump();
sli(v7.b8, v8.b8, 7); dump();
sli(v7.b8, v16.b8, 7); dump();
sli(v7.b8, v31.b8, 7); dump();
sli(v7.b8, v7.b8, 7); dump();
sli(v7.b8, v7.b8, 0); dump();
sli(v7.b8, v7.b8, 1); dump();
sli(v7.b8, v7.b8, 2); dump();
sli(v7.b8, v7.b8, 4); dump();
//DataProcSimd_ShiftImmediate2:2
shl(v7.b16, v7.b16, 7); dump();
shl(v0.b16, v7.b16, 7); dump();
shl(v1.b16, v7.b16, 7); dump();
shl(v2.b16, v7.b16, 7); dump();
shl(v4.b16, v7.b16, 7); dump();
shl(v8.b16, v7.b16, 7); dump();
shl(v16.b16, v7.b16, 7); dump();
shl(v31.b16, v7.b16, 7); dump();
shl(v7.b16, v7.b16, 7); dump();
shl(v7.b16, v0.b16, 7); dump();
shl(v7.b16, v1.b16, 7); dump();
shl(v7.b16, v2.b16, 7); dump();
shl(v7.b16, v4.b16, 7); dump();
shl(v7.b16, v8.b16, 7); dump();
shl(v7.b16, v16.b16, 7); dump();
shl(v7.b16, v31.b16, 7); dump();
shl(v7.b16, v7.b16, 7); dump();
shl(v7.b16, v7.b16, 0); dump();
shl(v7.b16, v7.b16, 1); dump();
shl(v7.b16, v7.b16, 2); dump();
shl(v7.b16, v7.b16, 4); dump();
sli(v7.b16, v7.b16, 7); dump();
sli(v0.b16, v7.b16, 7); dump();
sli(v1.b16, v7.b16, 7); dump();
sli(v2.b16, v7.b16, 7); dump();
sli(v4.b16, v7.b16, 7); dump();
sli(v8.b16, v7.b16, 7); dump();
sli(v16.b16, v7.b16, 7); dump();
sli(v31.b16, v7.b16, 7); dump();
sli(v7.b16, v7.b16, 7); dump();
sli(v7.b16, v0.b16, 7); dump();
sli(v7.b16, v1.b16, 7); dump();
sli(v7.b16, v2.b16, 7); dump();
sli(v7.b16, v4.b16, 7); dump();
sli(v7.b16, v8.b16, 7); dump();
sli(v7.b16, v16.b16, 7); dump();
sli(v7.b16, v31.b16, 7); dump();
sli(v7.b16, v7.b16, 7); dump();
sli(v7.b16, v7.b16, 0); dump();
sli(v7.b16, v7.b16, 1); dump();
sli(v7.b16, v7.b16, 2); dump();
sli(v7.b16, v7.b16, 4); dump();
//DataProcSimd_ShiftImmediate2:3
shl(v7.h4, v7.h4, 7); dump();
shl(v0.h4, v7.h4, 7); dump();
shl(v1.h4, v7.h4, 7); dump();
shl(v2.h4, v7.h4, 7); dump();
shl(v4.h4, v7.h4, 7); dump();
shl(v8.h4, v7.h4, 7); dump();
shl(v16.h4, v7.h4, 7); dump();
shl(v31.h4, v7.h4, 7); dump();
shl(v7.h4, v7.h4, 7); dump();
shl(v7.h4, v0.h4, 7); dump();
shl(v7.h4, v1.h4, 7); dump();
shl(v7.h4, v2.h4, 7); dump();
shl(v7.h4, v4.h4, 7); dump();
shl(v7.h4, v8.h4, 7); dump();
shl(v7.h4, v16.h4, 7); dump();
shl(v7.h4, v31.h4, 7); dump();
shl(v7.h4, v7.h4, 7); dump();
shl(v7.h4, v7.h4, 0); dump();
shl(v7.h4, v7.h4, 1); dump();
shl(v7.h4, v7.h4, 2); dump();
shl(v7.h4, v7.h4, 4); dump();
shl(v7.h4, v7.h4, 8); dump();
shl(v7.h4, v7.h4, 15); dump();
sli(v7.h4, v7.h4, 7); dump();
sli(v0.h4, v7.h4, 7); dump();
sli(v1.h4, v7.h4, 7); dump();
sli(v2.h4, v7.h4, 7); dump();
sli(v4.h4, v7.h4, 7); dump();
sli(v8.h4, v7.h4, 7); dump();
sli(v16.h4, v7.h4, 7); dump();
sli(v31.h4, v7.h4, 7); dump();
sli(v7.h4, v7.h4, 7); dump();
sli(v7.h4, v0.h4, 7); dump();
sli(v7.h4, v1.h4, 7); dump();
sli(v7.h4, v2.h4, 7); dump();
sli(v7.h4, v4.h4, 7); dump();
sli(v7.h4, v8.h4, 7); dump();
sli(v7.h4, v16.h4, 7); dump();
sli(v7.h4, v31.h4, 7); dump();
sli(v7.h4, v7.h4, 7); dump();
sli(v7.h4, v7.h4, 0); dump();
sli(v7.h4, v7.h4, 1); dump();
sli(v7.h4, v7.h4, 2); dump();
sli(v7.h4, v7.h4, 4); dump();
sli(v7.h4, v7.h4, 8); dump();
sli(v7.h4, v7.h4, 15); dump();
//DataProcSimd_ShiftImmediate2:4
shl(v7.h8, v7.h8, 7); dump();
shl(v0.h8, v7.h8, 7); dump();
shl(v1.h8, v7.h8, 7); dump();
shl(v2.h8, v7.h8, 7); dump();
shl(v4.h8, v7.h8, 7); dump();
shl(v8.h8, v7.h8, 7); dump();
shl(v16.h8, v7.h8, 7); dump();
shl(v31.h8, v7.h8, 7); dump();
shl(v7.h8, v7.h8, 7); dump();
shl(v7.h8, v0.h8, 7); dump();
shl(v7.h8, v1.h8, 7); dump();
shl(v7.h8, v2.h8, 7); dump();
shl(v7.h8, v4.h8, 7); dump();
shl(v7.h8, v8.h8, 7); dump();
shl(v7.h8, v16.h8, 7); dump();
shl(v7.h8, v31.h8, 7); dump();
shl(v7.h8, v7.h8, 7); dump();
shl(v7.h8, v7.h8, 0); dump();
shl(v7.h8, v7.h8, 1); dump();
shl(v7.h8, v7.h8, 2); dump();
shl(v7.h8, v7.h8, 4); dump();
shl(v7.h8, v7.h8, 8); dump();
shl(v7.h8, v7.h8, 15); dump();
sli(v7.h8, v7.h8, 7); dump();
sli(v0.h8, v7.h8, 7); dump();
sli(v1.h8, v7.h8, 7); dump();
sli(v2.h8, v7.h8, 7); dump();
sli(v4.h8, v7.h8, 7); dump();
sli(v8.h8, v7.h8, 7); dump();
sli(v16.h8, v7.h8, 7); dump();
sli(v31.h8, v7.h8, 7); dump();
sli(v7.h8, v7.h8, 7); dump();
sli(v7.h8, v0.h8, 7); dump();
sli(v7.h8, v1.h8, 7); dump();
sli(v7.h8, v2.h8, 7); dump();
sli(v7.h8, v4.h8, 7); dump();
sli(v7.h8, v8.h8, 7); dump();
sli(v7.h8, v16.h8, 7); dump();
sli(v7.h8, v31.h8, 7); dump();
sli(v7.h8, v7.h8, 7); dump();
sli(v7.h8, v7.h8, 0); dump();
sli(v7.h8, v7.h8, 1); dump();
sli(v7.h8, v7.h8, 2); dump();
sli(v7.h8, v7.h8, 4); dump();
sli(v7.h8, v7.h8, 8); dump();
sli(v7.h8, v7.h8, 15); dump();
//DataProcSimd_ShiftImmediate2:5
shl(v7.s2, v7.s2, 0x1e); dump();
shl(v0.s2, v7.s2, 0x1e); dump();
shl(v1.s2, v7.s2, 0x1e); dump();
shl(v2.s2, v7.s2, 0x1e); dump();
shl(v4.s2, v7.s2, 0x1e); dump();
shl(v8.s2, v7.s2, 0x1e); dump();
shl(v16.s2, v7.s2, 0x1e); dump();
shl(v31.s2, v7.s2, 0x1e); dump();
shl(v7.s2, v7.s2, 0x1e); dump();
shl(v7.s2, v0.s2, 0x1e); dump();
shl(v7.s2, v1.s2, 0x1e); dump();
shl(v7.s2, v2.s2, 0x1e); dump();
shl(v7.s2, v4.s2, 0x1e); dump();
shl(v7.s2, v8.s2, 0x1e); dump();
shl(v7.s2, v16.s2, 0x1e); dump();
shl(v7.s2, v31.s2, 0x1e); dump();
shl(v7.s2, v7.s2, 0x1e); dump();
shl(v7.s2, v7.s2, 0); dump();
shl(v7.s2, v7.s2, 1); dump();
shl(v7.s2, v7.s2, 2); dump();
shl(v7.s2, v7.s2, 4); dump();
shl(v7.s2, v7.s2, 8); dump();
shl(v7.s2, v7.s2, 16); dump();
shl(v7.s2, v7.s2, 31); dump();
sli(v7.s2, v7.s2, 0x1e); dump();
sli(v0.s2, v7.s2, 0x1e); dump();
sli(v1.s2, v7.s2, 0x1e); dump();
sli(v2.s2, v7.s2, 0x1e); dump();
sli(v4.s2, v7.s2, 0x1e); dump();
sli(v8.s2, v7.s2, 0x1e); dump();
sli(v16.s2, v7.s2, 0x1e); dump();
sli(v31.s2, v7.s2, 0x1e); dump();
sli(v7.s2, v7.s2, 0x1e); dump();
sli(v7.s2, v0.s2, 0x1e); dump();
sli(v7.s2, v1.s2, 0x1e); dump();
sli(v7.s2, v2.s2, 0x1e); dump();
sli(v7.s2, v4.s2, 0x1e); dump();
sli(v7.s2, v8.s2, 0x1e); dump();
sli(v7.s2, v16.s2, 0x1e); dump();
sli(v7.s2, v31.s2, 0x1e); dump();
sli(v7.s2, v7.s2, 0x1e); dump();
sli(v7.s2, v7.s2, 0); dump();
sli(v7.s2, v7.s2, 1); dump();
sli(v7.s2, v7.s2, 2); dump();
sli(v7.s2, v7.s2, 4); dump();
sli(v7.s2, v7.s2, 8); dump();
sli(v7.s2, v7.s2, 16); dump();
sli(v7.s2, v7.s2, 31); dump();
//DataProcSimd_ShiftImmediate2:6
shl(v7.s4, v7.s4, 7); dump();
shl(v0.s4, v7.s4, 7); dump();
shl(v1.s4, v7.s4, 7); dump();
shl(v2.s4, v7.s4, 7); dump();
shl(v4.s4, v7.s4, 7); dump();
shl(v8.s4, v7.s4, 7); dump();
shl(v16.s4, v7.s4, 7); dump();
shl(v31.s4, v7.s4, 7); dump();
shl(v7.s4, v7.s4, 7); dump();
shl(v7.s4, v0.s4, 7); dump();
shl(v7.s4, v1.s4, 7); dump();
shl(v7.s4, v2.s4, 7); dump();
shl(v7.s4, v4.s4, 7); dump();
shl(v7.s4, v8.s4, 7); dump();
shl(v7.s4, v16.s4, 7); dump();
shl(v7.s4, v31.s4, 7); dump();
shl(v7.s4, v7.s4, 7); dump();
shl(v7.s4, v7.s4, 0); dump();
shl(v7.s4, v7.s4, 1); dump();
shl(v7.s4, v7.s4, 2); dump();
shl(v7.s4, v7.s4, 4); dump();
shl(v7.s4, v7.s4, 8); dump();
shl(v7.s4, v7.s4, 15); dump();
sli(v7.s4, v7.s4, 7); dump();
sli(v0.s4, v7.s4, 7); dump();
sli(v1.s4, v7.s4, 7); dump();
sli(v2.s4, v7.s4, 7); dump();
sli(v4.s4, v7.s4, 7); dump();
sli(v8.s4, v7.s4, 7); dump();
sli(v16.s4, v7.s4, 7); dump();
sli(v31.s4, v7.s4, 7); dump();
sli(v7.s4, v7.s4, 7); dump();
sli(v7.s4, v0.s4, 7); dump();
sli(v7.s4, v1.s4, 7); dump();
sli(v7.s4, v2.s4, 7); dump();
sli(v7.s4, v4.s4, 7); dump();
sli(v7.s4, v8.s4, 7); dump();
sli(v7.s4, v16.s4, 7); dump();
sli(v7.s4, v31.s4, 7); dump();
sli(v7.s4, v7.s4, 7); dump();
sli(v7.s4, v7.s4, 0); dump();
sli(v7.s4, v7.s4, 1); dump();
sli(v7.s4, v7.s4, 2); dump();
sli(v7.s4, v7.s4, 4); dump();
sli(v7.s4, v7.s4, 8); dump();
sli(v7.s4, v7.s4, 15); dump();
//DataProcSimd_ShiftImmediate2:7
shl(v7.d2, v7.d2, 0x39); dump();
shl(v0.d2, v7.d2, 0x39); dump();
shl(v1.d2, v7.d2, 0x39); dump();
shl(v2.d2, v7.d2, 0x39); dump();
shl(v4.d2, v7.d2, 0x39); dump();
shl(v8.d2, v7.d2, 0x39); dump();
shl(v16.d2, v7.d2, 0x39); dump();
shl(v31.d2, v7.d2, 0x39); dump();
shl(v7.d2, v7.d2, 0x39); dump();
shl(v7.d2, v0.d2, 0x39); dump();
shl(v7.d2, v1.d2, 0x39); dump();
shl(v7.d2, v2.d2, 0x39); dump();
shl(v7.d2, v4.d2, 0x39); dump();
shl(v7.d2, v8.d2, 0x39); dump();
shl(v7.d2, v16.d2, 0x39); dump();
shl(v7.d2, v31.d2, 0x39); dump();
shl(v7.d2, v7.d2, 0x39); dump();
shl(v7.d2, v7.d2, 0); dump();
shl(v7.d2, v7.d2, 1); dump();
shl(v7.d2, v7.d2, 2); dump();
shl(v7.d2, v7.d2, 4); dump();
shl(v7.d2, v7.d2, 8); dump();
shl(v7.d2, v7.d2, 16); dump();
shl(v7.d2, v7.d2, 32); dump();
shl(v7.d2, v7.d2, 63); dump();
sli(v7.d2, v7.d2, 0x39); dump();
sli(v0.d2, v7.d2, 0x39); dump();
sli(v1.d2, v7.d2, 0x39); dump();
sli(v2.d2, v7.d2, 0x39); dump();
sli(v4.d2, v7.d2, 0x39); dump();
sli(v8.d2, v7.d2, 0x39); dump();
sli(v16.d2, v7.d2, 0x39); dump();
sli(v31.d2, v7.d2, 0x39); dump();
sli(v7.d2, v7.d2, 0x39); dump();
sli(v7.d2, v0.d2, 0x39); dump();
sli(v7.d2, v1.d2, 0x39); dump();
sli(v7.d2, v2.d2, 0x39); dump();
sli(v7.d2, v4.d2, 0x39); dump();
sli(v7.d2, v8.d2, 0x39); dump();
sli(v7.d2, v16.d2, 0x39); dump();
sli(v7.d2, v31.d2, 0x39); dump();
sli(v7.d2, v7.d2, 0x39); dump();
sli(v7.d2, v7.d2, 0); dump();
sli(v7.d2, v7.d2, 1); dump();
sli(v7.d2, v7.d2, 2); dump();
sli(v7.d2, v7.d2, 4); dump();
sli(v7.d2, v7.d2, 8); dump();
sli(v7.d2, v7.d2, 16); dump();
sli(v7.d2, v7.d2, 32); dump();
sli(v7.d2, v7.d2, 63); dump();
//DataProcSimd_ShiftImmediate3:0
shll(v7.h8, v7.b8, 8); dump();
shll(v0.h8, v7.b8, 8); dump();
shll(v1.h8, v7.b8, 8); dump();
shll(v2.h8, v7.b8, 8); dump();
shll(v4.h8, v7.b8, 8); dump();
shll(v8.h8, v7.b8, 8); dump();
shll(v16.h8, v7.b8, 8); dump();
shll(v31.h8, v7.b8, 8); dump();
shll(v7.h8, v7.b8, 8); dump();
shll(v7.h8, v0.b8, 8); dump();
shll(v7.h8, v1.b8, 8); dump();
shll(v7.h8, v2.b8, 8); dump();
shll(v7.h8, v4.b8, 8); dump();
shll(v7.h8, v8.b8, 8); dump();
shll(v7.h8, v16.b8, 8); dump();
shll(v7.h8, v31.b8, 8); dump();
shll(v7.h8, v7.b8, 8); dump();
//DataProcSimd_ShiftImmediate3:1
shll(v7.s4, v7.h4, 16); dump();
shll(v0.s4, v7.h4, 16); dump();
shll(v1.s4, v7.h4, 16); dump();
shll(v2.s4, v7.h4, 16); dump();
shll(v4.s4, v7.h4, 16); dump();
shll(v8.s4, v7.h4, 16); dump();
shll(v16.s4, v7.h4, 16); dump();
shll(v31.s4, v7.h4, 16); dump();
shll(v7.s4, v7.h4, 16); dump();
shll(v7.s4, v0.h4, 16); dump();
shll(v7.s4, v1.h4, 16); dump();
shll(v7.s4, v2.h4, 16); dump();
shll(v7.s4, v4.h4, 16); dump();
shll(v7.s4, v8.h4, 16); dump();
shll(v7.s4, v16.h4, 16); dump();
shll(v7.s4, v31.h4, 16); dump();
shll(v7.s4, v7.h4, 16); dump();
//DataProcSimd_ShiftImmediate3:2
shll(v7.d2, v7.s2, 32); dump();
shll(v0.d2, v7.s2, 32); dump();
shll(v1.d2, v7.s2, 32); dump();
shll(v2.d2, v7.s2, 32); dump();
shll(v4.d2, v7.s2, 32); dump();
shll(v8.d2, v7.s2, 32); dump();
shll(v16.d2, v7.s2, 32); dump();
shll(v31.d2, v7.s2, 32); dump();
shll(v7.d2, v7.s2, 32); dump();
shll(v7.d2, v0.s2, 32); dump();
shll(v7.d2, v1.s2, 32); dump();
shll(v7.d2, v2.s2, 32); dump();
shll(v7.d2, v4.s2, 32); dump();
shll(v7.d2, v8.s2, 32); dump();
shll(v7.d2, v16.s2, 32); dump();
shll(v7.d2, v31.s2, 32); dump();
shll(v7.d2, v7.s2, 32); dump();
//DataProcSimd_ShiftImmediate4:0
shll2(v7.h8, v7.b16, 8); dump();
shll2(v0.h8, v7.b16, 8); dump();
shll2(v1.h8, v7.b16, 8); dump();
shll2(v2.h8, v7.b16, 8); dump();
shll2(v4.h8, v7.b16, 8); dump();
shll2(v8.h8, v7.b16, 8); dump();
shll2(v16.h8, v7.b16, 8); dump();
shll2(v31.h8, v7.b16, 8); dump();
shll2(v7.h8, v7.b16, 8); dump();
shll2(v7.h8, v0.b16, 8); dump();
shll2(v7.h8, v1.b16, 8); dump();
shll2(v7.h8, v2.b16, 8); dump();
shll2(v7.h8, v4.b16, 8); dump();
shll2(v7.h8, v8.b16, 8); dump();
shll2(v7.h8, v16.b16, 8); dump();
shll2(v7.h8, v31.b16, 8); dump();
shll2(v7.h8, v7.b16, 8); dump();
//DataProcSimd_ShiftImmediate4:1
shll2(v7.s4, v7.h8, 16); dump();
shll2(v0.s4, v7.h8, 16); dump();
shll2(v1.s4, v7.h8, 16); dump();
shll2(v2.s4, v7.h8, 16); dump();
shll2(v4.s4, v7.h8, 16); dump();
shll2(v8.s4, v7.h8, 16); dump();
shll2(v16.s4, v7.h8, 16); dump();
shll2(v31.s4, v7.h8, 16); dump();
shll2(v7.s4, v7.h8, 16); dump();
shll2(v7.s4, v0.h8, 16); dump();
shll2(v7.s4, v1.h8, 16); dump();
shll2(v7.s4, v2.h8, 16); dump();
shll2(v7.s4, v4.h8, 16); dump();
shll2(v7.s4, v8.h8, 16); dump();
shll2(v7.s4, v16.h8, 16); dump();
shll2(v7.s4, v31.h8, 16); dump();
shll2(v7.s4, v7.h8, 16); dump();
//DataProcSimd_ShiftImmediate4:2
shll2(v7.d2, v7.s4, 32); dump();
shll2(v0.d2, v7.s4, 32); dump();
shll2(v1.d2, v7.s4, 32); dump();
shll2(v2.d2, v7.s4, 32); dump();
shll2(v4.d2, v7.s4, 32); dump();
shll2(v8.d2, v7.s4, 32); dump();
shll2(v16.d2, v7.s4, 32); dump();
shll2(v31.d2, v7.s4, 32); dump();
shll2(v7.d2, v7.s4, 32); dump();
shll2(v7.d2, v0.s4, 32); dump();
shll2(v7.d2, v1.s4, 32); dump();
shll2(v7.d2, v2.s4, 32); dump();
shll2(v7.d2, v4.s4, 32); dump();
shll2(v7.d2, v8.s4, 32); dump();
shll2(v7.d2, v16.s4, 32); dump();
shll2(v7.d2, v31.s4, 32); dump();
shll2(v7.d2, v7.s4, 32); dump();
//DataProcSimd_ShiftImmediate5:0
uxtl(v7.h8, v7.b8); dump();
uxtl(v0.h8, v7.b8); dump();
uxtl(v1.h8, v7.b8); dump();
uxtl(v2.h8, v7.b8); dump();
uxtl(v4.h8, v7.b8); dump();
uxtl(v8.h8, v7.b8); dump();
uxtl(v16.h8, v7.b8); dump();
uxtl(v31.h8, v7.b8); dump();
uxtl(v7.h8, v7.b8); dump();
uxtl(v7.h8, v0.b8); dump();
uxtl(v7.h8, v1.b8); dump();
uxtl(v7.h8, v2.b8); dump();
uxtl(v7.h8, v4.b8); dump();
uxtl(v7.h8, v8.b8); dump();
uxtl(v7.h8, v16.b8); dump();
uxtl(v7.h8, v31.b8); dump();
//DataProcSimd_ShiftImmediate5:1
uxtl(v7.s4, v7.h4); dump();
uxtl(v0.s4, v7.h4); dump();
uxtl(v1.s4, v7.h4); dump();
uxtl(v2.s4, v7.h4); dump();
uxtl(v4.s4, v7.h4); dump();
uxtl(v8.s4, v7.h4); dump();
uxtl(v16.s4, v7.h4); dump();
uxtl(v31.s4, v7.h4); dump();
uxtl(v7.s4, v7.h4); dump();
uxtl(v7.s4, v0.h4); dump();
uxtl(v7.s4, v1.h4); dump();
uxtl(v7.s4, v2.h4); dump();
uxtl(v7.s4, v4.h4); dump();
uxtl(v7.s4, v8.h4); dump();
uxtl(v7.s4, v16.h4); dump();
uxtl(v7.s4, v31.h4); dump();
//DataProcSimd_ShiftImmediate5:2
uxtl(v7.d2, v7.s2); dump();
uxtl(v0.d2, v7.s2); dump();
uxtl(v1.d2, v7.s2); dump();
uxtl(v2.d2, v7.s2); dump();
uxtl(v4.d2, v7.s2); dump();
uxtl(v8.d2, v7.s2); dump();
uxtl(v16.d2, v7.s2); dump();
uxtl(v31.d2, v7.s2); dump();
uxtl(v7.d2, v7.s2); dump();
uxtl(v7.d2, v0.s2); dump();
uxtl(v7.d2, v1.s2); dump();
uxtl(v7.d2, v2.s2); dump();
uxtl(v7.d2, v4.s2); dump();
uxtl(v7.d2, v8.s2); dump();
uxtl(v7.d2, v16.s2); dump();
uxtl(v7.d2, v31.s2); dump();
//DataProcSimd_ShiftImmediate6:0
uxtl2(v7.h8, v7.b16); dump();
uxtl2(v0.h8, v7.b16); dump();
uxtl2(v1.h8, v7.b16); dump();
uxtl2(v2.h8, v7.b16); dump();
uxtl2(v4.h8, v7.b16); dump();
uxtl2(v8.h8, v7.b16); dump();
uxtl2(v16.h8, v7.b16); dump();
uxtl2(v31.h8, v7.b16); dump();
uxtl2(v7.h8, v7.b16); dump();
uxtl2(v7.h8, v0.b16); dump();
uxtl2(v7.h8, v1.b16); dump();
uxtl2(v7.h8, v2.b16); dump();
uxtl2(v7.h8, v4.b16); dump();
uxtl2(v7.h8, v8.b16); dump();
uxtl2(v7.h8, v16.b16); dump();
uxtl2(v7.h8, v31.b16); dump();
//DataProcSimd_ShiftImmediate6:1
uxtl2(v7.s4, v7.h8); dump();
uxtl2(v0.s4, v7.h8); dump();
uxtl2(v1.s4, v7.h8); dump();
uxtl2(v2.s4, v7.h8); dump();
uxtl2(v4.s4, v7.h8); dump();
uxtl2(v8.s4, v7.h8); dump();
uxtl2(v16.s4, v7.h8); dump();
uxtl2(v31.s4, v7.h8); dump();
uxtl2(v7.s4, v7.h8); dump();
uxtl2(v7.s4, v0.h8); dump();
uxtl2(v7.s4, v1.h8); dump();
uxtl2(v7.s4, v2.h8); dump();
uxtl2(v7.s4, v4.h8); dump();
uxtl2(v7.s4, v8.h8); dump();
uxtl2(v7.s4, v16.h8); dump();
uxtl2(v7.s4, v31.h8); dump();
//DataProcSimd_ShiftImmediate6:2
uxtl2(v7.d2, v7.s4); dump();
uxtl2(v0.d2, v7.s4); dump();
uxtl2(v1.d2, v7.s4); dump();
uxtl2(v2.d2, v7.s4); dump();
uxtl2(v4.d2, v7.s4); dump();
uxtl2(v8.d2, v7.s4); dump();
uxtl2(v16.d2, v7.s4); dump();
uxtl2(v31.d2, v7.s4); dump();
uxtl2(v7.d2, v7.s4); dump();
uxtl2(v7.d2, v0.s4); dump();
uxtl2(v7.d2, v1.s4); dump();
uxtl2(v7.d2, v2.s4); dump();
uxtl2(v7.d2, v4.s4); dump();
uxtl2(v7.d2, v8.s4); dump();
uxtl2(v7.d2, v16.s4); dump();
uxtl2(v7.d2, v31.s4); dump();
//DataProcSimd_ShiftImmediate7:0
sqrshrn(b7, h7, 1); dump();
sqrshrn(b0, h7, 1); dump();
sqrshrn(b1, h7, 1); dump();
sqrshrn(b2, h7, 1); dump();
sqrshrn(b4, h7, 1); dump();
sqrshrn(b8, h7, 1); dump();
sqrshrn(b16, h7, 1); dump();
sqrshrn(b31, h7, 1); dump();
sqrshrn(b7, h7, 1); dump();
sqrshrn(b7, h0, 1); dump();
sqrshrn(b7, h1, 1); dump();
sqrshrn(b7, h2, 1); dump();
sqrshrn(b7, h4, 1); dump();
sqrshrn(b7, h8, 1); dump();
sqrshrn(b7, h16, 1); dump();
sqrshrn(b7, h31, 1); dump();
sqrshrn(b7, h7, 1); dump();
sqrshrn(b7, h7, 2); dump();
sqrshrn(b7, h7, 4); dump();
sqrshrn(b7, h7, 8); dump();
sqrshrun(b7, h7, 1); dump();
sqrshrun(b0, h7, 1); dump();
sqrshrun(b1, h7, 1); dump();
sqrshrun(b2, h7, 1); dump();
sqrshrun(b4, h7, 1); dump();
sqrshrun(b8, h7, 1); dump();
sqrshrun(b16, h7, 1); dump();
sqrshrun(b31, h7, 1); dump();
sqrshrun(b7, h7, 1); dump();
sqrshrun(b7, h0, 1); dump();
sqrshrun(b7, h1, 1); dump();
sqrshrun(b7, h2, 1); dump();
sqrshrun(b7, h4, 1); dump();
sqrshrun(b7, h8, 1); dump();
sqrshrun(b7, h16, 1); dump();
sqrshrun(b7, h31, 1); dump();
sqrshrun(b7, h7, 1); dump();
sqrshrun(b7, h7, 2); dump();
sqrshrun(b7, h7, 4); dump();
sqrshrun(b7, h7, 8); dump();
sqshrn(b7, h7, 1); dump();
sqshrn(b0, h7, 1); dump();
sqshrn(b1, h7, 1); dump();
sqshrn(b2, h7, 1); dump();
sqshrn(b4, h7, 1); dump();
sqshrn(b8, h7, 1); dump();
sqshrn(b16, h7, 1); dump();
sqshrn(b31, h7, 1); dump();
sqshrn(b7, h7, 1); dump();
sqshrn(b7, h0, 1); dump();
sqshrn(b7, h1, 1); dump();
sqshrn(b7, h2, 1); dump();
sqshrn(b7, h4, 1); dump();
sqshrn(b7, h8, 1); dump();
sqshrn(b7, h16, 1); dump();
sqshrn(b7, h31, 1); dump();
sqshrn(b7, h7, 1); dump();
sqshrn(b7, h7, 2); dump();
sqshrn(b7, h7, 4); dump();
sqshrn(b7, h7, 8); dump();
sqshrun(b7, h7, 1); dump();
sqshrun(b0, h7, 1); dump();
sqshrun(b1, h7, 1); dump();
sqshrun(b2, h7, 1); dump();
sqshrun(b4, h7, 1); dump();
sqshrun(b8, h7, 1); dump();
sqshrun(b16, h7, 1); dump();
sqshrun(b31, h7, 1); dump();
sqshrun(b7, h7, 1); dump();
sqshrun(b7, h0, 1); dump();
sqshrun(b7, h1, 1); dump();
sqshrun(b7, h2, 1); dump();
sqshrun(b7, h4, 1); dump();
sqshrun(b7, h8, 1); dump();
sqshrun(b7, h16, 1); dump();
sqshrun(b7, h31, 1); dump();
sqshrun(b7, h7, 1); dump();
sqshrun(b7, h7, 2); dump();
sqshrun(b7, h7, 4); dump();
sqshrun(b7, h7, 8); dump();
uqrshrn(b7, h7, 1); dump();
uqrshrn(b0, h7, 1); dump();
uqrshrn(b1, h7, 1); dump();
uqrshrn(b2, h7, 1); dump();
uqrshrn(b4, h7, 1); dump();
uqrshrn(b8, h7, 1); dump();
uqrshrn(b16, h7, 1); dump();
uqrshrn(b31, h7, 1); dump();
uqrshrn(b7, h7, 1); dump();
uqrshrn(b7, h0, 1); dump();
uqrshrn(b7, h1, 1); dump();
uqrshrn(b7, h2, 1); dump();
uqrshrn(b7, h4, 1); dump();
uqrshrn(b7, h8, 1); dump();
uqrshrn(b7, h16, 1); dump();
uqrshrn(b7, h31, 1); dump();
uqrshrn(b7, h7, 1); dump();
uqrshrn(b7, h7, 2); dump();
uqrshrn(b7, h7, 4); dump();
uqrshrn(b7, h7, 8); dump();
uqshrn(b7, h7, 1); dump();
uqshrn(b0, h7, 1); dump();
uqshrn(b1, h7, 1); dump();
uqshrn(b2, h7, 1); dump();
uqshrn(b4, h7, 1); dump();
uqshrn(b8, h7, 1); dump();
uqshrn(b16, h7, 1); dump();
uqshrn(b31, h7, 1); dump();
uqshrn(b7, h7, 1); dump();
uqshrn(b7, h0, 1); dump();
uqshrn(b7, h1, 1); dump();
uqshrn(b7, h2, 1); dump();
uqshrn(b7, h4, 1); dump();
uqshrn(b7, h8, 1); dump();
uqshrn(b7, h16, 1); dump();
uqshrn(b7, h31, 1); dump();
uqshrn(b7, h7, 1); dump();
uqshrn(b7, h7, 2); dump();
uqshrn(b7, h7, 4); dump();
uqshrn(b7, h7, 8); dump();
//DataProcSimd_ShiftImmediate7:1
sqrshrn(h7, s7, 1); dump();
sqrshrn(h0, s7, 1); dump();
sqrshrn(h1, s7, 1); dump();
sqrshrn(h2, s7, 1); dump();
sqrshrn(h4, s7, 1); dump();
sqrshrn(h8, s7, 1); dump();
sqrshrn(h16, s7, 1); dump();
sqrshrn(h31, s7, 1); dump();
sqrshrn(h7, s7, 1); dump();
sqrshrn(h7, s0, 1); dump();
sqrshrn(h7, s1, 1); dump();
sqrshrn(h7, s2, 1); dump();
sqrshrn(h7, s4, 1); dump();
sqrshrn(h7, s8, 1); dump();
sqrshrn(h7, s16, 1); dump();
sqrshrn(h7, s31, 1); dump();
sqrshrn(h7, s7, 1); dump();
sqrshrn(h7, s7, 2); dump();
sqrshrn(h7, s7, 4); dump();
sqrshrn(h7, s7, 8); dump();
sqrshrn(h7, s7, 16); dump();
sqrshrun(h7, s7, 1); dump();
sqrshrun(h0, s7, 1); dump();
sqrshrun(h1, s7, 1); dump();
sqrshrun(h2, s7, 1); dump();
sqrshrun(h4, s7, 1); dump();
sqrshrun(h8, s7, 1); dump();
sqrshrun(h16, s7, 1); dump();
sqrshrun(h31, s7, 1); dump();
sqrshrun(h7, s7, 1); dump();
sqrshrun(h7, s0, 1); dump();
sqrshrun(h7, s1, 1); dump();
sqrshrun(h7, s2, 1); dump();
sqrshrun(h7, s4, 1); dump();
sqrshrun(h7, s8, 1); dump();
sqrshrun(h7, s16, 1); dump();
sqrshrun(h7, s31, 1); dump();
sqrshrun(h7, s7, 1); dump();
sqrshrun(h7, s7, 2); dump();
sqrshrun(h7, s7, 4); dump();
sqrshrun(h7, s7, 8); dump();
sqrshrun(h7, s7, 16); dump();
sqshrn(h7, s7, 1); dump();
sqshrn(h0, s7, 1); dump();
sqshrn(h1, s7, 1); dump();
sqshrn(h2, s7, 1); dump();
sqshrn(h4, s7, 1); dump();
sqshrn(h8, s7, 1); dump();
sqshrn(h16, s7, 1); dump();
sqshrn(h31, s7, 1); dump();
sqshrn(h7, s7, 1); dump();
sqshrn(h7, s0, 1); dump();
sqshrn(h7, s1, 1); dump();
sqshrn(h7, s2, 1); dump();
sqshrn(h7, s4, 1); dump();
sqshrn(h7, s8, 1); dump();
sqshrn(h7, s16, 1); dump();
sqshrn(h7, s31, 1); dump();
sqshrn(h7, s7, 1); dump();
sqshrn(h7, s7, 2); dump();
sqshrn(h7, s7, 4); dump();
sqshrn(h7, s7, 8); dump();
sqshrn(h7, s7, 16); dump();
sqshrun(h7, s7, 1); dump();
sqshrun(h0, s7, 1); dump();
sqshrun(h1, s7, 1); dump();
sqshrun(h2, s7, 1); dump();
sqshrun(h4, s7, 1); dump();
sqshrun(h8, s7, 1); dump();
sqshrun(h16, s7, 1); dump();
sqshrun(h31, s7, 1); dump();
sqshrun(h7, s7, 1); dump();
sqshrun(h7, s0, 1); dump();
sqshrun(h7, s1, 1); dump();
sqshrun(h7, s2, 1); dump();
sqshrun(h7, s4, 1); dump();
sqshrun(h7, s8, 1); dump();
sqshrun(h7, s16, 1); dump();
sqshrun(h7, s31, 1); dump();
sqshrun(h7, s7, 1); dump();
sqshrun(h7, s7, 2); dump();
sqshrun(h7, s7, 4); dump();
sqshrun(h7, s7, 8); dump();
sqshrun(h7, s7, 16); dump();
uqrshrn(h7, s7, 1); dump();
uqrshrn(h0, s7, 1); dump();
uqrshrn(h1, s7, 1); dump();
uqrshrn(h2, s7, 1); dump();
uqrshrn(h4, s7, 1); dump();
uqrshrn(h8, s7, 1); dump();
uqrshrn(h16, s7, 1); dump();
uqrshrn(h31, s7, 1); dump();
uqrshrn(h7, s7, 1); dump();
uqrshrn(h7, s0, 1); dump();
uqrshrn(h7, s1, 1); dump();
uqrshrn(h7, s2, 1); dump();
uqrshrn(h7, s4, 1); dump();
uqrshrn(h7, s8, 1); dump();
uqrshrn(h7, s16, 1); dump();
uqrshrn(h7, s31, 1); dump();
uqrshrn(h7, s7, 1); dump();
uqrshrn(h7, s7, 2); dump();
uqrshrn(h7, s7, 4); dump();
uqrshrn(h7, s7, 8); dump();
uqrshrn(h7, s7, 16); dump();
uqshrn(h7, s7, 1); dump();
uqshrn(h0, s7, 1); dump();
uqshrn(h1, s7, 1); dump();
uqshrn(h2, s7, 1); dump();
uqshrn(h4, s7, 1); dump();
uqshrn(h8, s7, 1); dump();
uqshrn(h16, s7, 1); dump();
uqshrn(h31, s7, 1); dump();
uqshrn(h7, s7, 1); dump();
uqshrn(h7, s0, 1); dump();
uqshrn(h7, s1, 1); dump();
uqshrn(h7, s2, 1); dump();
uqshrn(h7, s4, 1); dump();
uqshrn(h7, s8, 1); dump();
uqshrn(h7, s16, 1); dump();
uqshrn(h7, s31, 1); dump();
uqshrn(h7, s7, 1); dump();
uqshrn(h7, s7, 2); dump();
uqshrn(h7, s7, 4); dump();
uqshrn(h7, s7, 8); dump();
uqshrn(h7, s7, 16); dump();
//DataProcSimd_ShiftImmediate7:2
sqrshrn(s7, d7, 1); dump();
sqrshrn(s0, d7, 1); dump();
sqrshrn(s1, d7, 1); dump();
sqrshrn(s2, d7, 1); dump();
sqrshrn(s4, d7, 1); dump();
sqrshrn(s8, d7, 1); dump();
sqrshrn(s16, d7, 1); dump();
sqrshrn(s31, d7, 1); dump();
sqrshrn(s7, d7, 1); dump();
sqrshrn(s7, d0, 1); dump();
sqrshrn(s7, d1, 1); dump();
sqrshrn(s7, d2, 1); dump();
sqrshrn(s7, d4, 1); dump();
sqrshrn(s7, d8, 1); dump();
sqrshrn(s7, d16, 1); dump();
sqrshrn(s7, d31, 1); dump();
sqrshrn(s7, d7, 1); dump();
sqrshrn(s7, d7, 2); dump();
sqrshrn(s7, d7, 4); dump();
sqrshrn(s7, d7, 8); dump();
sqrshrn(s7, d7, 16); dump();
sqrshrn(s7, d7, 32); dump();
sqrshrun(s7, d7, 1); dump();
sqrshrun(s0, d7, 1); dump();
sqrshrun(s1, d7, 1); dump();
sqrshrun(s2, d7, 1); dump();
sqrshrun(s4, d7, 1); dump();
sqrshrun(s8, d7, 1); dump();
sqrshrun(s16, d7, 1); dump();
sqrshrun(s31, d7, 1); dump();
sqrshrun(s7, d7, 1); dump();
sqrshrun(s7, d0, 1); dump();
sqrshrun(s7, d1, 1); dump();
sqrshrun(s7, d2, 1); dump();
sqrshrun(s7, d4, 1); dump();
sqrshrun(s7, d8, 1); dump();
sqrshrun(s7, d16, 1); dump();
sqrshrun(s7, d31, 1); dump();
sqrshrun(s7, d7, 1); dump();
sqrshrun(s7, d7, 2); dump();
sqrshrun(s7, d7, 4); dump();
sqrshrun(s7, d7, 8); dump();
sqrshrun(s7, d7, 16); dump();
sqrshrun(s7, d7, 32); dump();
sqshrn(s7, d7, 1); dump();
sqshrn(s0, d7, 1); dump();
sqshrn(s1, d7, 1); dump();
sqshrn(s2, d7, 1); dump();
sqshrn(s4, d7, 1); dump();
sqshrn(s8, d7, 1); dump();
sqshrn(s16, d7, 1); dump();
sqshrn(s31, d7, 1); dump();
sqshrn(s7, d7, 1); dump();
sqshrn(s7, d0, 1); dump();
sqshrn(s7, d1, 1); dump();
sqshrn(s7, d2, 1); dump();
sqshrn(s7, d4, 1); dump();
sqshrn(s7, d8, 1); dump();
sqshrn(s7, d16, 1); dump();
sqshrn(s7, d31, 1); dump();
sqshrn(s7, d7, 1); dump();
sqshrn(s7, d7, 2); dump();
sqshrn(s7, d7, 4); dump();
sqshrn(s7, d7, 8); dump();
sqshrn(s7, d7, 16); dump();
sqshrn(s7, d7, 32); dump();
sqshrun(s7, d7, 1); dump();
sqshrun(s0, d7, 1); dump();
sqshrun(s1, d7, 1); dump();
sqshrun(s2, d7, 1); dump();
sqshrun(s4, d7, 1); dump();
sqshrun(s8, d7, 1); dump();
sqshrun(s16, d7, 1); dump();
sqshrun(s31, d7, 1); dump();
sqshrun(s7, d7, 1); dump();
sqshrun(s7, d0, 1); dump();
sqshrun(s7, d1, 1); dump();
sqshrun(s7, d2, 1); dump();
sqshrun(s7, d4, 1); dump();
sqshrun(s7, d8, 1); dump();
sqshrun(s7, d16, 1); dump();
sqshrun(s7, d31, 1); dump();
sqshrun(s7, d7, 1); dump();
sqshrun(s7, d7, 2); dump();
sqshrun(s7, d7, 4); dump();
sqshrun(s7, d7, 8); dump();
sqshrun(s7, d7, 16); dump();
sqshrun(s7, d7, 32); dump();
uqrshrn(s7, d7, 1); dump();
uqrshrn(s0, d7, 1); dump();
uqrshrn(s1, d7, 1); dump();
uqrshrn(s2, d7, 1); dump();
uqrshrn(s4, d7, 1); dump();
uqrshrn(s8, d7, 1); dump();
uqrshrn(s16, d7, 1); dump();
uqrshrn(s31, d7, 1); dump();
uqrshrn(s7, d7, 1); dump();
uqrshrn(s7, d0, 1); dump();
uqrshrn(s7, d1, 1); dump();
uqrshrn(s7, d2, 1); dump();
uqrshrn(s7, d4, 1); dump();
uqrshrn(s7, d8, 1); dump();
uqrshrn(s7, d16, 1); dump();
uqrshrn(s7, d31, 1); dump();
uqrshrn(s7, d7, 1); dump();
uqrshrn(s7, d7, 2); dump();
uqrshrn(s7, d7, 4); dump();
uqrshrn(s7, d7, 8); dump();
uqrshrn(s7, d7, 16); dump();
uqrshrn(s7, d7, 32); dump();
uqshrn(s7, d7, 1); dump();
uqshrn(s0, d7, 1); dump();
uqshrn(s1, d7, 1); dump();
uqshrn(s2, d7, 1); dump();
uqshrn(s4, d7, 1); dump();
uqshrn(s8, d7, 1); dump();
uqshrn(s16, d7, 1); dump();
uqshrn(s31, d7, 1); dump();
uqshrn(s7, d7, 1); dump();
uqshrn(s7, d0, 1); dump();
uqshrn(s7, d1, 1); dump();
uqshrn(s7, d2, 1); dump();
uqshrn(s7, d4, 1); dump();
uqshrn(s7, d8, 1); dump();
uqshrn(s7, d16, 1); dump();
uqshrn(s7, d31, 1); dump();
uqshrn(s7, d7, 1); dump();
uqshrn(s7, d7, 2); dump();
uqshrn(s7, d7, 4); dump();
uqshrn(s7, d7, 8); dump();
uqshrn(s7, d7, 16); dump();
uqshrn(s7, d7, 32); dump();
//DataProcSimd_ShiftImmediate7:3
sqrshrn(v7.b8, v7.h8, 1); dump();
sqrshrn(v0.b8, v7.h8, 1); dump();
sqrshrn(v1.b8, v7.h8, 1); dump();
sqrshrn(v2.b8, v7.h8, 1); dump();
sqrshrn(v4.b8, v7.h8, 1); dump();
sqrshrn(v8.b8, v7.h8, 1); dump();
sqrshrn(v16.b8, v7.h8, 1); dump();
sqrshrn(v31.b8, v7.h8, 1); dump();
sqrshrn(v7.b8, v7.h8, 1); dump();
sqrshrn(v7.b8, v0.h8, 1); dump();
sqrshrn(v7.b8, v1.h8, 1); dump();
sqrshrn(v7.b8, v2.h8, 1); dump();
sqrshrn(v7.b8, v4.h8, 1); dump();
sqrshrn(v7.b8, v8.h8, 1); dump();
sqrshrn(v7.b8, v16.h8, 1); dump();
sqrshrn(v7.b8, v31.h8, 1); dump();
sqrshrn(v7.b8, v7.h8, 1); dump();
sqrshrn(v7.b8, v7.h8, 2); dump();
sqrshrn(v7.b8, v7.h8, 4); dump();
sqrshrn(v7.b8, v7.h8, 8); dump();
sqrshrun(v7.b8, v7.h8, 1); dump();
sqrshrun(v0.b8, v7.h8, 1); dump();
sqrshrun(v1.b8, v7.h8, 1); dump();
sqrshrun(v2.b8, v7.h8, 1); dump();
sqrshrun(v4.b8, v7.h8, 1); dump();
sqrshrun(v8.b8, v7.h8, 1); dump();
sqrshrun(v16.b8, v7.h8, 1); dump();
sqrshrun(v31.b8, v7.h8, 1); dump();
sqrshrun(v7.b8, v7.h8, 1); dump();
sqrshrun(v7.b8, v0.h8, 1); dump();
sqrshrun(v7.b8, v1.h8, 1); dump();
sqrshrun(v7.b8, v2.h8, 1); dump();
sqrshrun(v7.b8, v4.h8, 1); dump();
sqrshrun(v7.b8, v8.h8, 1); dump();
sqrshrun(v7.b8, v16.h8, 1); dump();
sqrshrun(v7.b8, v31.h8, 1); dump();
sqrshrun(v7.b8, v7.h8, 1); dump();
sqrshrun(v7.b8, v7.h8, 2); dump();
sqrshrun(v7.b8, v7.h8, 4); dump();
sqrshrun(v7.b8, v7.h8, 8); dump();
sqshrn(v7.b8, v7.h8, 1); dump();
sqshrn(v0.b8, v7.h8, 1); dump();
sqshrn(v1.b8, v7.h8, 1); dump();
sqshrn(v2.b8, v7.h8, 1); dump();
sqshrn(v4.b8, v7.h8, 1); dump();
sqshrn(v8.b8, v7.h8, 1); dump();
sqshrn(v16.b8, v7.h8, 1); dump();
sqshrn(v31.b8, v7.h8, 1); dump();
sqshrn(v7.b8, v7.h8, 1); dump();
sqshrn(v7.b8, v0.h8, 1); dump();
sqshrn(v7.b8, v1.h8, 1); dump();
sqshrn(v7.b8, v2.h8, 1); dump();
sqshrn(v7.b8, v4.h8, 1); dump();
sqshrn(v7.b8, v8.h8, 1); dump();
sqshrn(v7.b8, v16.h8, 1); dump();
sqshrn(v7.b8, v31.h8, 1); dump();
sqshrn(v7.b8, v7.h8, 1); dump();
sqshrn(v7.b8, v7.h8, 2); dump();
sqshrn(v7.b8, v7.h8, 4); dump();
sqshrn(v7.b8, v7.h8, 8); dump();
sqshrun(v7.b8, v7.h8, 1); dump();
sqshrun(v0.b8, v7.h8, 1); dump();
sqshrun(v1.b8, v7.h8, 1); dump();
sqshrun(v2.b8, v7.h8, 1); dump();
sqshrun(v4.b8, v7.h8, 1); dump();
sqshrun(v8.b8, v7.h8, 1); dump();
sqshrun(v16.b8, v7.h8, 1); dump();
sqshrun(v31.b8, v7.h8, 1); dump();
sqshrun(v7.b8, v7.h8, 1); dump();
sqshrun(v7.b8, v0.h8, 1); dump();
sqshrun(v7.b8, v1.h8, 1); dump();
sqshrun(v7.b8, v2.h8, 1); dump();
sqshrun(v7.b8, v4.h8, 1); dump();
sqshrun(v7.b8, v8.h8, 1); dump();
sqshrun(v7.b8, v16.h8, 1); dump();
sqshrun(v7.b8, v31.h8, 1); dump();
sqshrun(v7.b8, v7.h8, 1); dump();
sqshrun(v7.b8, v7.h8, 2); dump();
sqshrun(v7.b8, v7.h8, 4); dump();
sqshrun(v7.b8, v7.h8, 8); dump();
uqrshrn(v7.b8, v7.h8, 1); dump();
uqrshrn(v0.b8, v7.h8, 1); dump();
uqrshrn(v1.b8, v7.h8, 1); dump();
uqrshrn(v2.b8, v7.h8, 1); dump();
uqrshrn(v4.b8, v7.h8, 1); dump();
uqrshrn(v8.b8, v7.h8, 1); dump();
uqrshrn(v16.b8, v7.h8, 1); dump();
uqrshrn(v31.b8, v7.h8, 1); dump();
uqrshrn(v7.b8, v7.h8, 1); dump();
uqrshrn(v7.b8, v0.h8, 1); dump();
uqrshrn(v7.b8, v1.h8, 1); dump();
uqrshrn(v7.b8, v2.h8, 1); dump();
uqrshrn(v7.b8, v4.h8, 1); dump();
uqrshrn(v7.b8, v8.h8, 1); dump();
uqrshrn(v7.b8, v16.h8, 1); dump();
uqrshrn(v7.b8, v31.h8, 1); dump();
uqrshrn(v7.b8, v7.h8, 1); dump();
uqrshrn(v7.b8, v7.h8, 2); dump();
uqrshrn(v7.b8, v7.h8, 4); dump();
uqrshrn(v7.b8, v7.h8, 8); dump();
uqshrn(v7.b8, v7.h8, 1); dump();
uqshrn(v0.b8, v7.h8, 1); dump();
uqshrn(v1.b8, v7.h8, 1); dump();
uqshrn(v2.b8, v7.h8, 1); dump();
uqshrn(v4.b8, v7.h8, 1); dump();
uqshrn(v8.b8, v7.h8, 1); dump();
uqshrn(v16.b8, v7.h8, 1); dump();
uqshrn(v31.b8, v7.h8, 1); dump();
uqshrn(v7.b8, v7.h8, 1); dump();
uqshrn(v7.b8, v0.h8, 1); dump();
uqshrn(v7.b8, v1.h8, 1); dump();
uqshrn(v7.b8, v2.h8, 1); dump();
uqshrn(v7.b8, v4.h8, 1); dump();
uqshrn(v7.b8, v8.h8, 1); dump();
uqshrn(v7.b8, v16.h8, 1); dump();
uqshrn(v7.b8, v31.h8, 1); dump();
uqshrn(v7.b8, v7.h8, 1); dump();
uqshrn(v7.b8, v7.h8, 2); dump();
uqshrn(v7.b8, v7.h8, 4); dump();
uqshrn(v7.b8, v7.h8, 8); dump();
//DataProcSimd_ShiftImmediate7:4
sqrshrn(v7.h4, v7.s4, 1); dump();
sqrshrn(v0.h4, v7.s4, 1); dump();
sqrshrn(v1.h4, v7.s4, 1); dump();
sqrshrn(v2.h4, v7.s4, 1); dump();
sqrshrn(v4.h4, v7.s4, 1); dump();
sqrshrn(v8.h4, v7.s4, 1); dump();
sqrshrn(v16.h4, v7.s4, 1); dump();
sqrshrn(v31.h4, v7.s4, 1); dump();
sqrshrn(v7.h4, v7.s4, 1); dump();
sqrshrn(v7.h4, v0.s4, 1); dump();
sqrshrn(v7.h4, v1.s4, 1); dump();
sqrshrn(v7.h4, v2.s4, 1); dump();
sqrshrn(v7.h4, v4.s4, 1); dump();
sqrshrn(v7.h4, v8.s4, 1); dump();
sqrshrn(v7.h4, v16.s4, 1); dump();
sqrshrn(v7.h4, v31.s4, 1); dump();
sqrshrn(v7.h4, v7.s4, 1); dump();
sqrshrn(v7.h4, v7.s4, 2); dump();
sqrshrn(v7.h4, v7.s4, 4); dump();
sqrshrn(v7.h4, v7.s4, 8); dump();
sqrshrn(v7.h4, v7.s4, 16); dump();
sqrshrun(v7.h4, v7.s4, 1); dump();
sqrshrun(v0.h4, v7.s4, 1); dump();
sqrshrun(v1.h4, v7.s4, 1); dump();
sqrshrun(v2.h4, v7.s4, 1); dump();
sqrshrun(v4.h4, v7.s4, 1); dump();
sqrshrun(v8.h4, v7.s4, 1); dump();
sqrshrun(v16.h4, v7.s4, 1); dump();
sqrshrun(v31.h4, v7.s4, 1); dump();
sqrshrun(v7.h4, v7.s4, 1); dump();
sqrshrun(v7.h4, v0.s4, 1); dump();
sqrshrun(v7.h4, v1.s4, 1); dump();
sqrshrun(v7.h4, v2.s4, 1); dump();
sqrshrun(v7.h4, v4.s4, 1); dump();
sqrshrun(v7.h4, v8.s4, 1); dump();
sqrshrun(v7.h4, v16.s4, 1); dump();
sqrshrun(v7.h4, v31.s4, 1); dump();
sqrshrun(v7.h4, v7.s4, 1); dump();
sqrshrun(v7.h4, v7.s4, 2); dump();
sqrshrun(v7.h4, v7.s4, 4); dump();
sqrshrun(v7.h4, v7.s4, 8); dump();
sqrshrun(v7.h4, v7.s4, 16); dump();
sqshrn(v7.h4, v7.s4, 1); dump();
sqshrn(v0.h4, v7.s4, 1); dump();
sqshrn(v1.h4, v7.s4, 1); dump();
sqshrn(v2.h4, v7.s4, 1); dump();
sqshrn(v4.h4, v7.s4, 1); dump();
sqshrn(v8.h4, v7.s4, 1); dump();
sqshrn(v16.h4, v7.s4, 1); dump();
sqshrn(v31.h4, v7.s4, 1); dump();
sqshrn(v7.h4, v7.s4, 1); dump();
sqshrn(v7.h4, v0.s4, 1); dump();
sqshrn(v7.h4, v1.s4, 1); dump();
sqshrn(v7.h4, v2.s4, 1); dump();
sqshrn(v7.h4, v4.s4, 1); dump();
sqshrn(v7.h4, v8.s4, 1); dump();
sqshrn(v7.h4, v16.s4, 1); dump();
sqshrn(v7.h4, v31.s4, 1); dump();
sqshrn(v7.h4, v7.s4, 1); dump();
sqshrn(v7.h4, v7.s4, 2); dump();
sqshrn(v7.h4, v7.s4, 4); dump();
sqshrn(v7.h4, v7.s4, 8); dump();
sqshrn(v7.h4, v7.s4, 16); dump();
sqshrun(v7.h4, v7.s4, 1); dump();
sqshrun(v0.h4, v7.s4, 1); dump();
sqshrun(v1.h4, v7.s4, 1); dump();
sqshrun(v2.h4, v7.s4, 1); dump();
sqshrun(v4.h4, v7.s4, 1); dump();
sqshrun(v8.h4, v7.s4, 1); dump();
sqshrun(v16.h4, v7.s4, 1); dump();
sqshrun(v31.h4, v7.s4, 1); dump();
sqshrun(v7.h4, v7.s4, 1); dump();
sqshrun(v7.h4, v0.s4, 1); dump();
sqshrun(v7.h4, v1.s4, 1); dump();
sqshrun(v7.h4, v2.s4, 1); dump();
sqshrun(v7.h4, v4.s4, 1); dump();
sqshrun(v7.h4, v8.s4, 1); dump();
sqshrun(v7.h4, v16.s4, 1); dump();
sqshrun(v7.h4, v31.s4, 1); dump();
sqshrun(v7.h4, v7.s4, 1); dump();
sqshrun(v7.h4, v7.s4, 2); dump();
sqshrun(v7.h4, v7.s4, 4); dump();
sqshrun(v7.h4, v7.s4, 8); dump();
sqshrun(v7.h4, v7.s4, 16); dump();
uqrshrn(v7.h4, v7.s4, 1); dump();
uqrshrn(v0.h4, v7.s4, 1); dump();
uqrshrn(v1.h4, v7.s4, 1); dump();
uqrshrn(v2.h4, v7.s4, 1); dump();
uqrshrn(v4.h4, v7.s4, 1); dump();
uqrshrn(v8.h4, v7.s4, 1); dump();
uqrshrn(v16.h4, v7.s4, 1); dump();
uqrshrn(v31.h4, v7.s4, 1); dump();
uqrshrn(v7.h4, v7.s4, 1); dump();
uqrshrn(v7.h4, v0.s4, 1); dump();
uqrshrn(v7.h4, v1.s4, 1); dump();
uqrshrn(v7.h4, v2.s4, 1); dump();
uqrshrn(v7.h4, v4.s4, 1); dump();
uqrshrn(v7.h4, v8.s4, 1); dump();
uqrshrn(v7.h4, v16.s4, 1); dump();
uqrshrn(v7.h4, v31.s4, 1); dump();
uqrshrn(v7.h4, v7.s4, 1); dump();
uqrshrn(v7.h4, v7.s4, 2); dump();
uqrshrn(v7.h4, v7.s4, 4); dump();
uqrshrn(v7.h4, v7.s4, 8); dump();
uqrshrn(v7.h4, v7.s4, 16); dump();
uqshrn(v7.h4, v7.s4, 1); dump();
uqshrn(v0.h4, v7.s4, 1); dump();
uqshrn(v1.h4, v7.s4, 1); dump();
uqshrn(v2.h4, v7.s4, 1); dump();
uqshrn(v4.h4, v7.s4, 1); dump();
uqshrn(v8.h4, v7.s4, 1); dump();
uqshrn(v16.h4, v7.s4, 1); dump();
uqshrn(v31.h4, v7.s4, 1); dump();
uqshrn(v7.h4, v7.s4, 1); dump();
uqshrn(v7.h4, v0.s4, 1); dump();
uqshrn(v7.h4, v1.s4, 1); dump();
uqshrn(v7.h4, v2.s4, 1); dump();
uqshrn(v7.h4, v4.s4, 1); dump();
uqshrn(v7.h4, v8.s4, 1); dump();
uqshrn(v7.h4, v16.s4, 1); dump();
uqshrn(v7.h4, v31.s4, 1); dump();
uqshrn(v7.h4, v7.s4, 1); dump();
uqshrn(v7.h4, v7.s4, 2); dump();
uqshrn(v7.h4, v7.s4, 4); dump();
uqshrn(v7.h4, v7.s4, 8); dump();
uqshrn(v7.h4, v7.s4, 16); dump();
//DataProcSimd_ShiftImmediate7:5
sqrshrn(v7.s2, v7.d2, 1); dump();
sqrshrn(v0.s2, v7.d2, 1); dump();
sqrshrn(v1.s2, v7.d2, 1); dump();
sqrshrn(v2.s2, v7.d2, 1); dump();
sqrshrn(v4.s2, v7.d2, 1); dump();
sqrshrn(v8.s2, v7.d2, 1); dump();
sqrshrn(v16.s2, v7.d2, 1); dump();
sqrshrn(v31.s2, v7.d2, 1); dump();
sqrshrn(v7.s2, v7.d2, 1); dump();
sqrshrn(v7.s2, v0.d2, 1); dump();
sqrshrn(v7.s2, v1.d2, 1); dump();
sqrshrn(v7.s2, v2.d2, 1); dump();
sqrshrn(v7.s2, v4.d2, 1); dump();
sqrshrn(v7.s2, v8.d2, 1); dump();
sqrshrn(v7.s2, v16.d2, 1); dump();
sqrshrn(v7.s2, v31.d2, 1); dump();
sqrshrn(v7.s2, v7.d2, 1); dump();
sqrshrn(v7.s2, v7.d2, 2); dump();
sqrshrn(v7.s2, v7.d2, 4); dump();
sqrshrn(v7.s2, v7.d2, 8); dump();
sqrshrn(v7.s2, v7.d2, 16); dump();
sqrshrn(v7.s2, v7.d2, 32); dump();
sqrshrun(v7.s2, v7.d2, 1); dump();
sqrshrun(v0.s2, v7.d2, 1); dump();
sqrshrun(v1.s2, v7.d2, 1); dump();
sqrshrun(v2.s2, v7.d2, 1); dump();
sqrshrun(v4.s2, v7.d2, 1); dump();
sqrshrun(v8.s2, v7.d2, 1); dump();
sqrshrun(v16.s2, v7.d2, 1); dump();
sqrshrun(v31.s2, v7.d2, 1); dump();
sqrshrun(v7.s2, v7.d2, 1); dump();
sqrshrun(v7.s2, v0.d2, 1); dump();
sqrshrun(v7.s2, v1.d2, 1); dump();
sqrshrun(v7.s2, v2.d2, 1); dump();
sqrshrun(v7.s2, v4.d2, 1); dump();
sqrshrun(v7.s2, v8.d2, 1); dump();
sqrshrun(v7.s2, v16.d2, 1); dump();
sqrshrun(v7.s2, v31.d2, 1); dump();
sqrshrun(v7.s2, v7.d2, 1); dump();
sqrshrun(v7.s2, v7.d2, 2); dump();
sqrshrun(v7.s2, v7.d2, 4); dump();
sqrshrun(v7.s2, v7.d2, 8); dump();
sqrshrun(v7.s2, v7.d2, 16); dump();
sqrshrun(v7.s2, v7.d2, 32); dump();
sqshrn(v7.s2, v7.d2, 1); dump();
sqshrn(v0.s2, v7.d2, 1); dump();
sqshrn(v1.s2, v7.d2, 1); dump();
sqshrn(v2.s2, v7.d2, 1); dump();
sqshrn(v4.s2, v7.d2, 1); dump();
sqshrn(v8.s2, v7.d2, 1); dump();
sqshrn(v16.s2, v7.d2, 1); dump();
sqshrn(v31.s2, v7.d2, 1); dump();
sqshrn(v7.s2, v7.d2, 1); dump();
sqshrn(v7.s2, v0.d2, 1); dump();
sqshrn(v7.s2, v1.d2, 1); dump();
sqshrn(v7.s2, v2.d2, 1); dump();
sqshrn(v7.s2, v4.d2, 1); dump();
sqshrn(v7.s2, v8.d2, 1); dump();
sqshrn(v7.s2, v16.d2, 1); dump();
sqshrn(v7.s2, v31.d2, 1); dump();
sqshrn(v7.s2, v7.d2, 1); dump();
sqshrn(v7.s2, v7.d2, 2); dump();
sqshrn(v7.s2, v7.d2, 4); dump();
sqshrn(v7.s2, v7.d2, 8); dump();
sqshrn(v7.s2, v7.d2, 16); dump();
sqshrn(v7.s2, v7.d2, 32); dump();
sqshrun(v7.s2, v7.d2, 1); dump();
sqshrun(v0.s2, v7.d2, 1); dump();
sqshrun(v1.s2, v7.d2, 1); dump();
sqshrun(v2.s2, v7.d2, 1); dump();
sqshrun(v4.s2, v7.d2, 1); dump();
sqshrun(v8.s2, v7.d2, 1); dump();
sqshrun(v16.s2, v7.d2, 1); dump();
sqshrun(v31.s2, v7.d2, 1); dump();
sqshrun(v7.s2, v7.d2, 1); dump();
sqshrun(v7.s2, v0.d2, 1); dump();
sqshrun(v7.s2, v1.d2, 1); dump();
sqshrun(v7.s2, v2.d2, 1); dump();
sqshrun(v7.s2, v4.d2, 1); dump();
sqshrun(v7.s2, v8.d2, 1); dump();
sqshrun(v7.s2, v16.d2, 1); dump();
sqshrun(v7.s2, v31.d2, 1); dump();
sqshrun(v7.s2, v7.d2, 1); dump();
sqshrun(v7.s2, v7.d2, 2); dump();
sqshrun(v7.s2, v7.d2, 4); dump();
sqshrun(v7.s2, v7.d2, 8); dump();
sqshrun(v7.s2, v7.d2, 16); dump();
sqshrun(v7.s2, v7.d2, 32); dump();
uqrshrn(v7.s2, v7.d2, 1); dump();
uqrshrn(v0.s2, v7.d2, 1); dump();
uqrshrn(v1.s2, v7.d2, 1); dump();
uqrshrn(v2.s2, v7.d2, 1); dump();
uqrshrn(v4.s2, v7.d2, 1); dump();
uqrshrn(v8.s2, v7.d2, 1); dump();
uqrshrn(v16.s2, v7.d2, 1); dump();
uqrshrn(v31.s2, v7.d2, 1); dump();
uqrshrn(v7.s2, v7.d2, 1); dump();
uqrshrn(v7.s2, v0.d2, 1); dump();
uqrshrn(v7.s2, v1.d2, 1); dump();
uqrshrn(v7.s2, v2.d2, 1); dump();
uqrshrn(v7.s2, v4.d2, 1); dump();
uqrshrn(v7.s2, v8.d2, 1); dump();
uqrshrn(v7.s2, v16.d2, 1); dump();
uqrshrn(v7.s2, v31.d2, 1); dump();
uqrshrn(v7.s2, v7.d2, 1); dump();
uqrshrn(v7.s2, v7.d2, 2); dump();
uqrshrn(v7.s2, v7.d2, 4); dump();
uqrshrn(v7.s2, v7.d2, 8); dump();
uqrshrn(v7.s2, v7.d2, 16); dump();
uqrshrn(v7.s2, v7.d2, 32); dump();
uqshrn(v7.s2, v7.d2, 1); dump();
uqshrn(v0.s2, v7.d2, 1); dump();
uqshrn(v1.s2, v7.d2, 1); dump();
uqshrn(v2.s2, v7.d2, 1); dump();
uqshrn(v4.s2, v7.d2, 1); dump();
uqshrn(v8.s2, v7.d2, 1); dump();
uqshrn(v16.s2, v7.d2, 1); dump();
uqshrn(v31.s2, v7.d2, 1); dump();
uqshrn(v7.s2, v7.d2, 1); dump();
uqshrn(v7.s2, v0.d2, 1); dump();
uqshrn(v7.s2, v1.d2, 1); dump();
uqshrn(v7.s2, v2.d2, 1); dump();
uqshrn(v7.s2, v4.d2, 1); dump();
uqshrn(v7.s2, v8.d2, 1); dump();
uqshrn(v7.s2, v16.d2, 1); dump();
uqshrn(v7.s2, v31.d2, 1); dump();
uqshrn(v7.s2, v7.d2, 1); dump();
uqshrn(v7.s2, v7.d2, 2); dump();
uqshrn(v7.s2, v7.d2, 4); dump();
uqshrn(v7.s2, v7.d2, 8); dump();
uqshrn(v7.s2, v7.d2, 16); dump();
uqshrn(v7.s2, v7.d2, 32); dump();
//DataProcSimd_ShiftImmediate8:0
sqrshrn2(v7.b16, v7.h8, 1); dump();
sqrshrn2(v0.b16, v7.h8, 1); dump();
sqrshrn2(v1.b16, v7.h8, 1); dump();
sqrshrn2(v2.b16, v7.h8, 1); dump();
sqrshrn2(v4.b16, v7.h8, 1); dump();
sqrshrn2(v8.b16, v7.h8, 1); dump();
sqrshrn2(v16.b16, v7.h8, 1); dump();
sqrshrn2(v31.b16, v7.h8, 1); dump();
sqrshrn2(v7.b16, v7.h8, 1); dump();
sqrshrn2(v7.b16, v0.h8, 1); dump();
sqrshrn2(v7.b16, v1.h8, 1); dump();
sqrshrn2(v7.b16, v2.h8, 1); dump();
sqrshrn2(v7.b16, v4.h8, 1); dump();
sqrshrn2(v7.b16, v8.h8, 1); dump();
sqrshrn2(v7.b16, v16.h8, 1); dump();
sqrshrn2(v7.b16, v31.h8, 1); dump();
sqrshrn2(v7.b16, v7.h8, 1); dump();
sqrshrn2(v7.b16, v7.h8, 2); dump();
sqrshrn2(v7.b16, v7.h8, 4); dump();
sqrshrn2(v7.b16, v7.h8, 8); dump();
sqrshrun2(v7.b16, v7.h8, 1); dump();
sqrshrun2(v0.b16, v7.h8, 1); dump();
sqrshrun2(v1.b16, v7.h8, 1); dump();
sqrshrun2(v2.b16, v7.h8, 1); dump();
sqrshrun2(v4.b16, v7.h8, 1); dump();
sqrshrun2(v8.b16, v7.h8, 1); dump();
sqrshrun2(v16.b16, v7.h8, 1); dump();
sqrshrun2(v31.b16, v7.h8, 1); dump();
sqrshrun2(v7.b16, v7.h8, 1); dump();
sqrshrun2(v7.b16, v0.h8, 1); dump();
sqrshrun2(v7.b16, v1.h8, 1); dump();
sqrshrun2(v7.b16, v2.h8, 1); dump();
sqrshrun2(v7.b16, v4.h8, 1); dump();
sqrshrun2(v7.b16, v8.h8, 1); dump();
sqrshrun2(v7.b16, v16.h8, 1); dump();
sqrshrun2(v7.b16, v31.h8, 1); dump();
sqrshrun2(v7.b16, v7.h8, 1); dump();
sqrshrun2(v7.b16, v7.h8, 2); dump();
sqrshrun2(v7.b16, v7.h8, 4); dump();
sqrshrun2(v7.b16, v7.h8, 8); dump();
sqshrn2(v7.b16, v7.h8, 1); dump();
sqshrn2(v0.b16, v7.h8, 1); dump();
sqshrn2(v1.b16, v7.h8, 1); dump();
sqshrn2(v2.b16, v7.h8, 1); dump();
sqshrn2(v4.b16, v7.h8, 1); dump();
sqshrn2(v8.b16, v7.h8, 1); dump();
sqshrn2(v16.b16, v7.h8, 1); dump();
sqshrn2(v31.b16, v7.h8, 1); dump();
sqshrn2(v7.b16, v7.h8, 1); dump();
sqshrn2(v7.b16, v0.h8, 1); dump();
sqshrn2(v7.b16, v1.h8, 1); dump();
sqshrn2(v7.b16, v2.h8, 1); dump();
sqshrn2(v7.b16, v4.h8, 1); dump();
sqshrn2(v7.b16, v8.h8, 1); dump();
sqshrn2(v7.b16, v16.h8, 1); dump();
sqshrn2(v7.b16, v31.h8, 1); dump();
sqshrn2(v7.b16, v7.h8, 1); dump();
sqshrn2(v7.b16, v7.h8, 2); dump();
sqshrn2(v7.b16, v7.h8, 4); dump();
sqshrn2(v7.b16, v7.h8, 8); dump();
sqshrun2(v7.b16, v7.h8, 1); dump();
sqshrun2(v0.b16, v7.h8, 1); dump();
sqshrun2(v1.b16, v7.h8, 1); dump();
sqshrun2(v2.b16, v7.h8, 1); dump();
sqshrun2(v4.b16, v7.h8, 1); dump();
sqshrun2(v8.b16, v7.h8, 1); dump();
sqshrun2(v16.b16, v7.h8, 1); dump();
sqshrun2(v31.b16, v7.h8, 1); dump();
sqshrun2(v7.b16, v7.h8, 1); dump();
sqshrun2(v7.b16, v0.h8, 1); dump();
sqshrun2(v7.b16, v1.h8, 1); dump();
sqshrun2(v7.b16, v2.h8, 1); dump();
sqshrun2(v7.b16, v4.h8, 1); dump();
sqshrun2(v7.b16, v8.h8, 1); dump();
sqshrun2(v7.b16, v16.h8, 1); dump();
sqshrun2(v7.b16, v31.h8, 1); dump();
sqshrun2(v7.b16, v7.h8, 1); dump();
sqshrun2(v7.b16, v7.h8, 2); dump();
sqshrun2(v7.b16, v7.h8, 4); dump();
sqshrun2(v7.b16, v7.h8, 8); dump();
uqrshrn2(v7.b16, v7.h8, 1); dump();
uqrshrn2(v0.b16, v7.h8, 1); dump();
uqrshrn2(v1.b16, v7.h8, 1); dump();
uqrshrn2(v2.b16, v7.h8, 1); dump();
uqrshrn2(v4.b16, v7.h8, 1); dump();
uqrshrn2(v8.b16, v7.h8, 1); dump();
uqrshrn2(v16.b16, v7.h8, 1); dump();
uqrshrn2(v31.b16, v7.h8, 1); dump();
uqrshrn2(v7.b16, v7.h8, 1); dump();
uqrshrn2(v7.b16, v0.h8, 1); dump();
uqrshrn2(v7.b16, v1.h8, 1); dump();
uqrshrn2(v7.b16, v2.h8, 1); dump();
uqrshrn2(v7.b16, v4.h8, 1); dump();
uqrshrn2(v7.b16, v8.h8, 1); dump();
uqrshrn2(v7.b16, v16.h8, 1); dump();
uqrshrn2(v7.b16, v31.h8, 1); dump();
uqrshrn2(v7.b16, v7.h8, 1); dump();
uqrshrn2(v7.b16, v7.h8, 2); dump();
uqrshrn2(v7.b16, v7.h8, 4); dump();
uqrshrn2(v7.b16, v7.h8, 8); dump();
uqshrn2(v7.b16, v7.h8, 1); dump();
uqshrn2(v0.b16, v7.h8, 1); dump();
uqshrn2(v1.b16, v7.h8, 1); dump();
uqshrn2(v2.b16, v7.h8, 1); dump();
uqshrn2(v4.b16, v7.h8, 1); dump();
uqshrn2(v8.b16, v7.h8, 1); dump();
uqshrn2(v16.b16, v7.h8, 1); dump();
uqshrn2(v31.b16, v7.h8, 1); dump();
uqshrn2(v7.b16, v7.h8, 1); dump();
uqshrn2(v7.b16, v0.h8, 1); dump();
uqshrn2(v7.b16, v1.h8, 1); dump();
uqshrn2(v7.b16, v2.h8, 1); dump();
uqshrn2(v7.b16, v4.h8, 1); dump();
uqshrn2(v7.b16, v8.h8, 1); dump();
uqshrn2(v7.b16, v16.h8, 1); dump();
uqshrn2(v7.b16, v31.h8, 1); dump();
uqshrn2(v7.b16, v7.h8, 1); dump();
uqshrn2(v7.b16, v7.h8, 2); dump();
uqshrn2(v7.b16, v7.h8, 4); dump();
uqshrn2(v7.b16, v7.h8, 8); dump();
//DataProcSimd_ShiftImmediate8:1
sqrshrn2(v7.h8, v7.s4, 1); dump();
sqrshrn2(v0.h8, v7.s4, 1); dump();
sqrshrn2(v1.h8, v7.s4, 1); dump();
sqrshrn2(v2.h8, v7.s4, 1); dump();
sqrshrn2(v4.h8, v7.s4, 1); dump();
sqrshrn2(v8.h8, v7.s4, 1); dump();
sqrshrn2(v16.h8, v7.s4, 1); dump();
sqrshrn2(v31.h8, v7.s4, 1); dump();
sqrshrn2(v7.h8, v7.s4, 1); dump();
sqrshrn2(v7.h8, v0.s4, 1); dump();
sqrshrn2(v7.h8, v1.s4, 1); dump();
sqrshrn2(v7.h8, v2.s4, 1); dump();
sqrshrn2(v7.h8, v4.s4, 1); dump();
sqrshrn2(v7.h8, v8.s4, 1); dump();
sqrshrn2(v7.h8, v16.s4, 1); dump();
sqrshrn2(v7.h8, v31.s4, 1); dump();
sqrshrn2(v7.h8, v7.s4, 1); dump();
sqrshrn2(v7.h8, v7.s4, 2); dump();
sqrshrn2(v7.h8, v7.s4, 4); dump();
sqrshrn2(v7.h8, v7.s4, 8); dump();
sqrshrn2(v7.h8, v7.s4, 16); dump();
sqrshrun2(v7.h8, v7.s4, 1); dump();
sqrshrun2(v0.h8, v7.s4, 1); dump();
sqrshrun2(v1.h8, v7.s4, 1); dump();
sqrshrun2(v2.h8, v7.s4, 1); dump();
sqrshrun2(v4.h8, v7.s4, 1); dump();
sqrshrun2(v8.h8, v7.s4, 1); dump();
sqrshrun2(v16.h8, v7.s4, 1); dump();
sqrshrun2(v31.h8, v7.s4, 1); dump();
sqrshrun2(v7.h8, v7.s4, 1); dump();
sqrshrun2(v7.h8, v0.s4, 1); dump();
sqrshrun2(v7.h8, v1.s4, 1); dump();
sqrshrun2(v7.h8, v2.s4, 1); dump();
sqrshrun2(v7.h8, v4.s4, 1); dump();
sqrshrun2(v7.h8, v8.s4, 1); dump();
sqrshrun2(v7.h8, v16.s4, 1); dump();
sqrshrun2(v7.h8, v31.s4, 1); dump();
sqrshrun2(v7.h8, v7.s4, 1); dump();
sqrshrun2(v7.h8, v7.s4, 2); dump();
sqrshrun2(v7.h8, v7.s4, 4); dump();
sqrshrun2(v7.h8, v7.s4, 8); dump();
sqrshrun2(v7.h8, v7.s4, 16); dump();
sqshrn2(v7.h8, v7.s4, 1); dump();
sqshrn2(v0.h8, v7.s4, 1); dump();
sqshrn2(v1.h8, v7.s4, 1); dump();
sqshrn2(v2.h8, v7.s4, 1); dump();
sqshrn2(v4.h8, v7.s4, 1); dump();
sqshrn2(v8.h8, v7.s4, 1); dump();
sqshrn2(v16.h8, v7.s4, 1); dump();
sqshrn2(v31.h8, v7.s4, 1); dump();
sqshrn2(v7.h8, v7.s4, 1); dump();
sqshrn2(v7.h8, v0.s4, 1); dump();
sqshrn2(v7.h8, v1.s4, 1); dump();
sqshrn2(v7.h8, v2.s4, 1); dump();
sqshrn2(v7.h8, v4.s4, 1); dump();
sqshrn2(v7.h8, v8.s4, 1); dump();
sqshrn2(v7.h8, v16.s4, 1); dump();
sqshrn2(v7.h8, v31.s4, 1); dump();
sqshrn2(v7.h8, v7.s4, 1); dump();
sqshrn2(v7.h8, v7.s4, 2); dump();
sqshrn2(v7.h8, v7.s4, 4); dump();
sqshrn2(v7.h8, v7.s4, 8); dump();
sqshrn2(v7.h8, v7.s4, 16); dump();
sqshrun2(v7.h8, v7.s4, 1); dump();
sqshrun2(v0.h8, v7.s4, 1); dump();
sqshrun2(v1.h8, v7.s4, 1); dump();
sqshrun2(v2.h8, v7.s4, 1); dump();
sqshrun2(v4.h8, v7.s4, 1); dump();
sqshrun2(v8.h8, v7.s4, 1); dump();
sqshrun2(v16.h8, v7.s4, 1); dump();
sqshrun2(v31.h8, v7.s4, 1); dump();
sqshrun2(v7.h8, v7.s4, 1); dump();
sqshrun2(v7.h8, v0.s4, 1); dump();
sqshrun2(v7.h8, v1.s4, 1); dump();
sqshrun2(v7.h8, v2.s4, 1); dump();
sqshrun2(v7.h8, v4.s4, 1); dump();
sqshrun2(v7.h8, v8.s4, 1); dump();
sqshrun2(v7.h8, v16.s4, 1); dump();
sqshrun2(v7.h8, v31.s4, 1); dump();
sqshrun2(v7.h8, v7.s4, 1); dump();
sqshrun2(v7.h8, v7.s4, 2); dump();
sqshrun2(v7.h8, v7.s4, 4); dump();
sqshrun2(v7.h8, v7.s4, 8); dump();
sqshrun2(v7.h8, v7.s4, 16); dump();
uqrshrn2(v7.h8, v7.s4, 1); dump();
uqrshrn2(v0.h8, v7.s4, 1); dump();
uqrshrn2(v1.h8, v7.s4, 1); dump();
uqrshrn2(v2.h8, v7.s4, 1); dump();
uqrshrn2(v4.h8, v7.s4, 1); dump();
uqrshrn2(v8.h8, v7.s4, 1); dump();
uqrshrn2(v16.h8, v7.s4, 1); dump();
uqrshrn2(v31.h8, v7.s4, 1); dump();
uqrshrn2(v7.h8, v7.s4, 1); dump();
uqrshrn2(v7.h8, v0.s4, 1); dump();
uqrshrn2(v7.h8, v1.s4, 1); dump();
uqrshrn2(v7.h8, v2.s4, 1); dump();
uqrshrn2(v7.h8, v4.s4, 1); dump();
uqrshrn2(v7.h8, v8.s4, 1); dump();
uqrshrn2(v7.h8, v16.s4, 1); dump();
uqrshrn2(v7.h8, v31.s4, 1); dump();
uqrshrn2(v7.h8, v7.s4, 1); dump();
uqrshrn2(v7.h8, v7.s4, 2); dump();
uqrshrn2(v7.h8, v7.s4, 4); dump();
uqrshrn2(v7.h8, v7.s4, 8); dump();
uqrshrn2(v7.h8, v7.s4, 16); dump();
uqshrn2(v7.h8, v7.s4, 1); dump();
uqshrn2(v0.h8, v7.s4, 1); dump();
uqshrn2(v1.h8, v7.s4, 1); dump();
uqshrn2(v2.h8, v7.s4, 1); dump();
uqshrn2(v4.h8, v7.s4, 1); dump();
uqshrn2(v8.h8, v7.s4, 1); dump();
uqshrn2(v16.h8, v7.s4, 1); dump();
uqshrn2(v31.h8, v7.s4, 1); dump();
uqshrn2(v7.h8, v7.s4, 1); dump();
uqshrn2(v7.h8, v0.s4, 1); dump();
uqshrn2(v7.h8, v1.s4, 1); dump();
uqshrn2(v7.h8, v2.s4, 1); dump();
uqshrn2(v7.h8, v4.s4, 1); dump();
uqshrn2(v7.h8, v8.s4, 1); dump();
uqshrn2(v7.h8, v16.s4, 1); dump();
uqshrn2(v7.h8, v31.s4, 1); dump();
uqshrn2(v7.h8, v7.s4, 1); dump();
uqshrn2(v7.h8, v7.s4, 2); dump();
uqshrn2(v7.h8, v7.s4, 4); dump();
uqshrn2(v7.h8, v7.s4, 8); dump();
uqshrn2(v7.h8, v7.s4, 16); dump();
//DataProcSimd_ShiftImmediate8:2
sqrshrn2(v7.s4, v7.d2, 1); dump();
sqrshrn2(v0.s4, v7.d2, 1); dump();
sqrshrn2(v1.s4, v7.d2, 1); dump();
sqrshrn2(v2.s4, v7.d2, 1); dump();
sqrshrn2(v4.s4, v7.d2, 1); dump();
sqrshrn2(v8.s4, v7.d2, 1); dump();
sqrshrn2(v16.s4, v7.d2, 1); dump();
sqrshrn2(v31.s4, v7.d2, 1); dump();
sqrshrn2(v7.s4, v7.d2, 1); dump();
sqrshrn2(v7.s4, v0.d2, 1); dump();
sqrshrn2(v7.s4, v1.d2, 1); dump();
sqrshrn2(v7.s4, v2.d2, 1); dump();
sqrshrn2(v7.s4, v4.d2, 1); dump();
sqrshrn2(v7.s4, v8.d2, 1); dump();
sqrshrn2(v7.s4, v16.d2, 1); dump();
sqrshrn2(v7.s4, v31.d2, 1); dump();
sqrshrn2(v7.s4, v7.d2, 1); dump();
sqrshrn2(v7.s4, v7.d2, 2); dump();
sqrshrn2(v7.s4, v7.d2, 4); dump();
sqrshrn2(v7.s4, v7.d2, 8); dump();
sqrshrn2(v7.s4, v7.d2, 16); dump();
sqrshrn2(v7.s4, v7.d2, 32); dump();
sqrshrun2(v7.s4, v7.d2, 1); dump();
sqrshrun2(v0.s4, v7.d2, 1); dump();
sqrshrun2(v1.s4, v7.d2, 1); dump();
sqrshrun2(v2.s4, v7.d2, 1); dump();
sqrshrun2(v4.s4, v7.d2, 1); dump();
sqrshrun2(v8.s4, v7.d2, 1); dump();
sqrshrun2(v16.s4, v7.d2, 1); dump();
sqrshrun2(v31.s4, v7.d2, 1); dump();
sqrshrun2(v7.s4, v7.d2, 1); dump();
sqrshrun2(v7.s4, v0.d2, 1); dump();
sqrshrun2(v7.s4, v1.d2, 1); dump();
sqrshrun2(v7.s4, v2.d2, 1); dump();
sqrshrun2(v7.s4, v4.d2, 1); dump();
sqrshrun2(v7.s4, v8.d2, 1); dump();
sqrshrun2(v7.s4, v16.d2, 1); dump();
sqrshrun2(v7.s4, v31.d2, 1); dump();
sqrshrun2(v7.s4, v7.d2, 1); dump();
sqrshrun2(v7.s4, v7.d2, 2); dump();
sqrshrun2(v7.s4, v7.d2, 4); dump();
sqrshrun2(v7.s4, v7.d2, 8); dump();
sqrshrun2(v7.s4, v7.d2, 16); dump();
sqrshrun2(v7.s4, v7.d2, 32); dump();
sqshrn2(v7.s4, v7.d2, 1); dump();
sqshrn2(v0.s4, v7.d2, 1); dump();
sqshrn2(v1.s4, v7.d2, 1); dump();
sqshrn2(v2.s4, v7.d2, 1); dump();
sqshrn2(v4.s4, v7.d2, 1); dump();
sqshrn2(v8.s4, v7.d2, 1); dump();
sqshrn2(v16.s4, v7.d2, 1); dump();
sqshrn2(v31.s4, v7.d2, 1); dump();
sqshrn2(v7.s4, v7.d2, 1); dump();
sqshrn2(v7.s4, v0.d2, 1); dump();
sqshrn2(v7.s4, v1.d2, 1); dump();
sqshrn2(v7.s4, v2.d2, 1); dump();
sqshrn2(v7.s4, v4.d2, 1); dump();
sqshrn2(v7.s4, v8.d2, 1); dump();
sqshrn2(v7.s4, v16.d2, 1); dump();
sqshrn2(v7.s4, v31.d2, 1); dump();
sqshrn2(v7.s4, v7.d2, 1); dump();
sqshrn2(v7.s4, v7.d2, 2); dump();
sqshrn2(v7.s4, v7.d2, 4); dump();
sqshrn2(v7.s4, v7.d2, 8); dump();
sqshrn2(v7.s4, v7.d2, 16); dump();
sqshrn2(v7.s4, v7.d2, 32); dump();
sqshrun2(v7.s4, v7.d2, 1); dump();
sqshrun2(v0.s4, v7.d2, 1); dump();
sqshrun2(v1.s4, v7.d2, 1); dump();
sqshrun2(v2.s4, v7.d2, 1); dump();
sqshrun2(v4.s4, v7.d2, 1); dump();
sqshrun2(v8.s4, v7.d2, 1); dump();
sqshrun2(v16.s4, v7.d2, 1); dump();
sqshrun2(v31.s4, v7.d2, 1); dump();
sqshrun2(v7.s4, v7.d2, 1); dump();
sqshrun2(v7.s4, v0.d2, 1); dump();
sqshrun2(v7.s4, v1.d2, 1); dump();
sqshrun2(v7.s4, v2.d2, 1); dump();
sqshrun2(v7.s4, v4.d2, 1); dump();
sqshrun2(v7.s4, v8.d2, 1); dump();
sqshrun2(v7.s4, v16.d2, 1); dump();
sqshrun2(v7.s4, v31.d2, 1); dump();
sqshrun2(v7.s4, v7.d2, 1); dump();
sqshrun2(v7.s4, v7.d2, 2); dump();
sqshrun2(v7.s4, v7.d2, 4); dump();
sqshrun2(v7.s4, v7.d2, 8); dump();
sqshrun2(v7.s4, v7.d2, 16); dump();
sqshrun2(v7.s4, v7.d2, 32); dump();
uqrshrn2(v7.s4, v7.d2, 1); dump();
uqrshrn2(v0.s4, v7.d2, 1); dump();
uqrshrn2(v1.s4, v7.d2, 1); dump();
uqrshrn2(v2.s4, v7.d2, 1); dump();
uqrshrn2(v4.s4, v7.d2, 1); dump();
uqrshrn2(v8.s4, v7.d2, 1); dump();
uqrshrn2(v16.s4, v7.d2, 1); dump();
uqrshrn2(v31.s4, v7.d2, 1); dump();
uqrshrn2(v7.s4, v7.d2, 1); dump();
uqrshrn2(v7.s4, v0.d2, 1); dump();
uqrshrn2(v7.s4, v1.d2, 1); dump();
uqrshrn2(v7.s4, v2.d2, 1); dump();
uqrshrn2(v7.s4, v4.d2, 1); dump();
uqrshrn2(v7.s4, v8.d2, 1); dump();
uqrshrn2(v7.s4, v16.d2, 1); dump();
uqrshrn2(v7.s4, v31.d2, 1); dump();
uqrshrn2(v7.s4, v7.d2, 1); dump();
uqrshrn2(v7.s4, v7.d2, 2); dump();
uqrshrn2(v7.s4, v7.d2, 4); dump();
uqrshrn2(v7.s4, v7.d2, 8); dump();
uqrshrn2(v7.s4, v7.d2, 16); dump();
uqrshrn2(v7.s4, v7.d2, 32); dump();
uqshrn2(v7.s4, v7.d2, 1); dump();
uqshrn2(v0.s4, v7.d2, 1); dump();
uqshrn2(v1.s4, v7.d2, 1); dump();
uqshrn2(v2.s4, v7.d2, 1); dump();
uqshrn2(v4.s4, v7.d2, 1); dump();
uqshrn2(v8.s4, v7.d2, 1); dump();
uqshrn2(v16.s4, v7.d2, 1); dump();
uqshrn2(v31.s4, v7.d2, 1); dump();
uqshrn2(v7.s4, v7.d2, 1); dump();
uqshrn2(v7.s4, v0.d2, 1); dump();
uqshrn2(v7.s4, v1.d2, 1); dump();
uqshrn2(v7.s4, v2.d2, 1); dump();
uqshrn2(v7.s4, v4.d2, 1); dump();
uqshrn2(v7.s4, v8.d2, 1); dump();
uqshrn2(v7.s4, v16.d2, 1); dump();
uqshrn2(v7.s4, v31.d2, 1); dump();
uqshrn2(v7.s4, v7.d2, 1); dump();
uqshrn2(v7.s4, v7.d2, 2); dump();
uqshrn2(v7.s4, v7.d2, 4); dump();
uqshrn2(v7.s4, v7.d2, 8); dump();
uqshrn2(v7.s4, v7.d2, 16); dump();
uqshrn2(v7.s4, v7.d2, 32); dump();
//DataProcSimd_ShiftImmediate9:0
sqshl(b7, b7, 7); dump();
sqshl(b0, b7, 7); dump();
sqshl(b1, b7, 7); dump();
sqshl(b2, b7, 7); dump();
sqshl(b4, b7, 7); dump();
sqshl(b8, b7, 7); dump();
sqshl(b16, b7, 7); dump();
sqshl(b31, b7, 7); dump();
sqshl(b7, b7, 7); dump();
sqshl(b7, b0, 7); dump();
sqshl(b7, b1, 7); dump();
sqshl(b7, b2, 7); dump();
sqshl(b7, b4, 7); dump();
sqshl(b7, b8, 7); dump();
sqshl(b7, b16, 7); dump();
sqshl(b7, b31, 7); dump();
sqshl(b7, b7, 7); dump();
sqshl(b7, b7, 0); dump();
sqshl(b7, b7, 1); dump();
sqshl(b7, b7, 2); dump();
sqshl(b7, b7, 4); dump();
sqshlu(b7, b7, 7); dump();
sqshlu(b0, b7, 7); dump();
sqshlu(b1, b7, 7); dump();
sqshlu(b2, b7, 7); dump();
sqshlu(b4, b7, 7); dump();
sqshlu(b8, b7, 7); dump();
sqshlu(b16, b7, 7); dump();
sqshlu(b31, b7, 7); dump();
sqshlu(b7, b7, 7); dump();
sqshlu(b7, b0, 7); dump();
sqshlu(b7, b1, 7); dump();
sqshlu(b7, b2, 7); dump();
sqshlu(b7, b4, 7); dump();
sqshlu(b7, b8, 7); dump();
sqshlu(b7, b16, 7); dump();
sqshlu(b7, b31, 7); dump();
sqshlu(b7, b7, 7); dump();
sqshlu(b7, b7, 0); dump();
sqshlu(b7, b7, 1); dump();
sqshlu(b7, b7, 2); dump();
sqshlu(b7, b7, 4); dump();
uqshl(b7, b7, 7); dump();
uqshl(b0, b7, 7); dump();
uqshl(b1, b7, 7); dump();
uqshl(b2, b7, 7); dump();
uqshl(b4, b7, 7); dump();
uqshl(b8, b7, 7); dump();
uqshl(b16, b7, 7); dump();
uqshl(b31, b7, 7); dump();
uqshl(b7, b7, 7); dump();
uqshl(b7, b0, 7); dump();
uqshl(b7, b1, 7); dump();
uqshl(b7, b2, 7); dump();
uqshl(b7, b4, 7); dump();
uqshl(b7, b8, 7); dump();
uqshl(b7, b16, 7); dump();
uqshl(b7, b31, 7); dump();
uqshl(b7, b7, 7); dump();
uqshl(b7, b7, 0); dump();
uqshl(b7, b7, 1); dump();
uqshl(b7, b7, 2); dump();
uqshl(b7, b7, 4); dump();
//DataProcSimd_ShiftImmediate9:1
sqshl(h7, h7, 7); dump();
sqshl(h0, h7, 7); dump();
sqshl(h1, h7, 7); dump();
sqshl(h2, h7, 7); dump();
sqshl(h4, h7, 7); dump();
sqshl(h8, h7, 7); dump();
sqshl(h16, h7, 7); dump();
sqshl(h31, h7, 7); dump();
sqshl(h7, h7, 7); dump();
sqshl(h7, h0, 7); dump();
sqshl(h7, h1, 7); dump();
sqshl(h7, h2, 7); dump();
sqshl(h7, h4, 7); dump();
sqshl(h7, h8, 7); dump();
sqshl(h7, h16, 7); dump();
sqshl(h7, h31, 7); dump();
sqshl(h7, h7, 7); dump();
sqshl(h7, h7, 0); dump();
sqshl(h7, h7, 1); dump();
sqshl(h7, h7, 2); dump();
sqshl(h7, h7, 4); dump();
sqshl(h7, h7, 8); dump();
sqshl(h7, h7, 15); dump();
sqshlu(h7, h7, 7); dump();
sqshlu(h0, h7, 7); dump();
sqshlu(h1, h7, 7); dump();
sqshlu(h2, h7, 7); dump();
sqshlu(h4, h7, 7); dump();
sqshlu(h8, h7, 7); dump();
sqshlu(h16, h7, 7); dump();
sqshlu(h31, h7, 7); dump();
sqshlu(h7, h7, 7); dump();
sqshlu(h7, h0, 7); dump();
sqshlu(h7, h1, 7); dump();
sqshlu(h7, h2, 7); dump();
sqshlu(h7, h4, 7); dump();
sqshlu(h7, h8, 7); dump();
sqshlu(h7, h16, 7); dump();
sqshlu(h7, h31, 7); dump();
sqshlu(h7, h7, 7); dump();
sqshlu(h7, h7, 0); dump();
sqshlu(h7, h7, 1); dump();
sqshlu(h7, h7, 2); dump();
sqshlu(h7, h7, 4); dump();
sqshlu(h7, h7, 8); dump();
sqshlu(h7, h7, 15); dump();
uqshl(h7, h7, 7); dump();
uqshl(h0, h7, 7); dump();
uqshl(h1, h7, 7); dump();
uqshl(h2, h7, 7); dump();
uqshl(h4, h7, 7); dump();
uqshl(h8, h7, 7); dump();
uqshl(h16, h7, 7); dump();
uqshl(h31, h7, 7); dump();
uqshl(h7, h7, 7); dump();
uqshl(h7, h0, 7); dump();
uqshl(h7, h1, 7); dump();
uqshl(h7, h2, 7); dump();
uqshl(h7, h4, 7); dump();
uqshl(h7, h8, 7); dump();
uqshl(h7, h16, 7); dump();
uqshl(h7, h31, 7); dump();
uqshl(h7, h7, 7); dump();
uqshl(h7, h7, 0); dump();
uqshl(h7, h7, 1); dump();
uqshl(h7, h7, 2); dump();
uqshl(h7, h7, 4); dump();
uqshl(h7, h7, 8); dump();
uqshl(h7, h7, 15); dump();
//DataProcSimd_ShiftImmediate9:2
sqshl(s7, s7, 0x1e); dump();
sqshl(s0, s7, 0x1e); dump();
sqshl(s1, s7, 0x1e); dump();
sqshl(s2, s7, 0x1e); dump();
sqshl(s4, s7, 0x1e); dump();
sqshl(s8, s7, 0x1e); dump();
sqshl(s16, s7, 0x1e); dump();
sqshl(s31, s7, 0x1e); dump();
sqshl(s7, s7, 0x1e); dump();
sqshl(s7, s0, 0x1e); dump();
sqshl(s7, s1, 0x1e); dump();
sqshl(s7, s2, 0x1e); dump();
sqshl(s7, s4, 0x1e); dump();
sqshl(s7, s8, 0x1e); dump();
sqshl(s7, s16, 0x1e); dump();
sqshl(s7, s31, 0x1e); dump();
sqshl(s7, s7, 0x1e); dump();
sqshl(s7, s7, 0); dump();
sqshl(s7, s7, 1); dump();
sqshl(s7, s7, 2); dump();
sqshl(s7, s7, 4); dump();
sqshl(s7, s7, 8); dump();
sqshl(s7, s7, 16); dump();
sqshl(s7, s7, 31); dump();
sqshlu(s7, s7, 0x1e); dump();
sqshlu(s0, s7, 0x1e); dump();
sqshlu(s1, s7, 0x1e); dump();
sqshlu(s2, s7, 0x1e); dump();
sqshlu(s4, s7, 0x1e); dump();
sqshlu(s8, s7, 0x1e); dump();
sqshlu(s16, s7, 0x1e); dump();
sqshlu(s31, s7, 0x1e); dump();
sqshlu(s7, s7, 0x1e); dump();
sqshlu(s7, s0, 0x1e); dump();
sqshlu(s7, s1, 0x1e); dump();
sqshlu(s7, s2, 0x1e); dump();
sqshlu(s7, s4, 0x1e); dump();
sqshlu(s7, s8, 0x1e); dump();
sqshlu(s7, s16, 0x1e); dump();
sqshlu(s7, s31, 0x1e); dump();
sqshlu(s7, s7, 0x1e); dump();
sqshlu(s7, s7, 0); dump();
sqshlu(s7, s7, 1); dump();
sqshlu(s7, s7, 2); dump();
sqshlu(s7, s7, 4); dump();
sqshlu(s7, s7, 8); dump();
sqshlu(s7, s7, 16); dump();
sqshlu(s7, s7, 31); dump();
uqshl(s7, s7, 0x1e); dump();
uqshl(s0, s7, 0x1e); dump();
uqshl(s1, s7, 0x1e); dump();
uqshl(s2, s7, 0x1e); dump();
uqshl(s4, s7, 0x1e); dump();
uqshl(s8, s7, 0x1e); dump();
uqshl(s16, s7, 0x1e); dump();
uqshl(s31, s7, 0x1e); dump();
uqshl(s7, s7, 0x1e); dump();
uqshl(s7, s0, 0x1e); dump();
uqshl(s7, s1, 0x1e); dump();
uqshl(s7, s2, 0x1e); dump();
uqshl(s7, s4, 0x1e); dump();
uqshl(s7, s8, 0x1e); dump();
uqshl(s7, s16, 0x1e); dump();
uqshl(s7, s31, 0x1e); dump();
uqshl(s7, s7, 0x1e); dump();
uqshl(s7, s7, 0); dump();
uqshl(s7, s7, 1); dump();
uqshl(s7, s7, 2); dump();
uqshl(s7, s7, 4); dump();
uqshl(s7, s7, 8); dump();
uqshl(s7, s7, 16); dump();
uqshl(s7, s7, 31); dump();
//DataProcSimd_ShiftImmediate9:3
sqshl(d7, d7, 0x39); dump();
sqshl(d0, d7, 0x39); dump();
sqshl(d1, d7, 0x39); dump();
sqshl(d2, d7, 0x39); dump();
sqshl(d4, d7, 0x39); dump();
sqshl(d8, d7, 0x39); dump();
sqshl(d16, d7, 0x39); dump();
sqshl(d31, d7, 0x39); dump();
sqshl(d7, d7, 0x39); dump();
sqshl(d7, d0, 0x39); dump();
sqshl(d7, d1, 0x39); dump();
sqshl(d7, d2, 0x39); dump();
sqshl(d7, d4, 0x39); dump();
sqshl(d7, d8, 0x39); dump();
sqshl(d7, d16, 0x39); dump();
sqshl(d7, d31, 0x39); dump();
sqshl(d7, d7, 0x39); dump();
sqshl(d7, d7, 0); dump();
sqshl(d7, d7, 1); dump();
sqshl(d7, d7, 2); dump();
sqshl(d7, d7, 4); dump();
sqshl(d7, d7, 8); dump();
sqshl(d7, d7, 16); dump();
sqshl(d7, d7, 32); dump();
sqshl(d7, d7, 63); dump();
sqshlu(d7, d7, 0x39); dump();
sqshlu(d0, d7, 0x39); dump();
sqshlu(d1, d7, 0x39); dump();
sqshlu(d2, d7, 0x39); dump();
sqshlu(d4, d7, 0x39); dump();
sqshlu(d8, d7, 0x39); dump();
sqshlu(d16, d7, 0x39); dump();
sqshlu(d31, d7, 0x39); dump();
sqshlu(d7, d7, 0x39); dump();
sqshlu(d7, d0, 0x39); dump();
sqshlu(d7, d1, 0x39); dump();
sqshlu(d7, d2, 0x39); dump();
sqshlu(d7, d4, 0x39); dump();
sqshlu(d7, d8, 0x39); dump();
sqshlu(d7, d16, 0x39); dump();
sqshlu(d7, d31, 0x39); dump();
sqshlu(d7, d7, 0x39); dump();
sqshlu(d7, d7, 0); dump();
sqshlu(d7, d7, 1); dump();
sqshlu(d7, d7, 2); dump();
sqshlu(d7, d7, 4); dump();
sqshlu(d7, d7, 8); dump();
sqshlu(d7, d7, 16); dump();
sqshlu(d7, d7, 32); dump();
sqshlu(d7, d7, 63); dump();
uqshl(d7, d7, 0x39); dump();
uqshl(d0, d7, 0x39); dump();
uqshl(d1, d7, 0x39); dump();
uqshl(d2, d7, 0x39); dump();
uqshl(d4, d7, 0x39); dump();
uqshl(d8, d7, 0x39); dump();
uqshl(d16, d7, 0x39); dump();
uqshl(d31, d7, 0x39); dump();
uqshl(d7, d7, 0x39); dump();
uqshl(d7, d0, 0x39); dump();
uqshl(d7, d1, 0x39); dump();
uqshl(d7, d2, 0x39); dump();
uqshl(d7, d4, 0x39); dump();
uqshl(d7, d8, 0x39); dump();
uqshl(d7, d16, 0x39); dump();
uqshl(d7, d31, 0x39); dump();
uqshl(d7, d7, 0x39); dump();
uqshl(d7, d7, 0); dump();
uqshl(d7, d7, 1); dump();
uqshl(d7, d7, 2); dump();
uqshl(d7, d7, 4); dump();
uqshl(d7, d7, 8); dump();
uqshl(d7, d7, 16); dump();
uqshl(d7, d7, 32); dump();
uqshl(d7, d7, 63); dump();
//DataProcSimd_ShiftImmediate9:4
sqshl(v7.b8, v7.b8, 7); dump();
sqshl(v0.b8, v7.b8, 7); dump();
sqshl(v1.b8, v7.b8, 7); dump();
sqshl(v2.b8, v7.b8, 7); dump();
sqshl(v4.b8, v7.b8, 7); dump();
sqshl(v8.b8, v7.b8, 7); dump();
sqshl(v16.b8, v7.b8, 7); dump();
sqshl(v31.b8, v7.b8, 7); dump();
sqshl(v7.b8, v7.b8, 7); dump();
sqshl(v7.b8, v0.b8, 7); dump();
sqshl(v7.b8, v1.b8, 7); dump();
sqshl(v7.b8, v2.b8, 7); dump();
sqshl(v7.b8, v4.b8, 7); dump();
sqshl(v7.b8, v8.b8, 7); dump();
sqshl(v7.b8, v16.b8, 7); dump();
sqshl(v7.b8, v31.b8, 7); dump();
sqshl(v7.b8, v7.b8, 7); dump();
sqshl(v7.b8, v7.b8, 0); dump();
sqshl(v7.b8, v7.b8, 1); dump();
sqshl(v7.b8, v7.b8, 2); dump();
sqshl(v7.b8, v7.b8, 4); dump();
sqshlu(v7.b8, v7.b8, 7); dump();
sqshlu(v0.b8, v7.b8, 7); dump();
sqshlu(v1.b8, v7.b8, 7); dump();
sqshlu(v2.b8, v7.b8, 7); dump();
sqshlu(v4.b8, v7.b8, 7); dump();
sqshlu(v8.b8, v7.b8, 7); dump();
sqshlu(v16.b8, v7.b8, 7); dump();
sqshlu(v31.b8, v7.b8, 7); dump();
sqshlu(v7.b8, v7.b8, 7); dump();
sqshlu(v7.b8, v0.b8, 7); dump();
sqshlu(v7.b8, v1.b8, 7); dump();
sqshlu(v7.b8, v2.b8, 7); dump();
sqshlu(v7.b8, v4.b8, 7); dump();
sqshlu(v7.b8, v8.b8, 7); dump();
sqshlu(v7.b8, v16.b8, 7); dump();
sqshlu(v7.b8, v31.b8, 7); dump();
sqshlu(v7.b8, v7.b8, 7); dump();
sqshlu(v7.b8, v7.b8, 0); dump();
sqshlu(v7.b8, v7.b8, 1); dump();
sqshlu(v7.b8, v7.b8, 2); dump();
sqshlu(v7.b8, v7.b8, 4); dump();
uqshl(v7.b8, v7.b8, 7); dump();
uqshl(v0.b8, v7.b8, 7); dump();
uqshl(v1.b8, v7.b8, 7); dump();
uqshl(v2.b8, v7.b8, 7); dump();
uqshl(v4.b8, v7.b8, 7); dump();
uqshl(v8.b8, v7.b8, 7); dump();
uqshl(v16.b8, v7.b8, 7); dump();
uqshl(v31.b8, v7.b8, 7); dump();
uqshl(v7.b8, v7.b8, 7); dump();
uqshl(v7.b8, v0.b8, 7); dump();
uqshl(v7.b8, v1.b8, 7); dump();
uqshl(v7.b8, v2.b8, 7); dump();
uqshl(v7.b8, v4.b8, 7); dump();
uqshl(v7.b8, v8.b8, 7); dump();
uqshl(v7.b8, v16.b8, 7); dump();
uqshl(v7.b8, v31.b8, 7); dump();
uqshl(v7.b8, v7.b8, 7); dump();
uqshl(v7.b8, v7.b8, 0); dump();
uqshl(v7.b8, v7.b8, 1); dump();
uqshl(v7.b8, v7.b8, 2); dump();
uqshl(v7.b8, v7.b8, 4); dump();
//DataProcSimd_ShiftImmediate9:5
sqshl(v7.b16, v7.b16, 7); dump();
sqshl(v0.b16, v7.b16, 7); dump();
sqshl(v1.b16, v7.b16, 7); dump();
sqshl(v2.b16, v7.b16, 7); dump();
sqshl(v4.b16, v7.b16, 7); dump();
sqshl(v8.b16, v7.b16, 7); dump();
sqshl(v16.b16, v7.b16, 7); dump();
sqshl(v31.b16, v7.b16, 7); dump();
sqshl(v7.b16, v7.b16, 7); dump();
sqshl(v7.b16, v0.b16, 7); dump();
sqshl(v7.b16, v1.b16, 7); dump();
sqshl(v7.b16, v2.b16, 7); dump();
sqshl(v7.b16, v4.b16, 7); dump();
sqshl(v7.b16, v8.b16, 7); dump();
sqshl(v7.b16, v16.b16, 7); dump();
sqshl(v7.b16, v31.b16, 7); dump();
sqshl(v7.b16, v7.b16, 7); dump();
sqshl(v7.b16, v7.b16, 0); dump();
sqshl(v7.b16, v7.b16, 1); dump();
sqshl(v7.b16, v7.b16, 2); dump();
sqshl(v7.b16, v7.b16, 4); dump();
sqshlu(v7.b16, v7.b16, 7); dump();
sqshlu(v0.b16, v7.b16, 7); dump();
sqshlu(v1.b16, v7.b16, 7); dump();
sqshlu(v2.b16, v7.b16, 7); dump();
sqshlu(v4.b16, v7.b16, 7); dump();
sqshlu(v8.b16, v7.b16, 7); dump();
sqshlu(v16.b16, v7.b16, 7); dump();
sqshlu(v31.b16, v7.b16, 7); dump();
sqshlu(v7.b16, v7.b16, 7); dump();
sqshlu(v7.b16, v0.b16, 7); dump();
sqshlu(v7.b16, v1.b16, 7); dump();
sqshlu(v7.b16, v2.b16, 7); dump();
sqshlu(v7.b16, v4.b16, 7); dump();
sqshlu(v7.b16, v8.b16, 7); dump();
sqshlu(v7.b16, v16.b16, 7); dump();
sqshlu(v7.b16, v31.b16, 7); dump();
sqshlu(v7.b16, v7.b16, 7); dump();
sqshlu(v7.b16, v7.b16, 0); dump();
sqshlu(v7.b16, v7.b16, 1); dump();
sqshlu(v7.b16, v7.b16, 2); dump();
sqshlu(v7.b16, v7.b16, 4); dump();
uqshl(v7.b16, v7.b16, 7); dump();
uqshl(v0.b16, v7.b16, 7); dump();
uqshl(v1.b16, v7.b16, 7); dump();
uqshl(v2.b16, v7.b16, 7); dump();
uqshl(v4.b16, v7.b16, 7); dump();
uqshl(v8.b16, v7.b16, 7); dump();
uqshl(v16.b16, v7.b16, 7); dump();
uqshl(v31.b16, v7.b16, 7); dump();
uqshl(v7.b16, v7.b16, 7); dump();
uqshl(v7.b16, v0.b16, 7); dump();
uqshl(v7.b16, v1.b16, 7); dump();
uqshl(v7.b16, v2.b16, 7); dump();
uqshl(v7.b16, v4.b16, 7); dump();
uqshl(v7.b16, v8.b16, 7); dump();
uqshl(v7.b16, v16.b16, 7); dump();
uqshl(v7.b16, v31.b16, 7); dump();
uqshl(v7.b16, v7.b16, 7); dump();
uqshl(v7.b16, v7.b16, 0); dump();
uqshl(v7.b16, v7.b16, 1); dump();
uqshl(v7.b16, v7.b16, 2); dump();
uqshl(v7.b16, v7.b16, 4); dump();
//DataProcSimd_ShiftImmediate9:6
sqshl(v7.h4, v7.h4, 7); dump();
sqshl(v0.h4, v7.h4, 7); dump();
sqshl(v1.h4, v7.h4, 7); dump();
sqshl(v2.h4, v7.h4, 7); dump();
sqshl(v4.h4, v7.h4, 7); dump();
sqshl(v8.h4, v7.h4, 7); dump();
sqshl(v16.h4, v7.h4, 7); dump();
sqshl(v31.h4, v7.h4, 7); dump();
sqshl(v7.h4, v7.h4, 7); dump();
sqshl(v7.h4, v0.h4, 7); dump();
sqshl(v7.h4, v1.h4, 7); dump();
sqshl(v7.h4, v2.h4, 7); dump();
sqshl(v7.h4, v4.h4, 7); dump();
sqshl(v7.h4, v8.h4, 7); dump();
sqshl(v7.h4, v16.h4, 7); dump();
sqshl(v7.h4, v31.h4, 7); dump();
sqshl(v7.h4, v7.h4, 7); dump();
sqshl(v7.h4, v7.h4, 0); dump();
sqshl(v7.h4, v7.h4, 1); dump();
sqshl(v7.h4, v7.h4, 2); dump();
sqshl(v7.h4, v7.h4, 4); dump();
sqshl(v7.h4, v7.h4, 8); dump();
sqshl(v7.h4, v7.h4, 15); dump();
sqshlu(v7.h4, v7.h4, 7); dump();
sqshlu(v0.h4, v7.h4, 7); dump();
sqshlu(v1.h4, v7.h4, 7); dump();
sqshlu(v2.h4, v7.h4, 7); dump();
sqshlu(v4.h4, v7.h4, 7); dump();
sqshlu(v8.h4, v7.h4, 7); dump();
sqshlu(v16.h4, v7.h4, 7); dump();
sqshlu(v31.h4, v7.h4, 7); dump();
sqshlu(v7.h4, v7.h4, 7); dump();
sqshlu(v7.h4, v0.h4, 7); dump();
sqshlu(v7.h4, v1.h4, 7); dump();
sqshlu(v7.h4, v2.h4, 7); dump();
sqshlu(v7.h4, v4.h4, 7); dump();
sqshlu(v7.h4, v8.h4, 7); dump();
sqshlu(v7.h4, v16.h4, 7); dump();
sqshlu(v7.h4, v31.h4, 7); dump();
sqshlu(v7.h4, v7.h4, 7); dump();
sqshlu(v7.h4, v7.h4, 0); dump();
sqshlu(v7.h4, v7.h4, 1); dump();
sqshlu(v7.h4, v7.h4, 2); dump();
sqshlu(v7.h4, v7.h4, 4); dump();
sqshlu(v7.h4, v7.h4, 8); dump();
sqshlu(v7.h4, v7.h4, 15); dump();
uqshl(v7.h4, v7.h4, 7); dump();
uqshl(v0.h4, v7.h4, 7); dump();
uqshl(v1.h4, v7.h4, 7); dump();
uqshl(v2.h4, v7.h4, 7); dump();
uqshl(v4.h4, v7.h4, 7); dump();
uqshl(v8.h4, v7.h4, 7); dump();
uqshl(v16.h4, v7.h4, 7); dump();
uqshl(v31.h4, v7.h4, 7); dump();
uqshl(v7.h4, v7.h4, 7); dump();
uqshl(v7.h4, v0.h4, 7); dump();
uqshl(v7.h4, v1.h4, 7); dump();
uqshl(v7.h4, v2.h4, 7); dump();
uqshl(v7.h4, v4.h4, 7); dump();
uqshl(v7.h4, v8.h4, 7); dump();
uqshl(v7.h4, v16.h4, 7); dump();
uqshl(v7.h4, v31.h4, 7); dump();
uqshl(v7.h4, v7.h4, 7); dump();
uqshl(v7.h4, v7.h4, 0); dump();
uqshl(v7.h4, v7.h4, 1); dump();
uqshl(v7.h4, v7.h4, 2); dump();
uqshl(v7.h4, v7.h4, 4); dump();
uqshl(v7.h4, v7.h4, 8); dump();
uqshl(v7.h4, v7.h4, 15); dump();
//DataProcSimd_ShiftImmediate9:7
sqshl(v7.h8, v7.h8, 7); dump();
sqshl(v0.h8, v7.h8, 7); dump();
sqshl(v1.h8, v7.h8, 7); dump();
sqshl(v2.h8, v7.h8, 7); dump();
sqshl(v4.h8, v7.h8, 7); dump();
sqshl(v8.h8, v7.h8, 7); dump();
sqshl(v16.h8, v7.h8, 7); dump();
sqshl(v31.h8, v7.h8, 7); dump();
sqshl(v7.h8, v7.h8, 7); dump();
sqshl(v7.h8, v0.h8, 7); dump();
sqshl(v7.h8, v1.h8, 7); dump();
sqshl(v7.h8, v2.h8, 7); dump();
sqshl(v7.h8, v4.h8, 7); dump();
sqshl(v7.h8, v8.h8, 7); dump();
sqshl(v7.h8, v16.h8, 7); dump();
sqshl(v7.h8, v31.h8, 7); dump();
sqshl(v7.h8, v7.h8, 7); dump();
sqshl(v7.h8, v7.h8, 0); dump();
sqshl(v7.h8, v7.h8, 1); dump();
sqshl(v7.h8, v7.h8, 2); dump();
sqshl(v7.h8, v7.h8, 4); dump();
sqshl(v7.h8, v7.h8, 8); dump();
sqshl(v7.h8, v7.h8, 15); dump();
sqshlu(v7.h8, v7.h8, 7); dump();
sqshlu(v0.h8, v7.h8, 7); dump();
sqshlu(v1.h8, v7.h8, 7); dump();
sqshlu(v2.h8, v7.h8, 7); dump();
sqshlu(v4.h8, v7.h8, 7); dump();
sqshlu(v8.h8, v7.h8, 7); dump();
sqshlu(v16.h8, v7.h8, 7); dump();
sqshlu(v31.h8, v7.h8, 7); dump();
sqshlu(v7.h8, v7.h8, 7); dump();
sqshlu(v7.h8, v0.h8, 7); dump();
sqshlu(v7.h8, v1.h8, 7); dump();
sqshlu(v7.h8, v2.h8, 7); dump();
sqshlu(v7.h8, v4.h8, 7); dump();
sqshlu(v7.h8, v8.h8, 7); dump();
sqshlu(v7.h8, v16.h8, 7); dump();
sqshlu(v7.h8, v31.h8, 7); dump();
sqshlu(v7.h8, v7.h8, 7); dump();
sqshlu(v7.h8, v7.h8, 0); dump();
sqshlu(v7.h8, v7.h8, 1); dump();
sqshlu(v7.h8, v7.h8, 2); dump();
sqshlu(v7.h8, v7.h8, 4); dump();
sqshlu(v7.h8, v7.h8, 8); dump();
sqshlu(v7.h8, v7.h8, 15); dump();
uqshl(v7.h8, v7.h8, 7); dump();
uqshl(v0.h8, v7.h8, 7); dump();
uqshl(v1.h8, v7.h8, 7); dump();
uqshl(v2.h8, v7.h8, 7); dump();
uqshl(v4.h8, v7.h8, 7); dump();
uqshl(v8.h8, v7.h8, 7); dump();
uqshl(v16.h8, v7.h8, 7); dump();
uqshl(v31.h8, v7.h8, 7); dump();
uqshl(v7.h8, v7.h8, 7); dump();
uqshl(v7.h8, v0.h8, 7); dump();
uqshl(v7.h8, v1.h8, 7); dump();
uqshl(v7.h8, v2.h8, 7); dump();
uqshl(v7.h8, v4.h8, 7); dump();
uqshl(v7.h8, v8.h8, 7); dump();
uqshl(v7.h8, v16.h8, 7); dump();
uqshl(v7.h8, v31.h8, 7); dump();
uqshl(v7.h8, v7.h8, 7); dump();
uqshl(v7.h8, v7.h8, 0); dump();
uqshl(v7.h8, v7.h8, 1); dump();
uqshl(v7.h8, v7.h8, 2); dump();
uqshl(v7.h8, v7.h8, 4); dump();
uqshl(v7.h8, v7.h8, 8); dump();
uqshl(v7.h8, v7.h8, 15); dump();
//DataProcSimd_ShiftImmediate10:0
sqshl(v7.s2, v7.s2, 0x1e); dump();
sqshl(v0.s2, v7.s2, 0x1e); dump();
sqshl(v1.s2, v7.s2, 0x1e); dump();
sqshl(v2.s2, v7.s2, 0x1e); dump();
sqshl(v4.s2, v7.s2, 0x1e); dump();
sqshl(v8.s2, v7.s2, 0x1e); dump();
sqshl(v16.s2, v7.s2, 0x1e); dump();
sqshl(v31.s2, v7.s2, 0x1e); dump();
sqshl(v7.s2, v7.s2, 0x1e); dump();
sqshl(v7.s2, v0.s2, 0x1e); dump();
sqshl(v7.s2, v1.s2, 0x1e); dump();
sqshl(v7.s2, v2.s2, 0x1e); dump();
sqshl(v7.s2, v4.s2, 0x1e); dump();
sqshl(v7.s2, v8.s2, 0x1e); dump();
sqshl(v7.s2, v16.s2, 0x1e); dump();
sqshl(v7.s2, v31.s2, 0x1e); dump();
sqshl(v7.s2, v7.s2, 0x1e); dump();
sqshl(v7.s2, v7.s2, 0); dump();
sqshl(v7.s2, v7.s2, 1); dump();
sqshl(v7.s2, v7.s2, 2); dump();
sqshl(v7.s2, v7.s2, 4); dump();
sqshl(v7.s2, v7.s2, 8); dump();
sqshl(v7.s2, v7.s2, 16); dump();
sqshl(v7.s2, v7.s2, 31); dump();
sqshlu(v7.s2, v7.s2, 0x1e); dump();
sqshlu(v0.s2, v7.s2, 0x1e); dump();
sqshlu(v1.s2, v7.s2, 0x1e); dump();
sqshlu(v2.s2, v7.s2, 0x1e); dump();
sqshlu(v4.s2, v7.s2, 0x1e); dump();
sqshlu(v8.s2, v7.s2, 0x1e); dump();
sqshlu(v16.s2, v7.s2, 0x1e); dump();
sqshlu(v31.s2, v7.s2, 0x1e); dump();
sqshlu(v7.s2, v7.s2, 0x1e); dump();
sqshlu(v7.s2, v0.s2, 0x1e); dump();
sqshlu(v7.s2, v1.s2, 0x1e); dump();
sqshlu(v7.s2, v2.s2, 0x1e); dump();
sqshlu(v7.s2, v4.s2, 0x1e); dump();
sqshlu(v7.s2, v8.s2, 0x1e); dump();
sqshlu(v7.s2, v16.s2, 0x1e); dump();
sqshlu(v7.s2, v31.s2, 0x1e); dump();
sqshlu(v7.s2, v7.s2, 0x1e); dump();
sqshlu(v7.s2, v7.s2, 0); dump();
sqshlu(v7.s2, v7.s2, 1); dump();
sqshlu(v7.s2, v7.s2, 2); dump();
sqshlu(v7.s2, v7.s2, 4); dump();
sqshlu(v7.s2, v7.s2, 8); dump();
sqshlu(v7.s2, v7.s2, 16); dump();
sqshlu(v7.s2, v7.s2, 31); dump();
uqshl(v7.s2, v7.s2, 0x1e); dump();
uqshl(v0.s2, v7.s2, 0x1e); dump();
uqshl(v1.s2, v7.s2, 0x1e); dump();
uqshl(v2.s2, v7.s2, 0x1e); dump();
uqshl(v4.s2, v7.s2, 0x1e); dump();
uqshl(v8.s2, v7.s2, 0x1e); dump();
uqshl(v16.s2, v7.s2, 0x1e); dump();
uqshl(v31.s2, v7.s2, 0x1e); dump();
uqshl(v7.s2, v7.s2, 0x1e); dump();
uqshl(v7.s2, v0.s2, 0x1e); dump();
uqshl(v7.s2, v1.s2, 0x1e); dump();
uqshl(v7.s2, v2.s2, 0x1e); dump();
uqshl(v7.s2, v4.s2, 0x1e); dump();
uqshl(v7.s2, v8.s2, 0x1e); dump();
uqshl(v7.s2, v16.s2, 0x1e); dump();
uqshl(v7.s2, v31.s2, 0x1e); dump();
uqshl(v7.s2, v7.s2, 0x1e); dump();
uqshl(v7.s2, v7.s2, 0); dump();
uqshl(v7.s2, v7.s2, 1); dump();
uqshl(v7.s2, v7.s2, 2); dump();
uqshl(v7.s2, v7.s2, 4); dump();
uqshl(v7.s2, v7.s2, 8); dump();
uqshl(v7.s2, v7.s2, 16); dump();
uqshl(v7.s2, v7.s2, 31); dump();
//DataProcSimd_ShiftImmediate10:1
sqshl(v7.s4, v7.s4, 0x1e); dump();
sqshl(v0.s4, v7.s4, 0x1e); dump();
sqshl(v1.s4, v7.s4, 0x1e); dump();
sqshl(v2.s4, v7.s4, 0x1e); dump();
sqshl(v4.s4, v7.s4, 0x1e); dump();
sqshl(v8.s4, v7.s4, 0x1e); dump();
sqshl(v16.s4, v7.s4, 0x1e); dump();
sqshl(v31.s4, v7.s4, 0x1e); dump();
sqshl(v7.s4, v7.s4, 0x1e); dump();
sqshl(v7.s4, v0.s4, 0x1e); dump();
sqshl(v7.s4, v1.s4, 0x1e); dump();
sqshl(v7.s4, v2.s4, 0x1e); dump();
sqshl(v7.s4, v4.s4, 0x1e); dump();
sqshl(v7.s4, v8.s4, 0x1e); dump();
sqshl(v7.s4, v16.s4, 0x1e); dump();
sqshl(v7.s4, v31.s4, 0x1e); dump();
sqshl(v7.s4, v7.s4, 0x1e); dump();
sqshl(v7.s4, v7.s4, 0); dump();
sqshl(v7.s4, v7.s4, 1); dump();
sqshl(v7.s4, v7.s4, 2); dump();
sqshl(v7.s4, v7.s4, 4); dump();
sqshl(v7.s4, v7.s4, 8); dump();
sqshl(v7.s4, v7.s4, 16); dump();
sqshl(v7.s4, v7.s4, 31); dump();
sqshlu(v7.s4, v7.s4, 0x1e); dump();
sqshlu(v0.s4, v7.s4, 0x1e); dump();
sqshlu(v1.s4, v7.s4, 0x1e); dump();
sqshlu(v2.s4, v7.s4, 0x1e); dump();
sqshlu(v4.s4, v7.s4, 0x1e); dump();
sqshlu(v8.s4, v7.s4, 0x1e); dump();
sqshlu(v16.s4, v7.s4, 0x1e); dump();
sqshlu(v31.s4, v7.s4, 0x1e); dump();
sqshlu(v7.s4, v7.s4, 0x1e); dump();
sqshlu(v7.s4, v0.s4, 0x1e); dump();
sqshlu(v7.s4, v1.s4, 0x1e); dump();
sqshlu(v7.s4, v2.s4, 0x1e); dump();
sqshlu(v7.s4, v4.s4, 0x1e); dump();
sqshlu(v7.s4, v8.s4, 0x1e); dump();
sqshlu(v7.s4, v16.s4, 0x1e); dump();
sqshlu(v7.s4, v31.s4, 0x1e); dump();
sqshlu(v7.s4, v7.s4, 0x1e); dump();
sqshlu(v7.s4, v7.s4, 0); dump();
sqshlu(v7.s4, v7.s4, 1); dump();
sqshlu(v7.s4, v7.s4, 2); dump();
sqshlu(v7.s4, v7.s4, 4); dump();
sqshlu(v7.s4, v7.s4, 8); dump();
sqshlu(v7.s4, v7.s4, 16); dump();
sqshlu(v7.s4, v7.s4, 31); dump();
uqshl(v7.s4, v7.s4, 0x1e); dump();
uqshl(v0.s4, v7.s4, 0x1e); dump();
uqshl(v1.s4, v7.s4, 0x1e); dump();
uqshl(v2.s4, v7.s4, 0x1e); dump();
uqshl(v4.s4, v7.s4, 0x1e); dump();
uqshl(v8.s4, v7.s4, 0x1e); dump();
uqshl(v16.s4, v7.s4, 0x1e); dump();
uqshl(v31.s4, v7.s4, 0x1e); dump();
uqshl(v7.s4, v7.s4, 0x1e); dump();
uqshl(v7.s4, v0.s4, 0x1e); dump();
uqshl(v7.s4, v1.s4, 0x1e); dump();
uqshl(v7.s4, v2.s4, 0x1e); dump();
uqshl(v7.s4, v4.s4, 0x1e); dump();
uqshl(v7.s4, v8.s4, 0x1e); dump();
uqshl(v7.s4, v16.s4, 0x1e); dump();
uqshl(v7.s4, v31.s4, 0x1e); dump();
uqshl(v7.s4, v7.s4, 0x1e); dump();
uqshl(v7.s4, v7.s4, 0); dump();
uqshl(v7.s4, v7.s4, 1); dump();
uqshl(v7.s4, v7.s4, 2); dump();
uqshl(v7.s4, v7.s4, 4); dump();
uqshl(v7.s4, v7.s4, 8); dump();
uqshl(v7.s4, v7.s4, 16); dump();
uqshl(v7.s4, v7.s4, 31); dump();
//DataProcSimd_ShiftImmediate10:2
sqshl(v7.d2, v7.d2, 0x39); dump();
sqshl(v0.d2, v7.d2, 0x39); dump();
sqshl(v1.d2, v7.d2, 0x39); dump();
sqshl(v2.d2, v7.d2, 0x39); dump();
sqshl(v4.d2, v7.d2, 0x39); dump();
sqshl(v8.d2, v7.d2, 0x39); dump();
sqshl(v16.d2, v7.d2, 0x39); dump();
sqshl(v31.d2, v7.d2, 0x39); dump();
sqshl(v7.d2, v7.d2, 0x39); dump();
sqshl(v7.d2, v0.d2, 0x39); dump();
sqshl(v7.d2, v1.d2, 0x39); dump();
sqshl(v7.d2, v2.d2, 0x39); dump();
sqshl(v7.d2, v4.d2, 0x39); dump();
sqshl(v7.d2, v8.d2, 0x39); dump();
sqshl(v7.d2, v16.d2, 0x39); dump();
sqshl(v7.d2, v31.d2, 0x39); dump();
sqshl(v7.d2, v7.d2, 0x39); dump();
sqshl(v7.d2, v7.d2, 0); dump();
sqshl(v7.d2, v7.d2, 1); dump();
sqshl(v7.d2, v7.d2, 2); dump();
sqshl(v7.d2, v7.d2, 4); dump();
sqshl(v7.d2, v7.d2, 8); dump();
sqshl(v7.d2, v7.d2, 16); dump();
sqshl(v7.d2, v7.d2, 32); dump();
sqshl(v7.d2, v7.d2, 63); dump();
sqshlu(v7.d2, v7.d2, 0x39); dump();
sqshlu(v0.d2, v7.d2, 0x39); dump();
sqshlu(v1.d2, v7.d2, 0x39); dump();
sqshlu(v2.d2, v7.d2, 0x39); dump();
sqshlu(v4.d2, v7.d2, 0x39); dump();
sqshlu(v8.d2, v7.d2, 0x39); dump();
sqshlu(v16.d2, v7.d2, 0x39); dump();
sqshlu(v31.d2, v7.d2, 0x39); dump();
sqshlu(v7.d2, v7.d2, 0x39); dump();
sqshlu(v7.d2, v0.d2, 0x39); dump();
sqshlu(v7.d2, v1.d2, 0x39); dump();
sqshlu(v7.d2, v2.d2, 0x39); dump();
sqshlu(v7.d2, v4.d2, 0x39); dump();
sqshlu(v7.d2, v8.d2, 0x39); dump();
sqshlu(v7.d2, v16.d2, 0x39); dump();
sqshlu(v7.d2, v31.d2, 0x39); dump();
sqshlu(v7.d2, v7.d2, 0x39); dump();
sqshlu(v7.d2, v7.d2, 0); dump();
sqshlu(v7.d2, v7.d2, 1); dump();
sqshlu(v7.d2, v7.d2, 2); dump();
sqshlu(v7.d2, v7.d2, 4); dump();
sqshlu(v7.d2, v7.d2, 8); dump();
sqshlu(v7.d2, v7.d2, 16); dump();
sqshlu(v7.d2, v7.d2, 32); dump();
sqshlu(v7.d2, v7.d2, 63); dump();
uqshl(v7.d2, v7.d2, 0x39); dump();
uqshl(v0.d2, v7.d2, 0x39); dump();
uqshl(v1.d2, v7.d2, 0x39); dump();
uqshl(v2.d2, v7.d2, 0x39); dump();
uqshl(v4.d2, v7.d2, 0x39); dump();
uqshl(v8.d2, v7.d2, 0x39); dump();
uqshl(v16.d2, v7.d2, 0x39); dump();
uqshl(v31.d2, v7.d2, 0x39); dump();
uqshl(v7.d2, v7.d2, 0x39); dump();
uqshl(v7.d2, v0.d2, 0x39); dump();
uqshl(v7.d2, v1.d2, 0x39); dump();
uqshl(v7.d2, v2.d2, 0x39); dump();
uqshl(v7.d2, v4.d2, 0x39); dump();
uqshl(v7.d2, v8.d2, 0x39); dump();
uqshl(v7.d2, v16.d2, 0x39); dump();
uqshl(v7.d2, v31.d2, 0x39); dump();
uqshl(v7.d2, v7.d2, 0x39); dump();
uqshl(v7.d2, v7.d2, 0); dump();
uqshl(v7.d2, v7.d2, 1); dump();
uqshl(v7.d2, v7.d2, 2); dump();
uqshl(v7.d2, v7.d2, 4); dump();
uqshl(v7.d2, v7.d2, 8); dump();
uqshl(v7.d2, v7.d2, 16); dump();
uqshl(v7.d2, v7.d2, 32); dump();
uqshl(v7.d2, v7.d2, 63); dump();
//DataProcSimd_ShiftImmediate11:0
sri(d7, d7, 1); dump();
sri(d0, d7, 1); dump();
sri(d1, d7, 1); dump();
sri(d2, d7, 1); dump();
sri(d4, d7, 1); dump();
sri(d8, d7, 1); dump();
sri(d16, d7, 1); dump();
sri(d31, d7, 1); dump();
sri(d7, d7, 1); dump();
sri(d7, d0, 1); dump();
sri(d7, d1, 1); dump();
sri(d7, d2, 1); dump();
sri(d7, d4, 1); dump();
sri(d7, d8, 1); dump();
sri(d7, d16, 1); dump();
sri(d7, d31, 1); dump();
sri(d7, d7, 1); dump();
sri(d7, d7, 2); dump();
sri(d7, d7, 4); dump();
sri(d7, d7, 8); dump();
sri(d7, d7, 16); dump();
sri(d7, d7, 32); dump();
sri(d7, d7, 64); dump();
srshr(d7, d7, 1); dump();
srshr(d0, d7, 1); dump();
srshr(d1, d7, 1); dump();
srshr(d2, d7, 1); dump();
srshr(d4, d7, 1); dump();
srshr(d8, d7, 1); dump();
srshr(d16, d7, 1); dump();
srshr(d31, d7, 1); dump();
srshr(d7, d7, 1); dump();
srshr(d7, d0, 1); dump();
srshr(d7, d1, 1); dump();
srshr(d7, d2, 1); dump();
srshr(d7, d4, 1); dump();
srshr(d7, d8, 1); dump();
srshr(d7, d16, 1); dump();
srshr(d7, d31, 1); dump();
srshr(d7, d7, 1); dump();
srshr(d7, d7, 2); dump();
srshr(d7, d7, 4); dump();
srshr(d7, d7, 8); dump();
srshr(d7, d7, 16); dump();
srshr(d7, d7, 32); dump();
srshr(d7, d7, 64); dump();
srsra(d7, d7, 1); dump();
srsra(d0, d7, 1); dump();
srsra(d1, d7, 1); dump();
srsra(d2, d7, 1); dump();
srsra(d4, d7, 1); dump();
srsra(d8, d7, 1); dump();
srsra(d16, d7, 1); dump();
srsra(d31, d7, 1); dump();
srsra(d7, d7, 1); dump();
srsra(d7, d0, 1); dump();
srsra(d7, d1, 1); dump();
srsra(d7, d2, 1); dump();
srsra(d7, d4, 1); dump();
srsra(d7, d8, 1); dump();
srsra(d7, d16, 1); dump();
srsra(d7, d31, 1); dump();
srsra(d7, d7, 1); dump();
srsra(d7, d7, 2); dump();
srsra(d7, d7, 4); dump();
srsra(d7, d7, 8); dump();
srsra(d7, d7, 16); dump();
srsra(d7, d7, 32); dump();
srsra(d7, d7, 64); dump();
sshr(d7, d7, 1); dump();
sshr(d0, d7, 1); dump();
sshr(d1, d7, 1); dump();
sshr(d2, d7, 1); dump();
sshr(d4, d7, 1); dump();
sshr(d8, d7, 1); dump();
sshr(d16, d7, 1); dump();
sshr(d31, d7, 1); dump();
sshr(d7, d7, 1); dump();
sshr(d7, d0, 1); dump();
sshr(d7, d1, 1); dump();
sshr(d7, d2, 1); dump();
sshr(d7, d4, 1); dump();
sshr(d7, d8, 1); dump();
sshr(d7, d16, 1); dump();
sshr(d7, d31, 1); dump();
sshr(d7, d7, 1); dump();
sshr(d7, d7, 2); dump();
sshr(d7, d7, 4); dump();
sshr(d7, d7, 8); dump();
sshr(d7, d7, 16); dump();
sshr(d7, d7, 32); dump();
sshr(d7, d7, 64); dump();
ssra(d7, d7, 1); dump();
ssra(d0, d7, 1); dump();
ssra(d1, d7, 1); dump();
ssra(d2, d7, 1); dump();
ssra(d4, d7, 1); dump();
ssra(d8, d7, 1); dump();
ssra(d16, d7, 1); dump();
ssra(d31, d7, 1); dump();
ssra(d7, d7, 1); dump();
ssra(d7, d0, 1); dump();
ssra(d7, d1, 1); dump();
ssra(d7, d2, 1); dump();
ssra(d7, d4, 1); dump();
ssra(d7, d8, 1); dump();
ssra(d7, d16, 1); dump();
ssra(d7, d31, 1); dump();
ssra(d7, d7, 1); dump();
ssra(d7, d7, 2); dump();
ssra(d7, d7, 4); dump();
ssra(d7, d7, 8); dump();
ssra(d7, d7, 16); dump();
ssra(d7, d7, 32); dump();
ssra(d7, d7, 64); dump();
urshr(d7, d7, 1); dump();
urshr(d0, d7, 1); dump();
urshr(d1, d7, 1); dump();
urshr(d2, d7, 1); dump();
urshr(d4, d7, 1); dump();
urshr(d8, d7, 1); dump();
urshr(d16, d7, 1); dump();
urshr(d31, d7, 1); dump();
urshr(d7, d7, 1); dump();
urshr(d7, d0, 1); dump();
urshr(d7, d1, 1); dump();
urshr(d7, d2, 1); dump();
urshr(d7, d4, 1); dump();
urshr(d7, d8, 1); dump();
urshr(d7, d16, 1); dump();
urshr(d7, d31, 1); dump();
urshr(d7, d7, 1); dump();
urshr(d7, d7, 2); dump();
urshr(d7, d7, 4); dump();
urshr(d7, d7, 8); dump();
urshr(d7, d7, 16); dump();
urshr(d7, d7, 32); dump();
urshr(d7, d7, 64); dump();
ursra(d7, d7, 1); dump();
ursra(d0, d7, 1); dump();
ursra(d1, d7, 1); dump();
ursra(d2, d7, 1); dump();
ursra(d4, d7, 1); dump();
ursra(d8, d7, 1); dump();
ursra(d16, d7, 1); dump();
ursra(d31, d7, 1); dump();
ursra(d7, d7, 1); dump();
ursra(d7, d0, 1); dump();
ursra(d7, d1, 1); dump();
ursra(d7, d2, 1); dump();
ursra(d7, d4, 1); dump();
ursra(d7, d8, 1); dump();
ursra(d7, d16, 1); dump();
ursra(d7, d31, 1); dump();
ursra(d7, d7, 1); dump();
ursra(d7, d7, 2); dump();
ursra(d7, d7, 4); dump();
ursra(d7, d7, 8); dump();
ursra(d7, d7, 16); dump();
ursra(d7, d7, 32); dump();
ursra(d7, d7, 64); dump();
usra(d7, d7, 1); dump();
usra(d0, d7, 1); dump();
usra(d1, d7, 1); dump();
usra(d2, d7, 1); dump();
usra(d4, d7, 1); dump();
usra(d8, d7, 1); dump();
usra(d16, d7, 1); dump();
usra(d31, d7, 1); dump();
usra(d7, d7, 1); dump();
usra(d7, d0, 1); dump();
usra(d7, d1, 1); dump();
usra(d7, d2, 1); dump();
usra(d7, d4, 1); dump();
usra(d7, d8, 1); dump();
usra(d7, d16, 1); dump();
usra(d7, d31, 1); dump();
usra(d7, d7, 1); dump();
usra(d7, d7, 2); dump();
usra(d7, d7, 4); dump();
usra(d7, d7, 8); dump();
usra(d7, d7, 16); dump();
usra(d7, d7, 32); dump();
usra(d7, d7, 64); dump();
//DataProcSimd_ShiftImmediate11:1
sri(v7.b8, v7.b8, 1); dump();
sri(v0.b8, v7.b8, 1); dump();
sri(v1.b8, v7.b8, 1); dump();
sri(v2.b8, v7.b8, 1); dump();
sri(v4.b8, v7.b8, 1); dump();
sri(v8.b8, v7.b8, 1); dump();
sri(v16.b8, v7.b8, 1); dump();
sri(v31.b8, v7.b8, 1); dump();
sri(v7.b8, v7.b8, 1); dump();
sri(v7.b8, v0.b8, 1); dump();
sri(v7.b8, v1.b8, 1); dump();
sri(v7.b8, v2.b8, 1); dump();
sri(v7.b8, v4.b8, 1); dump();
sri(v7.b8, v8.b8, 1); dump();
sri(v7.b8, v16.b8, 1); dump();
sri(v7.b8, v31.b8, 1); dump();
sri(v7.b8, v7.b8, 1); dump();
sri(v7.b8, v7.b8, 2); dump();
sri(v7.b8, v7.b8, 4); dump();
sri(v7.b8, v7.b8, 8); dump();
srshr(v7.b8, v7.b8, 1); dump();
srshr(v0.b8, v7.b8, 1); dump();
srshr(v1.b8, v7.b8, 1); dump();
srshr(v2.b8, v7.b8, 1); dump();
srshr(v4.b8, v7.b8, 1); dump();
srshr(v8.b8, v7.b8, 1); dump();
srshr(v16.b8, v7.b8, 1); dump();
srshr(v31.b8, v7.b8, 1); dump();
srshr(v7.b8, v7.b8, 1); dump();
srshr(v7.b8, v0.b8, 1); dump();
srshr(v7.b8, v1.b8, 1); dump();
srshr(v7.b8, v2.b8, 1); dump();
srshr(v7.b8, v4.b8, 1); dump();
srshr(v7.b8, v8.b8, 1); dump();
srshr(v7.b8, v16.b8, 1); dump();
srshr(v7.b8, v31.b8, 1); dump();
srshr(v7.b8, v7.b8, 1); dump();
srshr(v7.b8, v7.b8, 2); dump();
srshr(v7.b8, v7.b8, 4); dump();
srshr(v7.b8, v7.b8, 8); dump();
srsra(v7.b8, v7.b8, 1); dump();
srsra(v0.b8, v7.b8, 1); dump();
srsra(v1.b8, v7.b8, 1); dump();
srsra(v2.b8, v7.b8, 1); dump();
srsra(v4.b8, v7.b8, 1); dump();
srsra(v8.b8, v7.b8, 1); dump();
srsra(v16.b8, v7.b8, 1); dump();
srsra(v31.b8, v7.b8, 1); dump();
srsra(v7.b8, v7.b8, 1); dump();
srsra(v7.b8, v0.b8, 1); dump();
srsra(v7.b8, v1.b8, 1); dump();
srsra(v7.b8, v2.b8, 1); dump();
srsra(v7.b8, v4.b8, 1); dump();
srsra(v7.b8, v8.b8, 1); dump();
srsra(v7.b8, v16.b8, 1); dump();
srsra(v7.b8, v31.b8, 1); dump();
srsra(v7.b8, v7.b8, 1); dump();
srsra(v7.b8, v7.b8, 2); dump();
srsra(v7.b8, v7.b8, 4); dump();
srsra(v7.b8, v7.b8, 8); dump();
sshr(v7.b8, v7.b8, 1); dump();
sshr(v0.b8, v7.b8, 1); dump();
sshr(v1.b8, v7.b8, 1); dump();
sshr(v2.b8, v7.b8, 1); dump();
sshr(v4.b8, v7.b8, 1); dump();
sshr(v8.b8, v7.b8, 1); dump();
sshr(v16.b8, v7.b8, 1); dump();
sshr(v31.b8, v7.b8, 1); dump();
sshr(v7.b8, v7.b8, 1); dump();
sshr(v7.b8, v0.b8, 1); dump();
sshr(v7.b8, v1.b8, 1); dump();
sshr(v7.b8, v2.b8, 1); dump();
sshr(v7.b8, v4.b8, 1); dump();
sshr(v7.b8, v8.b8, 1); dump();
sshr(v7.b8, v16.b8, 1); dump();
sshr(v7.b8, v31.b8, 1); dump();
sshr(v7.b8, v7.b8, 1); dump();
sshr(v7.b8, v7.b8, 2); dump();
sshr(v7.b8, v7.b8, 4); dump();
sshr(v7.b8, v7.b8, 8); dump();
ssra(v7.b8, v7.b8, 1); dump();
ssra(v0.b8, v7.b8, 1); dump();
ssra(v1.b8, v7.b8, 1); dump();
ssra(v2.b8, v7.b8, 1); dump();
ssra(v4.b8, v7.b8, 1); dump();
ssra(v8.b8, v7.b8, 1); dump();
ssra(v16.b8, v7.b8, 1); dump();
ssra(v31.b8, v7.b8, 1); dump();
ssra(v7.b8, v7.b8, 1); dump();
ssra(v7.b8, v0.b8, 1); dump();
ssra(v7.b8, v1.b8, 1); dump();
ssra(v7.b8, v2.b8, 1); dump();
ssra(v7.b8, v4.b8, 1); dump();
ssra(v7.b8, v8.b8, 1); dump();
ssra(v7.b8, v16.b8, 1); dump();
ssra(v7.b8, v31.b8, 1); dump();
ssra(v7.b8, v7.b8, 1); dump();
ssra(v7.b8, v7.b8, 2); dump();
ssra(v7.b8, v7.b8, 4); dump();
ssra(v7.b8, v7.b8, 8); dump();
urshr(v7.b8, v7.b8, 1); dump();
urshr(v0.b8, v7.b8, 1); dump();
urshr(v1.b8, v7.b8, 1); dump();
urshr(v2.b8, v7.b8, 1); dump();
urshr(v4.b8, v7.b8, 1); dump();
urshr(v8.b8, v7.b8, 1); dump();
urshr(v16.b8, v7.b8, 1); dump();
urshr(v31.b8, v7.b8, 1); dump();
urshr(v7.b8, v7.b8, 1); dump();
urshr(v7.b8, v0.b8, 1); dump();
urshr(v7.b8, v1.b8, 1); dump();
urshr(v7.b8, v2.b8, 1); dump();
urshr(v7.b8, v4.b8, 1); dump();
urshr(v7.b8, v8.b8, 1); dump();
urshr(v7.b8, v16.b8, 1); dump();
urshr(v7.b8, v31.b8, 1); dump();
urshr(v7.b8, v7.b8, 1); dump();
urshr(v7.b8, v7.b8, 2); dump();
urshr(v7.b8, v7.b8, 4); dump();
urshr(v7.b8, v7.b8, 8); dump();
ursra(v7.b8, v7.b8, 1); dump();
ursra(v0.b8, v7.b8, 1); dump();
ursra(v1.b8, v7.b8, 1); dump();
ursra(v2.b8, v7.b8, 1); dump();
ursra(v4.b8, v7.b8, 1); dump();
ursra(v8.b8, v7.b8, 1); dump();
ursra(v16.b8, v7.b8, 1); dump();
ursra(v31.b8, v7.b8, 1); dump();
ursra(v7.b8, v7.b8, 1); dump();
ursra(v7.b8, v0.b8, 1); dump();
ursra(v7.b8, v1.b8, 1); dump();
ursra(v7.b8, v2.b8, 1); dump();
ursra(v7.b8, v4.b8, 1); dump();
ursra(v7.b8, v8.b8, 1); dump();
ursra(v7.b8, v16.b8, 1); dump();
ursra(v7.b8, v31.b8, 1); dump();
ursra(v7.b8, v7.b8, 1); dump();
ursra(v7.b8, v7.b8, 2); dump();
ursra(v7.b8, v7.b8, 4); dump();
ursra(v7.b8, v7.b8, 8); dump();
usra(v7.b8, v7.b8, 1); dump();
usra(v0.b8, v7.b8, 1); dump();
usra(v1.b8, v7.b8, 1); dump();
usra(v2.b8, v7.b8, 1); dump();
usra(v4.b8, v7.b8, 1); dump();
usra(v8.b8, v7.b8, 1); dump();
usra(v16.b8, v7.b8, 1); dump();
usra(v31.b8, v7.b8, 1); dump();
usra(v7.b8, v7.b8, 1); dump();
usra(v7.b8, v0.b8, 1); dump();
usra(v7.b8, v1.b8, 1); dump();
usra(v7.b8, v2.b8, 1); dump();
usra(v7.b8, v4.b8, 1); dump();
usra(v7.b8, v8.b8, 1); dump();
usra(v7.b8, v16.b8, 1); dump();
usra(v7.b8, v31.b8, 1); dump();
usra(v7.b8, v7.b8, 1); dump();
usra(v7.b8, v7.b8, 2); dump();
usra(v7.b8, v7.b8, 4); dump();
usra(v7.b8, v7.b8, 8); dump();
//DataProcSimd_ShiftImmediate11:2
sri(v7.b16, v7.b16, 1); dump();
sri(v0.b16, v7.b16, 1); dump();
sri(v1.b16, v7.b16, 1); dump();
sri(v2.b16, v7.b16, 1); dump();
sri(v4.b16, v7.b16, 1); dump();
sri(v8.b16, v7.b16, 1); dump();
sri(v16.b16, v7.b16, 1); dump();
sri(v31.b16, v7.b16, 1); dump();
sri(v7.b16, v7.b16, 1); dump();
sri(v7.b16, v0.b16, 1); dump();
sri(v7.b16, v1.b16, 1); dump();
sri(v7.b16, v2.b16, 1); dump();
sri(v7.b16, v4.b16, 1); dump();
sri(v7.b16, v8.b16, 1); dump();
sri(v7.b16, v16.b16, 1); dump();
sri(v7.b16, v31.b16, 1); dump();
sri(v7.b16, v7.b16, 1); dump();
sri(v7.b16, v7.b16, 2); dump();
sri(v7.b16, v7.b16, 4); dump();
sri(v7.b16, v7.b16, 8); dump();
srshr(v7.b16, v7.b16, 1); dump();
srshr(v0.b16, v7.b16, 1); dump();
srshr(v1.b16, v7.b16, 1); dump();
srshr(v2.b16, v7.b16, 1); dump();
srshr(v4.b16, v7.b16, 1); dump();
srshr(v8.b16, v7.b16, 1); dump();
srshr(v16.b16, v7.b16, 1); dump();
srshr(v31.b16, v7.b16, 1); dump();
srshr(v7.b16, v7.b16, 1); dump();
srshr(v7.b16, v0.b16, 1); dump();
srshr(v7.b16, v1.b16, 1); dump();
srshr(v7.b16, v2.b16, 1); dump();
srshr(v7.b16, v4.b16, 1); dump();
srshr(v7.b16, v8.b16, 1); dump();
srshr(v7.b16, v16.b16, 1); dump();
srshr(v7.b16, v31.b16, 1); dump();
srshr(v7.b16, v7.b16, 1); dump();
srshr(v7.b16, v7.b16, 2); dump();
srshr(v7.b16, v7.b16, 4); dump();
srshr(v7.b16, v7.b16, 8); dump();
srsra(v7.b16, v7.b16, 1); dump();
srsra(v0.b16, v7.b16, 1); dump();
srsra(v1.b16, v7.b16, 1); dump();
srsra(v2.b16, v7.b16, 1); dump();
srsra(v4.b16, v7.b16, 1); dump();
srsra(v8.b16, v7.b16, 1); dump();
srsra(v16.b16, v7.b16, 1); dump();
srsra(v31.b16, v7.b16, 1); dump();
srsra(v7.b16, v7.b16, 1); dump();
srsra(v7.b16, v0.b16, 1); dump();
srsra(v7.b16, v1.b16, 1); dump();
srsra(v7.b16, v2.b16, 1); dump();
srsra(v7.b16, v4.b16, 1); dump();
srsra(v7.b16, v8.b16, 1); dump();
srsra(v7.b16, v16.b16, 1); dump();
srsra(v7.b16, v31.b16, 1); dump();
srsra(v7.b16, v7.b16, 1); dump();
srsra(v7.b16, v7.b16, 2); dump();
srsra(v7.b16, v7.b16, 4); dump();
srsra(v7.b16, v7.b16, 8); dump();
sshr(v7.b16, v7.b16, 1); dump();
sshr(v0.b16, v7.b16, 1); dump();
sshr(v1.b16, v7.b16, 1); dump();
sshr(v2.b16, v7.b16, 1); dump();
sshr(v4.b16, v7.b16, 1); dump();
sshr(v8.b16, v7.b16, 1); dump();
sshr(v16.b16, v7.b16, 1); dump();
sshr(v31.b16, v7.b16, 1); dump();
sshr(v7.b16, v7.b16, 1); dump();
sshr(v7.b16, v0.b16, 1); dump();
sshr(v7.b16, v1.b16, 1); dump();
sshr(v7.b16, v2.b16, 1); dump();
sshr(v7.b16, v4.b16, 1); dump();
sshr(v7.b16, v8.b16, 1); dump();
sshr(v7.b16, v16.b16, 1); dump();
sshr(v7.b16, v31.b16, 1); dump();
sshr(v7.b16, v7.b16, 1); dump();
sshr(v7.b16, v7.b16, 2); dump();
sshr(v7.b16, v7.b16, 4); dump();
sshr(v7.b16, v7.b16, 8); dump();
ssra(v7.b16, v7.b16, 1); dump();
ssra(v0.b16, v7.b16, 1); dump();
ssra(v1.b16, v7.b16, 1); dump();
ssra(v2.b16, v7.b16, 1); dump();
ssra(v4.b16, v7.b16, 1); dump();
ssra(v8.b16, v7.b16, 1); dump();
ssra(v16.b16, v7.b16, 1); dump();
ssra(v31.b16, v7.b16, 1); dump();
ssra(v7.b16, v7.b16, 1); dump();
ssra(v7.b16, v0.b16, 1); dump();
ssra(v7.b16, v1.b16, 1); dump();
ssra(v7.b16, v2.b16, 1); dump();
ssra(v7.b16, v4.b16, 1); dump();
ssra(v7.b16, v8.b16, 1); dump();
ssra(v7.b16, v16.b16, 1); dump();
ssra(v7.b16, v31.b16, 1); dump();
ssra(v7.b16, v7.b16, 1); dump();
ssra(v7.b16, v7.b16, 2); dump();
ssra(v7.b16, v7.b16, 4); dump();
ssra(v7.b16, v7.b16, 8); dump();
urshr(v7.b16, v7.b16, 1); dump();
urshr(v0.b16, v7.b16, 1); dump();
urshr(v1.b16, v7.b16, 1); dump();
urshr(v2.b16, v7.b16, 1); dump();
urshr(v4.b16, v7.b16, 1); dump();
urshr(v8.b16, v7.b16, 1); dump();
urshr(v16.b16, v7.b16, 1); dump();
urshr(v31.b16, v7.b16, 1); dump();
urshr(v7.b16, v7.b16, 1); dump();
urshr(v7.b16, v0.b16, 1); dump();
urshr(v7.b16, v1.b16, 1); dump();
urshr(v7.b16, v2.b16, 1); dump();
urshr(v7.b16, v4.b16, 1); dump();
urshr(v7.b16, v8.b16, 1); dump();
urshr(v7.b16, v16.b16, 1); dump();
urshr(v7.b16, v31.b16, 1); dump();
urshr(v7.b16, v7.b16, 1); dump();
urshr(v7.b16, v7.b16, 2); dump();
urshr(v7.b16, v7.b16, 4); dump();
urshr(v7.b16, v7.b16, 8); dump();
ursra(v7.b16, v7.b16, 1); dump();
ursra(v0.b16, v7.b16, 1); dump();
ursra(v1.b16, v7.b16, 1); dump();
ursra(v2.b16, v7.b16, 1); dump();
ursra(v4.b16, v7.b16, 1); dump();
ursra(v8.b16, v7.b16, 1); dump();
ursra(v16.b16, v7.b16, 1); dump();
ursra(v31.b16, v7.b16, 1); dump();
ursra(v7.b16, v7.b16, 1); dump();
ursra(v7.b16, v0.b16, 1); dump();
ursra(v7.b16, v1.b16, 1); dump();
ursra(v7.b16, v2.b16, 1); dump();
ursra(v7.b16, v4.b16, 1); dump();
ursra(v7.b16, v8.b16, 1); dump();
ursra(v7.b16, v16.b16, 1); dump();
ursra(v7.b16, v31.b16, 1); dump();
ursra(v7.b16, v7.b16, 1); dump();
ursra(v7.b16, v7.b16, 2); dump();
ursra(v7.b16, v7.b16, 4); dump();
ursra(v7.b16, v7.b16, 8); dump();
usra(v7.b16, v7.b16, 1); dump();
usra(v0.b16, v7.b16, 1); dump();
usra(v1.b16, v7.b16, 1); dump();
usra(v2.b16, v7.b16, 1); dump();
usra(v4.b16, v7.b16, 1); dump();
usra(v8.b16, v7.b16, 1); dump();
usra(v16.b16, v7.b16, 1); dump();
usra(v31.b16, v7.b16, 1); dump();
usra(v7.b16, v7.b16, 1); dump();
usra(v7.b16, v0.b16, 1); dump();
usra(v7.b16, v1.b16, 1); dump();
usra(v7.b16, v2.b16, 1); dump();
usra(v7.b16, v4.b16, 1); dump();
usra(v7.b16, v8.b16, 1); dump();
usra(v7.b16, v16.b16, 1); dump();
usra(v7.b16, v31.b16, 1); dump();
usra(v7.b16, v7.b16, 1); dump();
usra(v7.b16, v7.b16, 2); dump();
usra(v7.b16, v7.b16, 4); dump();
usra(v7.b16, v7.b16, 8); dump();
//DataProcSimd_ShiftImmediate11:3
sri(v7.h4, v7.h4, 1); dump();
sri(v0.h4, v7.h4, 1); dump();
sri(v1.h4, v7.h4, 1); dump();
sri(v2.h4, v7.h4, 1); dump();
sri(v4.h4, v7.h4, 1); dump();
sri(v8.h4, v7.h4, 1); dump();
sri(v16.h4, v7.h4, 1); dump();
sri(v31.h4, v7.h4, 1); dump();
sri(v7.h4, v7.h4, 1); dump();
sri(v7.h4, v0.h4, 1); dump();
sri(v7.h4, v1.h4, 1); dump();
sri(v7.h4, v2.h4, 1); dump();
sri(v7.h4, v4.h4, 1); dump();
sri(v7.h4, v8.h4, 1); dump();
sri(v7.h4, v16.h4, 1); dump();
sri(v7.h4, v31.h4, 1); dump();
sri(v7.h4, v7.h4, 1); dump();
sri(v7.h4, v7.h4, 2); dump();
sri(v7.h4, v7.h4, 4); dump();
sri(v7.h4, v7.h4, 8); dump();
sri(v7.h4, v7.h4, 16); dump();
srshr(v7.h4, v7.h4, 1); dump();
srshr(v0.h4, v7.h4, 1); dump();
srshr(v1.h4, v7.h4, 1); dump();
srshr(v2.h4, v7.h4, 1); dump();
srshr(v4.h4, v7.h4, 1); dump();
srshr(v8.h4, v7.h4, 1); dump();
srshr(v16.h4, v7.h4, 1); dump();
srshr(v31.h4, v7.h4, 1); dump();
srshr(v7.h4, v7.h4, 1); dump();
srshr(v7.h4, v0.h4, 1); dump();
srshr(v7.h4, v1.h4, 1); dump();
srshr(v7.h4, v2.h4, 1); dump();
srshr(v7.h4, v4.h4, 1); dump();
srshr(v7.h4, v8.h4, 1); dump();
srshr(v7.h4, v16.h4, 1); dump();
srshr(v7.h4, v31.h4, 1); dump();
srshr(v7.h4, v7.h4, 1); dump();
srshr(v7.h4, v7.h4, 2); dump();
srshr(v7.h4, v7.h4, 4); dump();
srshr(v7.h4, v7.h4, 8); dump();
srshr(v7.h4, v7.h4, 16); dump();
srsra(v7.h4, v7.h4, 1); dump();
srsra(v0.h4, v7.h4, 1); dump();
srsra(v1.h4, v7.h4, 1); dump();
srsra(v2.h4, v7.h4, 1); dump();
srsra(v4.h4, v7.h4, 1); dump();
srsra(v8.h4, v7.h4, 1); dump();
srsra(v16.h4, v7.h4, 1); dump();
srsra(v31.h4, v7.h4, 1); dump();
srsra(v7.h4, v7.h4, 1); dump();
srsra(v7.h4, v0.h4, 1); dump();
srsra(v7.h4, v1.h4, 1); dump();
srsra(v7.h4, v2.h4, 1); dump();
srsra(v7.h4, v4.h4, 1); dump();
srsra(v7.h4, v8.h4, 1); dump();
srsra(v7.h4, v16.h4, 1); dump();
srsra(v7.h4, v31.h4, 1); dump();
srsra(v7.h4, v7.h4, 1); dump();
srsra(v7.h4, v7.h4, 2); dump();
srsra(v7.h4, v7.h4, 4); dump();
srsra(v7.h4, v7.h4, 8); dump();
srsra(v7.h4, v7.h4, 16); dump();
sshr(v7.h4, v7.h4, 1); dump();
sshr(v0.h4, v7.h4, 1); dump();
sshr(v1.h4, v7.h4, 1); dump();
sshr(v2.h4, v7.h4, 1); dump();
sshr(v4.h4, v7.h4, 1); dump();
sshr(v8.h4, v7.h4, 1); dump();
sshr(v16.h4, v7.h4, 1); dump();
sshr(v31.h4, v7.h4, 1); dump();
sshr(v7.h4, v7.h4, 1); dump();
sshr(v7.h4, v0.h4, 1); dump();
sshr(v7.h4, v1.h4, 1); dump();
sshr(v7.h4, v2.h4, 1); dump();
sshr(v7.h4, v4.h4, 1); dump();
sshr(v7.h4, v8.h4, 1); dump();
sshr(v7.h4, v16.h4, 1); dump();
sshr(v7.h4, v31.h4, 1); dump();
sshr(v7.h4, v7.h4, 1); dump();
sshr(v7.h4, v7.h4, 2); dump();
sshr(v7.h4, v7.h4, 4); dump();
sshr(v7.h4, v7.h4, 8); dump();
sshr(v7.h4, v7.h4, 16); dump();
ssra(v7.h4, v7.h4, 1); dump();
ssra(v0.h4, v7.h4, 1); dump();
ssra(v1.h4, v7.h4, 1); dump();
ssra(v2.h4, v7.h4, 1); dump();
ssra(v4.h4, v7.h4, 1); dump();
ssra(v8.h4, v7.h4, 1); dump();
ssra(v16.h4, v7.h4, 1); dump();
ssra(v31.h4, v7.h4, 1); dump();
ssra(v7.h4, v7.h4, 1); dump();
ssra(v7.h4, v0.h4, 1); dump();
ssra(v7.h4, v1.h4, 1); dump();
ssra(v7.h4, v2.h4, 1); dump();
ssra(v7.h4, v4.h4, 1); dump();
ssra(v7.h4, v8.h4, 1); dump();
ssra(v7.h4, v16.h4, 1); dump();
ssra(v7.h4, v31.h4, 1); dump();
ssra(v7.h4, v7.h4, 1); dump();
ssra(v7.h4, v7.h4, 2); dump();
ssra(v7.h4, v7.h4, 4); dump();
ssra(v7.h4, v7.h4, 8); dump();
ssra(v7.h4, v7.h4, 16); dump();
urshr(v7.h4, v7.h4, 1); dump();
urshr(v0.h4, v7.h4, 1); dump();
urshr(v1.h4, v7.h4, 1); dump();
urshr(v2.h4, v7.h4, 1); dump();
urshr(v4.h4, v7.h4, 1); dump();
urshr(v8.h4, v7.h4, 1); dump();
urshr(v16.h4, v7.h4, 1); dump();
urshr(v31.h4, v7.h4, 1); dump();
urshr(v7.h4, v7.h4, 1); dump();
urshr(v7.h4, v0.h4, 1); dump();
urshr(v7.h4, v1.h4, 1); dump();
urshr(v7.h4, v2.h4, 1); dump();
urshr(v7.h4, v4.h4, 1); dump();
urshr(v7.h4, v8.h4, 1); dump();
urshr(v7.h4, v16.h4, 1); dump();
urshr(v7.h4, v31.h4, 1); dump();
urshr(v7.h4, v7.h4, 1); dump();
urshr(v7.h4, v7.h4, 2); dump();
urshr(v7.h4, v7.h4, 4); dump();
urshr(v7.h4, v7.h4, 8); dump();
urshr(v7.h4, v7.h4, 16); dump();
ursra(v7.h4, v7.h4, 1); dump();
ursra(v0.h4, v7.h4, 1); dump();
ursra(v1.h4, v7.h4, 1); dump();
ursra(v2.h4, v7.h4, 1); dump();
ursra(v4.h4, v7.h4, 1); dump();
ursra(v8.h4, v7.h4, 1); dump();
ursra(v16.h4, v7.h4, 1); dump();
ursra(v31.h4, v7.h4, 1); dump();
ursra(v7.h4, v7.h4, 1); dump();
ursra(v7.h4, v0.h4, 1); dump();
ursra(v7.h4, v1.h4, 1); dump();
ursra(v7.h4, v2.h4, 1); dump();
ursra(v7.h4, v4.h4, 1); dump();
ursra(v7.h4, v8.h4, 1); dump();
ursra(v7.h4, v16.h4, 1); dump();
ursra(v7.h4, v31.h4, 1); dump();
ursra(v7.h4, v7.h4, 1); dump();
ursra(v7.h4, v7.h4, 2); dump();
ursra(v7.h4, v7.h4, 4); dump();
ursra(v7.h4, v7.h4, 8); dump();
ursra(v7.h4, v7.h4, 16); dump();
usra(v7.h4, v7.h4, 1); dump();
usra(v0.h4, v7.h4, 1); dump();
usra(v1.h4, v7.h4, 1); dump();
usra(v2.h4, v7.h4, 1); dump();
usra(v4.h4, v7.h4, 1); dump();
usra(v8.h4, v7.h4, 1); dump();
usra(v16.h4, v7.h4, 1); dump();
usra(v31.h4, v7.h4, 1); dump();
usra(v7.h4, v7.h4, 1); dump();
usra(v7.h4, v0.h4, 1); dump();
usra(v7.h4, v1.h4, 1); dump();
usra(v7.h4, v2.h4, 1); dump();
usra(v7.h4, v4.h4, 1); dump();
usra(v7.h4, v8.h4, 1); dump();
usra(v7.h4, v16.h4, 1); dump();
usra(v7.h4, v31.h4, 1); dump();
usra(v7.h4, v7.h4, 1); dump();
usra(v7.h4, v7.h4, 2); dump();
usra(v7.h4, v7.h4, 4); dump();
usra(v7.h4, v7.h4, 8); dump();
usra(v7.h4, v7.h4, 16); dump();
//DataProcSimd_ShiftImmediate11:4
sri(v7.h8, v7.h8, 1); dump();
sri(v0.h8, v7.h8, 1); dump();
sri(v1.h8, v7.h8, 1); dump();
sri(v2.h8, v7.h8, 1); dump();
sri(v4.h8, v7.h8, 1); dump();
sri(v8.h8, v7.h8, 1); dump();
sri(v16.h8, v7.h8, 1); dump();
sri(v31.h8, v7.h8, 1); dump();
sri(v7.h8, v7.h8, 1); dump();
sri(v7.h8, v0.h8, 1); dump();
sri(v7.h8, v1.h8, 1); dump();
sri(v7.h8, v2.h8, 1); dump();
sri(v7.h8, v4.h8, 1); dump();
sri(v7.h8, v8.h8, 1); dump();
sri(v7.h8, v16.h8, 1); dump();
sri(v7.h8, v31.h8, 1); dump();
sri(v7.h8, v7.h8, 1); dump();
sri(v7.h8, v7.h8, 2); dump();
sri(v7.h8, v7.h8, 4); dump();
sri(v7.h8, v7.h8, 8); dump();
sri(v7.h8, v7.h8, 16); dump();
srshr(v7.h8, v7.h8, 1); dump();
srshr(v0.h8, v7.h8, 1); dump();
srshr(v1.h8, v7.h8, 1); dump();
srshr(v2.h8, v7.h8, 1); dump();
srshr(v4.h8, v7.h8, 1); dump();
srshr(v8.h8, v7.h8, 1); dump();
srshr(v16.h8, v7.h8, 1); dump();
srshr(v31.h8, v7.h8, 1); dump();
srshr(v7.h8, v7.h8, 1); dump();
srshr(v7.h8, v0.h8, 1); dump();
srshr(v7.h8, v1.h8, 1); dump();
srshr(v7.h8, v2.h8, 1); dump();
srshr(v7.h8, v4.h8, 1); dump();
srshr(v7.h8, v8.h8, 1); dump();
srshr(v7.h8, v16.h8, 1); dump();
srshr(v7.h8, v31.h8, 1); dump();
srshr(v7.h8, v7.h8, 1); dump();
srshr(v7.h8, v7.h8, 2); dump();
srshr(v7.h8, v7.h8, 4); dump();
srshr(v7.h8, v7.h8, 8); dump();
srshr(v7.h8, v7.h8, 16); dump();
srsra(v7.h8, v7.h8, 1); dump();
srsra(v0.h8, v7.h8, 1); dump();
srsra(v1.h8, v7.h8, 1); dump();
srsra(v2.h8, v7.h8, 1); dump();
srsra(v4.h8, v7.h8, 1); dump();
srsra(v8.h8, v7.h8, 1); dump();
srsra(v16.h8, v7.h8, 1); dump();
srsra(v31.h8, v7.h8, 1); dump();
srsra(v7.h8, v7.h8, 1); dump();
srsra(v7.h8, v0.h8, 1); dump();
srsra(v7.h8, v1.h8, 1); dump();
srsra(v7.h8, v2.h8, 1); dump();
srsra(v7.h8, v4.h8, 1); dump();
srsra(v7.h8, v8.h8, 1); dump();
srsra(v7.h8, v16.h8, 1); dump();
srsra(v7.h8, v31.h8, 1); dump();
srsra(v7.h8, v7.h8, 1); dump();
srsra(v7.h8, v7.h8, 2); dump();
srsra(v7.h8, v7.h8, 4); dump();
srsra(v7.h8, v7.h8, 8); dump();
srsra(v7.h8, v7.h8, 16); dump();
sshr(v7.h8, v7.h8, 1); dump();
sshr(v0.h8, v7.h8, 1); dump();
sshr(v1.h8, v7.h8, 1); dump();
sshr(v2.h8, v7.h8, 1); dump();
sshr(v4.h8, v7.h8, 1); dump();
sshr(v8.h8, v7.h8, 1); dump();
sshr(v16.h8, v7.h8, 1); dump();
sshr(v31.h8, v7.h8, 1); dump();
sshr(v7.h8, v7.h8, 1); dump();
sshr(v7.h8, v0.h8, 1); dump();
sshr(v7.h8, v1.h8, 1); dump();
sshr(v7.h8, v2.h8, 1); dump();
sshr(v7.h8, v4.h8, 1); dump();
sshr(v7.h8, v8.h8, 1); dump();
sshr(v7.h8, v16.h8, 1); dump();
sshr(v7.h8, v31.h8, 1); dump();
sshr(v7.h8, v7.h8, 1); dump();
sshr(v7.h8, v7.h8, 2); dump();
sshr(v7.h8, v7.h8, 4); dump();
sshr(v7.h8, v7.h8, 8); dump();
sshr(v7.h8, v7.h8, 16); dump();
ssra(v7.h8, v7.h8, 1); dump();
ssra(v0.h8, v7.h8, 1); dump();
ssra(v1.h8, v7.h8, 1); dump();
ssra(v2.h8, v7.h8, 1); dump();
ssra(v4.h8, v7.h8, 1); dump();
ssra(v8.h8, v7.h8, 1); dump();
ssra(v16.h8, v7.h8, 1); dump();
ssra(v31.h8, v7.h8, 1); dump();
ssra(v7.h8, v7.h8, 1); dump();
ssra(v7.h8, v0.h8, 1); dump();
ssra(v7.h8, v1.h8, 1); dump();
ssra(v7.h8, v2.h8, 1); dump();
ssra(v7.h8, v4.h8, 1); dump();
ssra(v7.h8, v8.h8, 1); dump();
ssra(v7.h8, v16.h8, 1); dump();
ssra(v7.h8, v31.h8, 1); dump();
ssra(v7.h8, v7.h8, 1); dump();
ssra(v7.h8, v7.h8, 2); dump();
ssra(v7.h8, v7.h8, 4); dump();
ssra(v7.h8, v7.h8, 8); dump();
ssra(v7.h8, v7.h8, 16); dump();
urshr(v7.h8, v7.h8, 1); dump();
urshr(v0.h8, v7.h8, 1); dump();
urshr(v1.h8, v7.h8, 1); dump();
urshr(v2.h8, v7.h8, 1); dump();
urshr(v4.h8, v7.h8, 1); dump();
urshr(v8.h8, v7.h8, 1); dump();
urshr(v16.h8, v7.h8, 1); dump();
urshr(v31.h8, v7.h8, 1); dump();
urshr(v7.h8, v7.h8, 1); dump();
urshr(v7.h8, v0.h8, 1); dump();
urshr(v7.h8, v1.h8, 1); dump();
urshr(v7.h8, v2.h8, 1); dump();
urshr(v7.h8, v4.h8, 1); dump();
urshr(v7.h8, v8.h8, 1); dump();
urshr(v7.h8, v16.h8, 1); dump();
urshr(v7.h8, v31.h8, 1); dump();
urshr(v7.h8, v7.h8, 1); dump();
urshr(v7.h8, v7.h8, 2); dump();
urshr(v7.h8, v7.h8, 4); dump();
urshr(v7.h8, v7.h8, 8); dump();
urshr(v7.h8, v7.h8, 16); dump();
ursra(v7.h8, v7.h8, 1); dump();
ursra(v0.h8, v7.h8, 1); dump();
ursra(v1.h8, v7.h8, 1); dump();
ursra(v2.h8, v7.h8, 1); dump();
ursra(v4.h8, v7.h8, 1); dump();
ursra(v8.h8, v7.h8, 1); dump();
ursra(v16.h8, v7.h8, 1); dump();
ursra(v31.h8, v7.h8, 1); dump();
ursra(v7.h8, v7.h8, 1); dump();
ursra(v7.h8, v0.h8, 1); dump();
ursra(v7.h8, v1.h8, 1); dump();
ursra(v7.h8, v2.h8, 1); dump();
ursra(v7.h8, v4.h8, 1); dump();
ursra(v7.h8, v8.h8, 1); dump();
ursra(v7.h8, v16.h8, 1); dump();
ursra(v7.h8, v31.h8, 1); dump();
ursra(v7.h8, v7.h8, 1); dump();
ursra(v7.h8, v7.h8, 2); dump();
ursra(v7.h8, v7.h8, 4); dump();
ursra(v7.h8, v7.h8, 8); dump();
ursra(v7.h8, v7.h8, 16); dump();
usra(v7.h8, v7.h8, 1); dump();
usra(v0.h8, v7.h8, 1); dump();
usra(v1.h8, v7.h8, 1); dump();
usra(v2.h8, v7.h8, 1); dump();
usra(v4.h8, v7.h8, 1); dump();
usra(v8.h8, v7.h8, 1); dump();
usra(v16.h8, v7.h8, 1); dump();
usra(v31.h8, v7.h8, 1); dump();
usra(v7.h8, v7.h8, 1); dump();
usra(v7.h8, v0.h8, 1); dump();
usra(v7.h8, v1.h8, 1); dump();
usra(v7.h8, v2.h8, 1); dump();
usra(v7.h8, v4.h8, 1); dump();
usra(v7.h8, v8.h8, 1); dump();
usra(v7.h8, v16.h8, 1); dump();
usra(v7.h8, v31.h8, 1); dump();
usra(v7.h8, v7.h8, 1); dump();
usra(v7.h8, v7.h8, 2); dump();
usra(v7.h8, v7.h8, 4); dump();
usra(v7.h8, v7.h8, 8); dump();
usra(v7.h8, v7.h8, 16); dump();
//DataProcSimd_ShiftImmediate11:5
sri(v7.s2, v7.s2, 1); dump();
sri(v0.s2, v7.s2, 1); dump();
sri(v1.s2, v7.s2, 1); dump();
sri(v2.s2, v7.s2, 1); dump();
sri(v4.s2, v7.s2, 1); dump();
sri(v8.s2, v7.s2, 1); dump();
sri(v16.s2, v7.s2, 1); dump();
sri(v31.s2, v7.s2, 1); dump();
sri(v7.s2, v7.s2, 1); dump();
sri(v7.s2, v0.s2, 1); dump();
sri(v7.s2, v1.s2, 1); dump();
sri(v7.s2, v2.s2, 1); dump();
sri(v7.s2, v4.s2, 1); dump();
sri(v7.s2, v8.s2, 1); dump();
sri(v7.s2, v16.s2, 1); dump();
sri(v7.s2, v31.s2, 1); dump();
sri(v7.s2, v7.s2, 1); dump();
sri(v7.s2, v7.s2, 2); dump();
sri(v7.s2, v7.s2, 4); dump();
sri(v7.s2, v7.s2, 8); dump();
sri(v7.s2, v7.s2, 16); dump();
sri(v7.s2, v7.s2, 32); dump();
srshr(v7.s2, v7.s2, 1); dump();
srshr(v0.s2, v7.s2, 1); dump();
srshr(v1.s2, v7.s2, 1); dump();
srshr(v2.s2, v7.s2, 1); dump();
srshr(v4.s2, v7.s2, 1); dump();
srshr(v8.s2, v7.s2, 1); dump();
srshr(v16.s2, v7.s2, 1); dump();
srshr(v31.s2, v7.s2, 1); dump();
srshr(v7.s2, v7.s2, 1); dump();
srshr(v7.s2, v0.s2, 1); dump();
srshr(v7.s2, v1.s2, 1); dump();
srshr(v7.s2, v2.s2, 1); dump();
srshr(v7.s2, v4.s2, 1); dump();
srshr(v7.s2, v8.s2, 1); dump();
srshr(v7.s2, v16.s2, 1); dump();
srshr(v7.s2, v31.s2, 1); dump();
srshr(v7.s2, v7.s2, 1); dump();
srshr(v7.s2, v7.s2, 2); dump();
srshr(v7.s2, v7.s2, 4); dump();
srshr(v7.s2, v7.s2, 8); dump();
srshr(v7.s2, v7.s2, 16); dump();
srshr(v7.s2, v7.s2, 32); dump();
srsra(v7.s2, v7.s2, 1); dump();
srsra(v0.s2, v7.s2, 1); dump();
srsra(v1.s2, v7.s2, 1); dump();
srsra(v2.s2, v7.s2, 1); dump();
srsra(v4.s2, v7.s2, 1); dump();
srsra(v8.s2, v7.s2, 1); dump();
srsra(v16.s2, v7.s2, 1); dump();
srsra(v31.s2, v7.s2, 1); dump();
srsra(v7.s2, v7.s2, 1); dump();
srsra(v7.s2, v0.s2, 1); dump();
srsra(v7.s2, v1.s2, 1); dump();
srsra(v7.s2, v2.s2, 1); dump();
srsra(v7.s2, v4.s2, 1); dump();
srsra(v7.s2, v8.s2, 1); dump();
srsra(v7.s2, v16.s2, 1); dump();
srsra(v7.s2, v31.s2, 1); dump();
srsra(v7.s2, v7.s2, 1); dump();
srsra(v7.s2, v7.s2, 2); dump();
srsra(v7.s2, v7.s2, 4); dump();
srsra(v7.s2, v7.s2, 8); dump();
srsra(v7.s2, v7.s2, 16); dump();
srsra(v7.s2, v7.s2, 32); dump();
sshr(v7.s2, v7.s2, 1); dump();
sshr(v0.s2, v7.s2, 1); dump();
sshr(v1.s2, v7.s2, 1); dump();
sshr(v2.s2, v7.s2, 1); dump();
sshr(v4.s2, v7.s2, 1); dump();
sshr(v8.s2, v7.s2, 1); dump();
sshr(v16.s2, v7.s2, 1); dump();
sshr(v31.s2, v7.s2, 1); dump();
sshr(v7.s2, v7.s2, 1); dump();
sshr(v7.s2, v0.s2, 1); dump();
sshr(v7.s2, v1.s2, 1); dump();
sshr(v7.s2, v2.s2, 1); dump();
sshr(v7.s2, v4.s2, 1); dump();
sshr(v7.s2, v8.s2, 1); dump();
sshr(v7.s2, v16.s2, 1); dump();
sshr(v7.s2, v31.s2, 1); dump();
sshr(v7.s2, v7.s2, 1); dump();
sshr(v7.s2, v7.s2, 2); dump();
sshr(v7.s2, v7.s2, 4); dump();
sshr(v7.s2, v7.s2, 8); dump();
sshr(v7.s2, v7.s2, 16); dump();
sshr(v7.s2, v7.s2, 32); dump();
ssra(v7.s2, v7.s2, 1); dump();
ssra(v0.s2, v7.s2, 1); dump();
ssra(v1.s2, v7.s2, 1); dump();
ssra(v2.s2, v7.s2, 1); dump();
ssra(v4.s2, v7.s2, 1); dump();
ssra(v8.s2, v7.s2, 1); dump();
ssra(v16.s2, v7.s2, 1); dump();
ssra(v31.s2, v7.s2, 1); dump();
ssra(v7.s2, v7.s2, 1); dump();
ssra(v7.s2, v0.s2, 1); dump();
ssra(v7.s2, v1.s2, 1); dump();
ssra(v7.s2, v2.s2, 1); dump();
ssra(v7.s2, v4.s2, 1); dump();
ssra(v7.s2, v8.s2, 1); dump();
ssra(v7.s2, v16.s2, 1); dump();
ssra(v7.s2, v31.s2, 1); dump();
ssra(v7.s2, v7.s2, 1); dump();
ssra(v7.s2, v7.s2, 2); dump();
ssra(v7.s2, v7.s2, 4); dump();
ssra(v7.s2, v7.s2, 8); dump();
ssra(v7.s2, v7.s2, 16); dump();
ssra(v7.s2, v7.s2, 32); dump();
urshr(v7.s2, v7.s2, 1); dump();
urshr(v0.s2, v7.s2, 1); dump();
urshr(v1.s2, v7.s2, 1); dump();
urshr(v2.s2, v7.s2, 1); dump();
urshr(v4.s2, v7.s2, 1); dump();
urshr(v8.s2, v7.s2, 1); dump();
urshr(v16.s2, v7.s2, 1); dump();
urshr(v31.s2, v7.s2, 1); dump();
urshr(v7.s2, v7.s2, 1); dump();
urshr(v7.s2, v0.s2, 1); dump();
urshr(v7.s2, v1.s2, 1); dump();
urshr(v7.s2, v2.s2, 1); dump();
urshr(v7.s2, v4.s2, 1); dump();
urshr(v7.s2, v8.s2, 1); dump();
urshr(v7.s2, v16.s2, 1); dump();
urshr(v7.s2, v31.s2, 1); dump();
urshr(v7.s2, v7.s2, 1); dump();
urshr(v7.s2, v7.s2, 2); dump();
urshr(v7.s2, v7.s2, 4); dump();
urshr(v7.s2, v7.s2, 8); dump();
urshr(v7.s2, v7.s2, 16); dump();
urshr(v7.s2, v7.s2, 32); dump();
ursra(v7.s2, v7.s2, 1); dump();
ursra(v0.s2, v7.s2, 1); dump();
ursra(v1.s2, v7.s2, 1); dump();
ursra(v2.s2, v7.s2, 1); dump();
ursra(v4.s2, v7.s2, 1); dump();
ursra(v8.s2, v7.s2, 1); dump();
ursra(v16.s2, v7.s2, 1); dump();
ursra(v31.s2, v7.s2, 1); dump();
ursra(v7.s2, v7.s2, 1); dump();
ursra(v7.s2, v0.s2, 1); dump();
ursra(v7.s2, v1.s2, 1); dump();
ursra(v7.s2, v2.s2, 1); dump();
ursra(v7.s2, v4.s2, 1); dump();
ursra(v7.s2, v8.s2, 1); dump();
ursra(v7.s2, v16.s2, 1); dump();
ursra(v7.s2, v31.s2, 1); dump();
ursra(v7.s2, v7.s2, 1); dump();
ursra(v7.s2, v7.s2, 2); dump();
ursra(v7.s2, v7.s2, 4); dump();
ursra(v7.s2, v7.s2, 8); dump();
ursra(v7.s2, v7.s2, 16); dump();
ursra(v7.s2, v7.s2, 32); dump();
usra(v7.s2, v7.s2, 1); dump();
usra(v0.s2, v7.s2, 1); dump();
usra(v1.s2, v7.s2, 1); dump();
usra(v2.s2, v7.s2, 1); dump();
usra(v4.s2, v7.s2, 1); dump();
usra(v8.s2, v7.s2, 1); dump();
usra(v16.s2, v7.s2, 1); dump();
usra(v31.s2, v7.s2, 1); dump();
usra(v7.s2, v7.s2, 1); dump();
usra(v7.s2, v0.s2, 1); dump();
usra(v7.s2, v1.s2, 1); dump();
usra(v7.s2, v2.s2, 1); dump();
usra(v7.s2, v4.s2, 1); dump();
usra(v7.s2, v8.s2, 1); dump();
usra(v7.s2, v16.s2, 1); dump();
usra(v7.s2, v31.s2, 1); dump();
usra(v7.s2, v7.s2, 1); dump();
usra(v7.s2, v7.s2, 2); dump();
usra(v7.s2, v7.s2, 4); dump();
usra(v7.s2, v7.s2, 8); dump();
usra(v7.s2, v7.s2, 16); dump();
usra(v7.s2, v7.s2, 32); dump();
//DataProcSimd_ShiftImmediate11:6
sri(v7.s4, v7.s4, 1); dump();
sri(v0.s4, v7.s4, 1); dump();
sri(v1.s4, v7.s4, 1); dump();
sri(v2.s4, v7.s4, 1); dump();
sri(v4.s4, v7.s4, 1); dump();
sri(v8.s4, v7.s4, 1); dump();
sri(v16.s4, v7.s4, 1); dump();
sri(v31.s4, v7.s4, 1); dump();
sri(v7.s4, v7.s4, 1); dump();
sri(v7.s4, v0.s4, 1); dump();
sri(v7.s4, v1.s4, 1); dump();
sri(v7.s4, v2.s4, 1); dump();
sri(v7.s4, v4.s4, 1); dump();
sri(v7.s4, v8.s4, 1); dump();
sri(v7.s4, v16.s4, 1); dump();
sri(v7.s4, v31.s4, 1); dump();
sri(v7.s4, v7.s4, 1); dump();
sri(v7.s4, v7.s4, 2); dump();
sri(v7.s4, v7.s4, 4); dump();
sri(v7.s4, v7.s4, 8); dump();
sri(v7.s4, v7.s4, 16); dump();
sri(v7.s4, v7.s4, 32); dump();
srshr(v7.s4, v7.s4, 1); dump();
srshr(v0.s4, v7.s4, 1); dump();
srshr(v1.s4, v7.s4, 1); dump();
srshr(v2.s4, v7.s4, 1); dump();
srshr(v4.s4, v7.s4, 1); dump();
srshr(v8.s4, v7.s4, 1); dump();
srshr(v16.s4, v7.s4, 1); dump();
srshr(v31.s4, v7.s4, 1); dump();
srshr(v7.s4, v7.s4, 1); dump();
srshr(v7.s4, v0.s4, 1); dump();
srshr(v7.s4, v1.s4, 1); dump();
srshr(v7.s4, v2.s4, 1); dump();
srshr(v7.s4, v4.s4, 1); dump();
srshr(v7.s4, v8.s4, 1); dump();
srshr(v7.s4, v16.s4, 1); dump();
srshr(v7.s4, v31.s4, 1); dump();
srshr(v7.s4, v7.s4, 1); dump();
srshr(v7.s4, v7.s4, 2); dump();
srshr(v7.s4, v7.s4, 4); dump();
srshr(v7.s4, v7.s4, 8); dump();
srshr(v7.s4, v7.s4, 16); dump();
srshr(v7.s4, v7.s4, 32); dump();
srsra(v7.s4, v7.s4, 1); dump();
srsra(v0.s4, v7.s4, 1); dump();
srsra(v1.s4, v7.s4, 1); dump();
srsra(v2.s4, v7.s4, 1); dump();
srsra(v4.s4, v7.s4, 1); dump();
srsra(v8.s4, v7.s4, 1); dump();
srsra(v16.s4, v7.s4, 1); dump();
srsra(v31.s4, v7.s4, 1); dump();
srsra(v7.s4, v7.s4, 1); dump();
srsra(v7.s4, v0.s4, 1); dump();
srsra(v7.s4, v1.s4, 1); dump();
srsra(v7.s4, v2.s4, 1); dump();
srsra(v7.s4, v4.s4, 1); dump();
srsra(v7.s4, v8.s4, 1); dump();
srsra(v7.s4, v16.s4, 1); dump();
srsra(v7.s4, v31.s4, 1); dump();
srsra(v7.s4, v7.s4, 1); dump();
srsra(v7.s4, v7.s4, 2); dump();
srsra(v7.s4, v7.s4, 4); dump();
srsra(v7.s4, v7.s4, 8); dump();
srsra(v7.s4, v7.s4, 16); dump();
srsra(v7.s4, v7.s4, 32); dump();
sshr(v7.s4, v7.s4, 1); dump();
sshr(v0.s4, v7.s4, 1); dump();
sshr(v1.s4, v7.s4, 1); dump();
sshr(v2.s4, v7.s4, 1); dump();
sshr(v4.s4, v7.s4, 1); dump();
sshr(v8.s4, v7.s4, 1); dump();
sshr(v16.s4, v7.s4, 1); dump();
sshr(v31.s4, v7.s4, 1); dump();
sshr(v7.s4, v7.s4, 1); dump();
sshr(v7.s4, v0.s4, 1); dump();
sshr(v7.s4, v1.s4, 1); dump();
sshr(v7.s4, v2.s4, 1); dump();
sshr(v7.s4, v4.s4, 1); dump();
sshr(v7.s4, v8.s4, 1); dump();
sshr(v7.s4, v16.s4, 1); dump();
sshr(v7.s4, v31.s4, 1); dump();
sshr(v7.s4, v7.s4, 1); dump();
sshr(v7.s4, v7.s4, 2); dump();
sshr(v7.s4, v7.s4, 4); dump();
sshr(v7.s4, v7.s4, 8); dump();
sshr(v7.s4, v7.s4, 16); dump();
sshr(v7.s4, v7.s4, 32); dump();
ssra(v7.s4, v7.s4, 1); dump();
ssra(v0.s4, v7.s4, 1); dump();
ssra(v1.s4, v7.s4, 1); dump();
ssra(v2.s4, v7.s4, 1); dump();
ssra(v4.s4, v7.s4, 1); dump();
ssra(v8.s4, v7.s4, 1); dump();
ssra(v16.s4, v7.s4, 1); dump();
ssra(v31.s4, v7.s4, 1); dump();
ssra(v7.s4, v7.s4, 1); dump();
ssra(v7.s4, v0.s4, 1); dump();
ssra(v7.s4, v1.s4, 1); dump();
ssra(v7.s4, v2.s4, 1); dump();
ssra(v7.s4, v4.s4, 1); dump();
ssra(v7.s4, v8.s4, 1); dump();
ssra(v7.s4, v16.s4, 1); dump();
ssra(v7.s4, v31.s4, 1); dump();
ssra(v7.s4, v7.s4, 1); dump();
ssra(v7.s4, v7.s4, 2); dump();
ssra(v7.s4, v7.s4, 4); dump();
ssra(v7.s4, v7.s4, 8); dump();
ssra(v7.s4, v7.s4, 16); dump();
ssra(v7.s4, v7.s4, 32); dump();
urshr(v7.s4, v7.s4, 1); dump();
urshr(v0.s4, v7.s4, 1); dump();
urshr(v1.s4, v7.s4, 1); dump();
urshr(v2.s4, v7.s4, 1); dump();
urshr(v4.s4, v7.s4, 1); dump();
urshr(v8.s4, v7.s4, 1); dump();
urshr(v16.s4, v7.s4, 1); dump();
urshr(v31.s4, v7.s4, 1); dump();
urshr(v7.s4, v7.s4, 1); dump();
urshr(v7.s4, v0.s4, 1); dump();
urshr(v7.s4, v1.s4, 1); dump();
urshr(v7.s4, v2.s4, 1); dump();
urshr(v7.s4, v4.s4, 1); dump();
urshr(v7.s4, v8.s4, 1); dump();
urshr(v7.s4, v16.s4, 1); dump();
urshr(v7.s4, v31.s4, 1); dump();
urshr(v7.s4, v7.s4, 1); dump();
urshr(v7.s4, v7.s4, 2); dump();
urshr(v7.s4, v7.s4, 4); dump();
urshr(v7.s4, v7.s4, 8); dump();
urshr(v7.s4, v7.s4, 16); dump();
urshr(v7.s4, v7.s4, 32); dump();
ursra(v7.s4, v7.s4, 1); dump();
ursra(v0.s4, v7.s4, 1); dump();
ursra(v1.s4, v7.s4, 1); dump();
ursra(v2.s4, v7.s4, 1); dump();
ursra(v4.s4, v7.s4, 1); dump();
ursra(v8.s4, v7.s4, 1); dump();
ursra(v16.s4, v7.s4, 1); dump();
ursra(v31.s4, v7.s4, 1); dump();
ursra(v7.s4, v7.s4, 1); dump();
ursra(v7.s4, v0.s4, 1); dump();
ursra(v7.s4, v1.s4, 1); dump();
ursra(v7.s4, v2.s4, 1); dump();
ursra(v7.s4, v4.s4, 1); dump();
ursra(v7.s4, v8.s4, 1); dump();
ursra(v7.s4, v16.s4, 1); dump();
ursra(v7.s4, v31.s4, 1); dump();
ursra(v7.s4, v7.s4, 1); dump();
ursra(v7.s4, v7.s4, 2); dump();
ursra(v7.s4, v7.s4, 4); dump();
ursra(v7.s4, v7.s4, 8); dump();
ursra(v7.s4, v7.s4, 16); dump();
ursra(v7.s4, v7.s4, 32); dump();
usra(v7.s4, v7.s4, 1); dump();
usra(v0.s4, v7.s4, 1); dump();
usra(v1.s4, v7.s4, 1); dump();
usra(v2.s4, v7.s4, 1); dump();
usra(v4.s4, v7.s4, 1); dump();
usra(v8.s4, v7.s4, 1); dump();
usra(v16.s4, v7.s4, 1); dump();
usra(v31.s4, v7.s4, 1); dump();
usra(v7.s4, v7.s4, 1); dump();
usra(v7.s4, v0.s4, 1); dump();
usra(v7.s4, v1.s4, 1); dump();
usra(v7.s4, v2.s4, 1); dump();
usra(v7.s4, v4.s4, 1); dump();
usra(v7.s4, v8.s4, 1); dump();
usra(v7.s4, v16.s4, 1); dump();
usra(v7.s4, v31.s4, 1); dump();
usra(v7.s4, v7.s4, 1); dump();
usra(v7.s4, v7.s4, 2); dump();
usra(v7.s4, v7.s4, 4); dump();
usra(v7.s4, v7.s4, 8); dump();
usra(v7.s4, v7.s4, 16); dump();
usra(v7.s4, v7.s4, 32); dump();
//DataProcSimd_ShiftImmediate11:7
sri(v7.d2, v7.d2, 1); dump();
sri(v0.d2, v7.d2, 1); dump();
sri(v1.d2, v7.d2, 1); dump();
sri(v2.d2, v7.d2, 1); dump();
sri(v4.d2, v7.d2, 1); dump();
sri(v8.d2, v7.d2, 1); dump();
sri(v16.d2, v7.d2, 1); dump();
sri(v31.d2, v7.d2, 1); dump();
sri(v7.d2, v7.d2, 1); dump();
sri(v7.d2, v0.d2, 1); dump();
sri(v7.d2, v1.d2, 1); dump();
sri(v7.d2, v2.d2, 1); dump();
sri(v7.d2, v4.d2, 1); dump();
sri(v7.d2, v8.d2, 1); dump();
sri(v7.d2, v16.d2, 1); dump();
sri(v7.d2, v31.d2, 1); dump();
sri(v7.d2, v7.d2, 1); dump();
sri(v7.d2, v7.d2, 2); dump();
sri(v7.d2, v7.d2, 4); dump();
sri(v7.d2, v7.d2, 8); dump();
sri(v7.d2, v7.d2, 16); dump();
sri(v7.d2, v7.d2, 32); dump();
sri(v7.d2, v7.d2, 64); dump();
srshr(v7.d2, v7.d2, 1); dump();
srshr(v0.d2, v7.d2, 1); dump();
srshr(v1.d2, v7.d2, 1); dump();
srshr(v2.d2, v7.d2, 1); dump();
srshr(v4.d2, v7.d2, 1); dump();
srshr(v8.d2, v7.d2, 1); dump();
srshr(v16.d2, v7.d2, 1); dump();
srshr(v31.d2, v7.d2, 1); dump();
srshr(v7.d2, v7.d2, 1); dump();
srshr(v7.d2, v0.d2, 1); dump();
srshr(v7.d2, v1.d2, 1); dump();
srshr(v7.d2, v2.d2, 1); dump();
srshr(v7.d2, v4.d2, 1); dump();
srshr(v7.d2, v8.d2, 1); dump();
srshr(v7.d2, v16.d2, 1); dump();
srshr(v7.d2, v31.d2, 1); dump();
srshr(v7.d2, v7.d2, 1); dump();
srshr(v7.d2, v7.d2, 2); dump();
srshr(v7.d2, v7.d2, 4); dump();
srshr(v7.d2, v7.d2, 8); dump();
srshr(v7.d2, v7.d2, 16); dump();
srshr(v7.d2, v7.d2, 32); dump();
srshr(v7.d2, v7.d2, 64); dump();
srsra(v7.d2, v7.d2, 1); dump();
srsra(v0.d2, v7.d2, 1); dump();
srsra(v1.d2, v7.d2, 1); dump();
srsra(v2.d2, v7.d2, 1); dump();
srsra(v4.d2, v7.d2, 1); dump();
srsra(v8.d2, v7.d2, 1); dump();
srsra(v16.d2, v7.d2, 1); dump();
srsra(v31.d2, v7.d2, 1); dump();
srsra(v7.d2, v7.d2, 1); dump();
srsra(v7.d2, v0.d2, 1); dump();
srsra(v7.d2, v1.d2, 1); dump();
srsra(v7.d2, v2.d2, 1); dump();
srsra(v7.d2, v4.d2, 1); dump();
srsra(v7.d2, v8.d2, 1); dump();
srsra(v7.d2, v16.d2, 1); dump();
srsra(v7.d2, v31.d2, 1); dump();
srsra(v7.d2, v7.d2, 1); dump();
srsra(v7.d2, v7.d2, 2); dump();
srsra(v7.d2, v7.d2, 4); dump();
srsra(v7.d2, v7.d2, 8); dump();
srsra(v7.d2, v7.d2, 16); dump();
srsra(v7.d2, v7.d2, 32); dump();
srsra(v7.d2, v7.d2, 64); dump();
sshr(v7.d2, v7.d2, 1); dump();
sshr(v0.d2, v7.d2, 1); dump();
sshr(v1.d2, v7.d2, 1); dump();
sshr(v2.d2, v7.d2, 1); dump();
sshr(v4.d2, v7.d2, 1); dump();
sshr(v8.d2, v7.d2, 1); dump();
sshr(v16.d2, v7.d2, 1); dump();
sshr(v31.d2, v7.d2, 1); dump();
sshr(v7.d2, v7.d2, 1); dump();
sshr(v7.d2, v0.d2, 1); dump();
sshr(v7.d2, v1.d2, 1); dump();
sshr(v7.d2, v2.d2, 1); dump();
sshr(v7.d2, v4.d2, 1); dump();
sshr(v7.d2, v8.d2, 1); dump();
sshr(v7.d2, v16.d2, 1); dump();
sshr(v7.d2, v31.d2, 1); dump();
sshr(v7.d2, v7.d2, 1); dump();
sshr(v7.d2, v7.d2, 2); dump();
sshr(v7.d2, v7.d2, 4); dump();
sshr(v7.d2, v7.d2, 8); dump();
sshr(v7.d2, v7.d2, 16); dump();
sshr(v7.d2, v7.d2, 32); dump();
sshr(v7.d2, v7.d2, 64); dump();
ssra(v7.d2, v7.d2, 1); dump();
ssra(v0.d2, v7.d2, 1); dump();
ssra(v1.d2, v7.d2, 1); dump();
ssra(v2.d2, v7.d2, 1); dump();
ssra(v4.d2, v7.d2, 1); dump();
ssra(v8.d2, v7.d2, 1); dump();
ssra(v16.d2, v7.d2, 1); dump();
ssra(v31.d2, v7.d2, 1); dump();
ssra(v7.d2, v7.d2, 1); dump();
ssra(v7.d2, v0.d2, 1); dump();
ssra(v7.d2, v1.d2, 1); dump();
ssra(v7.d2, v2.d2, 1); dump();
ssra(v7.d2, v4.d2, 1); dump();
ssra(v7.d2, v8.d2, 1); dump();
ssra(v7.d2, v16.d2, 1); dump();
ssra(v7.d2, v31.d2, 1); dump();
ssra(v7.d2, v7.d2, 1); dump();
ssra(v7.d2, v7.d2, 2); dump();
ssra(v7.d2, v7.d2, 4); dump();
ssra(v7.d2, v7.d2, 8); dump();
ssra(v7.d2, v7.d2, 16); dump();
ssra(v7.d2, v7.d2, 32); dump();
ssra(v7.d2, v7.d2, 64); dump();
urshr(v7.d2, v7.d2, 1); dump();
urshr(v0.d2, v7.d2, 1); dump();
urshr(v1.d2, v7.d2, 1); dump();
urshr(v2.d2, v7.d2, 1); dump();
urshr(v4.d2, v7.d2, 1); dump();
urshr(v8.d2, v7.d2, 1); dump();
urshr(v16.d2, v7.d2, 1); dump();
urshr(v31.d2, v7.d2, 1); dump();
urshr(v7.d2, v7.d2, 1); dump();
urshr(v7.d2, v0.d2, 1); dump();
urshr(v7.d2, v1.d2, 1); dump();
urshr(v7.d2, v2.d2, 1); dump();
urshr(v7.d2, v4.d2, 1); dump();
urshr(v7.d2, v8.d2, 1); dump();
urshr(v7.d2, v16.d2, 1); dump();
urshr(v7.d2, v31.d2, 1); dump();
urshr(v7.d2, v7.d2, 1); dump();
urshr(v7.d2, v7.d2, 2); dump();
urshr(v7.d2, v7.d2, 4); dump();
urshr(v7.d2, v7.d2, 8); dump();
urshr(v7.d2, v7.d2, 16); dump();
urshr(v7.d2, v7.d2, 32); dump();
urshr(v7.d2, v7.d2, 64); dump();
ursra(v7.d2, v7.d2, 1); dump();
ursra(v0.d2, v7.d2, 1); dump();
ursra(v1.d2, v7.d2, 1); dump();
ursra(v2.d2, v7.d2, 1); dump();
ursra(v4.d2, v7.d2, 1); dump();
ursra(v8.d2, v7.d2, 1); dump();
ursra(v16.d2, v7.d2, 1); dump();
ursra(v31.d2, v7.d2, 1); dump();
ursra(v7.d2, v7.d2, 1); dump();
ursra(v7.d2, v0.d2, 1); dump();
ursra(v7.d2, v1.d2, 1); dump();
ursra(v7.d2, v2.d2, 1); dump();
ursra(v7.d2, v4.d2, 1); dump();
ursra(v7.d2, v8.d2, 1); dump();
ursra(v7.d2, v16.d2, 1); dump();
ursra(v7.d2, v31.d2, 1); dump();
ursra(v7.d2, v7.d2, 1); dump();
ursra(v7.d2, v7.d2, 2); dump();
ursra(v7.d2, v7.d2, 4); dump();
ursra(v7.d2, v7.d2, 8); dump();
ursra(v7.d2, v7.d2, 16); dump();
ursra(v7.d2, v7.d2, 32); dump();
ursra(v7.d2, v7.d2, 64); dump();
usra(v7.d2, v7.d2, 1); dump();
usra(v0.d2, v7.d2, 1); dump();
usra(v1.d2, v7.d2, 1); dump();
usra(v2.d2, v7.d2, 1); dump();
usra(v4.d2, v7.d2, 1); dump();
usra(v8.d2, v7.d2, 1); dump();
usra(v16.d2, v7.d2, 1); dump();
usra(v31.d2, v7.d2, 1); dump();
usra(v7.d2, v7.d2, 1); dump();
usra(v7.d2, v0.d2, 1); dump();
usra(v7.d2, v1.d2, 1); dump();
usra(v7.d2, v2.d2, 1); dump();
usra(v7.d2, v4.d2, 1); dump();
usra(v7.d2, v8.d2, 1); dump();
usra(v7.d2, v16.d2, 1); dump();
usra(v7.d2, v31.d2, 1); dump();
usra(v7.d2, v7.d2, 1); dump();
usra(v7.d2, v7.d2, 2); dump();
usra(v7.d2, v7.d2, 4); dump();
usra(v7.d2, v7.d2, 8); dump();
usra(v7.d2, v7.d2, 16); dump();
usra(v7.d2, v7.d2, 32); dump();
usra(v7.d2, v7.d2, 64); dump();
//DataProcSimd_ShiftImmediate12:0
sshll(v7.h8, v7.b8, 7); dump();
sshll(v0.h8, v7.b8, 7); dump();
sshll(v1.h8, v7.b8, 7); dump();
sshll(v2.h8, v7.b8, 7); dump();
sshll(v4.h8, v7.b8, 7); dump();
sshll(v8.h8, v7.b8, 7); dump();
sshll(v16.h8, v7.b8, 7); dump();
sshll(v31.h8, v7.b8, 7); dump();
sshll(v7.h8, v7.b8, 7); dump();
sshll(v7.h8, v0.b8, 7); dump();
sshll(v7.h8, v1.b8, 7); dump();
sshll(v7.h8, v2.b8, 7); dump();
sshll(v7.h8, v4.b8, 7); dump();
sshll(v7.h8, v8.b8, 7); dump();
sshll(v7.h8, v16.b8, 7); dump();
sshll(v7.h8, v31.b8, 7); dump();
sshll(v7.h8, v7.b8, 7); dump();
sshll(v7.h8, v7.b8, 0); dump();
sshll(v7.h8, v7.b8, 1); dump();
sshll(v7.h8, v7.b8, 2); dump();
sshll(v7.h8, v7.b8, 4); dump();
ushll(v7.h8, v7.b8, 7); dump();
ushll(v0.h8, v7.b8, 7); dump();
ushll(v1.h8, v7.b8, 7); dump();
ushll(v2.h8, v7.b8, 7); dump();
ushll(v4.h8, v7.b8, 7); dump();
ushll(v8.h8, v7.b8, 7); dump();
ushll(v16.h8, v7.b8, 7); dump();
ushll(v31.h8, v7.b8, 7); dump();
ushll(v7.h8, v7.b8, 7); dump();
ushll(v7.h8, v0.b8, 7); dump();
ushll(v7.h8, v1.b8, 7); dump();
ushll(v7.h8, v2.b8, 7); dump();
ushll(v7.h8, v4.b8, 7); dump();
ushll(v7.h8, v8.b8, 7); dump();
ushll(v7.h8, v16.b8, 7); dump();
ushll(v7.h8, v31.b8, 7); dump();
ushll(v7.h8, v7.b8, 7); dump();
ushll(v7.h8, v7.b8, 0); dump();
ushll(v7.h8, v7.b8, 1); dump();
ushll(v7.h8, v7.b8, 2); dump();
ushll(v7.h8, v7.b8, 4); dump();
//DataProcSimd_ShiftImmediate12:1
sshll(v7.s4, v7.h4, 7); dump();
sshll(v0.s4, v7.h4, 7); dump();
sshll(v1.s4, v7.h4, 7); dump();
sshll(v2.s4, v7.h4, 7); dump();
sshll(v4.s4, v7.h4, 7); dump();
sshll(v8.s4, v7.h4, 7); dump();
sshll(v16.s4, v7.h4, 7); dump();
sshll(v31.s4, v7.h4, 7); dump();
sshll(v7.s4, v7.h4, 7); dump();
sshll(v7.s4, v0.h4, 7); dump();
sshll(v7.s4, v1.h4, 7); dump();
sshll(v7.s4, v2.h4, 7); dump();
sshll(v7.s4, v4.h4, 7); dump();
sshll(v7.s4, v8.h4, 7); dump();
sshll(v7.s4, v16.h4, 7); dump();
sshll(v7.s4, v31.h4, 7); dump();
sshll(v7.s4, v7.h4, 7); dump();
sshll(v7.s4, v7.h4, 0); dump();
sshll(v7.s4, v7.h4, 1); dump();
sshll(v7.s4, v7.h4, 2); dump();
sshll(v7.s4, v7.h4, 4); dump();
sshll(v7.s4, v7.h4, 8); dump();
sshll(v7.s4, v7.h4, 15); dump();
ushll(v7.s4, v7.h4, 7); dump();
ushll(v0.s4, v7.h4, 7); dump();
ushll(v1.s4, v7.h4, 7); dump();
ushll(v2.s4, v7.h4, 7); dump();
ushll(v4.s4, v7.h4, 7); dump();
ushll(v8.s4, v7.h4, 7); dump();
ushll(v16.s4, v7.h4, 7); dump();
ushll(v31.s4, v7.h4, 7); dump();
ushll(v7.s4, v7.h4, 7); dump();
ushll(v7.s4, v0.h4, 7); dump();
ushll(v7.s4, v1.h4, 7); dump();
ushll(v7.s4, v2.h4, 7); dump();
ushll(v7.s4, v4.h4, 7); dump();
ushll(v7.s4, v8.h4, 7); dump();
ushll(v7.s4, v16.h4, 7); dump();
ushll(v7.s4, v31.h4, 7); dump();
ushll(v7.s4, v7.h4, 7); dump();
ushll(v7.s4, v7.h4, 0); dump();
ushll(v7.s4, v7.h4, 1); dump();
ushll(v7.s4, v7.h4, 2); dump();
ushll(v7.s4, v7.h4, 4); dump();
ushll(v7.s4, v7.h4, 8); dump();
ushll(v7.s4, v7.h4, 15); dump();
//DataProcSimd_ShiftImmediate12:2
sshll(v7.d2, v7.s2, 0x1e); dump();
sshll(v0.d2, v7.s2, 0x1e); dump();
sshll(v1.d2, v7.s2, 0x1e); dump();
sshll(v2.d2, v7.s2, 0x1e); dump();
sshll(v4.d2, v7.s2, 0x1e); dump();
sshll(v8.d2, v7.s2, 0x1e); dump();
sshll(v16.d2, v7.s2, 0x1e); dump();
sshll(v31.d2, v7.s2, 0x1e); dump();
sshll(v7.d2, v7.s2, 0x1e); dump();
sshll(v7.d2, v0.s2, 0x1e); dump();
sshll(v7.d2, v1.s2, 0x1e); dump();
sshll(v7.d2, v2.s2, 0x1e); dump();
sshll(v7.d2, v4.s2, 0x1e); dump();
sshll(v7.d2, v8.s2, 0x1e); dump();
sshll(v7.d2, v16.s2, 0x1e); dump();
sshll(v7.d2, v31.s2, 0x1e); dump();
sshll(v7.d2, v7.s2, 0x1e); dump();
sshll(v7.d2, v7.s2, 0); dump();
sshll(v7.d2, v7.s2, 1); dump();
sshll(v7.d2, v7.s2, 2); dump();
sshll(v7.d2, v7.s2, 4); dump();
sshll(v7.d2, v7.s2, 8); dump();
sshll(v7.d2, v7.s2, 16); dump();
sshll(v7.d2, v7.s2, 31); dump();
ushll(v7.d2, v7.s2, 0x1e); dump();
ushll(v0.d2, v7.s2, 0x1e); dump();
ushll(v1.d2, v7.s2, 0x1e); dump();
ushll(v2.d2, v7.s2, 0x1e); dump();
ushll(v4.d2, v7.s2, 0x1e); dump();
ushll(v8.d2, v7.s2, 0x1e); dump();
ushll(v16.d2, v7.s2, 0x1e); dump();
ushll(v31.d2, v7.s2, 0x1e); dump();
ushll(v7.d2, v7.s2, 0x1e); dump();
ushll(v7.d2, v0.s2, 0x1e); dump();
ushll(v7.d2, v1.s2, 0x1e); dump();
ushll(v7.d2, v2.s2, 0x1e); dump();
ushll(v7.d2, v4.s2, 0x1e); dump();
ushll(v7.d2, v8.s2, 0x1e); dump();
ushll(v7.d2, v16.s2, 0x1e); dump();
ushll(v7.d2, v31.s2, 0x1e); dump();
ushll(v7.d2, v7.s2, 0x1e); dump();
ushll(v7.d2, v7.s2, 0); dump();
ushll(v7.d2, v7.s2, 1); dump();
ushll(v7.d2, v7.s2, 2); dump();
ushll(v7.d2, v7.s2, 4); dump();
ushll(v7.d2, v7.s2, 8); dump();
ushll(v7.d2, v7.s2, 16); dump();
ushll(v7.d2, v7.s2, 31); dump();
//DataProcSimd_ShiftImmediate13:0
sshll2(v7.h8, v7.b16, 7); dump();
sshll2(v0.h8, v7.b16, 7); dump();
sshll2(v1.h8, v7.b16, 7); dump();
sshll2(v2.h8, v7.b16, 7); dump();
sshll2(v4.h8, v7.b16, 7); dump();
sshll2(v8.h8, v7.b16, 7); dump();
sshll2(v16.h8, v7.b16, 7); dump();
sshll2(v31.h8, v7.b16, 7); dump();
sshll2(v7.h8, v7.b16, 7); dump();
sshll2(v7.h8, v0.b16, 7); dump();
sshll2(v7.h8, v1.b16, 7); dump();
sshll2(v7.h8, v2.b16, 7); dump();
sshll2(v7.h8, v4.b16, 7); dump();
sshll2(v7.h8, v8.b16, 7); dump();
sshll2(v7.h8, v16.b16, 7); dump();
sshll2(v7.h8, v31.b16, 7); dump();
sshll2(v7.h8, v7.b16, 7); dump();
sshll2(v7.h8, v7.b16, 0); dump();
sshll2(v7.h8, v7.b16, 1); dump();
sshll2(v7.h8, v7.b16, 2); dump();
sshll2(v7.h8, v7.b16, 4); dump();
ushll2(v7.h8, v7.b16, 7); dump();
ushll2(v0.h8, v7.b16, 7); dump();
ushll2(v1.h8, v7.b16, 7); dump();
ushll2(v2.h8, v7.b16, 7); dump();
ushll2(v4.h8, v7.b16, 7); dump();
ushll2(v8.h8, v7.b16, 7); dump();
ushll2(v16.h8, v7.b16, 7); dump();
ushll2(v31.h8, v7.b16, 7); dump();
ushll2(v7.h8, v7.b16, 7); dump();
ushll2(v7.h8, v0.b16, 7); dump();
ushll2(v7.h8, v1.b16, 7); dump();
ushll2(v7.h8, v2.b16, 7); dump();
ushll2(v7.h8, v4.b16, 7); dump();
ushll2(v7.h8, v8.b16, 7); dump();
ushll2(v7.h8, v16.b16, 7); dump();
ushll2(v7.h8, v31.b16, 7); dump();
ushll2(v7.h8, v7.b16, 7); dump();
ushll2(v7.h8, v7.b16, 0); dump();
ushll2(v7.h8, v7.b16, 1); dump();
ushll2(v7.h8, v7.b16, 2); dump();
ushll2(v7.h8, v7.b16, 4); dump();
//DataProcSimd_ShiftImmediate13:1
sshll2(v7.s4, v7.h8, 7); dump();
sshll2(v0.s4, v7.h8, 7); dump();
sshll2(v1.s4, v7.h8, 7); dump();
sshll2(v2.s4, v7.h8, 7); dump();
sshll2(v4.s4, v7.h8, 7); dump();
sshll2(v8.s4, v7.h8, 7); dump();
sshll2(v16.s4, v7.h8, 7); dump();
sshll2(v31.s4, v7.h8, 7); dump();
sshll2(v7.s4, v7.h8, 7); dump();
sshll2(v7.s4, v0.h8, 7); dump();
sshll2(v7.s4, v1.h8, 7); dump();
sshll2(v7.s4, v2.h8, 7); dump();
sshll2(v7.s4, v4.h8, 7); dump();
sshll2(v7.s4, v8.h8, 7); dump();
sshll2(v7.s4, v16.h8, 7); dump();
sshll2(v7.s4, v31.h8, 7); dump();
sshll2(v7.s4, v7.h8, 7); dump();
sshll2(v7.s4, v7.h8, 0); dump();
sshll2(v7.s4, v7.h8, 1); dump();
sshll2(v7.s4, v7.h8, 2); dump();
sshll2(v7.s4, v7.h8, 4); dump();
sshll2(v7.s4, v7.h8, 8); dump();
sshll2(v7.s4, v7.h8, 15); dump();
ushll2(v7.s4, v7.h8, 7); dump();
ushll2(v0.s4, v7.h8, 7); dump();
ushll2(v1.s4, v7.h8, 7); dump();
ushll2(v2.s4, v7.h8, 7); dump();
ushll2(v4.s4, v7.h8, 7); dump();
ushll2(v8.s4, v7.h8, 7); dump();
ushll2(v16.s4, v7.h8, 7); dump();
ushll2(v31.s4, v7.h8, 7); dump();
ushll2(v7.s4, v7.h8, 7); dump();
ushll2(v7.s4, v0.h8, 7); dump();
ushll2(v7.s4, v1.h8, 7); dump();
ushll2(v7.s4, v2.h8, 7); dump();
ushll2(v7.s4, v4.h8, 7); dump();
ushll2(v7.s4, v8.h8, 7); dump();
ushll2(v7.s4, v16.h8, 7); dump();
ushll2(v7.s4, v31.h8, 7); dump();
ushll2(v7.s4, v7.h8, 7); dump();
ushll2(v7.s4, v7.h8, 0); dump();
ushll2(v7.s4, v7.h8, 1); dump();
ushll2(v7.s4, v7.h8, 2); dump();
ushll2(v7.s4, v7.h8, 4); dump();
ushll2(v7.s4, v7.h8, 8); dump();
ushll2(v7.s4, v7.h8, 15); dump();
//DataProcSimd_ShiftImmediate13:2
sshll2(v7.d2, v7.s4, 0x1e); dump();
sshll2(v0.d2, v7.s4, 0x1e); dump();
sshll2(v1.d2, v7.s4, 0x1e); dump();
sshll2(v2.d2, v7.s4, 0x1e); dump();
sshll2(v4.d2, v7.s4, 0x1e); dump();
sshll2(v8.d2, v7.s4, 0x1e); dump();
sshll2(v16.d2, v7.s4, 0x1e); dump();
sshll2(v31.d2, v7.s4, 0x1e); dump();
sshll2(v7.d2, v7.s4, 0x1e); dump();
sshll2(v7.d2, v0.s4, 0x1e); dump();
sshll2(v7.d2, v1.s4, 0x1e); dump();
sshll2(v7.d2, v2.s4, 0x1e); dump();
sshll2(v7.d2, v4.s4, 0x1e); dump();
sshll2(v7.d2, v8.s4, 0x1e); dump();
sshll2(v7.d2, v16.s4, 0x1e); dump();
sshll2(v7.d2, v31.s4, 0x1e); dump();
sshll2(v7.d2, v7.s4, 0x1e); dump();
sshll2(v7.d2, v7.s4, 0); dump();
sshll2(v7.d2, v7.s4, 1); dump();
sshll2(v7.d2, v7.s4, 2); dump();
sshll2(v7.d2, v7.s4, 4); dump();
sshll2(v7.d2, v7.s4, 8); dump();
sshll2(v7.d2, v7.s4, 16); dump();
sshll2(v7.d2, v7.s4, 31); dump();
ushll2(v7.d2, v7.s4, 0x1e); dump();
ushll2(v0.d2, v7.s4, 0x1e); dump();
ushll2(v1.d2, v7.s4, 0x1e); dump();
ushll2(v2.d2, v7.s4, 0x1e); dump();
ushll2(v4.d2, v7.s4, 0x1e); dump();
ushll2(v8.d2, v7.s4, 0x1e); dump();
ushll2(v16.d2, v7.s4, 0x1e); dump();
ushll2(v31.d2, v7.s4, 0x1e); dump();
ushll2(v7.d2, v7.s4, 0x1e); dump();
ushll2(v7.d2, v0.s4, 0x1e); dump();
ushll2(v7.d2, v1.s4, 0x1e); dump();
ushll2(v7.d2, v2.s4, 0x1e); dump();
ushll2(v7.d2, v4.s4, 0x1e); dump();
ushll2(v7.d2, v8.s4, 0x1e); dump();
ushll2(v7.d2, v16.s4, 0x1e); dump();
ushll2(v7.d2, v31.s4, 0x1e); dump();
ushll2(v7.d2, v7.s4, 0x1e); dump();
ushll2(v7.d2, v7.s4, 0); dump();
ushll2(v7.d2, v7.s4, 1); dump();
ushll2(v7.d2, v7.s4, 2); dump();
ushll2(v7.d2, v7.s4, 4); dump();
ushll2(v7.d2, v7.s4, 8); dump();
ushll2(v7.d2, v7.s4, 16); dump();
ushll2(v7.d2, v7.s4, 31); dump();
//DataProcSimd_ShiftImmediate14:0
sxtl(v7.h8, v7.b8); dump();
sxtl(v0.h8, v7.b8); dump();
sxtl(v1.h8, v7.b8); dump();
sxtl(v2.h8, v7.b8); dump();
sxtl(v4.h8, v7.b8); dump();
sxtl(v8.h8, v7.b8); dump();
sxtl(v16.h8, v7.b8); dump();
sxtl(v31.h8, v7.b8); dump();
sxtl(v7.h8, v7.b8); dump();
sxtl(v7.h8, v0.b8); dump();
sxtl(v7.h8, v1.b8); dump();
sxtl(v7.h8, v2.b8); dump();
sxtl(v7.h8, v4.b8); dump();
sxtl(v7.h8, v8.b8); dump();
sxtl(v7.h8, v16.b8); dump();
sxtl(v7.h8, v31.b8); dump();
//DataProcSimd_ShiftImmediate14:1
sxtl(v7.s4, v7.h4); dump();
sxtl(v0.s4, v7.h4); dump();
sxtl(v1.s4, v7.h4); dump();
sxtl(v2.s4, v7.h4); dump();
sxtl(v4.s4, v7.h4); dump();
sxtl(v8.s4, v7.h4); dump();
sxtl(v16.s4, v7.h4); dump();
sxtl(v31.s4, v7.h4); dump();
sxtl(v7.s4, v7.h4); dump();
sxtl(v7.s4, v0.h4); dump();
sxtl(v7.s4, v1.h4); dump();
sxtl(v7.s4, v2.h4); dump();
sxtl(v7.s4, v4.h4); dump();
sxtl(v7.s4, v8.h4); dump();
sxtl(v7.s4, v16.h4); dump();
sxtl(v7.s4, v31.h4); dump();
//DataProcSimd_ShiftImmediate14:2
sxtl(v7.d2, v7.s2); dump();
sxtl(v0.d2, v7.s2); dump();
sxtl(v1.d2, v7.s2); dump();
sxtl(v2.d2, v7.s2); dump();
sxtl(v4.d2, v7.s2); dump();
sxtl(v8.d2, v7.s2); dump();
sxtl(v16.d2, v7.s2); dump();
sxtl(v31.d2, v7.s2); dump();
sxtl(v7.d2, v7.s2); dump();
sxtl(v7.d2, v0.s2); dump();
sxtl(v7.d2, v1.s2); dump();
sxtl(v7.d2, v2.s2); dump();
sxtl(v7.d2, v4.s2); dump();
sxtl(v7.d2, v8.s2); dump();
sxtl(v7.d2, v16.s2); dump();
sxtl(v7.d2, v31.s2); dump();
//DataProcSimd_ShiftImmediate15:0
sxtl2(v7.h8, v7.b16); dump();
sxtl2(v0.h8, v7.b16); dump();
sxtl2(v1.h8, v7.b16); dump();
sxtl2(v2.h8, v7.b16); dump();
sxtl2(v4.h8, v7.b16); dump();
sxtl2(v8.h8, v7.b16); dump();
sxtl2(v16.h8, v7.b16); dump();
sxtl2(v31.h8, v7.b16); dump();
sxtl2(v7.h8, v7.b16); dump();
sxtl2(v7.h8, v0.b16); dump();
sxtl2(v7.h8, v1.b16); dump();
sxtl2(v7.h8, v2.b16); dump();
sxtl2(v7.h8, v4.b16); dump();
sxtl2(v7.h8, v8.b16); dump();
sxtl2(v7.h8, v16.b16); dump();
sxtl2(v7.h8, v31.b16); dump();
//DataProcSimd_ShiftImmediate15:1
sxtl2(v7.s4, v7.h8); dump();
sxtl2(v0.s4, v7.h8); dump();
sxtl2(v1.s4, v7.h8); dump();
sxtl2(v2.s4, v7.h8); dump();
sxtl2(v4.s4, v7.h8); dump();
sxtl2(v8.s4, v7.h8); dump();
sxtl2(v16.s4, v7.h8); dump();
sxtl2(v31.s4, v7.h8); dump();
sxtl2(v7.s4, v7.h8); dump();
sxtl2(v7.s4, v0.h8); dump();
sxtl2(v7.s4, v1.h8); dump();
sxtl2(v7.s4, v2.h8); dump();
sxtl2(v7.s4, v4.h8); dump();
sxtl2(v7.s4, v8.h8); dump();
sxtl2(v7.s4, v16.h8); dump();
sxtl2(v7.s4, v31.h8); dump();
//DataProcSimd_ShiftImmediate15:2
sxtl2(v7.d2, v7.s4); dump();
sxtl2(v0.d2, v7.s4); dump();
sxtl2(v1.d2, v7.s4); dump();
sxtl2(v2.d2, v7.s4); dump();
sxtl2(v4.d2, v7.s4); dump();
sxtl2(v8.d2, v7.s4); dump();
sxtl2(v16.d2, v7.s4); dump();
sxtl2(v31.d2, v7.s4); dump();
sxtl2(v7.d2, v7.s4); dump();
sxtl2(v7.d2, v0.s4); dump();
sxtl2(v7.d2, v1.s4); dump();
sxtl2(v7.d2, v2.s4); dump();
sxtl2(v7.d2, v4.s4); dump();
sxtl2(v7.d2, v8.s4); dump();
sxtl2(v7.d2, v16.s4); dump();
sxtl2(v7.d2, v31.s4); dump();
//DataProcSimd_FloatingPointAndIntergerConversion0:0
fcvtas(h7, h7); dump();
fcvtas(h0, h7); dump();
fcvtas(h1, h7); dump();
fcvtas(h2, h7); dump();
fcvtas(h4, h7); dump();
fcvtas(h8, h7); dump();
fcvtas(h16, h7); dump();
fcvtas(h31, h7); dump();
fcvtas(h7, h7); dump();
fcvtas(h7, h0); dump();
fcvtas(h7, h1); dump();
fcvtas(h7, h2); dump();
fcvtas(h7, h4); dump();
fcvtas(h7, h8); dump();
fcvtas(h7, h16); dump();
fcvtas(h7, h31); dump();
fcvtau(h7, h7); dump();
fcvtau(h0, h7); dump();
fcvtau(h1, h7); dump();
fcvtau(h2, h7); dump();
fcvtau(h4, h7); dump();
fcvtau(h8, h7); dump();
fcvtau(h16, h7); dump();
fcvtau(h31, h7); dump();
fcvtau(h7, h7); dump();
fcvtau(h7, h0); dump();
fcvtau(h7, h1); dump();
fcvtau(h7, h2); dump();
fcvtau(h7, h4); dump();
fcvtau(h7, h8); dump();
fcvtau(h7, h16); dump();
fcvtau(h7, h31); dump();
fcvtms(h7, h7); dump();
fcvtms(h0, h7); dump();
fcvtms(h1, h7); dump();
fcvtms(h2, h7); dump();
fcvtms(h4, h7); dump();
fcvtms(h8, h7); dump();
fcvtms(h16, h7); dump();
fcvtms(h31, h7); dump();
fcvtms(h7, h7); dump();
fcvtms(h7, h0); dump();
fcvtms(h7, h1); dump();
fcvtms(h7, h2); dump();
fcvtms(h7, h4); dump();
fcvtms(h7, h8); dump();
fcvtms(h7, h16); dump();
fcvtms(h7, h31); dump();
fcvtmu(h7, h7); dump();
fcvtmu(h0, h7); dump();
fcvtmu(h1, h7); dump();
fcvtmu(h2, h7); dump();
fcvtmu(h4, h7); dump();
fcvtmu(h8, h7); dump();
fcvtmu(h16, h7); dump();
fcvtmu(h31, h7); dump();
fcvtmu(h7, h7); dump();
fcvtmu(h7, h0); dump();
fcvtmu(h7, h1); dump();
fcvtmu(h7, h2); dump();
fcvtmu(h7, h4); dump();
fcvtmu(h7, h8); dump();
fcvtmu(h7, h16); dump();
fcvtmu(h7, h31); dump();
fcvtns(h7, h7); dump();
fcvtns(h0, h7); dump();
fcvtns(h1, h7); dump();
fcvtns(h2, h7); dump();
fcvtns(h4, h7); dump();
fcvtns(h8, h7); dump();
fcvtns(h16, h7); dump();
fcvtns(h31, h7); dump();
fcvtns(h7, h7); dump();
fcvtns(h7, h0); dump();
fcvtns(h7, h1); dump();
fcvtns(h7, h2); dump();
fcvtns(h7, h4); dump();
fcvtns(h7, h8); dump();
fcvtns(h7, h16); dump();
fcvtns(h7, h31); dump();
fcvtnu(h7, h7); dump();
fcvtnu(h0, h7); dump();
fcvtnu(h1, h7); dump();
fcvtnu(h2, h7); dump();
fcvtnu(h4, h7); dump();
fcvtnu(h8, h7); dump();
fcvtnu(h16, h7); dump();
fcvtnu(h31, h7); dump();
fcvtnu(h7, h7); dump();
fcvtnu(h7, h0); dump();
fcvtnu(h7, h1); dump();
fcvtnu(h7, h2); dump();
fcvtnu(h7, h4); dump();
fcvtnu(h7, h8); dump();
fcvtnu(h7, h16); dump();
fcvtnu(h7, h31); dump();
fcvtps(h7, h7); dump();
fcvtps(h0, h7); dump();
fcvtps(h1, h7); dump();
fcvtps(h2, h7); dump();
fcvtps(h4, h7); dump();
fcvtps(h8, h7); dump();
fcvtps(h16, h7); dump();
fcvtps(h31, h7); dump();
fcvtps(h7, h7); dump();
fcvtps(h7, h0); dump();
fcvtps(h7, h1); dump();
fcvtps(h7, h2); dump();
fcvtps(h7, h4); dump();
fcvtps(h7, h8); dump();
fcvtps(h7, h16); dump();
fcvtps(h7, h31); dump();
fcvtpu(h7, h7); dump();
fcvtpu(h0, h7); dump();
fcvtpu(h1, h7); dump();
fcvtpu(h2, h7); dump();
fcvtpu(h4, h7); dump();
fcvtpu(h8, h7); dump();
fcvtpu(h16, h7); dump();
fcvtpu(h31, h7); dump();
fcvtpu(h7, h7); dump();
fcvtpu(h7, h0); dump();
fcvtpu(h7, h1); dump();
fcvtpu(h7, h2); dump();
fcvtpu(h7, h4); dump();
fcvtpu(h7, h8); dump();
fcvtpu(h7, h16); dump();
fcvtpu(h7, h31); dump();
fcvtzs(h7, h7); dump();
fcvtzs(h0, h7); dump();
fcvtzs(h1, h7); dump();
fcvtzs(h2, h7); dump();
fcvtzs(h4, h7); dump();
fcvtzs(h8, h7); dump();
fcvtzs(h16, h7); dump();
fcvtzs(h31, h7); dump();
fcvtzs(h7, h7); dump();
fcvtzs(h7, h0); dump();
fcvtzs(h7, h1); dump();
fcvtzs(h7, h2); dump();
fcvtzs(h7, h4); dump();
fcvtzs(h7, h8); dump();
fcvtzs(h7, h16); dump();
fcvtzs(h7, h31); dump();
fcvtzu(h7, h7); dump();
fcvtzu(h0, h7); dump();
fcvtzu(h1, h7); dump();
fcvtzu(h2, h7); dump();
fcvtzu(h4, h7); dump();
fcvtzu(h8, h7); dump();
fcvtzu(h16, h7); dump();
fcvtzu(h31, h7); dump();
fcvtzu(h7, h7); dump();
fcvtzu(h7, h0); dump();
fcvtzu(h7, h1); dump();
fcvtzu(h7, h2); dump();
fcvtzu(h7, h4); dump();
fcvtzu(h7, h8); dump();
fcvtzu(h7, h16); dump();
fcvtzu(h7, h31); dump();
scvtf(h7, h7); dump();
scvtf(h0, h7); dump();
scvtf(h1, h7); dump();
scvtf(h2, h7); dump();
scvtf(h4, h7); dump();
scvtf(h8, h7); dump();
scvtf(h16, h7); dump();
scvtf(h31, h7); dump();
scvtf(h7, h7); dump();
scvtf(h7, h0); dump();
scvtf(h7, h1); dump();
scvtf(h7, h2); dump();
scvtf(h7, h4); dump();
scvtf(h7, h8); dump();
scvtf(h7, h16); dump();
scvtf(h7, h31); dump();
ucvtf(h7, h7); dump();
ucvtf(h0, h7); dump();
ucvtf(h1, h7); dump();
ucvtf(h2, h7); dump();
ucvtf(h4, h7); dump();
ucvtf(h8, h7); dump();
ucvtf(h16, h7); dump();
ucvtf(h31, h7); dump();
ucvtf(h7, h7); dump();
ucvtf(h7, h0); dump();
ucvtf(h7, h1); dump();
ucvtf(h7, h2); dump();
ucvtf(h7, h4); dump();
ucvtf(h7, h8); dump();
ucvtf(h7, h16); dump();
ucvtf(h7, h31); dump();
//DataProcSimd_FloatingPointAndIntergerConversion0:1
fcvtas(s7, s7); dump();
fcvtas(s0, s7); dump();
fcvtas(s1, s7); dump();
fcvtas(s2, s7); dump();
fcvtas(s4, s7); dump();
fcvtas(s8, s7); dump();
fcvtas(s16, s7); dump();
fcvtas(s31, s7); dump();
fcvtas(s7, s7); dump();
fcvtas(s7, s0); dump();
fcvtas(s7, s1); dump();
fcvtas(s7, s2); dump();
fcvtas(s7, s4); dump();
fcvtas(s7, s8); dump();
fcvtas(s7, s16); dump();
fcvtas(s7, s31); dump();
fcvtau(s7, s7); dump();
fcvtau(s0, s7); dump();
fcvtau(s1, s7); dump();
fcvtau(s2, s7); dump();
fcvtau(s4, s7); dump();
fcvtau(s8, s7); dump();
fcvtau(s16, s7); dump();
fcvtau(s31, s7); dump();
fcvtau(s7, s7); dump();
fcvtau(s7, s0); dump();
fcvtau(s7, s1); dump();
fcvtau(s7, s2); dump();
fcvtau(s7, s4); dump();
fcvtau(s7, s8); dump();
fcvtau(s7, s16); dump();
fcvtau(s7, s31); dump();
fcvtms(s7, s7); dump();
fcvtms(s0, s7); dump();
fcvtms(s1, s7); dump();
fcvtms(s2, s7); dump();
fcvtms(s4, s7); dump();
fcvtms(s8, s7); dump();
fcvtms(s16, s7); dump();
fcvtms(s31, s7); dump();
fcvtms(s7, s7); dump();
fcvtms(s7, s0); dump();
fcvtms(s7, s1); dump();
fcvtms(s7, s2); dump();
fcvtms(s7, s4); dump();
fcvtms(s7, s8); dump();
fcvtms(s7, s16); dump();
fcvtms(s7, s31); dump();
fcvtmu(s7, s7); dump();
fcvtmu(s0, s7); dump();
fcvtmu(s1, s7); dump();
fcvtmu(s2, s7); dump();
fcvtmu(s4, s7); dump();
fcvtmu(s8, s7); dump();
fcvtmu(s16, s7); dump();
fcvtmu(s31, s7); dump();
fcvtmu(s7, s7); dump();
fcvtmu(s7, s0); dump();
fcvtmu(s7, s1); dump();
fcvtmu(s7, s2); dump();
fcvtmu(s7, s4); dump();
fcvtmu(s7, s8); dump();
fcvtmu(s7, s16); dump();
fcvtmu(s7, s31); dump();
fcvtns(s7, s7); dump();
fcvtns(s0, s7); dump();
fcvtns(s1, s7); dump();
fcvtns(s2, s7); dump();
fcvtns(s4, s7); dump();
fcvtns(s8, s7); dump();
fcvtns(s16, s7); dump();
fcvtns(s31, s7); dump();
fcvtns(s7, s7); dump();
fcvtns(s7, s0); dump();
fcvtns(s7, s1); dump();
fcvtns(s7, s2); dump();
fcvtns(s7, s4); dump();
fcvtns(s7, s8); dump();
fcvtns(s7, s16); dump();
fcvtns(s7, s31); dump();
fcvtnu(s7, s7); dump();
fcvtnu(s0, s7); dump();
fcvtnu(s1, s7); dump();
fcvtnu(s2, s7); dump();
fcvtnu(s4, s7); dump();
fcvtnu(s8, s7); dump();
fcvtnu(s16, s7); dump();
fcvtnu(s31, s7); dump();
fcvtnu(s7, s7); dump();
fcvtnu(s7, s0); dump();
fcvtnu(s7, s1); dump();
fcvtnu(s7, s2); dump();
fcvtnu(s7, s4); dump();
fcvtnu(s7, s8); dump();
fcvtnu(s7, s16); dump();
fcvtnu(s7, s31); dump();
fcvtps(s7, s7); dump();
fcvtps(s0, s7); dump();
fcvtps(s1, s7); dump();
fcvtps(s2, s7); dump();
fcvtps(s4, s7); dump();
fcvtps(s8, s7); dump();
fcvtps(s16, s7); dump();
fcvtps(s31, s7); dump();
fcvtps(s7, s7); dump();
fcvtps(s7, s0); dump();
fcvtps(s7, s1); dump();
fcvtps(s7, s2); dump();
fcvtps(s7, s4); dump();
fcvtps(s7, s8); dump();
fcvtps(s7, s16); dump();
fcvtps(s7, s31); dump();
fcvtpu(s7, s7); dump();
fcvtpu(s0, s7); dump();
fcvtpu(s1, s7); dump();
fcvtpu(s2, s7); dump();
fcvtpu(s4, s7); dump();
fcvtpu(s8, s7); dump();
fcvtpu(s16, s7); dump();
fcvtpu(s31, s7); dump();
fcvtpu(s7, s7); dump();
fcvtpu(s7, s0); dump();
fcvtpu(s7, s1); dump();
fcvtpu(s7, s2); dump();
fcvtpu(s7, s4); dump();
fcvtpu(s7, s8); dump();
fcvtpu(s7, s16); dump();
fcvtpu(s7, s31); dump();
fcvtzs(s7, s7); dump();
fcvtzs(s0, s7); dump();
fcvtzs(s1, s7); dump();
fcvtzs(s2, s7); dump();
fcvtzs(s4, s7); dump();
fcvtzs(s8, s7); dump();
fcvtzs(s16, s7); dump();
fcvtzs(s31, s7); dump();
fcvtzs(s7, s7); dump();
fcvtzs(s7, s0); dump();
fcvtzs(s7, s1); dump();
fcvtzs(s7, s2); dump();
fcvtzs(s7, s4); dump();
fcvtzs(s7, s8); dump();
fcvtzs(s7, s16); dump();
fcvtzs(s7, s31); dump();
fcvtzu(s7, s7); dump();
fcvtzu(s0, s7); dump();
fcvtzu(s1, s7); dump();
fcvtzu(s2, s7); dump();
fcvtzu(s4, s7); dump();
fcvtzu(s8, s7); dump();
fcvtzu(s16, s7); dump();
fcvtzu(s31, s7); dump();
fcvtzu(s7, s7); dump();
fcvtzu(s7, s0); dump();
fcvtzu(s7, s1); dump();
fcvtzu(s7, s2); dump();
fcvtzu(s7, s4); dump();
fcvtzu(s7, s8); dump();
fcvtzu(s7, s16); dump();
fcvtzu(s7, s31); dump();
scvtf(s7, s7); dump();
scvtf(s0, s7); dump();
scvtf(s1, s7); dump();
scvtf(s2, s7); dump();
scvtf(s4, s7); dump();
scvtf(s8, s7); dump();
scvtf(s16, s7); dump();
scvtf(s31, s7); dump();
scvtf(s7, s7); dump();
scvtf(s7, s0); dump();
scvtf(s7, s1); dump();
scvtf(s7, s2); dump();
scvtf(s7, s4); dump();
scvtf(s7, s8); dump();
scvtf(s7, s16); dump();
scvtf(s7, s31); dump();
ucvtf(s7, s7); dump();
ucvtf(s0, s7); dump();
ucvtf(s1, s7); dump();
ucvtf(s2, s7); dump();
ucvtf(s4, s7); dump();
ucvtf(s8, s7); dump();
ucvtf(s16, s7); dump();
ucvtf(s31, s7); dump();
ucvtf(s7, s7); dump();
ucvtf(s7, s0); dump();
ucvtf(s7, s1); dump();
ucvtf(s7, s2); dump();
ucvtf(s7, s4); dump();
ucvtf(s7, s8); dump();
ucvtf(s7, s16); dump();
ucvtf(s7, s31); dump();
//DataProcSimd_FloatingPointAndIntergerConversion0:2
fcvtas(d7, d7); dump();
fcvtas(d0, d7); dump();
fcvtas(d1, d7); dump();
fcvtas(d2, d7); dump();
fcvtas(d4, d7); dump();
fcvtas(d8, d7); dump();
fcvtas(d16, d7); dump();
fcvtas(d31, d7); dump();
fcvtas(d7, d7); dump();
fcvtas(d7, d0); dump();
fcvtas(d7, d1); dump();
fcvtas(d7, d2); dump();
fcvtas(d7, d4); dump();
fcvtas(d7, d8); dump();
fcvtas(d7, d16); dump();
fcvtas(d7, d31); dump();
fcvtau(d7, d7); dump();
fcvtau(d0, d7); dump();
fcvtau(d1, d7); dump();
fcvtau(d2, d7); dump();
fcvtau(d4, d7); dump();
fcvtau(d8, d7); dump();
fcvtau(d16, d7); dump();
fcvtau(d31, d7); dump();
fcvtau(d7, d7); dump();
fcvtau(d7, d0); dump();
fcvtau(d7, d1); dump();
fcvtau(d7, d2); dump();
fcvtau(d7, d4); dump();
fcvtau(d7, d8); dump();
fcvtau(d7, d16); dump();
fcvtau(d7, d31); dump();
fcvtms(d7, d7); dump();
fcvtms(d0, d7); dump();
fcvtms(d1, d7); dump();
fcvtms(d2, d7); dump();
fcvtms(d4, d7); dump();
fcvtms(d8, d7); dump();
fcvtms(d16, d7); dump();
fcvtms(d31, d7); dump();
fcvtms(d7, d7); dump();
fcvtms(d7, d0); dump();
fcvtms(d7, d1); dump();
fcvtms(d7, d2); dump();
fcvtms(d7, d4); dump();
fcvtms(d7, d8); dump();
fcvtms(d7, d16); dump();
fcvtms(d7, d31); dump();
fcvtmu(d7, d7); dump();
fcvtmu(d0, d7); dump();
fcvtmu(d1, d7); dump();
fcvtmu(d2, d7); dump();
fcvtmu(d4, d7); dump();
fcvtmu(d8, d7); dump();
fcvtmu(d16, d7); dump();
fcvtmu(d31, d7); dump();
fcvtmu(d7, d7); dump();
fcvtmu(d7, d0); dump();
fcvtmu(d7, d1); dump();
fcvtmu(d7, d2); dump();
fcvtmu(d7, d4); dump();
fcvtmu(d7, d8); dump();
fcvtmu(d7, d16); dump();
fcvtmu(d7, d31); dump();
fcvtns(d7, d7); dump();
fcvtns(d0, d7); dump();
fcvtns(d1, d7); dump();
fcvtns(d2, d7); dump();
fcvtns(d4, d7); dump();
fcvtns(d8, d7); dump();
fcvtns(d16, d7); dump();
fcvtns(d31, d7); dump();
fcvtns(d7, d7); dump();
fcvtns(d7, d0); dump();
fcvtns(d7, d1); dump();
fcvtns(d7, d2); dump();
fcvtns(d7, d4); dump();
fcvtns(d7, d8); dump();
fcvtns(d7, d16); dump();
fcvtns(d7, d31); dump();
fcvtnu(d7, d7); dump();
fcvtnu(d0, d7); dump();
fcvtnu(d1, d7); dump();
fcvtnu(d2, d7); dump();
fcvtnu(d4, d7); dump();
fcvtnu(d8, d7); dump();
fcvtnu(d16, d7); dump();
fcvtnu(d31, d7); dump();
fcvtnu(d7, d7); dump();
fcvtnu(d7, d0); dump();
fcvtnu(d7, d1); dump();
fcvtnu(d7, d2); dump();
fcvtnu(d7, d4); dump();
fcvtnu(d7, d8); dump();
fcvtnu(d7, d16); dump();
fcvtnu(d7, d31); dump();
fcvtps(d7, d7); dump();
fcvtps(d0, d7); dump();
fcvtps(d1, d7); dump();
fcvtps(d2, d7); dump();
fcvtps(d4, d7); dump();
fcvtps(d8, d7); dump();
fcvtps(d16, d7); dump();
fcvtps(d31, d7); dump();
fcvtps(d7, d7); dump();
fcvtps(d7, d0); dump();
fcvtps(d7, d1); dump();
fcvtps(d7, d2); dump();
fcvtps(d7, d4); dump();
fcvtps(d7, d8); dump();
fcvtps(d7, d16); dump();
fcvtps(d7, d31); dump();
fcvtpu(d7, d7); dump();
fcvtpu(d0, d7); dump();
fcvtpu(d1, d7); dump();
fcvtpu(d2, d7); dump();
fcvtpu(d4, d7); dump();
fcvtpu(d8, d7); dump();
fcvtpu(d16, d7); dump();
fcvtpu(d31, d7); dump();
fcvtpu(d7, d7); dump();
fcvtpu(d7, d0); dump();
fcvtpu(d7, d1); dump();
fcvtpu(d7, d2); dump();
fcvtpu(d7, d4); dump();
fcvtpu(d7, d8); dump();
fcvtpu(d7, d16); dump();
fcvtpu(d7, d31); dump();
fcvtzs(d7, d7); dump();
fcvtzs(d0, d7); dump();
fcvtzs(d1, d7); dump();
fcvtzs(d2, d7); dump();
fcvtzs(d4, d7); dump();
fcvtzs(d8, d7); dump();
fcvtzs(d16, d7); dump();
fcvtzs(d31, d7); dump();
fcvtzs(d7, d7); dump();
fcvtzs(d7, d0); dump();
fcvtzs(d7, d1); dump();
fcvtzs(d7, d2); dump();
fcvtzs(d7, d4); dump();
fcvtzs(d7, d8); dump();
fcvtzs(d7, d16); dump();
fcvtzs(d7, d31); dump();
fcvtzu(d7, d7); dump();
fcvtzu(d0, d7); dump();
fcvtzu(d1, d7); dump();
fcvtzu(d2, d7); dump();
fcvtzu(d4, d7); dump();
fcvtzu(d8, d7); dump();
fcvtzu(d16, d7); dump();
fcvtzu(d31, d7); dump();
fcvtzu(d7, d7); dump();
fcvtzu(d7, d0); dump();
fcvtzu(d7, d1); dump();
fcvtzu(d7, d2); dump();
fcvtzu(d7, d4); dump();
fcvtzu(d7, d8); dump();
fcvtzu(d7, d16); dump();
fcvtzu(d7, d31); dump();
scvtf(d7, d7); dump();
scvtf(d0, d7); dump();
scvtf(d1, d7); dump();
scvtf(d2, d7); dump();
scvtf(d4, d7); dump();
scvtf(d8, d7); dump();
scvtf(d16, d7); dump();
scvtf(d31, d7); dump();
scvtf(d7, d7); dump();
scvtf(d7, d0); dump();
scvtf(d7, d1); dump();
scvtf(d7, d2); dump();
scvtf(d7, d4); dump();
scvtf(d7, d8); dump();
scvtf(d7, d16); dump();
scvtf(d7, d31); dump();
ucvtf(d7, d7); dump();
ucvtf(d0, d7); dump();
ucvtf(d1, d7); dump();
ucvtf(d2, d7); dump();
ucvtf(d4, d7); dump();
ucvtf(d8, d7); dump();
ucvtf(d16, d7); dump();
ucvtf(d31, d7); dump();
ucvtf(d7, d7); dump();
ucvtf(d7, d0); dump();
ucvtf(d7, d1); dump();
ucvtf(d7, d2); dump();
ucvtf(d7, d4); dump();
ucvtf(d7, d8); dump();
ucvtf(d7, d16); dump();
ucvtf(d7, d31); dump();
//DataProcSimd_FloatingPointAndIntergerConversion0:3
fcvtas(v7.h4, v7.h4); dump();
fcvtas(v0.h4, v7.h4); dump();
fcvtas(v1.h4, v7.h4); dump();
fcvtas(v2.h4, v7.h4); dump();
fcvtas(v4.h4, v7.h4); dump();
fcvtas(v8.h4, v7.h4); dump();
fcvtas(v16.h4, v7.h4); dump();
fcvtas(v31.h4, v7.h4); dump();
fcvtas(v7.h4, v7.h4); dump();
fcvtas(v7.h4, v0.h4); dump();
fcvtas(v7.h4, v1.h4); dump();
fcvtas(v7.h4, v2.h4); dump();
fcvtas(v7.h4, v4.h4); dump();
fcvtas(v7.h4, v8.h4); dump();
fcvtas(v7.h4, v16.h4); dump();
fcvtas(v7.h4, v31.h4); dump();
fcvtau(v7.h4, v7.h4); dump();
fcvtau(v0.h4, v7.h4); dump();
fcvtau(v1.h4, v7.h4); dump();
fcvtau(v2.h4, v7.h4); dump();
fcvtau(v4.h4, v7.h4); dump();
fcvtau(v8.h4, v7.h4); dump();
fcvtau(v16.h4, v7.h4); dump();
fcvtau(v31.h4, v7.h4); dump();
fcvtau(v7.h4, v7.h4); dump();
fcvtau(v7.h4, v0.h4); dump();
fcvtau(v7.h4, v1.h4); dump();
fcvtau(v7.h4, v2.h4); dump();
fcvtau(v7.h4, v4.h4); dump();
fcvtau(v7.h4, v8.h4); dump();
fcvtau(v7.h4, v16.h4); dump();
fcvtau(v7.h4, v31.h4); dump();
fcvtms(v7.h4, v7.h4); dump();
fcvtms(v0.h4, v7.h4); dump();
fcvtms(v1.h4, v7.h4); dump();
fcvtms(v2.h4, v7.h4); dump();
fcvtms(v4.h4, v7.h4); dump();
fcvtms(v8.h4, v7.h4); dump();
fcvtms(v16.h4, v7.h4); dump();
fcvtms(v31.h4, v7.h4); dump();
fcvtms(v7.h4, v7.h4); dump();
fcvtms(v7.h4, v0.h4); dump();
fcvtms(v7.h4, v1.h4); dump();
fcvtms(v7.h4, v2.h4); dump();
fcvtms(v7.h4, v4.h4); dump();
fcvtms(v7.h4, v8.h4); dump();
fcvtms(v7.h4, v16.h4); dump();
fcvtms(v7.h4, v31.h4); dump();
fcvtmu(v7.h4, v7.h4); dump();
fcvtmu(v0.h4, v7.h4); dump();
fcvtmu(v1.h4, v7.h4); dump();
fcvtmu(v2.h4, v7.h4); dump();
fcvtmu(v4.h4, v7.h4); dump();
fcvtmu(v8.h4, v7.h4); dump();
fcvtmu(v16.h4, v7.h4); dump();
fcvtmu(v31.h4, v7.h4); dump();
fcvtmu(v7.h4, v7.h4); dump();
fcvtmu(v7.h4, v0.h4); dump();
fcvtmu(v7.h4, v1.h4); dump();
fcvtmu(v7.h4, v2.h4); dump();
fcvtmu(v7.h4, v4.h4); dump();
fcvtmu(v7.h4, v8.h4); dump();
fcvtmu(v7.h4, v16.h4); dump();
fcvtmu(v7.h4, v31.h4); dump();
fcvtns(v7.h4, v7.h4); dump();
fcvtns(v0.h4, v7.h4); dump();
fcvtns(v1.h4, v7.h4); dump();
fcvtns(v2.h4, v7.h4); dump();
fcvtns(v4.h4, v7.h4); dump();
fcvtns(v8.h4, v7.h4); dump();
fcvtns(v16.h4, v7.h4); dump();
fcvtns(v31.h4, v7.h4); dump();
fcvtns(v7.h4, v7.h4); dump();
fcvtns(v7.h4, v0.h4); dump();
fcvtns(v7.h4, v1.h4); dump();
fcvtns(v7.h4, v2.h4); dump();
fcvtns(v7.h4, v4.h4); dump();
fcvtns(v7.h4, v8.h4); dump();
fcvtns(v7.h4, v16.h4); dump();
fcvtns(v7.h4, v31.h4); dump();
fcvtnu(v7.h4, v7.h4); dump();
fcvtnu(v0.h4, v7.h4); dump();
fcvtnu(v1.h4, v7.h4); dump();
fcvtnu(v2.h4, v7.h4); dump();
fcvtnu(v4.h4, v7.h4); dump();
fcvtnu(v8.h4, v7.h4); dump();
fcvtnu(v16.h4, v7.h4); dump();
fcvtnu(v31.h4, v7.h4); dump();
fcvtnu(v7.h4, v7.h4); dump();
fcvtnu(v7.h4, v0.h4); dump();
fcvtnu(v7.h4, v1.h4); dump();
fcvtnu(v7.h4, v2.h4); dump();
fcvtnu(v7.h4, v4.h4); dump();
fcvtnu(v7.h4, v8.h4); dump();
fcvtnu(v7.h4, v16.h4); dump();
fcvtnu(v7.h4, v31.h4); dump();
fcvtps(v7.h4, v7.h4); dump();
fcvtps(v0.h4, v7.h4); dump();
fcvtps(v1.h4, v7.h4); dump();
fcvtps(v2.h4, v7.h4); dump();
fcvtps(v4.h4, v7.h4); dump();
fcvtps(v8.h4, v7.h4); dump();
fcvtps(v16.h4, v7.h4); dump();
fcvtps(v31.h4, v7.h4); dump();
fcvtps(v7.h4, v7.h4); dump();
fcvtps(v7.h4, v0.h4); dump();
fcvtps(v7.h4, v1.h4); dump();
fcvtps(v7.h4, v2.h4); dump();
fcvtps(v7.h4, v4.h4); dump();
fcvtps(v7.h4, v8.h4); dump();
fcvtps(v7.h4, v16.h4); dump();
fcvtps(v7.h4, v31.h4); dump();
fcvtpu(v7.h4, v7.h4); dump();
fcvtpu(v0.h4, v7.h4); dump();
fcvtpu(v1.h4, v7.h4); dump();
fcvtpu(v2.h4, v7.h4); dump();
fcvtpu(v4.h4, v7.h4); dump();
fcvtpu(v8.h4, v7.h4); dump();
fcvtpu(v16.h4, v7.h4); dump();
fcvtpu(v31.h4, v7.h4); dump();
fcvtpu(v7.h4, v7.h4); dump();
fcvtpu(v7.h4, v0.h4); dump();
fcvtpu(v7.h4, v1.h4); dump();
fcvtpu(v7.h4, v2.h4); dump();
fcvtpu(v7.h4, v4.h4); dump();
fcvtpu(v7.h4, v8.h4); dump();
fcvtpu(v7.h4, v16.h4); dump();
fcvtpu(v7.h4, v31.h4); dump();
fcvtzs(v7.h4, v7.h4); dump();
fcvtzs(v0.h4, v7.h4); dump();
fcvtzs(v1.h4, v7.h4); dump();
fcvtzs(v2.h4, v7.h4); dump();
fcvtzs(v4.h4, v7.h4); dump();
fcvtzs(v8.h4, v7.h4); dump();
fcvtzs(v16.h4, v7.h4); dump();
fcvtzs(v31.h4, v7.h4); dump();
fcvtzs(v7.h4, v7.h4); dump();
fcvtzs(v7.h4, v0.h4); dump();
fcvtzs(v7.h4, v1.h4); dump();
fcvtzs(v7.h4, v2.h4); dump();
fcvtzs(v7.h4, v4.h4); dump();
fcvtzs(v7.h4, v8.h4); dump();
fcvtzs(v7.h4, v16.h4); dump();
fcvtzs(v7.h4, v31.h4); dump();
fcvtzu(v7.h4, v7.h4); dump();
fcvtzu(v0.h4, v7.h4); dump();
fcvtzu(v1.h4, v7.h4); dump();
fcvtzu(v2.h4, v7.h4); dump();
fcvtzu(v4.h4, v7.h4); dump();
fcvtzu(v8.h4, v7.h4); dump();
fcvtzu(v16.h4, v7.h4); dump();
fcvtzu(v31.h4, v7.h4); dump();
fcvtzu(v7.h4, v7.h4); dump();
fcvtzu(v7.h4, v0.h4); dump();
fcvtzu(v7.h4, v1.h4); dump();
fcvtzu(v7.h4, v2.h4); dump();
fcvtzu(v7.h4, v4.h4); dump();
fcvtzu(v7.h4, v8.h4); dump();
fcvtzu(v7.h4, v16.h4); dump();
fcvtzu(v7.h4, v31.h4); dump();
scvtf(v7.h4, v7.h4); dump();
scvtf(v0.h4, v7.h4); dump();
scvtf(v1.h4, v7.h4); dump();
scvtf(v2.h4, v7.h4); dump();
scvtf(v4.h4, v7.h4); dump();
scvtf(v8.h4, v7.h4); dump();
scvtf(v16.h4, v7.h4); dump();
scvtf(v31.h4, v7.h4); dump();
scvtf(v7.h4, v7.h4); dump();
scvtf(v7.h4, v0.h4); dump();
scvtf(v7.h4, v1.h4); dump();
scvtf(v7.h4, v2.h4); dump();
scvtf(v7.h4, v4.h4); dump();
scvtf(v7.h4, v8.h4); dump();
scvtf(v7.h4, v16.h4); dump();
scvtf(v7.h4, v31.h4); dump();
ucvtf(v7.h4, v7.h4); dump();
ucvtf(v0.h4, v7.h4); dump();
ucvtf(v1.h4, v7.h4); dump();
ucvtf(v2.h4, v7.h4); dump();
ucvtf(v4.h4, v7.h4); dump();
ucvtf(v8.h4, v7.h4); dump();
ucvtf(v16.h4, v7.h4); dump();
ucvtf(v31.h4, v7.h4); dump();
ucvtf(v7.h4, v7.h4); dump();
ucvtf(v7.h4, v0.h4); dump();
ucvtf(v7.h4, v1.h4); dump();
ucvtf(v7.h4, v2.h4); dump();
ucvtf(v7.h4, v4.h4); dump();
ucvtf(v7.h4, v8.h4); dump();
ucvtf(v7.h4, v16.h4); dump();
ucvtf(v7.h4, v31.h4); dump();
//DataProcSimd_FloatingPointAndIntergerConversion0:4
fcvtas(v7.h8, v7.h8); dump();
fcvtas(v0.h8, v7.h8); dump();
fcvtas(v1.h8, v7.h8); dump();
fcvtas(v2.h8, v7.h8); dump();
fcvtas(v4.h8, v7.h8); dump();
fcvtas(v8.h8, v7.h8); dump();
fcvtas(v16.h8, v7.h8); dump();
fcvtas(v31.h8, v7.h8); dump();
fcvtas(v7.h8, v7.h8); dump();
fcvtas(v7.h8, v0.h8); dump();
fcvtas(v7.h8, v1.h8); dump();
fcvtas(v7.h8, v2.h8); dump();
fcvtas(v7.h8, v4.h8); dump();
fcvtas(v7.h8, v8.h8); dump();
fcvtas(v7.h8, v16.h8); dump();
fcvtas(v7.h8, v31.h8); dump();
fcvtau(v7.h8, v7.h8); dump();
fcvtau(v0.h8, v7.h8); dump();
fcvtau(v1.h8, v7.h8); dump();
fcvtau(v2.h8, v7.h8); dump();
fcvtau(v4.h8, v7.h8); dump();
fcvtau(v8.h8, v7.h8); dump();
fcvtau(v16.h8, v7.h8); dump();
fcvtau(v31.h8, v7.h8); dump();
fcvtau(v7.h8, v7.h8); dump();
fcvtau(v7.h8, v0.h8); dump();
fcvtau(v7.h8, v1.h8); dump();
fcvtau(v7.h8, v2.h8); dump();
fcvtau(v7.h8, v4.h8); dump();
fcvtau(v7.h8, v8.h8); dump();
fcvtau(v7.h8, v16.h8); dump();
fcvtau(v7.h8, v31.h8); dump();
fcvtms(v7.h8, v7.h8); dump();
fcvtms(v0.h8, v7.h8); dump();
fcvtms(v1.h8, v7.h8); dump();
fcvtms(v2.h8, v7.h8); dump();
fcvtms(v4.h8, v7.h8); dump();
fcvtms(v8.h8, v7.h8); dump();
fcvtms(v16.h8, v7.h8); dump();
fcvtms(v31.h8, v7.h8); dump();
fcvtms(v7.h8, v7.h8); dump();
fcvtms(v7.h8, v0.h8); dump();
fcvtms(v7.h8, v1.h8); dump();
fcvtms(v7.h8, v2.h8); dump();
fcvtms(v7.h8, v4.h8); dump();
fcvtms(v7.h8, v8.h8); dump();
fcvtms(v7.h8, v16.h8); dump();
fcvtms(v7.h8, v31.h8); dump();
fcvtmu(v7.h8, v7.h8); dump();
fcvtmu(v0.h8, v7.h8); dump();
fcvtmu(v1.h8, v7.h8); dump();
fcvtmu(v2.h8, v7.h8); dump();
fcvtmu(v4.h8, v7.h8); dump();
fcvtmu(v8.h8, v7.h8); dump();
fcvtmu(v16.h8, v7.h8); dump();
fcvtmu(v31.h8, v7.h8); dump();
fcvtmu(v7.h8, v7.h8); dump();
fcvtmu(v7.h8, v0.h8); dump();
fcvtmu(v7.h8, v1.h8); dump();
fcvtmu(v7.h8, v2.h8); dump();
fcvtmu(v7.h8, v4.h8); dump();
fcvtmu(v7.h8, v8.h8); dump();
fcvtmu(v7.h8, v16.h8); dump();
fcvtmu(v7.h8, v31.h8); dump();
fcvtns(v7.h8, v7.h8); dump();
fcvtns(v0.h8, v7.h8); dump();
fcvtns(v1.h8, v7.h8); dump();
fcvtns(v2.h8, v7.h8); dump();
fcvtns(v4.h8, v7.h8); dump();
fcvtns(v8.h8, v7.h8); dump();
fcvtns(v16.h8, v7.h8); dump();
fcvtns(v31.h8, v7.h8); dump();
fcvtns(v7.h8, v7.h8); dump();
fcvtns(v7.h8, v0.h8); dump();
fcvtns(v7.h8, v1.h8); dump();
fcvtns(v7.h8, v2.h8); dump();
fcvtns(v7.h8, v4.h8); dump();
fcvtns(v7.h8, v8.h8); dump();
fcvtns(v7.h8, v16.h8); dump();
fcvtns(v7.h8, v31.h8); dump();
fcvtnu(v7.h8, v7.h8); dump();
fcvtnu(v0.h8, v7.h8); dump();
fcvtnu(v1.h8, v7.h8); dump();
fcvtnu(v2.h8, v7.h8); dump();
fcvtnu(v4.h8, v7.h8); dump();
fcvtnu(v8.h8, v7.h8); dump();
fcvtnu(v16.h8, v7.h8); dump();
fcvtnu(v31.h8, v7.h8); dump();
fcvtnu(v7.h8, v7.h8); dump();
fcvtnu(v7.h8, v0.h8); dump();
fcvtnu(v7.h8, v1.h8); dump();
fcvtnu(v7.h8, v2.h8); dump();
fcvtnu(v7.h8, v4.h8); dump();
fcvtnu(v7.h8, v8.h8); dump();
fcvtnu(v7.h8, v16.h8); dump();
fcvtnu(v7.h8, v31.h8); dump();
fcvtps(v7.h8, v7.h8); dump();
fcvtps(v0.h8, v7.h8); dump();
fcvtps(v1.h8, v7.h8); dump();
fcvtps(v2.h8, v7.h8); dump();
fcvtps(v4.h8, v7.h8); dump();
fcvtps(v8.h8, v7.h8); dump();
fcvtps(v16.h8, v7.h8); dump();
fcvtps(v31.h8, v7.h8); dump();
fcvtps(v7.h8, v7.h8); dump();
fcvtps(v7.h8, v0.h8); dump();
fcvtps(v7.h8, v1.h8); dump();
fcvtps(v7.h8, v2.h8); dump();
fcvtps(v7.h8, v4.h8); dump();
fcvtps(v7.h8, v8.h8); dump();
fcvtps(v7.h8, v16.h8); dump();
fcvtps(v7.h8, v31.h8); dump();
fcvtpu(v7.h8, v7.h8); dump();
fcvtpu(v0.h8, v7.h8); dump();
fcvtpu(v1.h8, v7.h8); dump();
fcvtpu(v2.h8, v7.h8); dump();
fcvtpu(v4.h8, v7.h8); dump();
fcvtpu(v8.h8, v7.h8); dump();
fcvtpu(v16.h8, v7.h8); dump();
fcvtpu(v31.h8, v7.h8); dump();
fcvtpu(v7.h8, v7.h8); dump();
fcvtpu(v7.h8, v0.h8); dump();
fcvtpu(v7.h8, v1.h8); dump();
fcvtpu(v7.h8, v2.h8); dump();
fcvtpu(v7.h8, v4.h8); dump();
fcvtpu(v7.h8, v8.h8); dump();
fcvtpu(v7.h8, v16.h8); dump();
fcvtpu(v7.h8, v31.h8); dump();
fcvtzs(v7.h8, v7.h8); dump();
fcvtzs(v0.h8, v7.h8); dump();
fcvtzs(v1.h8, v7.h8); dump();
fcvtzs(v2.h8, v7.h8); dump();
fcvtzs(v4.h8, v7.h8); dump();
fcvtzs(v8.h8, v7.h8); dump();
fcvtzs(v16.h8, v7.h8); dump();
fcvtzs(v31.h8, v7.h8); dump();
fcvtzs(v7.h8, v7.h8); dump();
fcvtzs(v7.h8, v0.h8); dump();
fcvtzs(v7.h8, v1.h8); dump();
fcvtzs(v7.h8, v2.h8); dump();
fcvtzs(v7.h8, v4.h8); dump();
fcvtzs(v7.h8, v8.h8); dump();
fcvtzs(v7.h8, v16.h8); dump();
fcvtzs(v7.h8, v31.h8); dump();
fcvtzu(v7.h8, v7.h8); dump();
fcvtzu(v0.h8, v7.h8); dump();
fcvtzu(v1.h8, v7.h8); dump();
fcvtzu(v2.h8, v7.h8); dump();
fcvtzu(v4.h8, v7.h8); dump();
fcvtzu(v8.h8, v7.h8); dump();
fcvtzu(v16.h8, v7.h8); dump();
fcvtzu(v31.h8, v7.h8); dump();
fcvtzu(v7.h8, v7.h8); dump();
fcvtzu(v7.h8, v0.h8); dump();
fcvtzu(v7.h8, v1.h8); dump();
fcvtzu(v7.h8, v2.h8); dump();
fcvtzu(v7.h8, v4.h8); dump();
fcvtzu(v7.h8, v8.h8); dump();
fcvtzu(v7.h8, v16.h8); dump();
fcvtzu(v7.h8, v31.h8); dump();
scvtf(v7.h8, v7.h8); dump();
scvtf(v0.h8, v7.h8); dump();
scvtf(v1.h8, v7.h8); dump();
scvtf(v2.h8, v7.h8); dump();
scvtf(v4.h8, v7.h8); dump();
scvtf(v8.h8, v7.h8); dump();
scvtf(v16.h8, v7.h8); dump();
scvtf(v31.h8, v7.h8); dump();
scvtf(v7.h8, v7.h8); dump();
scvtf(v7.h8, v0.h8); dump();
scvtf(v7.h8, v1.h8); dump();
scvtf(v7.h8, v2.h8); dump();
scvtf(v7.h8, v4.h8); dump();
scvtf(v7.h8, v8.h8); dump();
scvtf(v7.h8, v16.h8); dump();
scvtf(v7.h8, v31.h8); dump();
ucvtf(v7.h8, v7.h8); dump();
ucvtf(v0.h8, v7.h8); dump();
ucvtf(v1.h8, v7.h8); dump();
ucvtf(v2.h8, v7.h8); dump();
ucvtf(v4.h8, v7.h8); dump();
ucvtf(v8.h8, v7.h8); dump();
ucvtf(v16.h8, v7.h8); dump();
ucvtf(v31.h8, v7.h8); dump();
ucvtf(v7.h8, v7.h8); dump();
ucvtf(v7.h8, v0.h8); dump();
ucvtf(v7.h8, v1.h8); dump();
ucvtf(v7.h8, v2.h8); dump();
ucvtf(v7.h8, v4.h8); dump();
ucvtf(v7.h8, v8.h8); dump();
ucvtf(v7.h8, v16.h8); dump();
ucvtf(v7.h8, v31.h8); dump();
//DataProcSimd_FloatingPointAndIntergerConversion0:5
fcvtas(v7.s2, v7.s2); dump();
fcvtas(v0.s2, v7.s2); dump();
fcvtas(v1.s2, v7.s2); dump();
fcvtas(v2.s2, v7.s2); dump();
fcvtas(v4.s2, v7.s2); dump();
fcvtas(v8.s2, v7.s2); dump();
fcvtas(v16.s2, v7.s2); dump();
fcvtas(v31.s2, v7.s2); dump();
fcvtas(v7.s2, v7.s2); dump();
fcvtas(v7.s2, v0.s2); dump();
fcvtas(v7.s2, v1.s2); dump();
fcvtas(v7.s2, v2.s2); dump();
fcvtas(v7.s2, v4.s2); dump();
fcvtas(v7.s2, v8.s2); dump();
fcvtas(v7.s2, v16.s2); dump();
fcvtas(v7.s2, v31.s2); dump();
fcvtau(v7.s2, v7.s2); dump();
fcvtau(v0.s2, v7.s2); dump();
fcvtau(v1.s2, v7.s2); dump();
fcvtau(v2.s2, v7.s2); dump();
fcvtau(v4.s2, v7.s2); dump();
fcvtau(v8.s2, v7.s2); dump();
fcvtau(v16.s2, v7.s2); dump();
fcvtau(v31.s2, v7.s2); dump();
fcvtau(v7.s2, v7.s2); dump();
fcvtau(v7.s2, v0.s2); dump();
fcvtau(v7.s2, v1.s2); dump();
fcvtau(v7.s2, v2.s2); dump();
fcvtau(v7.s2, v4.s2); dump();
fcvtau(v7.s2, v8.s2); dump();
fcvtau(v7.s2, v16.s2); dump();
fcvtau(v7.s2, v31.s2); dump();
fcvtms(v7.s2, v7.s2); dump();
fcvtms(v0.s2, v7.s2); dump();
fcvtms(v1.s2, v7.s2); dump();
fcvtms(v2.s2, v7.s2); dump();
fcvtms(v4.s2, v7.s2); dump();
fcvtms(v8.s2, v7.s2); dump();
fcvtms(v16.s2, v7.s2); dump();
fcvtms(v31.s2, v7.s2); dump();
fcvtms(v7.s2, v7.s2); dump();
fcvtms(v7.s2, v0.s2); dump();
fcvtms(v7.s2, v1.s2); dump();
fcvtms(v7.s2, v2.s2); dump();
fcvtms(v7.s2, v4.s2); dump();
fcvtms(v7.s2, v8.s2); dump();
fcvtms(v7.s2, v16.s2); dump();
fcvtms(v7.s2, v31.s2); dump();
fcvtmu(v7.s2, v7.s2); dump();
fcvtmu(v0.s2, v7.s2); dump();
fcvtmu(v1.s2, v7.s2); dump();
fcvtmu(v2.s2, v7.s2); dump();
fcvtmu(v4.s2, v7.s2); dump();
fcvtmu(v8.s2, v7.s2); dump();
fcvtmu(v16.s2, v7.s2); dump();
fcvtmu(v31.s2, v7.s2); dump();
fcvtmu(v7.s2, v7.s2); dump();
fcvtmu(v7.s2, v0.s2); dump();
fcvtmu(v7.s2, v1.s2); dump();
fcvtmu(v7.s2, v2.s2); dump();
fcvtmu(v7.s2, v4.s2); dump();
fcvtmu(v7.s2, v8.s2); dump();
fcvtmu(v7.s2, v16.s2); dump();
fcvtmu(v7.s2, v31.s2); dump();
fcvtns(v7.s2, v7.s2); dump();
fcvtns(v0.s2, v7.s2); dump();
fcvtns(v1.s2, v7.s2); dump();
fcvtns(v2.s2, v7.s2); dump();
fcvtns(v4.s2, v7.s2); dump();
fcvtns(v8.s2, v7.s2); dump();
fcvtns(v16.s2, v7.s2); dump();
fcvtns(v31.s2, v7.s2); dump();
fcvtns(v7.s2, v7.s2); dump();
fcvtns(v7.s2, v0.s2); dump();
fcvtns(v7.s2, v1.s2); dump();
fcvtns(v7.s2, v2.s2); dump();
fcvtns(v7.s2, v4.s2); dump();
fcvtns(v7.s2, v8.s2); dump();
fcvtns(v7.s2, v16.s2); dump();
fcvtns(v7.s2, v31.s2); dump();
fcvtnu(v7.s2, v7.s2); dump();
fcvtnu(v0.s2, v7.s2); dump();
fcvtnu(v1.s2, v7.s2); dump();
fcvtnu(v2.s2, v7.s2); dump();
fcvtnu(v4.s2, v7.s2); dump();
fcvtnu(v8.s2, v7.s2); dump();
fcvtnu(v16.s2, v7.s2); dump();
fcvtnu(v31.s2, v7.s2); dump();
fcvtnu(v7.s2, v7.s2); dump();
fcvtnu(v7.s2, v0.s2); dump();
fcvtnu(v7.s2, v1.s2); dump();
fcvtnu(v7.s2, v2.s2); dump();
fcvtnu(v7.s2, v4.s2); dump();
fcvtnu(v7.s2, v8.s2); dump();
fcvtnu(v7.s2, v16.s2); dump();
fcvtnu(v7.s2, v31.s2); dump();
fcvtps(v7.s2, v7.s2); dump();
fcvtps(v0.s2, v7.s2); dump();
fcvtps(v1.s2, v7.s2); dump();
fcvtps(v2.s2, v7.s2); dump();
fcvtps(v4.s2, v7.s2); dump();
fcvtps(v8.s2, v7.s2); dump();
fcvtps(v16.s2, v7.s2); dump();
fcvtps(v31.s2, v7.s2); dump();
fcvtps(v7.s2, v7.s2); dump();
fcvtps(v7.s2, v0.s2); dump();
fcvtps(v7.s2, v1.s2); dump();
fcvtps(v7.s2, v2.s2); dump();
fcvtps(v7.s2, v4.s2); dump();
fcvtps(v7.s2, v8.s2); dump();
fcvtps(v7.s2, v16.s2); dump();
fcvtps(v7.s2, v31.s2); dump();
fcvtpu(v7.s2, v7.s2); dump();
fcvtpu(v0.s2, v7.s2); dump();
fcvtpu(v1.s2, v7.s2); dump();
fcvtpu(v2.s2, v7.s2); dump();
fcvtpu(v4.s2, v7.s2); dump();
fcvtpu(v8.s2, v7.s2); dump();
fcvtpu(v16.s2, v7.s2); dump();
fcvtpu(v31.s2, v7.s2); dump();
fcvtpu(v7.s2, v7.s2); dump();
fcvtpu(v7.s2, v0.s2); dump();
fcvtpu(v7.s2, v1.s2); dump();
fcvtpu(v7.s2, v2.s2); dump();
fcvtpu(v7.s2, v4.s2); dump();
fcvtpu(v7.s2, v8.s2); dump();
fcvtpu(v7.s2, v16.s2); dump();
fcvtpu(v7.s2, v31.s2); dump();
fcvtzs(v7.s2, v7.s2); dump();
fcvtzs(v0.s2, v7.s2); dump();
fcvtzs(v1.s2, v7.s2); dump();
fcvtzs(v2.s2, v7.s2); dump();
fcvtzs(v4.s2, v7.s2); dump();
fcvtzs(v8.s2, v7.s2); dump();
fcvtzs(v16.s2, v7.s2); dump();
fcvtzs(v31.s2, v7.s2); dump();
fcvtzs(v7.s2, v7.s2); dump();
fcvtzs(v7.s2, v0.s2); dump();
fcvtzs(v7.s2, v1.s2); dump();
fcvtzs(v7.s2, v2.s2); dump();
fcvtzs(v7.s2, v4.s2); dump();
fcvtzs(v7.s2, v8.s2); dump();
fcvtzs(v7.s2, v16.s2); dump();
fcvtzs(v7.s2, v31.s2); dump();
fcvtzu(v7.s2, v7.s2); dump();
fcvtzu(v0.s2, v7.s2); dump();
fcvtzu(v1.s2, v7.s2); dump();
fcvtzu(v2.s2, v7.s2); dump();
fcvtzu(v4.s2, v7.s2); dump();
fcvtzu(v8.s2, v7.s2); dump();
fcvtzu(v16.s2, v7.s2); dump();
fcvtzu(v31.s2, v7.s2); dump();
fcvtzu(v7.s2, v7.s2); dump();
fcvtzu(v7.s2, v0.s2); dump();
fcvtzu(v7.s2, v1.s2); dump();
fcvtzu(v7.s2, v2.s2); dump();
fcvtzu(v7.s2, v4.s2); dump();
fcvtzu(v7.s2, v8.s2); dump();
fcvtzu(v7.s2, v16.s2); dump();
fcvtzu(v7.s2, v31.s2); dump();
scvtf(v7.s2, v7.s2); dump();
scvtf(v0.s2, v7.s2); dump();
scvtf(v1.s2, v7.s2); dump();
scvtf(v2.s2, v7.s2); dump();
scvtf(v4.s2, v7.s2); dump();
scvtf(v8.s2, v7.s2); dump();
scvtf(v16.s2, v7.s2); dump();
scvtf(v31.s2, v7.s2); dump();
scvtf(v7.s2, v7.s2); dump();
scvtf(v7.s2, v0.s2); dump();
scvtf(v7.s2, v1.s2); dump();
scvtf(v7.s2, v2.s2); dump();
scvtf(v7.s2, v4.s2); dump();
scvtf(v7.s2, v8.s2); dump();
scvtf(v7.s2, v16.s2); dump();
scvtf(v7.s2, v31.s2); dump();
ucvtf(v7.s2, v7.s2); dump();
ucvtf(v0.s2, v7.s2); dump();
ucvtf(v1.s2, v7.s2); dump();
ucvtf(v2.s2, v7.s2); dump();
ucvtf(v4.s2, v7.s2); dump();
ucvtf(v8.s2, v7.s2); dump();
ucvtf(v16.s2, v7.s2); dump();
ucvtf(v31.s2, v7.s2); dump();
ucvtf(v7.s2, v7.s2); dump();
ucvtf(v7.s2, v0.s2); dump();
ucvtf(v7.s2, v1.s2); dump();
ucvtf(v7.s2, v2.s2); dump();
ucvtf(v7.s2, v4.s2); dump();
ucvtf(v7.s2, v8.s2); dump();
ucvtf(v7.s2, v16.s2); dump();
ucvtf(v7.s2, v31.s2); dump();
//DataProcSimd_FloatingPointAndIntergerConversion0:6
fcvtas(v7.s4, v7.s4); dump();
fcvtas(v0.s4, v7.s4); dump();
fcvtas(v1.s4, v7.s4); dump();
fcvtas(v2.s4, v7.s4); dump();
fcvtas(v4.s4, v7.s4); dump();
fcvtas(v8.s4, v7.s4); dump();
fcvtas(v16.s4, v7.s4); dump();
fcvtas(v31.s4, v7.s4); dump();
fcvtas(v7.s4, v7.s4); dump();
fcvtas(v7.s4, v0.s4); dump();
fcvtas(v7.s4, v1.s4); dump();
fcvtas(v7.s4, v2.s4); dump();
fcvtas(v7.s4, v4.s4); dump();
fcvtas(v7.s4, v8.s4); dump();
fcvtas(v7.s4, v16.s4); dump();
fcvtas(v7.s4, v31.s4); dump();
fcvtau(v7.s4, v7.s4); dump();
fcvtau(v0.s4, v7.s4); dump();
fcvtau(v1.s4, v7.s4); dump();
fcvtau(v2.s4, v7.s4); dump();
fcvtau(v4.s4, v7.s4); dump();
fcvtau(v8.s4, v7.s4); dump();
fcvtau(v16.s4, v7.s4); dump();
fcvtau(v31.s4, v7.s4); dump();
fcvtau(v7.s4, v7.s4); dump();
fcvtau(v7.s4, v0.s4); dump();
fcvtau(v7.s4, v1.s4); dump();
fcvtau(v7.s4, v2.s4); dump();
fcvtau(v7.s4, v4.s4); dump();
fcvtau(v7.s4, v8.s4); dump();
fcvtau(v7.s4, v16.s4); dump();
fcvtau(v7.s4, v31.s4); dump();
fcvtms(v7.s4, v7.s4); dump();
fcvtms(v0.s4, v7.s4); dump();
fcvtms(v1.s4, v7.s4); dump();
fcvtms(v2.s4, v7.s4); dump();
fcvtms(v4.s4, v7.s4); dump();
fcvtms(v8.s4, v7.s4); dump();
fcvtms(v16.s4, v7.s4); dump();
fcvtms(v31.s4, v7.s4); dump();
fcvtms(v7.s4, v7.s4); dump();
fcvtms(v7.s4, v0.s4); dump();
fcvtms(v7.s4, v1.s4); dump();
fcvtms(v7.s4, v2.s4); dump();
fcvtms(v7.s4, v4.s4); dump();
fcvtms(v7.s4, v8.s4); dump();
fcvtms(v7.s4, v16.s4); dump();
fcvtms(v7.s4, v31.s4); dump();
fcvtmu(v7.s4, v7.s4); dump();
fcvtmu(v0.s4, v7.s4); dump();
fcvtmu(v1.s4, v7.s4); dump();
fcvtmu(v2.s4, v7.s4); dump();
fcvtmu(v4.s4, v7.s4); dump();
fcvtmu(v8.s4, v7.s4); dump();
fcvtmu(v16.s4, v7.s4); dump();
fcvtmu(v31.s4, v7.s4); dump();
fcvtmu(v7.s4, v7.s4); dump();
fcvtmu(v7.s4, v0.s4); dump();
fcvtmu(v7.s4, v1.s4); dump();
fcvtmu(v7.s4, v2.s4); dump();
fcvtmu(v7.s4, v4.s4); dump();
fcvtmu(v7.s4, v8.s4); dump();
fcvtmu(v7.s4, v16.s4); dump();
fcvtmu(v7.s4, v31.s4); dump();
fcvtns(v7.s4, v7.s4); dump();
fcvtns(v0.s4, v7.s4); dump();
fcvtns(v1.s4, v7.s4); dump();
fcvtns(v2.s4, v7.s4); dump();
fcvtns(v4.s4, v7.s4); dump();
fcvtns(v8.s4, v7.s4); dump();
fcvtns(v16.s4, v7.s4); dump();
fcvtns(v31.s4, v7.s4); dump();
fcvtns(v7.s4, v7.s4); dump();
fcvtns(v7.s4, v0.s4); dump();
fcvtns(v7.s4, v1.s4); dump();
fcvtns(v7.s4, v2.s4); dump();
fcvtns(v7.s4, v4.s4); dump();
fcvtns(v7.s4, v8.s4); dump();
fcvtns(v7.s4, v16.s4); dump();
fcvtns(v7.s4, v31.s4); dump();
fcvtnu(v7.s4, v7.s4); dump();
fcvtnu(v0.s4, v7.s4); dump();
fcvtnu(v1.s4, v7.s4); dump();
fcvtnu(v2.s4, v7.s4); dump();
fcvtnu(v4.s4, v7.s4); dump();
fcvtnu(v8.s4, v7.s4); dump();
fcvtnu(v16.s4, v7.s4); dump();
fcvtnu(v31.s4, v7.s4); dump();
fcvtnu(v7.s4, v7.s4); dump();
fcvtnu(v7.s4, v0.s4); dump();
fcvtnu(v7.s4, v1.s4); dump();
fcvtnu(v7.s4, v2.s4); dump();
fcvtnu(v7.s4, v4.s4); dump();
fcvtnu(v7.s4, v8.s4); dump();
fcvtnu(v7.s4, v16.s4); dump();
fcvtnu(v7.s4, v31.s4); dump();
fcvtps(v7.s4, v7.s4); dump();
fcvtps(v0.s4, v7.s4); dump();
fcvtps(v1.s4, v7.s4); dump();
fcvtps(v2.s4, v7.s4); dump();
fcvtps(v4.s4, v7.s4); dump();
fcvtps(v8.s4, v7.s4); dump();
fcvtps(v16.s4, v7.s4); dump();
fcvtps(v31.s4, v7.s4); dump();
fcvtps(v7.s4, v7.s4); dump();
fcvtps(v7.s4, v0.s4); dump();
fcvtps(v7.s4, v1.s4); dump();
fcvtps(v7.s4, v2.s4); dump();
fcvtps(v7.s4, v4.s4); dump();
fcvtps(v7.s4, v8.s4); dump();
fcvtps(v7.s4, v16.s4); dump();
fcvtps(v7.s4, v31.s4); dump();
fcvtpu(v7.s4, v7.s4); dump();
fcvtpu(v0.s4, v7.s4); dump();
fcvtpu(v1.s4, v7.s4); dump();
fcvtpu(v2.s4, v7.s4); dump();
fcvtpu(v4.s4, v7.s4); dump();
fcvtpu(v8.s4, v7.s4); dump();
fcvtpu(v16.s4, v7.s4); dump();
fcvtpu(v31.s4, v7.s4); dump();
fcvtpu(v7.s4, v7.s4); dump();
fcvtpu(v7.s4, v0.s4); dump();
fcvtpu(v7.s4, v1.s4); dump();
fcvtpu(v7.s4, v2.s4); dump();
fcvtpu(v7.s4, v4.s4); dump();
fcvtpu(v7.s4, v8.s4); dump();
fcvtpu(v7.s4, v16.s4); dump();
fcvtpu(v7.s4, v31.s4); dump();
fcvtzs(v7.s4, v7.s4); dump();
fcvtzs(v0.s4, v7.s4); dump();
fcvtzs(v1.s4, v7.s4); dump();
fcvtzs(v2.s4, v7.s4); dump();
fcvtzs(v4.s4, v7.s4); dump();
fcvtzs(v8.s4, v7.s4); dump();
fcvtzs(v16.s4, v7.s4); dump();
fcvtzs(v31.s4, v7.s4); dump();
fcvtzs(v7.s4, v7.s4); dump();
fcvtzs(v7.s4, v0.s4); dump();
fcvtzs(v7.s4, v1.s4); dump();
fcvtzs(v7.s4, v2.s4); dump();
fcvtzs(v7.s4, v4.s4); dump();
fcvtzs(v7.s4, v8.s4); dump();
fcvtzs(v7.s4, v16.s4); dump();
fcvtzs(v7.s4, v31.s4); dump();
fcvtzu(v7.s4, v7.s4); dump();
fcvtzu(v0.s4, v7.s4); dump();
fcvtzu(v1.s4, v7.s4); dump();
fcvtzu(v2.s4, v7.s4); dump();
fcvtzu(v4.s4, v7.s4); dump();
fcvtzu(v8.s4, v7.s4); dump();
fcvtzu(v16.s4, v7.s4); dump();
fcvtzu(v31.s4, v7.s4); dump();
fcvtzu(v7.s4, v7.s4); dump();
fcvtzu(v7.s4, v0.s4); dump();
fcvtzu(v7.s4, v1.s4); dump();
fcvtzu(v7.s4, v2.s4); dump();
fcvtzu(v7.s4, v4.s4); dump();
fcvtzu(v7.s4, v8.s4); dump();
fcvtzu(v7.s4, v16.s4); dump();
fcvtzu(v7.s4, v31.s4); dump();
scvtf(v7.s4, v7.s4); dump();
scvtf(v0.s4, v7.s4); dump();
scvtf(v1.s4, v7.s4); dump();
scvtf(v2.s4, v7.s4); dump();
scvtf(v4.s4, v7.s4); dump();
scvtf(v8.s4, v7.s4); dump();
scvtf(v16.s4, v7.s4); dump();
scvtf(v31.s4, v7.s4); dump();
scvtf(v7.s4, v7.s4); dump();
scvtf(v7.s4, v0.s4); dump();
scvtf(v7.s4, v1.s4); dump();
scvtf(v7.s4, v2.s4); dump();
scvtf(v7.s4, v4.s4); dump();
scvtf(v7.s4, v8.s4); dump();
scvtf(v7.s4, v16.s4); dump();
scvtf(v7.s4, v31.s4); dump();
ucvtf(v7.s4, v7.s4); dump();
ucvtf(v0.s4, v7.s4); dump();
ucvtf(v1.s4, v7.s4); dump();
ucvtf(v2.s4, v7.s4); dump();
ucvtf(v4.s4, v7.s4); dump();
ucvtf(v8.s4, v7.s4); dump();
ucvtf(v16.s4, v7.s4); dump();
ucvtf(v31.s4, v7.s4); dump();
ucvtf(v7.s4, v7.s4); dump();
ucvtf(v7.s4, v0.s4); dump();
ucvtf(v7.s4, v1.s4); dump();
ucvtf(v7.s4, v2.s4); dump();
ucvtf(v7.s4, v4.s4); dump();
ucvtf(v7.s4, v8.s4); dump();
ucvtf(v7.s4, v16.s4); dump();
ucvtf(v7.s4, v31.s4); dump();
//DataProcSimd_FloatingPointAndIntergerConversion0:7
fcvtas(v7.d2, v7.d2); dump();
fcvtas(v0.d2, v7.d2); dump();
fcvtas(v1.d2, v7.d2); dump();
fcvtas(v2.d2, v7.d2); dump();
fcvtas(v4.d2, v7.d2); dump();
fcvtas(v8.d2, v7.d2); dump();
fcvtas(v16.d2, v7.d2); dump();
fcvtas(v31.d2, v7.d2); dump();
fcvtas(v7.d2, v7.d2); dump();
fcvtas(v7.d2, v0.d2); dump();
fcvtas(v7.d2, v1.d2); dump();
fcvtas(v7.d2, v2.d2); dump();
fcvtas(v7.d2, v4.d2); dump();
fcvtas(v7.d2, v8.d2); dump();
fcvtas(v7.d2, v16.d2); dump();
fcvtas(v7.d2, v31.d2); dump();
fcvtau(v7.d2, v7.d2); dump();
fcvtau(v0.d2, v7.d2); dump();
fcvtau(v1.d2, v7.d2); dump();
fcvtau(v2.d2, v7.d2); dump();
fcvtau(v4.d2, v7.d2); dump();
fcvtau(v8.d2, v7.d2); dump();
fcvtau(v16.d2, v7.d2); dump();
fcvtau(v31.d2, v7.d2); dump();
fcvtau(v7.d2, v7.d2); dump();
fcvtau(v7.d2, v0.d2); dump();
fcvtau(v7.d2, v1.d2); dump();
fcvtau(v7.d2, v2.d2); dump();
fcvtau(v7.d2, v4.d2); dump();
fcvtau(v7.d2, v8.d2); dump();
fcvtau(v7.d2, v16.d2); dump();
fcvtau(v7.d2, v31.d2); dump();
fcvtms(v7.d2, v7.d2); dump();
fcvtms(v0.d2, v7.d2); dump();
fcvtms(v1.d2, v7.d2); dump();
fcvtms(v2.d2, v7.d2); dump();
fcvtms(v4.d2, v7.d2); dump();
fcvtms(v8.d2, v7.d2); dump();
fcvtms(v16.d2, v7.d2); dump();
fcvtms(v31.d2, v7.d2); dump();
fcvtms(v7.d2, v7.d2); dump();
fcvtms(v7.d2, v0.d2); dump();
fcvtms(v7.d2, v1.d2); dump();
fcvtms(v7.d2, v2.d2); dump();
fcvtms(v7.d2, v4.d2); dump();
fcvtms(v7.d2, v8.d2); dump();
fcvtms(v7.d2, v16.d2); dump();
fcvtms(v7.d2, v31.d2); dump();
fcvtmu(v7.d2, v7.d2); dump();
fcvtmu(v0.d2, v7.d2); dump();
fcvtmu(v1.d2, v7.d2); dump();
fcvtmu(v2.d2, v7.d2); dump();
fcvtmu(v4.d2, v7.d2); dump();
fcvtmu(v8.d2, v7.d2); dump();
fcvtmu(v16.d2, v7.d2); dump();
fcvtmu(v31.d2, v7.d2); dump();
fcvtmu(v7.d2, v7.d2); dump();
fcvtmu(v7.d2, v0.d2); dump();
fcvtmu(v7.d2, v1.d2); dump();
fcvtmu(v7.d2, v2.d2); dump();
fcvtmu(v7.d2, v4.d2); dump();
fcvtmu(v7.d2, v8.d2); dump();
fcvtmu(v7.d2, v16.d2); dump();
fcvtmu(v7.d2, v31.d2); dump();
fcvtns(v7.d2, v7.d2); dump();
fcvtns(v0.d2, v7.d2); dump();
fcvtns(v1.d2, v7.d2); dump();
fcvtns(v2.d2, v7.d2); dump();
fcvtns(v4.d2, v7.d2); dump();
fcvtns(v8.d2, v7.d2); dump();
fcvtns(v16.d2, v7.d2); dump();
fcvtns(v31.d2, v7.d2); dump();
fcvtns(v7.d2, v7.d2); dump();
fcvtns(v7.d2, v0.d2); dump();
fcvtns(v7.d2, v1.d2); dump();
fcvtns(v7.d2, v2.d2); dump();
fcvtns(v7.d2, v4.d2); dump();
fcvtns(v7.d2, v8.d2); dump();
fcvtns(v7.d2, v16.d2); dump();
fcvtns(v7.d2, v31.d2); dump();
fcvtnu(v7.d2, v7.d2); dump();
fcvtnu(v0.d2, v7.d2); dump();
fcvtnu(v1.d2, v7.d2); dump();
fcvtnu(v2.d2, v7.d2); dump();
fcvtnu(v4.d2, v7.d2); dump();
fcvtnu(v8.d2, v7.d2); dump();
fcvtnu(v16.d2, v7.d2); dump();
fcvtnu(v31.d2, v7.d2); dump();
fcvtnu(v7.d2, v7.d2); dump();
fcvtnu(v7.d2, v0.d2); dump();
fcvtnu(v7.d2, v1.d2); dump();
fcvtnu(v7.d2, v2.d2); dump();
fcvtnu(v7.d2, v4.d2); dump();
fcvtnu(v7.d2, v8.d2); dump();
fcvtnu(v7.d2, v16.d2); dump();
fcvtnu(v7.d2, v31.d2); dump();
fcvtps(v7.d2, v7.d2); dump();
fcvtps(v0.d2, v7.d2); dump();
fcvtps(v1.d2, v7.d2); dump();
fcvtps(v2.d2, v7.d2); dump();
fcvtps(v4.d2, v7.d2); dump();
fcvtps(v8.d2, v7.d2); dump();
fcvtps(v16.d2, v7.d2); dump();
fcvtps(v31.d2, v7.d2); dump();
fcvtps(v7.d2, v7.d2); dump();
fcvtps(v7.d2, v0.d2); dump();
fcvtps(v7.d2, v1.d2); dump();
fcvtps(v7.d2, v2.d2); dump();
fcvtps(v7.d2, v4.d2); dump();
fcvtps(v7.d2, v8.d2); dump();
fcvtps(v7.d2, v16.d2); dump();
fcvtps(v7.d2, v31.d2); dump();
fcvtpu(v7.d2, v7.d2); dump();
fcvtpu(v0.d2, v7.d2); dump();
fcvtpu(v1.d2, v7.d2); dump();
fcvtpu(v2.d2, v7.d2); dump();
fcvtpu(v4.d2, v7.d2); dump();
fcvtpu(v8.d2, v7.d2); dump();
fcvtpu(v16.d2, v7.d2); dump();
fcvtpu(v31.d2, v7.d2); dump();
fcvtpu(v7.d2, v7.d2); dump();
fcvtpu(v7.d2, v0.d2); dump();
fcvtpu(v7.d2, v1.d2); dump();
fcvtpu(v7.d2, v2.d2); dump();
fcvtpu(v7.d2, v4.d2); dump();
fcvtpu(v7.d2, v8.d2); dump();
fcvtpu(v7.d2, v16.d2); dump();
fcvtpu(v7.d2, v31.d2); dump();
fcvtzs(v7.d2, v7.d2); dump();
fcvtzs(v0.d2, v7.d2); dump();
fcvtzs(v1.d2, v7.d2); dump();
fcvtzs(v2.d2, v7.d2); dump();
fcvtzs(v4.d2, v7.d2); dump();
fcvtzs(v8.d2, v7.d2); dump();
fcvtzs(v16.d2, v7.d2); dump();
fcvtzs(v31.d2, v7.d2); dump();
fcvtzs(v7.d2, v7.d2); dump();
fcvtzs(v7.d2, v0.d2); dump();
fcvtzs(v7.d2, v1.d2); dump();
fcvtzs(v7.d2, v2.d2); dump();
fcvtzs(v7.d2, v4.d2); dump();
fcvtzs(v7.d2, v8.d2); dump();
fcvtzs(v7.d2, v16.d2); dump();
fcvtzs(v7.d2, v31.d2); dump();
fcvtzu(v7.d2, v7.d2); dump();
fcvtzu(v0.d2, v7.d2); dump();
fcvtzu(v1.d2, v7.d2); dump();
fcvtzu(v2.d2, v7.d2); dump();
fcvtzu(v4.d2, v7.d2); dump();
fcvtzu(v8.d2, v7.d2); dump();
fcvtzu(v16.d2, v7.d2); dump();
fcvtzu(v31.d2, v7.d2); dump();
fcvtzu(v7.d2, v7.d2); dump();
fcvtzu(v7.d2, v0.d2); dump();
fcvtzu(v7.d2, v1.d2); dump();
fcvtzu(v7.d2, v2.d2); dump();
fcvtzu(v7.d2, v4.d2); dump();
fcvtzu(v7.d2, v8.d2); dump();
fcvtzu(v7.d2, v16.d2); dump();
fcvtzu(v7.d2, v31.d2); dump();
scvtf(v7.d2, v7.d2); dump();
scvtf(v0.d2, v7.d2); dump();
scvtf(v1.d2, v7.d2); dump();
scvtf(v2.d2, v7.d2); dump();
scvtf(v4.d2, v7.d2); dump();
scvtf(v8.d2, v7.d2); dump();
scvtf(v16.d2, v7.d2); dump();
scvtf(v31.d2, v7.d2); dump();
scvtf(v7.d2, v7.d2); dump();
scvtf(v7.d2, v0.d2); dump();
scvtf(v7.d2, v1.d2); dump();
scvtf(v7.d2, v2.d2); dump();
scvtf(v7.d2, v4.d2); dump();
scvtf(v7.d2, v8.d2); dump();
scvtf(v7.d2, v16.d2); dump();
scvtf(v7.d2, v31.d2); dump();
ucvtf(v7.d2, v7.d2); dump();
ucvtf(v0.d2, v7.d2); dump();
ucvtf(v1.d2, v7.d2); dump();
ucvtf(v2.d2, v7.d2); dump();
ucvtf(v4.d2, v7.d2); dump();
ucvtf(v8.d2, v7.d2); dump();
ucvtf(v16.d2, v7.d2); dump();
ucvtf(v31.d2, v7.d2); dump();
ucvtf(v7.d2, v7.d2); dump();
ucvtf(v7.d2, v0.d2); dump();
ucvtf(v7.d2, v1.d2); dump();
ucvtf(v7.d2, v2.d2); dump();
ucvtf(v7.d2, v4.d2); dump();
ucvtf(v7.d2, v8.d2); dump();
ucvtf(v7.d2, v16.d2); dump();
ucvtf(v7.d2, v31.d2); dump();
//DataProcSimd_FloatingPointAndIntergerConversion1:0
fcvtzs(h7, h7, 1); dump();
fcvtzs(h0, h7, 1); dump();
fcvtzs(h1, h7, 1); dump();
fcvtzs(h2, h7, 1); dump();
fcvtzs(h4, h7, 1); dump();
fcvtzs(h8, h7, 1); dump();
fcvtzs(h16, h7, 1); dump();
fcvtzs(h31, h7, 1); dump();
fcvtzs(h7, h7, 1); dump();
fcvtzs(h7, h0, 1); dump();
fcvtzs(h7, h1, 1); dump();
fcvtzs(h7, h2, 1); dump();
fcvtzs(h7, h4, 1); dump();
fcvtzs(h7, h8, 1); dump();
fcvtzs(h7, h16, 1); dump();
fcvtzs(h7, h31, 1); dump();
fcvtzs(h7, h7, 1); dump();
fcvtzs(h7, h7, 2); dump();
fcvtzs(h7, h7, 4); dump();
fcvtzs(h7, h7, 8); dump();
fcvtzs(h7, h7, 16); dump();
fcvtzu(h7, h7, 1); dump();
fcvtzu(h0, h7, 1); dump();
fcvtzu(h1, h7, 1); dump();
fcvtzu(h2, h7, 1); dump();
fcvtzu(h4, h7, 1); dump();
fcvtzu(h8, h7, 1); dump();
fcvtzu(h16, h7, 1); dump();
fcvtzu(h31, h7, 1); dump();
fcvtzu(h7, h7, 1); dump();
fcvtzu(h7, h0, 1); dump();
fcvtzu(h7, h1, 1); dump();
fcvtzu(h7, h2, 1); dump();
fcvtzu(h7, h4, 1); dump();
fcvtzu(h7, h8, 1); dump();
fcvtzu(h7, h16, 1); dump();
fcvtzu(h7, h31, 1); dump();
fcvtzu(h7, h7, 1); dump();
fcvtzu(h7, h7, 2); dump();
fcvtzu(h7, h7, 4); dump();
fcvtzu(h7, h7, 8); dump();
fcvtzu(h7, h7, 16); dump();
scvtf(h7, h7, 1); dump();
scvtf(h0, h7, 1); dump();
scvtf(h1, h7, 1); dump();
scvtf(h2, h7, 1); dump();
scvtf(h4, h7, 1); dump();
scvtf(h8, h7, 1); dump();
scvtf(h16, h7, 1); dump();
scvtf(h31, h7, 1); dump();
scvtf(h7, h7, 1); dump();
scvtf(h7, h0, 1); dump();
scvtf(h7, h1, 1); dump();
scvtf(h7, h2, 1); dump();
scvtf(h7, h4, 1); dump();
scvtf(h7, h8, 1); dump();
scvtf(h7, h16, 1); dump();
scvtf(h7, h31, 1); dump();
scvtf(h7, h7, 1); dump();
scvtf(h7, h7, 2); dump();
scvtf(h7, h7, 4); dump();
scvtf(h7, h7, 8); dump();
scvtf(h7, h7, 16); dump();
ucvtf(h7, h7, 1); dump();
ucvtf(h0, h7, 1); dump();
ucvtf(h1, h7, 1); dump();
ucvtf(h2, h7, 1); dump();
ucvtf(h4, h7, 1); dump();
ucvtf(h8, h7, 1); dump();
ucvtf(h16, h7, 1); dump();
ucvtf(h31, h7, 1); dump();
ucvtf(h7, h7, 1); dump();
ucvtf(h7, h0, 1); dump();
ucvtf(h7, h1, 1); dump();
ucvtf(h7, h2, 1); dump();
ucvtf(h7, h4, 1); dump();
ucvtf(h7, h8, 1); dump();
ucvtf(h7, h16, 1); dump();
ucvtf(h7, h31, 1); dump();
ucvtf(h7, h7, 1); dump();
ucvtf(h7, h7, 2); dump();
ucvtf(h7, h7, 4); dump();
ucvtf(h7, h7, 8); dump();
ucvtf(h7, h7, 16); dump();
//DataProcSimd_FloatingPointAndIntergerConversion1:1
fcvtzs(s7, s7, 1); dump();
fcvtzs(s0, s7, 1); dump();
fcvtzs(s1, s7, 1); dump();
fcvtzs(s2, s7, 1); dump();
fcvtzs(s4, s7, 1); dump();
fcvtzs(s8, s7, 1); dump();
fcvtzs(s16, s7, 1); dump();
fcvtzs(s31, s7, 1); dump();
fcvtzs(s7, s7, 1); dump();
fcvtzs(s7, s0, 1); dump();
fcvtzs(s7, s1, 1); dump();
fcvtzs(s7, s2, 1); dump();
fcvtzs(s7, s4, 1); dump();
fcvtzs(s7, s8, 1); dump();
fcvtzs(s7, s16, 1); dump();
fcvtzs(s7, s31, 1); dump();
fcvtzs(s7, s7, 1); dump();
fcvtzs(s7, s7, 2); dump();
fcvtzs(s7, s7, 4); dump();
fcvtzs(s7, s7, 8); dump();
fcvtzs(s7, s7, 16); dump();
fcvtzs(s7, s7, 32); dump();
fcvtzu(s7, s7, 1); dump();
fcvtzu(s0, s7, 1); dump();
fcvtzu(s1, s7, 1); dump();
fcvtzu(s2, s7, 1); dump();
fcvtzu(s4, s7, 1); dump();
fcvtzu(s8, s7, 1); dump();
fcvtzu(s16, s7, 1); dump();
fcvtzu(s31, s7, 1); dump();
fcvtzu(s7, s7, 1); dump();
fcvtzu(s7, s0, 1); dump();
fcvtzu(s7, s1, 1); dump();
fcvtzu(s7, s2, 1); dump();
fcvtzu(s7, s4, 1); dump();
fcvtzu(s7, s8, 1); dump();
fcvtzu(s7, s16, 1); dump();
fcvtzu(s7, s31, 1); dump();
fcvtzu(s7, s7, 1); dump();
fcvtzu(s7, s7, 2); dump();
fcvtzu(s7, s7, 4); dump();
fcvtzu(s7, s7, 8); dump();
fcvtzu(s7, s7, 16); dump();
fcvtzu(s7, s7, 32); dump();
scvtf(s7, s7, 1); dump();
scvtf(s0, s7, 1); dump();
scvtf(s1, s7, 1); dump();
scvtf(s2, s7, 1); dump();
scvtf(s4, s7, 1); dump();
scvtf(s8, s7, 1); dump();
scvtf(s16, s7, 1); dump();
scvtf(s31, s7, 1); dump();
scvtf(s7, s7, 1); dump();
scvtf(s7, s0, 1); dump();
scvtf(s7, s1, 1); dump();
scvtf(s7, s2, 1); dump();
scvtf(s7, s4, 1); dump();
scvtf(s7, s8, 1); dump();
scvtf(s7, s16, 1); dump();
scvtf(s7, s31, 1); dump();
scvtf(s7, s7, 1); dump();
scvtf(s7, s7, 2); dump();
scvtf(s7, s7, 4); dump();
scvtf(s7, s7, 8); dump();
scvtf(s7, s7, 16); dump();
scvtf(s7, s7, 32); dump();
ucvtf(s7, s7, 1); dump();
ucvtf(s0, s7, 1); dump();
ucvtf(s1, s7, 1); dump();
ucvtf(s2, s7, 1); dump();
ucvtf(s4, s7, 1); dump();
ucvtf(s8, s7, 1); dump();
ucvtf(s16, s7, 1); dump();
ucvtf(s31, s7, 1); dump();
ucvtf(s7, s7, 1); dump();
ucvtf(s7, s0, 1); dump();
ucvtf(s7, s1, 1); dump();
ucvtf(s7, s2, 1); dump();
ucvtf(s7, s4, 1); dump();
ucvtf(s7, s8, 1); dump();
ucvtf(s7, s16, 1); dump();
ucvtf(s7, s31, 1); dump();
ucvtf(s7, s7, 1); dump();
ucvtf(s7, s7, 2); dump();
ucvtf(s7, s7, 4); dump();
ucvtf(s7, s7, 8); dump();
ucvtf(s7, s7, 16); dump();
ucvtf(s7, s7, 32); dump();
//DataProcSimd_FloatingPointAndIntergerConversion1:2
fcvtzs(d7, d7, 1); dump();
fcvtzs(d0, d7, 1); dump();
fcvtzs(d1, d7, 1); dump();
fcvtzs(d2, d7, 1); dump();
fcvtzs(d4, d7, 1); dump();
fcvtzs(d8, d7, 1); dump();
fcvtzs(d16, d7, 1); dump();
fcvtzs(d31, d7, 1); dump();
fcvtzs(d7, d7, 1); dump();
fcvtzs(d7, d0, 1); dump();
fcvtzs(d7, d1, 1); dump();
fcvtzs(d7, d2, 1); dump();
fcvtzs(d7, d4, 1); dump();
fcvtzs(d7, d8, 1); dump();
fcvtzs(d7, d16, 1); dump();
fcvtzs(d7, d31, 1); dump();
fcvtzs(d7, d7, 1); dump();
fcvtzs(d7, d7, 2); dump();
fcvtzs(d7, d7, 4); dump();
fcvtzs(d7, d7, 8); dump();
fcvtzs(d7, d7, 16); dump();
fcvtzs(d7, d7, 32); dump();
fcvtzs(d7, d7, 64); dump();
fcvtzu(d7, d7, 1); dump();
fcvtzu(d0, d7, 1); dump();
fcvtzu(d1, d7, 1); dump();
fcvtzu(d2, d7, 1); dump();
fcvtzu(d4, d7, 1); dump();
fcvtzu(d8, d7, 1); dump();
fcvtzu(d16, d7, 1); dump();
fcvtzu(d31, d7, 1); dump();
fcvtzu(d7, d7, 1); dump();
fcvtzu(d7, d0, 1); dump();
fcvtzu(d7, d1, 1); dump();
fcvtzu(d7, d2, 1); dump();
fcvtzu(d7, d4, 1); dump();
fcvtzu(d7, d8, 1); dump();
fcvtzu(d7, d16, 1); dump();
fcvtzu(d7, d31, 1); dump();
fcvtzu(d7, d7, 1); dump();
fcvtzu(d7, d7, 2); dump();
fcvtzu(d7, d7, 4); dump();
fcvtzu(d7, d7, 8); dump();
fcvtzu(d7, d7, 16); dump();
fcvtzu(d7, d7, 32); dump();
fcvtzu(d7, d7, 64); dump();
scvtf(d7, d7, 1); dump();
scvtf(d0, d7, 1); dump();
scvtf(d1, d7, 1); dump();
scvtf(d2, d7, 1); dump();
scvtf(d4, d7, 1); dump();
scvtf(d8, d7, 1); dump();
scvtf(d16, d7, 1); dump();
scvtf(d31, d7, 1); dump();
scvtf(d7, d7, 1); dump();
scvtf(d7, d0, 1); dump();
scvtf(d7, d1, 1); dump();
scvtf(d7, d2, 1); dump();
scvtf(d7, d4, 1); dump();
scvtf(d7, d8, 1); dump();
scvtf(d7, d16, 1); dump();
scvtf(d7, d31, 1); dump();
scvtf(d7, d7, 1); dump();
scvtf(d7, d7, 2); dump();
scvtf(d7, d7, 4); dump();
scvtf(d7, d7, 8); dump();
scvtf(d7, d7, 16); dump();
scvtf(d7, d7, 32); dump();
scvtf(d7, d7, 64); dump();
ucvtf(d7, d7, 1); dump();
ucvtf(d0, d7, 1); dump();
ucvtf(d1, d7, 1); dump();
ucvtf(d2, d7, 1); dump();
ucvtf(d4, d7, 1); dump();
ucvtf(d8, d7, 1); dump();
ucvtf(d16, d7, 1); dump();
ucvtf(d31, d7, 1); dump();
ucvtf(d7, d7, 1); dump();
ucvtf(d7, d0, 1); dump();
ucvtf(d7, d1, 1); dump();
ucvtf(d7, d2, 1); dump();
ucvtf(d7, d4, 1); dump();
ucvtf(d7, d8, 1); dump();
ucvtf(d7, d16, 1); dump();
ucvtf(d7, d31, 1); dump();
ucvtf(d7, d7, 1); dump();
ucvtf(d7, d7, 2); dump();
ucvtf(d7, d7, 4); dump();
ucvtf(d7, d7, 8); dump();
ucvtf(d7, d7, 16); dump();
ucvtf(d7, d7, 32); dump();
ucvtf(d7, d7, 64); dump();
//DataProcSimd_FloatingPointAndIntergerConversion1:3
fcvtzs(v7.h4, v7.h4, 1); dump();
fcvtzs(v0.h4, v7.h4, 1); dump();
fcvtzs(v1.h4, v7.h4, 1); dump();
fcvtzs(v2.h4, v7.h4, 1); dump();
fcvtzs(v4.h4, v7.h4, 1); dump();
fcvtzs(v8.h4, v7.h4, 1); dump();
fcvtzs(v16.h4, v7.h4, 1); dump();
fcvtzs(v31.h4, v7.h4, 1); dump();
fcvtzs(v7.h4, v7.h4, 1); dump();
fcvtzs(v7.h4, v0.h4, 1); dump();
fcvtzs(v7.h4, v1.h4, 1); dump();
fcvtzs(v7.h4, v2.h4, 1); dump();
fcvtzs(v7.h4, v4.h4, 1); dump();
fcvtzs(v7.h4, v8.h4, 1); dump();
fcvtzs(v7.h4, v16.h4, 1); dump();
fcvtzs(v7.h4, v31.h4, 1); dump();
fcvtzs(v7.h4, v7.h4, 1); dump();
fcvtzs(v7.h4, v7.h4, 2); dump();
fcvtzs(v7.h4, v7.h4, 4); dump();
fcvtzs(v7.h4, v7.h4, 8); dump();
fcvtzs(v7.h4, v7.h4, 16); dump();
fcvtzu(v7.h4, v7.h4, 1); dump();
fcvtzu(v0.h4, v7.h4, 1); dump();
fcvtzu(v1.h4, v7.h4, 1); dump();
fcvtzu(v2.h4, v7.h4, 1); dump();
fcvtzu(v4.h4, v7.h4, 1); dump();
fcvtzu(v8.h4, v7.h4, 1); dump();
fcvtzu(v16.h4, v7.h4, 1); dump();
fcvtzu(v31.h4, v7.h4, 1); dump();
fcvtzu(v7.h4, v7.h4, 1); dump();
fcvtzu(v7.h4, v0.h4, 1); dump();
fcvtzu(v7.h4, v1.h4, 1); dump();
fcvtzu(v7.h4, v2.h4, 1); dump();
fcvtzu(v7.h4, v4.h4, 1); dump();
fcvtzu(v7.h4, v8.h4, 1); dump();
fcvtzu(v7.h4, v16.h4, 1); dump();
fcvtzu(v7.h4, v31.h4, 1); dump();
fcvtzu(v7.h4, v7.h4, 1); dump();
fcvtzu(v7.h4, v7.h4, 2); dump();
fcvtzu(v7.h4, v7.h4, 4); dump();
fcvtzu(v7.h4, v7.h4, 8); dump();
fcvtzu(v7.h4, v7.h4, 16); dump();
scvtf(v7.h4, v7.h4, 1); dump();
scvtf(v0.h4, v7.h4, 1); dump();
scvtf(v1.h4, v7.h4, 1); dump();
scvtf(v2.h4, v7.h4, 1); dump();
scvtf(v4.h4, v7.h4, 1); dump();
scvtf(v8.h4, v7.h4, 1); dump();
scvtf(v16.h4, v7.h4, 1); dump();
scvtf(v31.h4, v7.h4, 1); dump();
scvtf(v7.h4, v7.h4, 1); dump();
scvtf(v7.h4, v0.h4, 1); dump();
scvtf(v7.h4, v1.h4, 1); dump();
scvtf(v7.h4, v2.h4, 1); dump();
scvtf(v7.h4, v4.h4, 1); dump();
scvtf(v7.h4, v8.h4, 1); dump();
scvtf(v7.h4, v16.h4, 1); dump();
scvtf(v7.h4, v31.h4, 1); dump();
scvtf(v7.h4, v7.h4, 1); dump();
scvtf(v7.h4, v7.h4, 2); dump();
scvtf(v7.h4, v7.h4, 4); dump();
scvtf(v7.h4, v7.h4, 8); dump();
scvtf(v7.h4, v7.h4, 16); dump();
ucvtf(v7.h4, v7.h4, 1); dump();
ucvtf(v0.h4, v7.h4, 1); dump();
ucvtf(v1.h4, v7.h4, 1); dump();
ucvtf(v2.h4, v7.h4, 1); dump();
ucvtf(v4.h4, v7.h4, 1); dump();
ucvtf(v8.h4, v7.h4, 1); dump();
ucvtf(v16.h4, v7.h4, 1); dump();
ucvtf(v31.h4, v7.h4, 1); dump();
ucvtf(v7.h4, v7.h4, 1); dump();
ucvtf(v7.h4, v0.h4, 1); dump();
ucvtf(v7.h4, v1.h4, 1); dump();
ucvtf(v7.h4, v2.h4, 1); dump();
ucvtf(v7.h4, v4.h4, 1); dump();
ucvtf(v7.h4, v8.h4, 1); dump();
ucvtf(v7.h4, v16.h4, 1); dump();
ucvtf(v7.h4, v31.h4, 1); dump();
ucvtf(v7.h4, v7.h4, 1); dump();
ucvtf(v7.h4, v7.h4, 2); dump();
ucvtf(v7.h4, v7.h4, 4); dump();
ucvtf(v7.h4, v7.h4, 8); dump();
ucvtf(v7.h4, v7.h4, 16); dump();
//DataProcSimd_FloatingPointAndIntergerConversion1:4
fcvtzs(v7.h8, v7.h8, 1); dump();
fcvtzs(v0.h8, v7.h8, 1); dump();
fcvtzs(v1.h8, v7.h8, 1); dump();
fcvtzs(v2.h8, v7.h8, 1); dump();
fcvtzs(v4.h8, v7.h8, 1); dump();
fcvtzs(v8.h8, v7.h8, 1); dump();
fcvtzs(v16.h8, v7.h8, 1); dump();
fcvtzs(v31.h8, v7.h8, 1); dump();
fcvtzs(v7.h8, v7.h8, 1); dump();
fcvtzs(v7.h8, v0.h8, 1); dump();
fcvtzs(v7.h8, v1.h8, 1); dump();
fcvtzs(v7.h8, v2.h8, 1); dump();
fcvtzs(v7.h8, v4.h8, 1); dump();
fcvtzs(v7.h8, v8.h8, 1); dump();
fcvtzs(v7.h8, v16.h8, 1); dump();
fcvtzs(v7.h8, v31.h8, 1); dump();
fcvtzs(v7.h8, v7.h8, 1); dump();
fcvtzs(v7.h8, v7.h8, 2); dump();
fcvtzs(v7.h8, v7.h8, 4); dump();
fcvtzs(v7.h8, v7.h8, 8); dump();
fcvtzs(v7.h8, v7.h8, 16); dump();
fcvtzu(v7.h8, v7.h8, 1); dump();
fcvtzu(v0.h8, v7.h8, 1); dump();
fcvtzu(v1.h8, v7.h8, 1); dump();
fcvtzu(v2.h8, v7.h8, 1); dump();
fcvtzu(v4.h8, v7.h8, 1); dump();
fcvtzu(v8.h8, v7.h8, 1); dump();
fcvtzu(v16.h8, v7.h8, 1); dump();
fcvtzu(v31.h8, v7.h8, 1); dump();
fcvtzu(v7.h8, v7.h8, 1); dump();
fcvtzu(v7.h8, v0.h8, 1); dump();
fcvtzu(v7.h8, v1.h8, 1); dump();
fcvtzu(v7.h8, v2.h8, 1); dump();
fcvtzu(v7.h8, v4.h8, 1); dump();
fcvtzu(v7.h8, v8.h8, 1); dump();
fcvtzu(v7.h8, v16.h8, 1); dump();
fcvtzu(v7.h8, v31.h8, 1); dump();
fcvtzu(v7.h8, v7.h8, 1); dump();
fcvtzu(v7.h8, v7.h8, 2); dump();
fcvtzu(v7.h8, v7.h8, 4); dump();
fcvtzu(v7.h8, v7.h8, 8); dump();
fcvtzu(v7.h8, v7.h8, 16); dump();
scvtf(v7.h8, v7.h8, 1); dump();
scvtf(v0.h8, v7.h8, 1); dump();
scvtf(v1.h8, v7.h8, 1); dump();
scvtf(v2.h8, v7.h8, 1); dump();
scvtf(v4.h8, v7.h8, 1); dump();
scvtf(v8.h8, v7.h8, 1); dump();
scvtf(v16.h8, v7.h8, 1); dump();
scvtf(v31.h8, v7.h8, 1); dump();
scvtf(v7.h8, v7.h8, 1); dump();
scvtf(v7.h8, v0.h8, 1); dump();
scvtf(v7.h8, v1.h8, 1); dump();
scvtf(v7.h8, v2.h8, 1); dump();
scvtf(v7.h8, v4.h8, 1); dump();
scvtf(v7.h8, v8.h8, 1); dump();
scvtf(v7.h8, v16.h8, 1); dump();
scvtf(v7.h8, v31.h8, 1); dump();
scvtf(v7.h8, v7.h8, 1); dump();
scvtf(v7.h8, v7.h8, 2); dump();
scvtf(v7.h8, v7.h8, 4); dump();
scvtf(v7.h8, v7.h8, 8); dump();
scvtf(v7.h8, v7.h8, 16); dump();
ucvtf(v7.h8, v7.h8, 1); dump();
ucvtf(v0.h8, v7.h8, 1); dump();
ucvtf(v1.h8, v7.h8, 1); dump();
ucvtf(v2.h8, v7.h8, 1); dump();
ucvtf(v4.h8, v7.h8, 1); dump();
ucvtf(v8.h8, v7.h8, 1); dump();
ucvtf(v16.h8, v7.h8, 1); dump();
ucvtf(v31.h8, v7.h8, 1); dump();
ucvtf(v7.h8, v7.h8, 1); dump();
ucvtf(v7.h8, v0.h8, 1); dump();
ucvtf(v7.h8, v1.h8, 1); dump();
ucvtf(v7.h8, v2.h8, 1); dump();
ucvtf(v7.h8, v4.h8, 1); dump();
ucvtf(v7.h8, v8.h8, 1); dump();
ucvtf(v7.h8, v16.h8, 1); dump();
ucvtf(v7.h8, v31.h8, 1); dump();
ucvtf(v7.h8, v7.h8, 1); dump();
ucvtf(v7.h8, v7.h8, 2); dump();
ucvtf(v7.h8, v7.h8, 4); dump();
ucvtf(v7.h8, v7.h8, 8); dump();
ucvtf(v7.h8, v7.h8, 16); dump();
//DataProcSimd_FloatingPointAndIntergerConversion1:5
fcvtzs(v7.s2, v7.s2, 1); dump();
fcvtzs(v0.s2, v7.s2, 1); dump();
fcvtzs(v1.s2, v7.s2, 1); dump();
fcvtzs(v2.s2, v7.s2, 1); dump();
fcvtzs(v4.s2, v7.s2, 1); dump();
fcvtzs(v8.s2, v7.s2, 1); dump();
fcvtzs(v16.s2, v7.s2, 1); dump();
fcvtzs(v31.s2, v7.s2, 1); dump();
fcvtzs(v7.s2, v7.s2, 1); dump();
fcvtzs(v7.s2, v0.s2, 1); dump();
fcvtzs(v7.s2, v1.s2, 1); dump();
fcvtzs(v7.s2, v2.s2, 1); dump();
fcvtzs(v7.s2, v4.s2, 1); dump();
fcvtzs(v7.s2, v8.s2, 1); dump();
fcvtzs(v7.s2, v16.s2, 1); dump();
fcvtzs(v7.s2, v31.s2, 1); dump();
fcvtzs(v7.s2, v7.s2, 1); dump();
fcvtzs(v7.s2, v7.s2, 2); dump();
fcvtzs(v7.s2, v7.s2, 4); dump();
fcvtzs(v7.s2, v7.s2, 8); dump();
fcvtzs(v7.s2, v7.s2, 16); dump();
fcvtzs(v7.s2, v7.s2, 32); dump();
fcvtzu(v7.s2, v7.s2, 1); dump();
fcvtzu(v0.s2, v7.s2, 1); dump();
fcvtzu(v1.s2, v7.s2, 1); dump();
fcvtzu(v2.s2, v7.s2, 1); dump();
fcvtzu(v4.s2, v7.s2, 1); dump();
fcvtzu(v8.s2, v7.s2, 1); dump();
fcvtzu(v16.s2, v7.s2, 1); dump();
fcvtzu(v31.s2, v7.s2, 1); dump();
fcvtzu(v7.s2, v7.s2, 1); dump();
fcvtzu(v7.s2, v0.s2, 1); dump();
fcvtzu(v7.s2, v1.s2, 1); dump();
fcvtzu(v7.s2, v2.s2, 1); dump();
fcvtzu(v7.s2, v4.s2, 1); dump();
fcvtzu(v7.s2, v8.s2, 1); dump();
fcvtzu(v7.s2, v16.s2, 1); dump();
fcvtzu(v7.s2, v31.s2, 1); dump();
fcvtzu(v7.s2, v7.s2, 1); dump();
fcvtzu(v7.s2, v7.s2, 2); dump();
fcvtzu(v7.s2, v7.s2, 4); dump();
fcvtzu(v7.s2, v7.s2, 8); dump();
fcvtzu(v7.s2, v7.s2, 16); dump();
fcvtzu(v7.s2, v7.s2, 32); dump();
scvtf(v7.s2, v7.s2, 1); dump();
scvtf(v0.s2, v7.s2, 1); dump();
scvtf(v1.s2, v7.s2, 1); dump();
scvtf(v2.s2, v7.s2, 1); dump();
scvtf(v4.s2, v7.s2, 1); dump();
scvtf(v8.s2, v7.s2, 1); dump();
scvtf(v16.s2, v7.s2, 1); dump();
scvtf(v31.s2, v7.s2, 1); dump();
scvtf(v7.s2, v7.s2, 1); dump();
scvtf(v7.s2, v0.s2, 1); dump();
scvtf(v7.s2, v1.s2, 1); dump();
scvtf(v7.s2, v2.s2, 1); dump();
scvtf(v7.s2, v4.s2, 1); dump();
scvtf(v7.s2, v8.s2, 1); dump();
scvtf(v7.s2, v16.s2, 1); dump();
scvtf(v7.s2, v31.s2, 1); dump();
scvtf(v7.s2, v7.s2, 1); dump();
scvtf(v7.s2, v7.s2, 2); dump();
scvtf(v7.s2, v7.s2, 4); dump();
scvtf(v7.s2, v7.s2, 8); dump();
scvtf(v7.s2, v7.s2, 16); dump();
scvtf(v7.s2, v7.s2, 32); dump();
ucvtf(v7.s2, v7.s2, 1); dump();
ucvtf(v0.s2, v7.s2, 1); dump();
ucvtf(v1.s2, v7.s2, 1); dump();
ucvtf(v2.s2, v7.s2, 1); dump();
ucvtf(v4.s2, v7.s2, 1); dump();
ucvtf(v8.s2, v7.s2, 1); dump();
ucvtf(v16.s2, v7.s2, 1); dump();
ucvtf(v31.s2, v7.s2, 1); dump();
ucvtf(v7.s2, v7.s2, 1); dump();
ucvtf(v7.s2, v0.s2, 1); dump();
ucvtf(v7.s2, v1.s2, 1); dump();
ucvtf(v7.s2, v2.s2, 1); dump();
ucvtf(v7.s2, v4.s2, 1); dump();
ucvtf(v7.s2, v8.s2, 1); dump();
ucvtf(v7.s2, v16.s2, 1); dump();
ucvtf(v7.s2, v31.s2, 1); dump();
ucvtf(v7.s2, v7.s2, 1); dump();
ucvtf(v7.s2, v7.s2, 2); dump();
ucvtf(v7.s2, v7.s2, 4); dump();
ucvtf(v7.s2, v7.s2, 8); dump();
ucvtf(v7.s2, v7.s2, 16); dump();
ucvtf(v7.s2, v7.s2, 32); dump();
//DataProcSimd_FloatingPointAndIntergerConversion1:6
fcvtzs(v7.s2, v7.s2, 1); dump();
fcvtzs(v0.s2, v7.s2, 1); dump();
fcvtzs(v1.s2, v7.s2, 1); dump();
fcvtzs(v2.s2, v7.s2, 1); dump();
fcvtzs(v4.s2, v7.s2, 1); dump();
fcvtzs(v8.s2, v7.s2, 1); dump();
fcvtzs(v16.s2, v7.s2, 1); dump();
fcvtzs(v31.s2, v7.s2, 1); dump();
fcvtzs(v7.s2, v7.s2, 1); dump();
fcvtzs(v7.s2, v0.s2, 1); dump();
fcvtzs(v7.s2, v1.s2, 1); dump();
fcvtzs(v7.s2, v2.s2, 1); dump();
fcvtzs(v7.s2, v4.s2, 1); dump();
fcvtzs(v7.s2, v8.s2, 1); dump();
fcvtzs(v7.s2, v16.s2, 1); dump();
fcvtzs(v7.s2, v31.s2, 1); dump();
fcvtzs(v7.s2, v7.s2, 1); dump();
fcvtzs(v7.s2, v7.s2, 2); dump();
fcvtzs(v7.s2, v7.s2, 4); dump();
fcvtzs(v7.s2, v7.s2, 8); dump();
fcvtzs(v7.s2, v7.s2, 16); dump();
fcvtzs(v7.s2, v7.s2, 32); dump();
fcvtzu(v7.s2, v7.s2, 1); dump();
fcvtzu(v0.s2, v7.s2, 1); dump();
fcvtzu(v1.s2, v7.s2, 1); dump();
fcvtzu(v2.s2, v7.s2, 1); dump();
fcvtzu(v4.s2, v7.s2, 1); dump();
fcvtzu(v8.s2, v7.s2, 1); dump();
fcvtzu(v16.s2, v7.s2, 1); dump();
fcvtzu(v31.s2, v7.s2, 1); dump();
fcvtzu(v7.s2, v7.s2, 1); dump();
fcvtzu(v7.s2, v0.s2, 1); dump();
fcvtzu(v7.s2, v1.s2, 1); dump();
fcvtzu(v7.s2, v2.s2, 1); dump();
fcvtzu(v7.s2, v4.s2, 1); dump();
fcvtzu(v7.s2, v8.s2, 1); dump();
fcvtzu(v7.s2, v16.s2, 1); dump();
fcvtzu(v7.s2, v31.s2, 1); dump();
fcvtzu(v7.s2, v7.s2, 1); dump();
fcvtzu(v7.s2, v7.s2, 2); dump();
fcvtzu(v7.s2, v7.s2, 4); dump();
fcvtzu(v7.s2, v7.s2, 8); dump();
fcvtzu(v7.s2, v7.s2, 16); dump();
fcvtzu(v7.s2, v7.s2, 32); dump();
scvtf(v7.s2, v7.s2, 1); dump();
scvtf(v0.s2, v7.s2, 1); dump();
scvtf(v1.s2, v7.s2, 1); dump();
scvtf(v2.s2, v7.s2, 1); dump();
scvtf(v4.s2, v7.s2, 1); dump();
scvtf(v8.s2, v7.s2, 1); dump();
scvtf(v16.s2, v7.s2, 1); dump();
scvtf(v31.s2, v7.s2, 1); dump();
scvtf(v7.s2, v7.s2, 1); dump();
scvtf(v7.s2, v0.s2, 1); dump();
scvtf(v7.s2, v1.s2, 1); dump();
scvtf(v7.s2, v2.s2, 1); dump();
scvtf(v7.s2, v4.s2, 1); dump();
scvtf(v7.s2, v8.s2, 1); dump();
scvtf(v7.s2, v16.s2, 1); dump();
scvtf(v7.s2, v31.s2, 1); dump();
scvtf(v7.s2, v7.s2, 1); dump();
scvtf(v7.s2, v7.s2, 2); dump();
scvtf(v7.s2, v7.s2, 4); dump();
scvtf(v7.s2, v7.s2, 8); dump();
scvtf(v7.s2, v7.s2, 16); dump();
scvtf(v7.s2, v7.s2, 32); dump();
ucvtf(v7.s2, v7.s2, 1); dump();
ucvtf(v0.s2, v7.s2, 1); dump();
ucvtf(v1.s2, v7.s2, 1); dump();
ucvtf(v2.s2, v7.s2, 1); dump();
ucvtf(v4.s2, v7.s2, 1); dump();
ucvtf(v8.s2, v7.s2, 1); dump();
ucvtf(v16.s2, v7.s2, 1); dump();
ucvtf(v31.s2, v7.s2, 1); dump();
ucvtf(v7.s2, v7.s2, 1); dump();
ucvtf(v7.s2, v0.s2, 1); dump();
ucvtf(v7.s2, v1.s2, 1); dump();
ucvtf(v7.s2, v2.s2, 1); dump();
ucvtf(v7.s2, v4.s2, 1); dump();
ucvtf(v7.s2, v8.s2, 1); dump();
ucvtf(v7.s2, v16.s2, 1); dump();
ucvtf(v7.s2, v31.s2, 1); dump();
ucvtf(v7.s2, v7.s2, 1); dump();
ucvtf(v7.s2, v7.s2, 2); dump();
ucvtf(v7.s2, v7.s2, 4); dump();
ucvtf(v7.s2, v7.s2, 8); dump();
ucvtf(v7.s2, v7.s2, 16); dump();
ucvtf(v7.s2, v7.s2, 32); dump();
//DataProcSimd_FloatingPointAndIntergerConversion1:7
fcvtzs(v7.d2, v7.d2, 1); dump();
fcvtzs(v0.d2, v7.d2, 1); dump();
fcvtzs(v1.d2, v7.d2, 1); dump();
fcvtzs(v2.d2, v7.d2, 1); dump();
fcvtzs(v4.d2, v7.d2, 1); dump();
fcvtzs(v8.d2, v7.d2, 1); dump();
fcvtzs(v16.d2, v7.d2, 1); dump();
fcvtzs(v31.d2, v7.d2, 1); dump();
fcvtzs(v7.d2, v7.d2, 1); dump();
fcvtzs(v7.d2, v0.d2, 1); dump();
fcvtzs(v7.d2, v1.d2, 1); dump();
fcvtzs(v7.d2, v2.d2, 1); dump();
fcvtzs(v7.d2, v4.d2, 1); dump();
fcvtzs(v7.d2, v8.d2, 1); dump();
fcvtzs(v7.d2, v16.d2, 1); dump();
fcvtzs(v7.d2, v31.d2, 1); dump();
fcvtzs(v7.d2, v7.d2, 1); dump();
fcvtzs(v7.d2, v7.d2, 2); dump();
fcvtzs(v7.d2, v7.d2, 4); dump();
fcvtzs(v7.d2, v7.d2, 8); dump();
fcvtzs(v7.d2, v7.d2, 16); dump();
fcvtzs(v7.d2, v7.d2, 32); dump();
fcvtzs(v7.d2, v7.d2, 64); dump();
fcvtzu(v7.d2, v7.d2, 1); dump();
fcvtzu(v0.d2, v7.d2, 1); dump();
fcvtzu(v1.d2, v7.d2, 1); dump();
fcvtzu(v2.d2, v7.d2, 1); dump();
fcvtzu(v4.d2, v7.d2, 1); dump();
fcvtzu(v8.d2, v7.d2, 1); dump();
fcvtzu(v16.d2, v7.d2, 1); dump();
fcvtzu(v31.d2, v7.d2, 1); dump();
fcvtzu(v7.d2, v7.d2, 1); dump();
fcvtzu(v7.d2, v0.d2, 1); dump();
fcvtzu(v7.d2, v1.d2, 1); dump();
fcvtzu(v7.d2, v2.d2, 1); dump();
fcvtzu(v7.d2, v4.d2, 1); dump();
fcvtzu(v7.d2, v8.d2, 1); dump();
fcvtzu(v7.d2, v16.d2, 1); dump();
fcvtzu(v7.d2, v31.d2, 1); dump();
fcvtzu(v7.d2, v7.d2, 1); dump();
fcvtzu(v7.d2, v7.d2, 2); dump();
fcvtzu(v7.d2, v7.d2, 4); dump();
fcvtzu(v7.d2, v7.d2, 8); dump();
fcvtzu(v7.d2, v7.d2, 16); dump();
fcvtzu(v7.d2, v7.d2, 32); dump();
fcvtzu(v7.d2, v7.d2, 64); dump();
scvtf(v7.d2, v7.d2, 1); dump();
scvtf(v0.d2, v7.d2, 1); dump();
scvtf(v1.d2, v7.d2, 1); dump();
scvtf(v2.d2, v7.d2, 1); dump();
scvtf(v4.d2, v7.d2, 1); dump();
scvtf(v8.d2, v7.d2, 1); dump();
scvtf(v16.d2, v7.d2, 1); dump();
scvtf(v31.d2, v7.d2, 1); dump();
scvtf(v7.d2, v7.d2, 1); dump();
scvtf(v7.d2, v0.d2, 1); dump();
scvtf(v7.d2, v1.d2, 1); dump();
scvtf(v7.d2, v2.d2, 1); dump();
scvtf(v7.d2, v4.d2, 1); dump();
scvtf(v7.d2, v8.d2, 1); dump();
scvtf(v7.d2, v16.d2, 1); dump();
scvtf(v7.d2, v31.d2, 1); dump();
scvtf(v7.d2, v7.d2, 1); dump();
scvtf(v7.d2, v7.d2, 2); dump();
scvtf(v7.d2, v7.d2, 4); dump();
scvtf(v7.d2, v7.d2, 8); dump();
scvtf(v7.d2, v7.d2, 16); dump();
scvtf(v7.d2, v7.d2, 32); dump();
scvtf(v7.d2, v7.d2, 64); dump();
ucvtf(v7.d2, v7.d2, 1); dump();
ucvtf(v0.d2, v7.d2, 1); dump();
ucvtf(v1.d2, v7.d2, 1); dump();
ucvtf(v2.d2, v7.d2, 1); dump();
ucvtf(v4.d2, v7.d2, 1); dump();
ucvtf(v8.d2, v7.d2, 1); dump();
ucvtf(v16.d2, v7.d2, 1); dump();
ucvtf(v31.d2, v7.d2, 1); dump();
ucvtf(v7.d2, v7.d2, 1); dump();
ucvtf(v7.d2, v0.d2, 1); dump();
ucvtf(v7.d2, v1.d2, 1); dump();
ucvtf(v7.d2, v2.d2, 1); dump();
ucvtf(v7.d2, v4.d2, 1); dump();
ucvtf(v7.d2, v8.d2, 1); dump();
ucvtf(v7.d2, v16.d2, 1); dump();
ucvtf(v7.d2, v31.d2, 1); dump();
ucvtf(v7.d2, v7.d2, 1); dump();
ucvtf(v7.d2, v7.d2, 2); dump();
ucvtf(v7.d2, v7.d2, 4); dump();
ucvtf(v7.d2, v7.d2, 8); dump();
ucvtf(v7.d2, v7.d2, 16); dump();
ucvtf(v7.d2, v7.d2, 32); dump();
ucvtf(v7.d2, v7.d2, 64); dump();
//DataProcSimd_ReduceAcrossVectorLanes0:0
addv(b7, v7.b8); dump();
addv(b0, v7.b8); dump();
addv(b1, v7.b8); dump();
addv(b2, v7.b8); dump();
addv(b4, v7.b8); dump();
addv(b8, v7.b8); dump();
addv(b16, v7.b8); dump();
addv(b31, v7.b8); dump();
addv(b7, v7.b8); dump();
addv(b7, v0.b8); dump();
addv(b7, v1.b8); dump();
addv(b7, v2.b8); dump();
addv(b7, v4.b8); dump();
addv(b7, v8.b8); dump();
addv(b7, v16.b8); dump();
addv(b7, v31.b8); dump();
//DataProcSimd_ReduceAcrossVectorLanes0:1
addv(b7, v7.b16); dump();
addv(b0, v7.b16); dump();
addv(b1, v7.b16); dump();
addv(b2, v7.b16); dump();
addv(b4, v7.b16); dump();
addv(b8, v7.b16); dump();
addv(b16, v7.b16); dump();
addv(b31, v7.b16); dump();
addv(b7, v7.b16); dump();
addv(b7, v0.b16); dump();
addv(b7, v1.b16); dump();
addv(b7, v2.b16); dump();
addv(b7, v4.b16); dump();
addv(b7, v8.b16); dump();
addv(b7, v16.b16); dump();
addv(b7, v31.b16); dump();
//DataProcSimd_ReduceAcrossVectorLanes0:2
addv(h7, v7.h4); dump();
addv(h0, v7.h4); dump();
addv(h1, v7.h4); dump();
addv(h2, v7.h4); dump();
addv(h4, v7.h4); dump();
addv(h8, v7.h4); dump();
addv(h16, v7.h4); dump();
addv(h31, v7.h4); dump();
addv(h7, v7.h4); dump();
addv(h7, v0.h4); dump();
addv(h7, v1.h4); dump();
addv(h7, v2.h4); dump();
addv(h7, v4.h4); dump();
addv(h7, v8.h4); dump();
addv(h7, v16.h4); dump();
addv(h7, v31.h4); dump();
//DataProcSimd_ReduceAcrossVectorLanes0:3
addv(h7, v7.h8); dump();
addv(h0, v7.h8); dump();
addv(h1, v7.h8); dump();
addv(h2, v7.h8); dump();
addv(h4, v7.h8); dump();
addv(h8, v7.h8); dump();
addv(h16, v7.h8); dump();
addv(h31, v7.h8); dump();
addv(h7, v7.h8); dump();
addv(h7, v0.h8); dump();
addv(h7, v1.h8); dump();
addv(h7, v2.h8); dump();
addv(h7, v4.h8); dump();
addv(h7, v8.h8); dump();
addv(h7, v16.h8); dump();
addv(h7, v31.h8); dump();
//DataProcSimd_ReduceAcrossVectorLanes0:4
addv(s7, v7.s4); dump();
addv(s0, v7.s4); dump();
addv(s1, v7.s4); dump();
addv(s2, v7.s4); dump();
addv(s4, v7.s4); dump();
addv(s8, v7.s4); dump();
addv(s16, v7.s4); dump();
addv(s31, v7.s4); dump();
addv(s7, v7.s4); dump();
addv(s7, v0.s4); dump();
addv(s7, v1.s4); dump();
addv(s7, v2.s4); dump();
addv(s7, v4.s4); dump();
addv(s7, v8.s4); dump();
addv(s7, v16.s4); dump();
addv(s7, v31.s4); dump();
//DataProcSimd_ReduceAcrossVectorLanes1:0
fmaxnmv(h7, v7.h4); dump();
fmaxnmv(h0, v7.h4); dump();
fmaxnmv(h1, v7.h4); dump();
fmaxnmv(h2, v7.h4); dump();
fmaxnmv(h4, v7.h4); dump();
fmaxnmv(h8, v7.h4); dump();
fmaxnmv(h16, v7.h4); dump();
fmaxnmv(h31, v7.h4); dump();
fmaxnmv(h7, v7.h4); dump();
fmaxnmv(h7, v0.h4); dump();
fmaxnmv(h7, v1.h4); dump();
fmaxnmv(h7, v2.h4); dump();
fmaxnmv(h7, v4.h4); dump();
fmaxnmv(h7, v8.h4); dump();
fmaxnmv(h7, v16.h4); dump();
fmaxnmv(h7, v31.h4); dump();
fmaxv(h7, v7.h4); dump();
fmaxv(h0, v7.h4); dump();
fmaxv(h1, v7.h4); dump();
fmaxv(h2, v7.h4); dump();
fmaxv(h4, v7.h4); dump();
fmaxv(h8, v7.h4); dump();
fmaxv(h16, v7.h4); dump();
fmaxv(h31, v7.h4); dump();
fmaxv(h7, v7.h4); dump();
fmaxv(h7, v0.h4); dump();
fmaxv(h7, v1.h4); dump();
fmaxv(h7, v2.h4); dump();
fmaxv(h7, v4.h4); dump();
fmaxv(h7, v8.h4); dump();
fmaxv(h7, v16.h4); dump();
fmaxv(h7, v31.h4); dump();
fminnmv(h7, v7.h4); dump();
fminnmv(h0, v7.h4); dump();
fminnmv(h1, v7.h4); dump();
fminnmv(h2, v7.h4); dump();
fminnmv(h4, v7.h4); dump();
fminnmv(h8, v7.h4); dump();
fminnmv(h16, v7.h4); dump();
fminnmv(h31, v7.h4); dump();
fminnmv(h7, v7.h4); dump();
fminnmv(h7, v0.h4); dump();
fminnmv(h7, v1.h4); dump();
fminnmv(h7, v2.h4); dump();
fminnmv(h7, v4.h4); dump();
fminnmv(h7, v8.h4); dump();
fminnmv(h7, v16.h4); dump();
fminnmv(h7, v31.h4); dump();
fminv(h7, v7.h4); dump();
fminv(h0, v7.h4); dump();
fminv(h1, v7.h4); dump();
fminv(h2, v7.h4); dump();
fminv(h4, v7.h4); dump();
fminv(h8, v7.h4); dump();
fminv(h16, v7.h4); dump();
fminv(h31, v7.h4); dump();
fminv(h7, v7.h4); dump();
fminv(h7, v0.h4); dump();
fminv(h7, v1.h4); dump();
fminv(h7, v2.h4); dump();
fminv(h7, v4.h4); dump();
fminv(h7, v8.h4); dump();
fminv(h7, v16.h4); dump();
fminv(h7, v31.h4); dump();
//DataProcSimd_ReduceAcrossVectorLanes1:1
fmaxnmv(h7, v7.h8); dump();
fmaxnmv(h0, v7.h8); dump();
fmaxnmv(h1, v7.h8); dump();
fmaxnmv(h2, v7.h8); dump();
fmaxnmv(h4, v7.h8); dump();
fmaxnmv(h8, v7.h8); dump();
fmaxnmv(h16, v7.h8); dump();
fmaxnmv(h31, v7.h8); dump();
fmaxnmv(h7, v7.h8); dump();
fmaxnmv(h7, v0.h8); dump();
fmaxnmv(h7, v1.h8); dump();
fmaxnmv(h7, v2.h8); dump();
fmaxnmv(h7, v4.h8); dump();
fmaxnmv(h7, v8.h8); dump();
fmaxnmv(h7, v16.h8); dump();
fmaxnmv(h7, v31.h8); dump();
fmaxv(h7, v7.h8); dump();
fmaxv(h0, v7.h8); dump();
fmaxv(h1, v7.h8); dump();
fmaxv(h2, v7.h8); dump();
fmaxv(h4, v7.h8); dump();
fmaxv(h8, v7.h8); dump();
fmaxv(h16, v7.h8); dump();
fmaxv(h31, v7.h8); dump();
fmaxv(h7, v7.h8); dump();
fmaxv(h7, v0.h8); dump();
fmaxv(h7, v1.h8); dump();
fmaxv(h7, v2.h8); dump();
fmaxv(h7, v4.h8); dump();
fmaxv(h7, v8.h8); dump();
fmaxv(h7, v16.h8); dump();
fmaxv(h7, v31.h8); dump();
fminnmv(h7, v7.h8); dump();
fminnmv(h0, v7.h8); dump();
fminnmv(h1, v7.h8); dump();
fminnmv(h2, v7.h8); dump();
fminnmv(h4, v7.h8); dump();
fminnmv(h8, v7.h8); dump();
fminnmv(h16, v7.h8); dump();
fminnmv(h31, v7.h8); dump();
fminnmv(h7, v7.h8); dump();
fminnmv(h7, v0.h8); dump();
fminnmv(h7, v1.h8); dump();
fminnmv(h7, v2.h8); dump();
fminnmv(h7, v4.h8); dump();
fminnmv(h7, v8.h8); dump();
fminnmv(h7, v16.h8); dump();
fminnmv(h7, v31.h8); dump();
fminv(h7, v7.h8); dump();
fminv(h0, v7.h8); dump();
fminv(h1, v7.h8); dump();
fminv(h2, v7.h8); dump();
fminv(h4, v7.h8); dump();
fminv(h8, v7.h8); dump();
fminv(h16, v7.h8); dump();
fminv(h31, v7.h8); dump();
fminv(h7, v7.h8); dump();
fminv(h7, v0.h8); dump();
fminv(h7, v1.h8); dump();
fminv(h7, v2.h8); dump();
fminv(h7, v4.h8); dump();
fminv(h7, v8.h8); dump();
fminv(h7, v16.h8); dump();
fminv(h7, v31.h8); dump();
//DataProcSimd_ReduceAcrossVectorLanes1:2
fmaxnmv(s7, v7.s4); dump();
fmaxnmv(s0, v7.s4); dump();
fmaxnmv(s1, v7.s4); dump();
fmaxnmv(s2, v7.s4); dump();
fmaxnmv(s4, v7.s4); dump();
fmaxnmv(s8, v7.s4); dump();
fmaxnmv(s16, v7.s4); dump();
fmaxnmv(s31, v7.s4); dump();
fmaxnmv(s7, v7.s4); dump();
fmaxnmv(s7, v0.s4); dump();
fmaxnmv(s7, v1.s4); dump();
fmaxnmv(s7, v2.s4); dump();
fmaxnmv(s7, v4.s4); dump();
fmaxnmv(s7, v8.s4); dump();
fmaxnmv(s7, v16.s4); dump();
fmaxnmv(s7, v31.s4); dump();
fmaxv(s7, v7.s4); dump();
fmaxv(s0, v7.s4); dump();
fmaxv(s1, v7.s4); dump();
fmaxv(s2, v7.s4); dump();
fmaxv(s4, v7.s4); dump();
fmaxv(s8, v7.s4); dump();
fmaxv(s16, v7.s4); dump();
fmaxv(s31, v7.s4); dump();
fmaxv(s7, v7.s4); dump();
fmaxv(s7, v0.s4); dump();
fmaxv(s7, v1.s4); dump();
fmaxv(s7, v2.s4); dump();
fmaxv(s7, v4.s4); dump();
fmaxv(s7, v8.s4); dump();
fmaxv(s7, v16.s4); dump();
fmaxv(s7, v31.s4); dump();
fminnmv(s7, v7.s4); dump();
fminnmv(s0, v7.s4); dump();
fminnmv(s1, v7.s4); dump();
fminnmv(s2, v7.s4); dump();
fminnmv(s4, v7.s4); dump();
fminnmv(s8, v7.s4); dump();
fminnmv(s16, v7.s4); dump();
fminnmv(s31, v7.s4); dump();
fminnmv(s7, v7.s4); dump();
fminnmv(s7, v0.s4); dump();
fminnmv(s7, v1.s4); dump();
fminnmv(s7, v2.s4); dump();
fminnmv(s7, v4.s4); dump();
fminnmv(s7, v8.s4); dump();
fminnmv(s7, v16.s4); dump();
fminnmv(s7, v31.s4); dump();
fminv(s7, v7.s4); dump();
fminv(s0, v7.s4); dump();
fminv(s1, v7.s4); dump();
fminv(s2, v7.s4); dump();
fminv(s4, v7.s4); dump();
fminv(s8, v7.s4); dump();
fminv(s16, v7.s4); dump();
fminv(s31, v7.s4); dump();
fminv(s7, v7.s4); dump();
fminv(s7, v0.s4); dump();
fminv(s7, v1.s4); dump();
fminv(s7, v2.s4); dump();
fminv(s7, v4.s4); dump();
fminv(s7, v8.s4); dump();
fminv(s7, v16.s4); dump();
fminv(s7, v31.s4); dump();
//DataProcSimd_ReduceAcrossVectorLanes2:0
saddlv(h7, v7.b8); dump();
saddlv(h0, v7.b8); dump();
saddlv(h1, v7.b8); dump();
saddlv(h2, v7.b8); dump();
saddlv(h4, v7.b8); dump();
saddlv(h8, v7.b8); dump();
saddlv(h16, v7.b8); dump();
saddlv(h31, v7.b8); dump();
saddlv(h7, v7.b8); dump();
saddlv(h7, v0.b8); dump();
saddlv(h7, v1.b8); dump();
saddlv(h7, v2.b8); dump();
saddlv(h7, v4.b8); dump();
saddlv(h7, v8.b8); dump();
saddlv(h7, v16.b8); dump();
saddlv(h7, v31.b8); dump();
uaddlv(h7, v7.b8); dump();
uaddlv(h0, v7.b8); dump();
uaddlv(h1, v7.b8); dump();
uaddlv(h2, v7.b8); dump();
uaddlv(h4, v7.b8); dump();
uaddlv(h8, v7.b8); dump();
uaddlv(h16, v7.b8); dump();
uaddlv(h31, v7.b8); dump();
uaddlv(h7, v7.b8); dump();
uaddlv(h7, v0.b8); dump();
uaddlv(h7, v1.b8); dump();
uaddlv(h7, v2.b8); dump();
uaddlv(h7, v4.b8); dump();
uaddlv(h7, v8.b8); dump();
uaddlv(h7, v16.b8); dump();
uaddlv(h7, v31.b8); dump();
//DataProcSimd_ReduceAcrossVectorLanes2:1
saddlv(h7, v7.b16); dump();
saddlv(h0, v7.b16); dump();
saddlv(h1, v7.b16); dump();
saddlv(h2, v7.b16); dump();
saddlv(h4, v7.b16); dump();
saddlv(h8, v7.b16); dump();
saddlv(h16, v7.b16); dump();
saddlv(h31, v7.b16); dump();
saddlv(h7, v7.b16); dump();
saddlv(h7, v0.b16); dump();
saddlv(h7, v1.b16); dump();
saddlv(h7, v2.b16); dump();
saddlv(h7, v4.b16); dump();
saddlv(h7, v8.b16); dump();
saddlv(h7, v16.b16); dump();
saddlv(h7, v31.b16); dump();
uaddlv(h7, v7.b16); dump();
uaddlv(h0, v7.b16); dump();
uaddlv(h1, v7.b16); dump();
uaddlv(h2, v7.b16); dump();
uaddlv(h4, v7.b16); dump();
uaddlv(h8, v7.b16); dump();
uaddlv(h16, v7.b16); dump();
uaddlv(h31, v7.b16); dump();
uaddlv(h7, v7.b16); dump();
uaddlv(h7, v0.b16); dump();
uaddlv(h7, v1.b16); dump();
uaddlv(h7, v2.b16); dump();
uaddlv(h7, v4.b16); dump();
uaddlv(h7, v8.b16); dump();
uaddlv(h7, v16.b16); dump();
uaddlv(h7, v31.b16); dump();
//DataProcSimd_ReduceAcrossVectorLanes2:2
saddlv(s7, v7.h4); dump();
saddlv(s0, v7.h4); dump();
saddlv(s1, v7.h4); dump();
saddlv(s2, v7.h4); dump();
saddlv(s4, v7.h4); dump();
saddlv(s8, v7.h4); dump();
saddlv(s16, v7.h4); dump();
saddlv(s31, v7.h4); dump();
saddlv(s7, v7.h4); dump();
saddlv(s7, v0.h4); dump();
saddlv(s7, v1.h4); dump();
saddlv(s7, v2.h4); dump();
saddlv(s7, v4.h4); dump();
saddlv(s7, v8.h4); dump();
saddlv(s7, v16.h4); dump();
saddlv(s7, v31.h4); dump();
uaddlv(s7, v7.h4); dump();
uaddlv(s0, v7.h4); dump();
uaddlv(s1, v7.h4); dump();
uaddlv(s2, v7.h4); dump();
uaddlv(s4, v7.h4); dump();
uaddlv(s8, v7.h4); dump();
uaddlv(s16, v7.h4); dump();
uaddlv(s31, v7.h4); dump();
uaddlv(s7, v7.h4); dump();
uaddlv(s7, v0.h4); dump();
uaddlv(s7, v1.h4); dump();
uaddlv(s7, v2.h4); dump();
uaddlv(s7, v4.h4); dump();
uaddlv(s7, v8.h4); dump();
uaddlv(s7, v16.h4); dump();
uaddlv(s7, v31.h4); dump();
//DataProcSimd_ReduceAcrossVectorLanes2:3
saddlv(s7, v7.h8); dump();
saddlv(s0, v7.h8); dump();
saddlv(s1, v7.h8); dump();
saddlv(s2, v7.h8); dump();
saddlv(s4, v7.h8); dump();
saddlv(s8, v7.h8); dump();
saddlv(s16, v7.h8); dump();
saddlv(s31, v7.h8); dump();
saddlv(s7, v7.h8); dump();
saddlv(s7, v0.h8); dump();
saddlv(s7, v1.h8); dump();
saddlv(s7, v2.h8); dump();
saddlv(s7, v4.h8); dump();
saddlv(s7, v8.h8); dump();
saddlv(s7, v16.h8); dump();
saddlv(s7, v31.h8); dump();
uaddlv(s7, v7.h8); dump();
uaddlv(s0, v7.h8); dump();
uaddlv(s1, v7.h8); dump();
uaddlv(s2, v7.h8); dump();
uaddlv(s4, v7.h8); dump();
uaddlv(s8, v7.h8); dump();
uaddlv(s16, v7.h8); dump();
uaddlv(s31, v7.h8); dump();
uaddlv(s7, v7.h8); dump();
uaddlv(s7, v0.h8); dump();
uaddlv(s7, v1.h8); dump();
uaddlv(s7, v2.h8); dump();
uaddlv(s7, v4.h8); dump();
uaddlv(s7, v8.h8); dump();
uaddlv(s7, v16.h8); dump();
uaddlv(s7, v31.h8); dump();
//DataProcSimd_ReduceAcrossVectorLanes2:4
saddlv(d7, v7.s4); dump();
saddlv(d0, v7.s4); dump();
saddlv(d1, v7.s4); dump();
saddlv(d2, v7.s4); dump();
saddlv(d4, v7.s4); dump();
saddlv(d8, v7.s4); dump();
saddlv(d16, v7.s4); dump();
saddlv(d31, v7.s4); dump();
saddlv(d7, v7.s4); dump();
saddlv(d7, v0.s4); dump();
saddlv(d7, v1.s4); dump();
saddlv(d7, v2.s4); dump();
saddlv(d7, v4.s4); dump();
saddlv(d7, v8.s4); dump();
saddlv(d7, v16.s4); dump();
saddlv(d7, v31.s4); dump();
uaddlv(d7, v7.s4); dump();
uaddlv(d0, v7.s4); dump();
uaddlv(d1, v7.s4); dump();
uaddlv(d2, v7.s4); dump();
uaddlv(d4, v7.s4); dump();
uaddlv(d8, v7.s4); dump();
uaddlv(d16, v7.s4); dump();
uaddlv(d31, v7.s4); dump();
uaddlv(d7, v7.s4); dump();
uaddlv(d7, v0.s4); dump();
uaddlv(d7, v1.s4); dump();
uaddlv(d7, v2.s4); dump();
uaddlv(d7, v4.s4); dump();
uaddlv(d7, v8.s4); dump();
uaddlv(d7, v16.s4); dump();
uaddlv(d7, v31.s4); dump();
//DataProcSimd_ReduceAcrossVectorLanes3:0
smaxv(b7, v7.b8); dump();
smaxv(b0, v7.b8); dump();
smaxv(b1, v7.b8); dump();
smaxv(b2, v7.b8); dump();
smaxv(b4, v7.b8); dump();
smaxv(b8, v7.b8); dump();
smaxv(b16, v7.b8); dump();
smaxv(b31, v7.b8); dump();
smaxv(b7, v7.b8); dump();
smaxv(b7, v0.b8); dump();
smaxv(b7, v1.b8); dump();
smaxv(b7, v2.b8); dump();
smaxv(b7, v4.b8); dump();
smaxv(b7, v8.b8); dump();
smaxv(b7, v16.b8); dump();
smaxv(b7, v31.b8); dump();
sminv(b7, v7.b8); dump();
sminv(b0, v7.b8); dump();
sminv(b1, v7.b8); dump();
sminv(b2, v7.b8); dump();
sminv(b4, v7.b8); dump();
sminv(b8, v7.b8); dump();
sminv(b16, v7.b8); dump();
sminv(b31, v7.b8); dump();
sminv(b7, v7.b8); dump();
sminv(b7, v0.b8); dump();
sminv(b7, v1.b8); dump();
sminv(b7, v2.b8); dump();
sminv(b7, v4.b8); dump();
sminv(b7, v8.b8); dump();
sminv(b7, v16.b8); dump();
sminv(b7, v31.b8); dump();
umaxv(b7, v7.b8); dump();
umaxv(b0, v7.b8); dump();
umaxv(b1, v7.b8); dump();
umaxv(b2, v7.b8); dump();
umaxv(b4, v7.b8); dump();
umaxv(b8, v7.b8); dump();
umaxv(b16, v7.b8); dump();
umaxv(b31, v7.b8); dump();
umaxv(b7, v7.b8); dump();
umaxv(b7, v0.b8); dump();
umaxv(b7, v1.b8); dump();
umaxv(b7, v2.b8); dump();
umaxv(b7, v4.b8); dump();
umaxv(b7, v8.b8); dump();
umaxv(b7, v16.b8); dump();
umaxv(b7, v31.b8); dump();
uminv(b7, v7.b8); dump();
uminv(b0, v7.b8); dump();
uminv(b1, v7.b8); dump();
uminv(b2, v7.b8); dump();
uminv(b4, v7.b8); dump();
uminv(b8, v7.b8); dump();
uminv(b16, v7.b8); dump();
uminv(b31, v7.b8); dump();
uminv(b7, v7.b8); dump();
uminv(b7, v0.b8); dump();
uminv(b7, v1.b8); dump();
uminv(b7, v2.b8); dump();
uminv(b7, v4.b8); dump();
uminv(b7, v8.b8); dump();
uminv(b7, v16.b8); dump();
uminv(b7, v31.b8); dump();
//DataProcSimd_ReduceAcrossVectorLanes3:1
smaxv(b7, v7.b16); dump();
smaxv(b0, v7.b16); dump();
smaxv(b1, v7.b16); dump();
smaxv(b2, v7.b16); dump();
smaxv(b4, v7.b16); dump();
smaxv(b8, v7.b16); dump();
smaxv(b16, v7.b16); dump();
smaxv(b31, v7.b16); dump();
smaxv(b7, v7.b16); dump();
smaxv(b7, v0.b16); dump();
smaxv(b7, v1.b16); dump();
smaxv(b7, v2.b16); dump();
smaxv(b7, v4.b16); dump();
smaxv(b7, v8.b16); dump();
smaxv(b7, v16.b16); dump();
smaxv(b7, v31.b16); dump();
sminv(b7, v7.b16); dump();
sminv(b0, v7.b16); dump();
sminv(b1, v7.b16); dump();
sminv(b2, v7.b16); dump();
sminv(b4, v7.b16); dump();
sminv(b8, v7.b16); dump();
sminv(b16, v7.b16); dump();
sminv(b31, v7.b16); dump();
sminv(b7, v7.b16); dump();
sminv(b7, v0.b16); dump();
sminv(b7, v1.b16); dump();
sminv(b7, v2.b16); dump();
sminv(b7, v4.b16); dump();
sminv(b7, v8.b16); dump();
sminv(b7, v16.b16); dump();
sminv(b7, v31.b16); dump();
umaxv(b7, v7.b16); dump();
umaxv(b0, v7.b16); dump();
umaxv(b1, v7.b16); dump();
umaxv(b2, v7.b16); dump();
umaxv(b4, v7.b16); dump();
umaxv(b8, v7.b16); dump();
umaxv(b16, v7.b16); dump();
umaxv(b31, v7.b16); dump();
umaxv(b7, v7.b16); dump();
umaxv(b7, v0.b16); dump();
umaxv(b7, v1.b16); dump();
umaxv(b7, v2.b16); dump();
umaxv(b7, v4.b16); dump();
umaxv(b7, v8.b16); dump();
umaxv(b7, v16.b16); dump();
umaxv(b7, v31.b16); dump();
uminv(b7, v7.b16); dump();
uminv(b0, v7.b16); dump();
uminv(b1, v7.b16); dump();
uminv(b2, v7.b16); dump();
uminv(b4, v7.b16); dump();
uminv(b8, v7.b16); dump();
uminv(b16, v7.b16); dump();
uminv(b31, v7.b16); dump();
uminv(b7, v7.b16); dump();
uminv(b7, v0.b16); dump();
uminv(b7, v1.b16); dump();
uminv(b7, v2.b16); dump();
uminv(b7, v4.b16); dump();
uminv(b7, v8.b16); dump();
uminv(b7, v16.b16); dump();
uminv(b7, v31.b16); dump();
//DataProcSimd_ReduceAcrossVectorLanes3:2
smaxv(h7, v7.h4); dump();
smaxv(h0, v7.h4); dump();
smaxv(h1, v7.h4); dump();
smaxv(h2, v7.h4); dump();
smaxv(h4, v7.h4); dump();
smaxv(h8, v7.h4); dump();
smaxv(h16, v7.h4); dump();
smaxv(h31, v7.h4); dump();
smaxv(h7, v7.h4); dump();
smaxv(h7, v0.h4); dump();
smaxv(h7, v1.h4); dump();
smaxv(h7, v2.h4); dump();
smaxv(h7, v4.h4); dump();
smaxv(h7, v8.h4); dump();
smaxv(h7, v16.h4); dump();
smaxv(h7, v31.h4); dump();
sminv(h7, v7.h4); dump();
sminv(h0, v7.h4); dump();
sminv(h1, v7.h4); dump();
sminv(h2, v7.h4); dump();
sminv(h4, v7.h4); dump();
sminv(h8, v7.h4); dump();
sminv(h16, v7.h4); dump();
sminv(h31, v7.h4); dump();
sminv(h7, v7.h4); dump();
sminv(h7, v0.h4); dump();
sminv(h7, v1.h4); dump();
sminv(h7, v2.h4); dump();
sminv(h7, v4.h4); dump();
sminv(h7, v8.h4); dump();
sminv(h7, v16.h4); dump();
sminv(h7, v31.h4); dump();
umaxv(h7, v7.h4); dump();
umaxv(h0, v7.h4); dump();
umaxv(h1, v7.h4); dump();
umaxv(h2, v7.h4); dump();
umaxv(h4, v7.h4); dump();
umaxv(h8, v7.h4); dump();
umaxv(h16, v7.h4); dump();
umaxv(h31, v7.h4); dump();
umaxv(h7, v7.h4); dump();
umaxv(h7, v0.h4); dump();
umaxv(h7, v1.h4); dump();
umaxv(h7, v2.h4); dump();
umaxv(h7, v4.h4); dump();
umaxv(h7, v8.h4); dump();
umaxv(h7, v16.h4); dump();
umaxv(h7, v31.h4); dump();
uminv(h7, v7.h4); dump();
uminv(h0, v7.h4); dump();
uminv(h1, v7.h4); dump();
uminv(h2, v7.h4); dump();
uminv(h4, v7.h4); dump();
uminv(h8, v7.h4); dump();
uminv(h16, v7.h4); dump();
uminv(h31, v7.h4); dump();
uminv(h7, v7.h4); dump();
uminv(h7, v0.h4); dump();
uminv(h7, v1.h4); dump();
uminv(h7, v2.h4); dump();
uminv(h7, v4.h4); dump();
uminv(h7, v8.h4); dump();
uminv(h7, v16.h4); dump();
uminv(h7, v31.h4); dump();
//DataProcSimd_ReduceAcrossVectorLanes3:3
smaxv(h7, v7.h8); dump();
smaxv(h0, v7.h8); dump();
smaxv(h1, v7.h8); dump();
smaxv(h2, v7.h8); dump();
smaxv(h4, v7.h8); dump();
smaxv(h8, v7.h8); dump();
smaxv(h16, v7.h8); dump();
smaxv(h31, v7.h8); dump();
smaxv(h7, v7.h8); dump();
smaxv(h7, v0.h8); dump();
smaxv(h7, v1.h8); dump();
smaxv(h7, v2.h8); dump();
smaxv(h7, v4.h8); dump();
smaxv(h7, v8.h8); dump();
smaxv(h7, v16.h8); dump();
smaxv(h7, v31.h8); dump();
sminv(h7, v7.h8); dump();
sminv(h0, v7.h8); dump();
sminv(h1, v7.h8); dump();
sminv(h2, v7.h8); dump();
sminv(h4, v7.h8); dump();
sminv(h8, v7.h8); dump();
sminv(h16, v7.h8); dump();
sminv(h31, v7.h8); dump();
sminv(h7, v7.h8); dump();
sminv(h7, v0.h8); dump();
sminv(h7, v1.h8); dump();
sminv(h7, v2.h8); dump();
sminv(h7, v4.h8); dump();
sminv(h7, v8.h8); dump();
sminv(h7, v16.h8); dump();
sminv(h7, v31.h8); dump();
umaxv(h7, v7.h8); dump();
umaxv(h0, v7.h8); dump();
umaxv(h1, v7.h8); dump();
umaxv(h2, v7.h8); dump();
umaxv(h4, v7.h8); dump();
umaxv(h8, v7.h8); dump();
umaxv(h16, v7.h8); dump();
umaxv(h31, v7.h8); dump();
umaxv(h7, v7.h8); dump();
umaxv(h7, v0.h8); dump();
umaxv(h7, v1.h8); dump();
umaxv(h7, v2.h8); dump();
umaxv(h7, v4.h8); dump();
umaxv(h7, v8.h8); dump();
umaxv(h7, v16.h8); dump();
umaxv(h7, v31.h8); dump();
uminv(h7, v7.h8); dump();
uminv(h0, v7.h8); dump();
uminv(h1, v7.h8); dump();
uminv(h2, v7.h8); dump();
uminv(h4, v7.h8); dump();
uminv(h8, v7.h8); dump();
uminv(h16, v7.h8); dump();
uminv(h31, v7.h8); dump();
uminv(h7, v7.h8); dump();
uminv(h7, v0.h8); dump();
uminv(h7, v1.h8); dump();
uminv(h7, v2.h8); dump();
uminv(h7, v4.h8); dump();
uminv(h7, v8.h8); dump();
uminv(h7, v16.h8); dump();
uminv(h7, v31.h8); dump();
//DataProcSimd_ReduceAcrossVectorLanes3:4
smaxv(s7, v7.s4); dump();
smaxv(s0, v7.s4); dump();
smaxv(s1, v7.s4); dump();
smaxv(s2, v7.s4); dump();
smaxv(s4, v7.s4); dump();
smaxv(s8, v7.s4); dump();
smaxv(s16, v7.s4); dump();
smaxv(s31, v7.s4); dump();
smaxv(s7, v7.s4); dump();
smaxv(s7, v0.s4); dump();
smaxv(s7, v1.s4); dump();
smaxv(s7, v2.s4); dump();
smaxv(s7, v4.s4); dump();
smaxv(s7, v8.s4); dump();
smaxv(s7, v16.s4); dump();
smaxv(s7, v31.s4); dump();
sminv(s7, v7.s4); dump();
sminv(s0, v7.s4); dump();
sminv(s1, v7.s4); dump();
sminv(s2, v7.s4); dump();
sminv(s4, v7.s4); dump();
sminv(s8, v7.s4); dump();
sminv(s16, v7.s4); dump();
sminv(s31, v7.s4); dump();
sminv(s7, v7.s4); dump();
sminv(s7, v0.s4); dump();
sminv(s7, v1.s4); dump();
sminv(s7, v2.s4); dump();
sminv(s7, v4.s4); dump();
sminv(s7, v8.s4); dump();
sminv(s7, v16.s4); dump();
sminv(s7, v31.s4); dump();
umaxv(s7, v7.s4); dump();
umaxv(s0, v7.s4); dump();
umaxv(s1, v7.s4); dump();
umaxv(s2, v7.s4); dump();
umaxv(s4, v7.s4); dump();
umaxv(s8, v7.s4); dump();
umaxv(s16, v7.s4); dump();
umaxv(s31, v7.s4); dump();
umaxv(s7, v7.s4); dump();
umaxv(s7, v0.s4); dump();
umaxv(s7, v1.s4); dump();
umaxv(s7, v2.s4); dump();
umaxv(s7, v4.s4); dump();
umaxv(s7, v8.s4); dump();
umaxv(s7, v16.s4); dump();
umaxv(s7, v31.s4); dump();
uminv(s7, v7.s4); dump();
uminv(s0, v7.s4); dump();
uminv(s1, v7.s4); dump();
uminv(s2, v7.s4); dump();
uminv(s4, v7.s4); dump();
uminv(s8, v7.s4); dump();
uminv(s16, v7.s4); dump();
uminv(s31, v7.s4); dump();
uminv(s7, v7.s4); dump();
uminv(s7, v0.s4); dump();
uminv(s7, v1.s4); dump();
uminv(s7, v2.s4); dump();
uminv(s7, v4.s4); dump();
uminv(s7, v8.s4); dump();
uminv(s7, v16.s4); dump();
uminv(s7, v31.s4); dump();
//DataProcSimd_PairwiseArithmetic0:0
addp(v7.b8, v7.b8, v7.b8); dump();
addp(v0.b8, v7.b8, v7.b8); dump();
addp(v1.b8, v7.b8, v7.b8); dump();
addp(v2.b8, v7.b8, v7.b8); dump();
addp(v4.b8, v7.b8, v7.b8); dump();
addp(v8.b8, v7.b8, v7.b8); dump();
addp(v16.b8, v7.b8, v7.b8); dump();
addp(v31.b8, v7.b8, v7.b8); dump();
addp(v7.b8, v7.b8, v7.b8); dump();
addp(v7.b8, v0.b8, v7.b8); dump();
addp(v7.b8, v1.b8, v7.b8); dump();
addp(v7.b8, v2.b8, v7.b8); dump();
addp(v7.b8, v4.b8, v7.b8); dump();
addp(v7.b8, v8.b8, v7.b8); dump();
addp(v7.b8, v16.b8, v7.b8); dump();
addp(v7.b8, v31.b8, v7.b8); dump();
addp(v7.b8, v7.b8, v7.b8); dump();
addp(v7.b8, v7.b8, v0.b8); dump();
addp(v7.b8, v7.b8, v1.b8); dump();
addp(v7.b8, v7.b8, v2.b8); dump();
addp(v7.b8, v7.b8, v4.b8); dump();
addp(v7.b8, v7.b8, v8.b8); dump();
addp(v7.b8, v7.b8, v16.b8); dump();
addp(v7.b8, v7.b8, v31.b8); dump();
//DataProcSimd_PairwiseArithmetic0:1
addp(v7.b16, v7.b16, v7.b16); dump();
addp(v0.b16, v7.b16, v7.b16); dump();
addp(v1.b16, v7.b16, v7.b16); dump();
addp(v2.b16, v7.b16, v7.b16); dump();
addp(v4.b16, v7.b16, v7.b16); dump();
addp(v8.b16, v7.b16, v7.b16); dump();
addp(v16.b16, v7.b16, v7.b16); dump();
addp(v31.b16, v7.b16, v7.b16); dump();
addp(v7.b16, v7.b16, v7.b16); dump();
addp(v7.b16, v0.b16, v7.b16); dump();
addp(v7.b16, v1.b16, v7.b16); dump();
addp(v7.b16, v2.b16, v7.b16); dump();
addp(v7.b16, v4.b16, v7.b16); dump();
addp(v7.b16, v8.b16, v7.b16); dump();
addp(v7.b16, v16.b16, v7.b16); dump();
addp(v7.b16, v31.b16, v7.b16); dump();
addp(v7.b16, v7.b16, v7.b16); dump();
addp(v7.b16, v7.b16, v0.b16); dump();
addp(v7.b16, v7.b16, v1.b16); dump();
addp(v7.b16, v7.b16, v2.b16); dump();
addp(v7.b16, v7.b16, v4.b16); dump();
addp(v7.b16, v7.b16, v8.b16); dump();
addp(v7.b16, v7.b16, v16.b16); dump();
addp(v7.b16, v7.b16, v31.b16); dump();
//DataProcSimd_PairwiseArithmetic0:2
addp(v7.h4, v7.h4, v7.h4); dump();
addp(v0.h4, v7.h4, v7.h4); dump();
addp(v1.h4, v7.h4, v7.h4); dump();
addp(v2.h4, v7.h4, v7.h4); dump();
addp(v4.h4, v7.h4, v7.h4); dump();
addp(v8.h4, v7.h4, v7.h4); dump();
addp(v16.h4, v7.h4, v7.h4); dump();
addp(v31.h4, v7.h4, v7.h4); dump();
addp(v7.h4, v7.h4, v7.h4); dump();
addp(v7.h4, v0.h4, v7.h4); dump();
addp(v7.h4, v1.h4, v7.h4); dump();
addp(v7.h4, v2.h4, v7.h4); dump();
addp(v7.h4, v4.h4, v7.h4); dump();
addp(v7.h4, v8.h4, v7.h4); dump();
addp(v7.h4, v16.h4, v7.h4); dump();
addp(v7.h4, v31.h4, v7.h4); dump();
addp(v7.h4, v7.h4, v7.h4); dump();
addp(v7.h4, v7.h4, v0.h4); dump();
addp(v7.h4, v7.h4, v1.h4); dump();
addp(v7.h4, v7.h4, v2.h4); dump();
addp(v7.h4, v7.h4, v4.h4); dump();
addp(v7.h4, v7.h4, v8.h4); dump();
addp(v7.h4, v7.h4, v16.h4); dump();
addp(v7.h4, v7.h4, v31.h4); dump();
//DataProcSimd_PairwiseArithmetic0:3
addp(v7.h8, v7.h8, v7.h8); dump();
addp(v0.h8, v7.h8, v7.h8); dump();
addp(v1.h8, v7.h8, v7.h8); dump();
addp(v2.h8, v7.h8, v7.h8); dump();
addp(v4.h8, v7.h8, v7.h8); dump();
addp(v8.h8, v7.h8, v7.h8); dump();
addp(v16.h8, v7.h8, v7.h8); dump();
addp(v31.h8, v7.h8, v7.h8); dump();
addp(v7.h8, v7.h8, v7.h8); dump();
addp(v7.h8, v0.h8, v7.h8); dump();
addp(v7.h8, v1.h8, v7.h8); dump();
addp(v7.h8, v2.h8, v7.h8); dump();
addp(v7.h8, v4.h8, v7.h8); dump();
addp(v7.h8, v8.h8, v7.h8); dump();
addp(v7.h8, v16.h8, v7.h8); dump();
addp(v7.h8, v31.h8, v7.h8); dump();
addp(v7.h8, v7.h8, v7.h8); dump();
addp(v7.h8, v7.h8, v0.h8); dump();
addp(v7.h8, v7.h8, v1.h8); dump();
addp(v7.h8, v7.h8, v2.h8); dump();
addp(v7.h8, v7.h8, v4.h8); dump();
addp(v7.h8, v7.h8, v8.h8); dump();
addp(v7.h8, v7.h8, v16.h8); dump();
addp(v7.h8, v7.h8, v31.h8); dump();
//DataProcSimd_PairwiseArithmetic0:4
addp(v7.s2, v7.s2, v7.s2); dump();
addp(v0.s2, v7.s2, v7.s2); dump();
addp(v1.s2, v7.s2, v7.s2); dump();
addp(v2.s2, v7.s2, v7.s2); dump();
addp(v4.s2, v7.s2, v7.s2); dump();
addp(v8.s2, v7.s2, v7.s2); dump();
addp(v16.s2, v7.s2, v7.s2); dump();
addp(v31.s2, v7.s2, v7.s2); dump();
addp(v7.s2, v7.s2, v7.s2); dump();
addp(v7.s2, v0.s2, v7.s2); dump();
addp(v7.s2, v1.s2, v7.s2); dump();
addp(v7.s2, v2.s2, v7.s2); dump();
addp(v7.s2, v4.s2, v7.s2); dump();
addp(v7.s2, v8.s2, v7.s2); dump();
addp(v7.s2, v16.s2, v7.s2); dump();
addp(v7.s2, v31.s2, v7.s2); dump();
addp(v7.s2, v7.s2, v7.s2); dump();
addp(v7.s2, v7.s2, v0.s2); dump();
addp(v7.s2, v7.s2, v1.s2); dump();
addp(v7.s2, v7.s2, v2.s2); dump();
addp(v7.s2, v7.s2, v4.s2); dump();
addp(v7.s2, v7.s2, v8.s2); dump();
addp(v7.s2, v7.s2, v16.s2); dump();
addp(v7.s2, v7.s2, v31.s2); dump();
//DataProcSimd_PairwiseArithmetic0:5
addp(v7.s4, v7.s4, v7.s4); dump();
addp(v0.s4, v7.s4, v7.s4); dump();
addp(v1.s4, v7.s4, v7.s4); dump();
addp(v2.s4, v7.s4, v7.s4); dump();
addp(v4.s4, v7.s4, v7.s4); dump();
addp(v8.s4, v7.s4, v7.s4); dump();
addp(v16.s4, v7.s4, v7.s4); dump();
addp(v31.s4, v7.s4, v7.s4); dump();
addp(v7.s4, v7.s4, v7.s4); dump();
addp(v7.s4, v0.s4, v7.s4); dump();
addp(v7.s4, v1.s4, v7.s4); dump();
addp(v7.s4, v2.s4, v7.s4); dump();
addp(v7.s4, v4.s4, v7.s4); dump();
addp(v7.s4, v8.s4, v7.s4); dump();
addp(v7.s4, v16.s4, v7.s4); dump();
addp(v7.s4, v31.s4, v7.s4); dump();
addp(v7.s4, v7.s4, v7.s4); dump();
addp(v7.s4, v7.s4, v0.s4); dump();
addp(v7.s4, v7.s4, v1.s4); dump();
addp(v7.s4, v7.s4, v2.s4); dump();
addp(v7.s4, v7.s4, v4.s4); dump();
addp(v7.s4, v7.s4, v8.s4); dump();
addp(v7.s4, v7.s4, v16.s4); dump();
addp(v7.s4, v7.s4, v31.s4); dump();
//DataProcSimd_PairwiseArithmetic0:6
addp(v7.d2, v7.d2, v7.d2); dump();
addp(v0.d2, v7.d2, v7.d2); dump();
addp(v1.d2, v7.d2, v7.d2); dump();
addp(v2.d2, v7.d2, v7.d2); dump();
addp(v4.d2, v7.d2, v7.d2); dump();
addp(v8.d2, v7.d2, v7.d2); dump();
addp(v16.d2, v7.d2, v7.d2); dump();
addp(v31.d2, v7.d2, v7.d2); dump();
addp(v7.d2, v7.d2, v7.d2); dump();
addp(v7.d2, v0.d2, v7.d2); dump();
addp(v7.d2, v1.d2, v7.d2); dump();
addp(v7.d2, v2.d2, v7.d2); dump();
addp(v7.d2, v4.d2, v7.d2); dump();
addp(v7.d2, v8.d2, v7.d2); dump();
addp(v7.d2, v16.d2, v7.d2); dump();
addp(v7.d2, v31.d2, v7.d2); dump();
addp(v7.d2, v7.d2, v7.d2); dump();
addp(v7.d2, v7.d2, v0.d2); dump();
addp(v7.d2, v7.d2, v1.d2); dump();
addp(v7.d2, v7.d2, v2.d2); dump();
addp(v7.d2, v7.d2, v4.d2); dump();
addp(v7.d2, v7.d2, v8.d2); dump();
addp(v7.d2, v7.d2, v16.d2); dump();
addp(v7.d2, v7.d2, v31.d2); dump();
//DataProcSimd_PairwiseArithmetic1:0
addp(d7, v7.d2); dump();
addp(d0, v7.d2); dump();
addp(d1, v7.d2); dump();
addp(d2, v7.d2); dump();
addp(d4, v7.d2); dump();
addp(d8, v7.d2); dump();
addp(d16, v7.d2); dump();
addp(d31, v7.d2); dump();
addp(d7, v7.d2); dump();
addp(d7, v0.d2); dump();
addp(d7, v1.d2); dump();
addp(d7, v2.d2); dump();
addp(d7, v4.d2); dump();
addp(d7, v8.d2); dump();
addp(d7, v16.d2); dump();
addp(d7, v31.d2); dump();
//DataProcSimd_PairwiseArithmetic2:0
faddp(v7.h4, v7.h4, v7.h4); dump();
faddp(v0.h4, v7.h4, v7.h4); dump();
faddp(v1.h4, v7.h4, v7.h4); dump();
faddp(v2.h4, v7.h4, v7.h4); dump();
faddp(v4.h4, v7.h4, v7.h4); dump();
faddp(v8.h4, v7.h4, v7.h4); dump();
faddp(v16.h4, v7.h4, v7.h4); dump();
faddp(v31.h4, v7.h4, v7.h4); dump();
faddp(v7.h4, v7.h4, v7.h4); dump();
faddp(v7.h4, v0.h4, v7.h4); dump();
faddp(v7.h4, v1.h4, v7.h4); dump();
faddp(v7.h4, v2.h4, v7.h4); dump();
faddp(v7.h4, v4.h4, v7.h4); dump();
faddp(v7.h4, v8.h4, v7.h4); dump();
faddp(v7.h4, v16.h4, v7.h4); dump();
faddp(v7.h4, v31.h4, v7.h4); dump();
faddp(v7.h4, v7.h4, v7.h4); dump();
faddp(v7.h4, v7.h4, v0.h4); dump();
faddp(v7.h4, v7.h4, v1.h4); dump();
faddp(v7.h4, v7.h4, v2.h4); dump();
faddp(v7.h4, v7.h4, v4.h4); dump();
faddp(v7.h4, v7.h4, v8.h4); dump();
faddp(v7.h4, v7.h4, v16.h4); dump();
faddp(v7.h4, v7.h4, v31.h4); dump();
fmaxnmp(v7.h4, v7.h4, v7.h4); dump();
fmaxnmp(v0.h4, v7.h4, v7.h4); dump();
fmaxnmp(v1.h4, v7.h4, v7.h4); dump();
fmaxnmp(v2.h4, v7.h4, v7.h4); dump();
fmaxnmp(v4.h4, v7.h4, v7.h4); dump();
fmaxnmp(v8.h4, v7.h4, v7.h4); dump();
fmaxnmp(v16.h4, v7.h4, v7.h4); dump();
fmaxnmp(v31.h4, v7.h4, v7.h4); dump();
fmaxnmp(v7.h4, v7.h4, v7.h4); dump();
fmaxnmp(v7.h4, v0.h4, v7.h4); dump();
fmaxnmp(v7.h4, v1.h4, v7.h4); dump();
fmaxnmp(v7.h4, v2.h4, v7.h4); dump();
fmaxnmp(v7.h4, v4.h4, v7.h4); dump();
fmaxnmp(v7.h4, v8.h4, v7.h4); dump();
fmaxnmp(v7.h4, v16.h4, v7.h4); dump();
fmaxnmp(v7.h4, v31.h4, v7.h4); dump();
fmaxnmp(v7.h4, v7.h4, v7.h4); dump();
fmaxnmp(v7.h4, v7.h4, v0.h4); dump();
fmaxnmp(v7.h4, v7.h4, v1.h4); dump();
fmaxnmp(v7.h4, v7.h4, v2.h4); dump();
fmaxnmp(v7.h4, v7.h4, v4.h4); dump();
fmaxnmp(v7.h4, v7.h4, v8.h4); dump();
fmaxnmp(v7.h4, v7.h4, v16.h4); dump();
fmaxnmp(v7.h4, v7.h4, v31.h4); dump();
fmaxp(v7.h4, v7.h4, v7.h4); dump();
fmaxp(v0.h4, v7.h4, v7.h4); dump();
fmaxp(v1.h4, v7.h4, v7.h4); dump();
fmaxp(v2.h4, v7.h4, v7.h4); dump();
fmaxp(v4.h4, v7.h4, v7.h4); dump();
fmaxp(v8.h4, v7.h4, v7.h4); dump();
fmaxp(v16.h4, v7.h4, v7.h4); dump();
fmaxp(v31.h4, v7.h4, v7.h4); dump();
fmaxp(v7.h4, v7.h4, v7.h4); dump();
fmaxp(v7.h4, v0.h4, v7.h4); dump();
fmaxp(v7.h4, v1.h4, v7.h4); dump();
fmaxp(v7.h4, v2.h4, v7.h4); dump();
fmaxp(v7.h4, v4.h4, v7.h4); dump();
fmaxp(v7.h4, v8.h4, v7.h4); dump();
fmaxp(v7.h4, v16.h4, v7.h4); dump();
fmaxp(v7.h4, v31.h4, v7.h4); dump();
fmaxp(v7.h4, v7.h4, v7.h4); dump();
fmaxp(v7.h4, v7.h4, v0.h4); dump();
fmaxp(v7.h4, v7.h4, v1.h4); dump();
fmaxp(v7.h4, v7.h4, v2.h4); dump();
fmaxp(v7.h4, v7.h4, v4.h4); dump();
fmaxp(v7.h4, v7.h4, v8.h4); dump();
fmaxp(v7.h4, v7.h4, v16.h4); dump();
fmaxp(v7.h4, v7.h4, v31.h4); dump();
fminnmp(v7.h4, v7.h4, v7.h4); dump();
fminnmp(v0.h4, v7.h4, v7.h4); dump();
fminnmp(v1.h4, v7.h4, v7.h4); dump();
fminnmp(v2.h4, v7.h4, v7.h4); dump();
fminnmp(v4.h4, v7.h4, v7.h4); dump();
fminnmp(v8.h4, v7.h4, v7.h4); dump();
fminnmp(v16.h4, v7.h4, v7.h4); dump();
fminnmp(v31.h4, v7.h4, v7.h4); dump();
fminnmp(v7.h4, v7.h4, v7.h4); dump();
fminnmp(v7.h4, v0.h4, v7.h4); dump();
fminnmp(v7.h4, v1.h4, v7.h4); dump();
fminnmp(v7.h4, v2.h4, v7.h4); dump();
fminnmp(v7.h4, v4.h4, v7.h4); dump();
fminnmp(v7.h4, v8.h4, v7.h4); dump();
fminnmp(v7.h4, v16.h4, v7.h4); dump();
fminnmp(v7.h4, v31.h4, v7.h4); dump();
fminnmp(v7.h4, v7.h4, v7.h4); dump();
fminnmp(v7.h4, v7.h4, v0.h4); dump();
fminnmp(v7.h4, v7.h4, v1.h4); dump();
fminnmp(v7.h4, v7.h4, v2.h4); dump();
fminnmp(v7.h4, v7.h4, v4.h4); dump();
fminnmp(v7.h4, v7.h4, v8.h4); dump();
fminnmp(v7.h4, v7.h4, v16.h4); dump();
fminnmp(v7.h4, v7.h4, v31.h4); dump();
fminp(v7.h4, v7.h4, v7.h4); dump();
fminp(v0.h4, v7.h4, v7.h4); dump();
fminp(v1.h4, v7.h4, v7.h4); dump();
fminp(v2.h4, v7.h4, v7.h4); dump();
fminp(v4.h4, v7.h4, v7.h4); dump();
fminp(v8.h4, v7.h4, v7.h4); dump();
fminp(v16.h4, v7.h4, v7.h4); dump();
fminp(v31.h4, v7.h4, v7.h4); dump();
fminp(v7.h4, v7.h4, v7.h4); dump();
fminp(v7.h4, v0.h4, v7.h4); dump();
fminp(v7.h4, v1.h4, v7.h4); dump();
fminp(v7.h4, v2.h4, v7.h4); dump();
fminp(v7.h4, v4.h4, v7.h4); dump();
fminp(v7.h4, v8.h4, v7.h4); dump();
fminp(v7.h4, v16.h4, v7.h4); dump();
fminp(v7.h4, v31.h4, v7.h4); dump();
fminp(v7.h4, v7.h4, v7.h4); dump();
fminp(v7.h4, v7.h4, v0.h4); dump();
fminp(v7.h4, v7.h4, v1.h4); dump();
fminp(v7.h4, v7.h4, v2.h4); dump();
fminp(v7.h4, v7.h4, v4.h4); dump();
fminp(v7.h4, v7.h4, v8.h4); dump();
fminp(v7.h4, v7.h4, v16.h4); dump();
fminp(v7.h4, v7.h4, v31.h4); dump();
//DataProcSimd_PairwiseArithmetic2:1
faddp(v7.h8, v7.h8, v7.h8); dump();
faddp(v0.h8, v7.h8, v7.h8); dump();
faddp(v1.h8, v7.h8, v7.h8); dump();
faddp(v2.h8, v7.h8, v7.h8); dump();
faddp(v4.h8, v7.h8, v7.h8); dump();
faddp(v8.h8, v7.h8, v7.h8); dump();
faddp(v16.h8, v7.h8, v7.h8); dump();
faddp(v31.h8, v7.h8, v7.h8); dump();
faddp(v7.h8, v7.h8, v7.h8); dump();
faddp(v7.h8, v0.h8, v7.h8); dump();
faddp(v7.h8, v1.h8, v7.h8); dump();
faddp(v7.h8, v2.h8, v7.h8); dump();
faddp(v7.h8, v4.h8, v7.h8); dump();
faddp(v7.h8, v8.h8, v7.h8); dump();
faddp(v7.h8, v16.h8, v7.h8); dump();
faddp(v7.h8, v31.h8, v7.h8); dump();
faddp(v7.h8, v7.h8, v7.h8); dump();
faddp(v7.h8, v7.h8, v0.h8); dump();
faddp(v7.h8, v7.h8, v1.h8); dump();
faddp(v7.h8, v7.h8, v2.h8); dump();
faddp(v7.h8, v7.h8, v4.h8); dump();
faddp(v7.h8, v7.h8, v8.h8); dump();
faddp(v7.h8, v7.h8, v16.h8); dump();
faddp(v7.h8, v7.h8, v31.h8); dump();
fmaxnmp(v7.h8, v7.h8, v7.h8); dump();
fmaxnmp(v0.h8, v7.h8, v7.h8); dump();
fmaxnmp(v1.h8, v7.h8, v7.h8); dump();
fmaxnmp(v2.h8, v7.h8, v7.h8); dump();
fmaxnmp(v4.h8, v7.h8, v7.h8); dump();
fmaxnmp(v8.h8, v7.h8, v7.h8); dump();
fmaxnmp(v16.h8, v7.h8, v7.h8); dump();
fmaxnmp(v31.h8, v7.h8, v7.h8); dump();
fmaxnmp(v7.h8, v7.h8, v7.h8); dump();
fmaxnmp(v7.h8, v0.h8, v7.h8); dump();
fmaxnmp(v7.h8, v1.h8, v7.h8); dump();
fmaxnmp(v7.h8, v2.h8, v7.h8); dump();
fmaxnmp(v7.h8, v4.h8, v7.h8); dump();
fmaxnmp(v7.h8, v8.h8, v7.h8); dump();
fmaxnmp(v7.h8, v16.h8, v7.h8); dump();
fmaxnmp(v7.h8, v31.h8, v7.h8); dump();
fmaxnmp(v7.h8, v7.h8, v7.h8); dump();
fmaxnmp(v7.h8, v7.h8, v0.h8); dump();
fmaxnmp(v7.h8, v7.h8, v1.h8); dump();
fmaxnmp(v7.h8, v7.h8, v2.h8); dump();
fmaxnmp(v7.h8, v7.h8, v4.h8); dump();
fmaxnmp(v7.h8, v7.h8, v8.h8); dump();
fmaxnmp(v7.h8, v7.h8, v16.h8); dump();
fmaxnmp(v7.h8, v7.h8, v31.h8); dump();
fmaxp(v7.h8, v7.h8, v7.h8); dump();
fmaxp(v0.h8, v7.h8, v7.h8); dump();
fmaxp(v1.h8, v7.h8, v7.h8); dump();
fmaxp(v2.h8, v7.h8, v7.h8); dump();
fmaxp(v4.h8, v7.h8, v7.h8); dump();
fmaxp(v8.h8, v7.h8, v7.h8); dump();
fmaxp(v16.h8, v7.h8, v7.h8); dump();
fmaxp(v31.h8, v7.h8, v7.h8); dump();
fmaxp(v7.h8, v7.h8, v7.h8); dump();
fmaxp(v7.h8, v0.h8, v7.h8); dump();
fmaxp(v7.h8, v1.h8, v7.h8); dump();
fmaxp(v7.h8, v2.h8, v7.h8); dump();
fmaxp(v7.h8, v4.h8, v7.h8); dump();
fmaxp(v7.h8, v8.h8, v7.h8); dump();
fmaxp(v7.h8, v16.h8, v7.h8); dump();
fmaxp(v7.h8, v31.h8, v7.h8); dump();
fmaxp(v7.h8, v7.h8, v7.h8); dump();
fmaxp(v7.h8, v7.h8, v0.h8); dump();
fmaxp(v7.h8, v7.h8, v1.h8); dump();
fmaxp(v7.h8, v7.h8, v2.h8); dump();
fmaxp(v7.h8, v7.h8, v4.h8); dump();
fmaxp(v7.h8, v7.h8, v8.h8); dump();
fmaxp(v7.h8, v7.h8, v16.h8); dump();
fmaxp(v7.h8, v7.h8, v31.h8); dump();
fminnmp(v7.h8, v7.h8, v7.h8); dump();
fminnmp(v0.h8, v7.h8, v7.h8); dump();
fminnmp(v1.h8, v7.h8, v7.h8); dump();
fminnmp(v2.h8, v7.h8, v7.h8); dump();
fminnmp(v4.h8, v7.h8, v7.h8); dump();
fminnmp(v8.h8, v7.h8, v7.h8); dump();
fminnmp(v16.h8, v7.h8, v7.h8); dump();
fminnmp(v31.h8, v7.h8, v7.h8); dump();
fminnmp(v7.h8, v7.h8, v7.h8); dump();
fminnmp(v7.h8, v0.h8, v7.h8); dump();
fminnmp(v7.h8, v1.h8, v7.h8); dump();
fminnmp(v7.h8, v2.h8, v7.h8); dump();
fminnmp(v7.h8, v4.h8, v7.h8); dump();
fminnmp(v7.h8, v8.h8, v7.h8); dump();
fminnmp(v7.h8, v16.h8, v7.h8); dump();
fminnmp(v7.h8, v31.h8, v7.h8); dump();
fminnmp(v7.h8, v7.h8, v7.h8); dump();
fminnmp(v7.h8, v7.h8, v0.h8); dump();
fminnmp(v7.h8, v7.h8, v1.h8); dump();
fminnmp(v7.h8, v7.h8, v2.h8); dump();
fminnmp(v7.h8, v7.h8, v4.h8); dump();
fminnmp(v7.h8, v7.h8, v8.h8); dump();
fminnmp(v7.h8, v7.h8, v16.h8); dump();
fminnmp(v7.h8, v7.h8, v31.h8); dump();
fminp(v7.h8, v7.h8, v7.h8); dump();
fminp(v0.h8, v7.h8, v7.h8); dump();
fminp(v1.h8, v7.h8, v7.h8); dump();
fminp(v2.h8, v7.h8, v7.h8); dump();
fminp(v4.h8, v7.h8, v7.h8); dump();
fminp(v8.h8, v7.h8, v7.h8); dump();
fminp(v16.h8, v7.h8, v7.h8); dump();
fminp(v31.h8, v7.h8, v7.h8); dump();
fminp(v7.h8, v7.h8, v7.h8); dump();
fminp(v7.h8, v0.h8, v7.h8); dump();
fminp(v7.h8, v1.h8, v7.h8); dump();
fminp(v7.h8, v2.h8, v7.h8); dump();
fminp(v7.h8, v4.h8, v7.h8); dump();
fminp(v7.h8, v8.h8, v7.h8); dump();
fminp(v7.h8, v16.h8, v7.h8); dump();
fminp(v7.h8, v31.h8, v7.h8); dump();
fminp(v7.h8, v7.h8, v7.h8); dump();
fminp(v7.h8, v7.h8, v0.h8); dump();
fminp(v7.h8, v7.h8, v1.h8); dump();
fminp(v7.h8, v7.h8, v2.h8); dump();
fminp(v7.h8, v7.h8, v4.h8); dump();
fminp(v7.h8, v7.h8, v8.h8); dump();
fminp(v7.h8, v7.h8, v16.h8); dump();
fminp(v7.h8, v7.h8, v31.h8); dump();
//DataProcSimd_PairwiseArithmetic2:2
faddp(v7.s2, v7.s2, v7.s2); dump();
faddp(v0.s2, v7.s2, v7.s2); dump();
faddp(v1.s2, v7.s2, v7.s2); dump();
faddp(v2.s2, v7.s2, v7.s2); dump();
faddp(v4.s2, v7.s2, v7.s2); dump();
faddp(v8.s2, v7.s2, v7.s2); dump();
faddp(v16.s2, v7.s2, v7.s2); dump();
faddp(v31.s2, v7.s2, v7.s2); dump();
faddp(v7.s2, v7.s2, v7.s2); dump();
faddp(v7.s2, v0.s2, v7.s2); dump();
faddp(v7.s2, v1.s2, v7.s2); dump();
faddp(v7.s2, v2.s2, v7.s2); dump();
faddp(v7.s2, v4.s2, v7.s2); dump();
faddp(v7.s2, v8.s2, v7.s2); dump();
faddp(v7.s2, v16.s2, v7.s2); dump();
faddp(v7.s2, v31.s2, v7.s2); dump();
faddp(v7.s2, v7.s2, v7.s2); dump();
faddp(v7.s2, v7.s2, v0.s2); dump();
faddp(v7.s2, v7.s2, v1.s2); dump();
faddp(v7.s2, v7.s2, v2.s2); dump();
faddp(v7.s2, v7.s2, v4.s2); dump();
faddp(v7.s2, v7.s2, v8.s2); dump();
faddp(v7.s2, v7.s2, v16.s2); dump();
faddp(v7.s2, v7.s2, v31.s2); dump();
fmaxnmp(v7.s2, v7.s2, v7.s2); dump();
fmaxnmp(v0.s2, v7.s2, v7.s2); dump();
fmaxnmp(v1.s2, v7.s2, v7.s2); dump();
fmaxnmp(v2.s2, v7.s2, v7.s2); dump();
fmaxnmp(v4.s2, v7.s2, v7.s2); dump();
fmaxnmp(v8.s2, v7.s2, v7.s2); dump();
fmaxnmp(v16.s2, v7.s2, v7.s2); dump();
fmaxnmp(v31.s2, v7.s2, v7.s2); dump();
fmaxnmp(v7.s2, v7.s2, v7.s2); dump();
fmaxnmp(v7.s2, v0.s2, v7.s2); dump();
fmaxnmp(v7.s2, v1.s2, v7.s2); dump();
fmaxnmp(v7.s2, v2.s2, v7.s2); dump();
fmaxnmp(v7.s2, v4.s2, v7.s2); dump();
fmaxnmp(v7.s2, v8.s2, v7.s2); dump();
fmaxnmp(v7.s2, v16.s2, v7.s2); dump();
fmaxnmp(v7.s2, v31.s2, v7.s2); dump();
fmaxnmp(v7.s2, v7.s2, v7.s2); dump();
fmaxnmp(v7.s2, v7.s2, v0.s2); dump();
fmaxnmp(v7.s2, v7.s2, v1.s2); dump();
fmaxnmp(v7.s2, v7.s2, v2.s2); dump();
fmaxnmp(v7.s2, v7.s2, v4.s2); dump();
fmaxnmp(v7.s2, v7.s2, v8.s2); dump();
fmaxnmp(v7.s2, v7.s2, v16.s2); dump();
fmaxnmp(v7.s2, v7.s2, v31.s2); dump();
fmaxp(v7.s2, v7.s2, v7.s2); dump();
fmaxp(v0.s2, v7.s2, v7.s2); dump();
fmaxp(v1.s2, v7.s2, v7.s2); dump();
fmaxp(v2.s2, v7.s2, v7.s2); dump();
fmaxp(v4.s2, v7.s2, v7.s2); dump();
fmaxp(v8.s2, v7.s2, v7.s2); dump();
fmaxp(v16.s2, v7.s2, v7.s2); dump();
fmaxp(v31.s2, v7.s2, v7.s2); dump();
fmaxp(v7.s2, v7.s2, v7.s2); dump();
fmaxp(v7.s2, v0.s2, v7.s2); dump();
fmaxp(v7.s2, v1.s2, v7.s2); dump();
fmaxp(v7.s2, v2.s2, v7.s2); dump();
fmaxp(v7.s2, v4.s2, v7.s2); dump();
fmaxp(v7.s2, v8.s2, v7.s2); dump();
fmaxp(v7.s2, v16.s2, v7.s2); dump();
fmaxp(v7.s2, v31.s2, v7.s2); dump();
fmaxp(v7.s2, v7.s2, v7.s2); dump();
fmaxp(v7.s2, v7.s2, v0.s2); dump();
fmaxp(v7.s2, v7.s2, v1.s2); dump();
fmaxp(v7.s2, v7.s2, v2.s2); dump();
fmaxp(v7.s2, v7.s2, v4.s2); dump();
fmaxp(v7.s2, v7.s2, v8.s2); dump();
fmaxp(v7.s2, v7.s2, v16.s2); dump();
fmaxp(v7.s2, v7.s2, v31.s2); dump();
fminnmp(v7.s2, v7.s2, v7.s2); dump();
fminnmp(v0.s2, v7.s2, v7.s2); dump();
fminnmp(v1.s2, v7.s2, v7.s2); dump();
fminnmp(v2.s2, v7.s2, v7.s2); dump();
fminnmp(v4.s2, v7.s2, v7.s2); dump();
fminnmp(v8.s2, v7.s2, v7.s2); dump();
fminnmp(v16.s2, v7.s2, v7.s2); dump();
fminnmp(v31.s2, v7.s2, v7.s2); dump();
fminnmp(v7.s2, v7.s2, v7.s2); dump();
fminnmp(v7.s2, v0.s2, v7.s2); dump();
fminnmp(v7.s2, v1.s2, v7.s2); dump();
fminnmp(v7.s2, v2.s2, v7.s2); dump();
fminnmp(v7.s2, v4.s2, v7.s2); dump();
fminnmp(v7.s2, v8.s2, v7.s2); dump();
fminnmp(v7.s2, v16.s2, v7.s2); dump();
fminnmp(v7.s2, v31.s2, v7.s2); dump();
fminnmp(v7.s2, v7.s2, v7.s2); dump();
fminnmp(v7.s2, v7.s2, v0.s2); dump();
fminnmp(v7.s2, v7.s2, v1.s2); dump();
fminnmp(v7.s2, v7.s2, v2.s2); dump();
fminnmp(v7.s2, v7.s2, v4.s2); dump();
fminnmp(v7.s2, v7.s2, v8.s2); dump();
fminnmp(v7.s2, v7.s2, v16.s2); dump();
fminnmp(v7.s2, v7.s2, v31.s2); dump();
fminp(v7.s2, v7.s2, v7.s2); dump();
fminp(v0.s2, v7.s2, v7.s2); dump();
fminp(v1.s2, v7.s2, v7.s2); dump();
fminp(v2.s2, v7.s2, v7.s2); dump();
fminp(v4.s2, v7.s2, v7.s2); dump();
fminp(v8.s2, v7.s2, v7.s2); dump();
fminp(v16.s2, v7.s2, v7.s2); dump();
fminp(v31.s2, v7.s2, v7.s2); dump();
fminp(v7.s2, v7.s2, v7.s2); dump();
fminp(v7.s2, v0.s2, v7.s2); dump();
fminp(v7.s2, v1.s2, v7.s2); dump();
fminp(v7.s2, v2.s2, v7.s2); dump();
fminp(v7.s2, v4.s2, v7.s2); dump();
fminp(v7.s2, v8.s2, v7.s2); dump();
fminp(v7.s2, v16.s2, v7.s2); dump();
fminp(v7.s2, v31.s2, v7.s2); dump();
fminp(v7.s2, v7.s2, v7.s2); dump();
fminp(v7.s2, v7.s2, v0.s2); dump();
fminp(v7.s2, v7.s2, v1.s2); dump();
fminp(v7.s2, v7.s2, v2.s2); dump();
fminp(v7.s2, v7.s2, v4.s2); dump();
fminp(v7.s2, v7.s2, v8.s2); dump();
fminp(v7.s2, v7.s2, v16.s2); dump();
fminp(v7.s2, v7.s2, v31.s2); dump();
//DataProcSimd_PairwiseArithmetic2:3
faddp(v7.s4, v7.s4, v7.s4); dump();
faddp(v0.s4, v7.s4, v7.s4); dump();
faddp(v1.s4, v7.s4, v7.s4); dump();
faddp(v2.s4, v7.s4, v7.s4); dump();
faddp(v4.s4, v7.s4, v7.s4); dump();
faddp(v8.s4, v7.s4, v7.s4); dump();
faddp(v16.s4, v7.s4, v7.s4); dump();
faddp(v31.s4, v7.s4, v7.s4); dump();
faddp(v7.s4, v7.s4, v7.s4); dump();
faddp(v7.s4, v0.s4, v7.s4); dump();
faddp(v7.s4, v1.s4, v7.s4); dump();
faddp(v7.s4, v2.s4, v7.s4); dump();
faddp(v7.s4, v4.s4, v7.s4); dump();
faddp(v7.s4, v8.s4, v7.s4); dump();
faddp(v7.s4, v16.s4, v7.s4); dump();
faddp(v7.s4, v31.s4, v7.s4); dump();
faddp(v7.s4, v7.s4, v7.s4); dump();
faddp(v7.s4, v7.s4, v0.s4); dump();
faddp(v7.s4, v7.s4, v1.s4); dump();
faddp(v7.s4, v7.s4, v2.s4); dump();
faddp(v7.s4, v7.s4, v4.s4); dump();
faddp(v7.s4, v7.s4, v8.s4); dump();
faddp(v7.s4, v7.s4, v16.s4); dump();
faddp(v7.s4, v7.s4, v31.s4); dump();
fmaxnmp(v7.s4, v7.s4, v7.s4); dump();
fmaxnmp(v0.s4, v7.s4, v7.s4); dump();
fmaxnmp(v1.s4, v7.s4, v7.s4); dump();
fmaxnmp(v2.s4, v7.s4, v7.s4); dump();
fmaxnmp(v4.s4, v7.s4, v7.s4); dump();
fmaxnmp(v8.s4, v7.s4, v7.s4); dump();
fmaxnmp(v16.s4, v7.s4, v7.s4); dump();
fmaxnmp(v31.s4, v7.s4, v7.s4); dump();
fmaxnmp(v7.s4, v7.s4, v7.s4); dump();
fmaxnmp(v7.s4, v0.s4, v7.s4); dump();
fmaxnmp(v7.s4, v1.s4, v7.s4); dump();
fmaxnmp(v7.s4, v2.s4, v7.s4); dump();
fmaxnmp(v7.s4, v4.s4, v7.s4); dump();
fmaxnmp(v7.s4, v8.s4, v7.s4); dump();
fmaxnmp(v7.s4, v16.s4, v7.s4); dump();
fmaxnmp(v7.s4, v31.s4, v7.s4); dump();
fmaxnmp(v7.s4, v7.s4, v7.s4); dump();
fmaxnmp(v7.s4, v7.s4, v0.s4); dump();
fmaxnmp(v7.s4, v7.s4, v1.s4); dump();
fmaxnmp(v7.s4, v7.s4, v2.s4); dump();
fmaxnmp(v7.s4, v7.s4, v4.s4); dump();
fmaxnmp(v7.s4, v7.s4, v8.s4); dump();
fmaxnmp(v7.s4, v7.s4, v16.s4); dump();
fmaxnmp(v7.s4, v7.s4, v31.s4); dump();
fmaxp(v7.s4, v7.s4, v7.s4); dump();
fmaxp(v0.s4, v7.s4, v7.s4); dump();
fmaxp(v1.s4, v7.s4, v7.s4); dump();
fmaxp(v2.s4, v7.s4, v7.s4); dump();
fmaxp(v4.s4, v7.s4, v7.s4); dump();
fmaxp(v8.s4, v7.s4, v7.s4); dump();
fmaxp(v16.s4, v7.s4, v7.s4); dump();
fmaxp(v31.s4, v7.s4, v7.s4); dump();
fmaxp(v7.s4, v7.s4, v7.s4); dump();
fmaxp(v7.s4, v0.s4, v7.s4); dump();
fmaxp(v7.s4, v1.s4, v7.s4); dump();
fmaxp(v7.s4, v2.s4, v7.s4); dump();
fmaxp(v7.s4, v4.s4, v7.s4); dump();
fmaxp(v7.s4, v8.s4, v7.s4); dump();
fmaxp(v7.s4, v16.s4, v7.s4); dump();
fmaxp(v7.s4, v31.s4, v7.s4); dump();
fmaxp(v7.s4, v7.s4, v7.s4); dump();
fmaxp(v7.s4, v7.s4, v0.s4); dump();
fmaxp(v7.s4, v7.s4, v1.s4); dump();
fmaxp(v7.s4, v7.s4, v2.s4); dump();
fmaxp(v7.s4, v7.s4, v4.s4); dump();
fmaxp(v7.s4, v7.s4, v8.s4); dump();
fmaxp(v7.s4, v7.s4, v16.s4); dump();
fmaxp(v7.s4, v7.s4, v31.s4); dump();
fminnmp(v7.s4, v7.s4, v7.s4); dump();
fminnmp(v0.s4, v7.s4, v7.s4); dump();
fminnmp(v1.s4, v7.s4, v7.s4); dump();
fminnmp(v2.s4, v7.s4, v7.s4); dump();
fminnmp(v4.s4, v7.s4, v7.s4); dump();
fminnmp(v8.s4, v7.s4, v7.s4); dump();
fminnmp(v16.s4, v7.s4, v7.s4); dump();
fminnmp(v31.s4, v7.s4, v7.s4); dump();
fminnmp(v7.s4, v7.s4, v7.s4); dump();
fminnmp(v7.s4, v0.s4, v7.s4); dump();
fminnmp(v7.s4, v1.s4, v7.s4); dump();
fminnmp(v7.s4, v2.s4, v7.s4); dump();
fminnmp(v7.s4, v4.s4, v7.s4); dump();
fminnmp(v7.s4, v8.s4, v7.s4); dump();
fminnmp(v7.s4, v16.s4, v7.s4); dump();
fminnmp(v7.s4, v31.s4, v7.s4); dump();
fminnmp(v7.s4, v7.s4, v7.s4); dump();
fminnmp(v7.s4, v7.s4, v0.s4); dump();
fminnmp(v7.s4, v7.s4, v1.s4); dump();
fminnmp(v7.s4, v7.s4, v2.s4); dump();
fminnmp(v7.s4, v7.s4, v4.s4); dump();
fminnmp(v7.s4, v7.s4, v8.s4); dump();
fminnmp(v7.s4, v7.s4, v16.s4); dump();
fminnmp(v7.s4, v7.s4, v31.s4); dump();
fminp(v7.s4, v7.s4, v7.s4); dump();
fminp(v0.s4, v7.s4, v7.s4); dump();
fminp(v1.s4, v7.s4, v7.s4); dump();
fminp(v2.s4, v7.s4, v7.s4); dump();
fminp(v4.s4, v7.s4, v7.s4); dump();
fminp(v8.s4, v7.s4, v7.s4); dump();
fminp(v16.s4, v7.s4, v7.s4); dump();
fminp(v31.s4, v7.s4, v7.s4); dump();
fminp(v7.s4, v7.s4, v7.s4); dump();
fminp(v7.s4, v0.s4, v7.s4); dump();
fminp(v7.s4, v1.s4, v7.s4); dump();
fminp(v7.s4, v2.s4, v7.s4); dump();
fminp(v7.s4, v4.s4, v7.s4); dump();
fminp(v7.s4, v8.s4, v7.s4); dump();
fminp(v7.s4, v16.s4, v7.s4); dump();
fminp(v7.s4, v31.s4, v7.s4); dump();
fminp(v7.s4, v7.s4, v7.s4); dump();
fminp(v7.s4, v7.s4, v0.s4); dump();
fminp(v7.s4, v7.s4, v1.s4); dump();
fminp(v7.s4, v7.s4, v2.s4); dump();
fminp(v7.s4, v7.s4, v4.s4); dump();
fminp(v7.s4, v7.s4, v8.s4); dump();
fminp(v7.s4, v7.s4, v16.s4); dump();
fminp(v7.s4, v7.s4, v31.s4); dump();
//DataProcSimd_PairwiseArithmetic2:4
faddp(v7.d2, v7.d2, v7.d2); dump();
faddp(v0.d2, v7.d2, v7.d2); dump();
faddp(v1.d2, v7.d2, v7.d2); dump();
faddp(v2.d2, v7.d2, v7.d2); dump();
faddp(v4.d2, v7.d2, v7.d2); dump();
faddp(v8.d2, v7.d2, v7.d2); dump();
faddp(v16.d2, v7.d2, v7.d2); dump();
faddp(v31.d2, v7.d2, v7.d2); dump();
faddp(v7.d2, v7.d2, v7.d2); dump();
faddp(v7.d2, v0.d2, v7.d2); dump();
faddp(v7.d2, v1.d2, v7.d2); dump();
faddp(v7.d2, v2.d2, v7.d2); dump();
faddp(v7.d2, v4.d2, v7.d2); dump();
faddp(v7.d2, v8.d2, v7.d2); dump();
faddp(v7.d2, v16.d2, v7.d2); dump();
faddp(v7.d2, v31.d2, v7.d2); dump();
faddp(v7.d2, v7.d2, v7.d2); dump();
faddp(v7.d2, v7.d2, v0.d2); dump();
faddp(v7.d2, v7.d2, v1.d2); dump();
faddp(v7.d2, v7.d2, v2.d2); dump();
faddp(v7.d2, v7.d2, v4.d2); dump();
faddp(v7.d2, v7.d2, v8.d2); dump();
faddp(v7.d2, v7.d2, v16.d2); dump();
faddp(v7.d2, v7.d2, v31.d2); dump();
fmaxnmp(v7.d2, v7.d2, v7.d2); dump();
fmaxnmp(v0.d2, v7.d2, v7.d2); dump();
fmaxnmp(v1.d2, v7.d2, v7.d2); dump();
fmaxnmp(v2.d2, v7.d2, v7.d2); dump();
fmaxnmp(v4.d2, v7.d2, v7.d2); dump();
fmaxnmp(v8.d2, v7.d2, v7.d2); dump();
fmaxnmp(v16.d2, v7.d2, v7.d2); dump();
fmaxnmp(v31.d2, v7.d2, v7.d2); dump();
fmaxnmp(v7.d2, v7.d2, v7.d2); dump();
fmaxnmp(v7.d2, v0.d2, v7.d2); dump();
fmaxnmp(v7.d2, v1.d2, v7.d2); dump();
fmaxnmp(v7.d2, v2.d2, v7.d2); dump();
fmaxnmp(v7.d2, v4.d2, v7.d2); dump();
fmaxnmp(v7.d2, v8.d2, v7.d2); dump();
fmaxnmp(v7.d2, v16.d2, v7.d2); dump();
fmaxnmp(v7.d2, v31.d2, v7.d2); dump();
fmaxnmp(v7.d2, v7.d2, v7.d2); dump();
fmaxnmp(v7.d2, v7.d2, v0.d2); dump();
fmaxnmp(v7.d2, v7.d2, v1.d2); dump();
fmaxnmp(v7.d2, v7.d2, v2.d2); dump();
fmaxnmp(v7.d2, v7.d2, v4.d2); dump();
fmaxnmp(v7.d2, v7.d2, v8.d2); dump();
fmaxnmp(v7.d2, v7.d2, v16.d2); dump();
fmaxnmp(v7.d2, v7.d2, v31.d2); dump();
fmaxp(v7.d2, v7.d2, v7.d2); dump();
fmaxp(v0.d2, v7.d2, v7.d2); dump();
fmaxp(v1.d2, v7.d2, v7.d2); dump();
fmaxp(v2.d2, v7.d2, v7.d2); dump();
fmaxp(v4.d2, v7.d2, v7.d2); dump();
fmaxp(v8.d2, v7.d2, v7.d2); dump();
fmaxp(v16.d2, v7.d2, v7.d2); dump();
fmaxp(v31.d2, v7.d2, v7.d2); dump();
fmaxp(v7.d2, v7.d2, v7.d2); dump();
fmaxp(v7.d2, v0.d2, v7.d2); dump();
fmaxp(v7.d2, v1.d2, v7.d2); dump();
fmaxp(v7.d2, v2.d2, v7.d2); dump();
fmaxp(v7.d2, v4.d2, v7.d2); dump();
fmaxp(v7.d2, v8.d2, v7.d2); dump();
fmaxp(v7.d2, v16.d2, v7.d2); dump();
fmaxp(v7.d2, v31.d2, v7.d2); dump();
fmaxp(v7.d2, v7.d2, v7.d2); dump();
fmaxp(v7.d2, v7.d2, v0.d2); dump();
fmaxp(v7.d2, v7.d2, v1.d2); dump();
fmaxp(v7.d2, v7.d2, v2.d2); dump();
fmaxp(v7.d2, v7.d2, v4.d2); dump();
fmaxp(v7.d2, v7.d2, v8.d2); dump();
fmaxp(v7.d2, v7.d2, v16.d2); dump();
fmaxp(v7.d2, v7.d2, v31.d2); dump();
fminnmp(v7.d2, v7.d2, v7.d2); dump();
fminnmp(v0.d2, v7.d2, v7.d2); dump();
fminnmp(v1.d2, v7.d2, v7.d2); dump();
fminnmp(v2.d2, v7.d2, v7.d2); dump();
fminnmp(v4.d2, v7.d2, v7.d2); dump();
fminnmp(v8.d2, v7.d2, v7.d2); dump();
fminnmp(v16.d2, v7.d2, v7.d2); dump();
fminnmp(v31.d2, v7.d2, v7.d2); dump();
fminnmp(v7.d2, v7.d2, v7.d2); dump();
fminnmp(v7.d2, v0.d2, v7.d2); dump();
fminnmp(v7.d2, v1.d2, v7.d2); dump();
fminnmp(v7.d2, v2.d2, v7.d2); dump();
fminnmp(v7.d2, v4.d2, v7.d2); dump();
fminnmp(v7.d2, v8.d2, v7.d2); dump();
fminnmp(v7.d2, v16.d2, v7.d2); dump();
fminnmp(v7.d2, v31.d2, v7.d2); dump();
fminnmp(v7.d2, v7.d2, v7.d2); dump();
fminnmp(v7.d2, v7.d2, v0.d2); dump();
fminnmp(v7.d2, v7.d2, v1.d2); dump();
fminnmp(v7.d2, v7.d2, v2.d2); dump();
fminnmp(v7.d2, v7.d2, v4.d2); dump();
fminnmp(v7.d2, v7.d2, v8.d2); dump();
fminnmp(v7.d2, v7.d2, v16.d2); dump();
fminnmp(v7.d2, v7.d2, v31.d2); dump();
fminp(v7.d2, v7.d2, v7.d2); dump();
fminp(v0.d2, v7.d2, v7.d2); dump();
fminp(v1.d2, v7.d2, v7.d2); dump();
fminp(v2.d2, v7.d2, v7.d2); dump();
fminp(v4.d2, v7.d2, v7.d2); dump();
fminp(v8.d2, v7.d2, v7.d2); dump();
fminp(v16.d2, v7.d2, v7.d2); dump();
fminp(v31.d2, v7.d2, v7.d2); dump();
fminp(v7.d2, v7.d2, v7.d2); dump();
fminp(v7.d2, v0.d2, v7.d2); dump();
fminp(v7.d2, v1.d2, v7.d2); dump();
fminp(v7.d2, v2.d2, v7.d2); dump();
fminp(v7.d2, v4.d2, v7.d2); dump();
fminp(v7.d2, v8.d2, v7.d2); dump();
fminp(v7.d2, v16.d2, v7.d2); dump();
fminp(v7.d2, v31.d2, v7.d2); dump();
fminp(v7.d2, v7.d2, v7.d2); dump();
fminp(v7.d2, v7.d2, v0.d2); dump();
fminp(v7.d2, v7.d2, v1.d2); dump();
fminp(v7.d2, v7.d2, v2.d2); dump();
fminp(v7.d2, v7.d2, v4.d2); dump();
fminp(v7.d2, v7.d2, v8.d2); dump();
fminp(v7.d2, v7.d2, v16.d2); dump();
fminp(v7.d2, v7.d2, v31.d2); dump();
//DataProcSimd_PairwiseArithmetic3:0
faddp(h7, v7.h2); dump();
faddp(h0, v7.h2); dump();
faddp(h1, v7.h2); dump();
faddp(h2, v7.h2); dump();
faddp(h4, v7.h2); dump();
faddp(h8, v7.h2); dump();
faddp(h16, v7.h2); dump();
faddp(h31, v7.h2); dump();
faddp(h7, v7.h2); dump();
faddp(h7, v0.h2); dump();
faddp(h7, v1.h2); dump();
faddp(h7, v2.h2); dump();
faddp(h7, v4.h2); dump();
faddp(h7, v8.h2); dump();
faddp(h7, v16.h2); dump();
faddp(h7, v31.h2); dump();
fmaxnmp(h7, v7.h2); dump();
fmaxnmp(h0, v7.h2); dump();
fmaxnmp(h1, v7.h2); dump();
fmaxnmp(h2, v7.h2); dump();
fmaxnmp(h4, v7.h2); dump();
fmaxnmp(h8, v7.h2); dump();
fmaxnmp(h16, v7.h2); dump();
fmaxnmp(h31, v7.h2); dump();
fmaxnmp(h7, v7.h2); dump();
fmaxnmp(h7, v0.h2); dump();
fmaxnmp(h7, v1.h2); dump();
fmaxnmp(h7, v2.h2); dump();
fmaxnmp(h7, v4.h2); dump();
fmaxnmp(h7, v8.h2); dump();
fmaxnmp(h7, v16.h2); dump();
fmaxnmp(h7, v31.h2); dump();
fmaxp(h7, v7.h2); dump();
fmaxp(h0, v7.h2); dump();
fmaxp(h1, v7.h2); dump();
fmaxp(h2, v7.h2); dump();
fmaxp(h4, v7.h2); dump();
fmaxp(h8, v7.h2); dump();
fmaxp(h16, v7.h2); dump();
fmaxp(h31, v7.h2); dump();
fmaxp(h7, v7.h2); dump();
fmaxp(h7, v0.h2); dump();
fmaxp(h7, v1.h2); dump();
fmaxp(h7, v2.h2); dump();
fmaxp(h7, v4.h2); dump();
fmaxp(h7, v8.h2); dump();
fmaxp(h7, v16.h2); dump();
fmaxp(h7, v31.h2); dump();
fminnmp(h7, v7.h2); dump();
fminnmp(h0, v7.h2); dump();
fminnmp(h1, v7.h2); dump();
fminnmp(h2, v7.h2); dump();
fminnmp(h4, v7.h2); dump();
fminnmp(h8, v7.h2); dump();
fminnmp(h16, v7.h2); dump();
fminnmp(h31, v7.h2); dump();
fminnmp(h7, v7.h2); dump();
fminnmp(h7, v0.h2); dump();
fminnmp(h7, v1.h2); dump();
fminnmp(h7, v2.h2); dump();
fminnmp(h7, v4.h2); dump();
fminnmp(h7, v8.h2); dump();
fminnmp(h7, v16.h2); dump();
fminnmp(h7, v31.h2); dump();
//DataProcSimd_PairwiseArithmetic3:1
faddp(s7, v7.s2); dump();
faddp(s0, v7.s2); dump();
faddp(s1, v7.s2); dump();
faddp(s2, v7.s2); dump();
faddp(s4, v7.s2); dump();
faddp(s8, v7.s2); dump();
faddp(s16, v7.s2); dump();
faddp(s31, v7.s2); dump();
faddp(s7, v7.s2); dump();
faddp(s7, v0.s2); dump();
faddp(s7, v1.s2); dump();
faddp(s7, v2.s2); dump();
faddp(s7, v4.s2); dump();
faddp(s7, v8.s2); dump();
faddp(s7, v16.s2); dump();
faddp(s7, v31.s2); dump();
fmaxnmp(s7, v7.s2); dump();
fmaxnmp(s0, v7.s2); dump();
fmaxnmp(s1, v7.s2); dump();
fmaxnmp(s2, v7.s2); dump();
fmaxnmp(s4, v7.s2); dump();
fmaxnmp(s8, v7.s2); dump();
fmaxnmp(s16, v7.s2); dump();
fmaxnmp(s31, v7.s2); dump();
fmaxnmp(s7, v7.s2); dump();
fmaxnmp(s7, v0.s2); dump();
fmaxnmp(s7, v1.s2); dump();
fmaxnmp(s7, v2.s2); dump();
fmaxnmp(s7, v4.s2); dump();
fmaxnmp(s7, v8.s2); dump();
fmaxnmp(s7, v16.s2); dump();
fmaxnmp(s7, v31.s2); dump();
fmaxp(s7, v7.s2); dump();
fmaxp(s0, v7.s2); dump();
fmaxp(s1, v7.s2); dump();
fmaxp(s2, v7.s2); dump();
fmaxp(s4, v7.s2); dump();
fmaxp(s8, v7.s2); dump();
fmaxp(s16, v7.s2); dump();
fmaxp(s31, v7.s2); dump();
fmaxp(s7, v7.s2); dump();
fmaxp(s7, v0.s2); dump();
fmaxp(s7, v1.s2); dump();
fmaxp(s7, v2.s2); dump();
fmaxp(s7, v4.s2); dump();
fmaxp(s7, v8.s2); dump();
fmaxp(s7, v16.s2); dump();
fmaxp(s7, v31.s2); dump();
fminnmp(s7, v7.s2); dump();
fminnmp(s0, v7.s2); dump();
fminnmp(s1, v7.s2); dump();
fminnmp(s2, v7.s2); dump();
fminnmp(s4, v7.s2); dump();
fminnmp(s8, v7.s2); dump();
fminnmp(s16, v7.s2); dump();
fminnmp(s31, v7.s2); dump();
fminnmp(s7, v7.s2); dump();
fminnmp(s7, v0.s2); dump();
fminnmp(s7, v1.s2); dump();
fminnmp(s7, v2.s2); dump();
fminnmp(s7, v4.s2); dump();
fminnmp(s7, v8.s2); dump();
fminnmp(s7, v16.s2); dump();
fminnmp(s7, v31.s2); dump();
//DataProcSimd_PairwiseArithmetic3:2
faddp(d7, v7.d2); dump();
faddp(d0, v7.d2); dump();
faddp(d1, v7.d2); dump();
faddp(d2, v7.d2); dump();
faddp(d4, v7.d2); dump();
faddp(d8, v7.d2); dump();
faddp(d16, v7.d2); dump();
faddp(d31, v7.d2); dump();
faddp(d7, v7.d2); dump();
faddp(d7, v0.d2); dump();
faddp(d7, v1.d2); dump();
faddp(d7, v2.d2); dump();
faddp(d7, v4.d2); dump();
faddp(d7, v8.d2); dump();
faddp(d7, v16.d2); dump();
faddp(d7, v31.d2); dump();
fmaxnmp(d7, v7.d2); dump();
fmaxnmp(d0, v7.d2); dump();
fmaxnmp(d1, v7.d2); dump();
fmaxnmp(d2, v7.d2); dump();
fmaxnmp(d4, v7.d2); dump();
fmaxnmp(d8, v7.d2); dump();
fmaxnmp(d16, v7.d2); dump();
fmaxnmp(d31, v7.d2); dump();
fmaxnmp(d7, v7.d2); dump();
fmaxnmp(d7, v0.d2); dump();
fmaxnmp(d7, v1.d2); dump();
fmaxnmp(d7, v2.d2); dump();
fmaxnmp(d7, v4.d2); dump();
fmaxnmp(d7, v8.d2); dump();
fmaxnmp(d7, v16.d2); dump();
fmaxnmp(d7, v31.d2); dump();
fmaxp(d7, v7.d2); dump();
fmaxp(d0, v7.d2); dump();
fmaxp(d1, v7.d2); dump();
fmaxp(d2, v7.d2); dump();
fmaxp(d4, v7.d2); dump();
fmaxp(d8, v7.d2); dump();
fmaxp(d16, v7.d2); dump();
fmaxp(d31, v7.d2); dump();
fmaxp(d7, v7.d2); dump();
fmaxp(d7, v0.d2); dump();
fmaxp(d7, v1.d2); dump();
fmaxp(d7, v2.d2); dump();
fmaxp(d7, v4.d2); dump();
fmaxp(d7, v8.d2); dump();
fmaxp(d7, v16.d2); dump();
fmaxp(d7, v31.d2); dump();
fminnmp(d7, v7.d2); dump();
fminnmp(d0, v7.d2); dump();
fminnmp(d1, v7.d2); dump();
fminnmp(d2, v7.d2); dump();
fminnmp(d4, v7.d2); dump();
fminnmp(d8, v7.d2); dump();
fminnmp(d16, v7.d2); dump();
fminnmp(d31, v7.d2); dump();
fminnmp(d7, v7.d2); dump();
fminnmp(d7, v0.d2); dump();
fminnmp(d7, v1.d2); dump();
fminnmp(d7, v2.d2); dump();
fminnmp(d7, v4.d2); dump();
fminnmp(d7, v8.d2); dump();
fminnmp(d7, v16.d2); dump();
fminnmp(d7, v31.d2); dump();
//DataProcSimd_PairwiseArithmetic4:0
smaxp(v7.b8, v7.b8, v7.b8); dump();
smaxp(v0.b8, v7.b8, v7.b8); dump();
smaxp(v1.b8, v7.b8, v7.b8); dump();
smaxp(v2.b8, v7.b8, v7.b8); dump();
smaxp(v4.b8, v7.b8, v7.b8); dump();
smaxp(v8.b8, v7.b8, v7.b8); dump();
smaxp(v16.b8, v7.b8, v7.b8); dump();
smaxp(v31.b8, v7.b8, v7.b8); dump();
smaxp(v7.b8, v7.b8, v7.b8); dump();
smaxp(v7.b8, v0.b8, v7.b8); dump();
smaxp(v7.b8, v1.b8, v7.b8); dump();
smaxp(v7.b8, v2.b8, v7.b8); dump();
smaxp(v7.b8, v4.b8, v7.b8); dump();
smaxp(v7.b8, v8.b8, v7.b8); dump();
smaxp(v7.b8, v16.b8, v7.b8); dump();
smaxp(v7.b8, v31.b8, v7.b8); dump();
smaxp(v7.b8, v7.b8, v7.b8); dump();
smaxp(v7.b8, v7.b8, v0.b8); dump();
smaxp(v7.b8, v7.b8, v1.b8); dump();
smaxp(v7.b8, v7.b8, v2.b8); dump();
smaxp(v7.b8, v7.b8, v4.b8); dump();
smaxp(v7.b8, v7.b8, v8.b8); dump();
smaxp(v7.b8, v7.b8, v16.b8); dump();
smaxp(v7.b8, v7.b8, v31.b8); dump();
sminp(v7.b8, v7.b8, v7.b8); dump();
sminp(v0.b8, v7.b8, v7.b8); dump();
sminp(v1.b8, v7.b8, v7.b8); dump();
sminp(v2.b8, v7.b8, v7.b8); dump();
sminp(v4.b8, v7.b8, v7.b8); dump();
sminp(v8.b8, v7.b8, v7.b8); dump();
sminp(v16.b8, v7.b8, v7.b8); dump();
sminp(v31.b8, v7.b8, v7.b8); dump();
sminp(v7.b8, v7.b8, v7.b8); dump();
sminp(v7.b8, v0.b8, v7.b8); dump();
sminp(v7.b8, v1.b8, v7.b8); dump();
sminp(v7.b8, v2.b8, v7.b8); dump();
sminp(v7.b8, v4.b8, v7.b8); dump();
sminp(v7.b8, v8.b8, v7.b8); dump();
sminp(v7.b8, v16.b8, v7.b8); dump();
sminp(v7.b8, v31.b8, v7.b8); dump();
sminp(v7.b8, v7.b8, v7.b8); dump();
sminp(v7.b8, v7.b8, v0.b8); dump();
sminp(v7.b8, v7.b8, v1.b8); dump();
sminp(v7.b8, v7.b8, v2.b8); dump();
sminp(v7.b8, v7.b8, v4.b8); dump();
sminp(v7.b8, v7.b8, v8.b8); dump();
sminp(v7.b8, v7.b8, v16.b8); dump();
sminp(v7.b8, v7.b8, v31.b8); dump();
umaxp(v7.b8, v7.b8, v7.b8); dump();
umaxp(v0.b8, v7.b8, v7.b8); dump();
umaxp(v1.b8, v7.b8, v7.b8); dump();
umaxp(v2.b8, v7.b8, v7.b8); dump();
umaxp(v4.b8, v7.b8, v7.b8); dump();
umaxp(v8.b8, v7.b8, v7.b8); dump();
umaxp(v16.b8, v7.b8, v7.b8); dump();
umaxp(v31.b8, v7.b8, v7.b8); dump();
umaxp(v7.b8, v7.b8, v7.b8); dump();
umaxp(v7.b8, v0.b8, v7.b8); dump();
umaxp(v7.b8, v1.b8, v7.b8); dump();
umaxp(v7.b8, v2.b8, v7.b8); dump();
umaxp(v7.b8, v4.b8, v7.b8); dump();
umaxp(v7.b8, v8.b8, v7.b8); dump();
umaxp(v7.b8, v16.b8, v7.b8); dump();
umaxp(v7.b8, v31.b8, v7.b8); dump();
umaxp(v7.b8, v7.b8, v7.b8); dump();
umaxp(v7.b8, v7.b8, v0.b8); dump();
umaxp(v7.b8, v7.b8, v1.b8); dump();
umaxp(v7.b8, v7.b8, v2.b8); dump();
umaxp(v7.b8, v7.b8, v4.b8); dump();
umaxp(v7.b8, v7.b8, v8.b8); dump();
umaxp(v7.b8, v7.b8, v16.b8); dump();
umaxp(v7.b8, v7.b8, v31.b8); dump();
uminp(v7.b8, v7.b8, v7.b8); dump();
uminp(v0.b8, v7.b8, v7.b8); dump();
uminp(v1.b8, v7.b8, v7.b8); dump();
uminp(v2.b8, v7.b8, v7.b8); dump();
uminp(v4.b8, v7.b8, v7.b8); dump();
uminp(v8.b8, v7.b8, v7.b8); dump();
uminp(v16.b8, v7.b8, v7.b8); dump();
uminp(v31.b8, v7.b8, v7.b8); dump();
uminp(v7.b8, v7.b8, v7.b8); dump();
uminp(v7.b8, v0.b8, v7.b8); dump();
uminp(v7.b8, v1.b8, v7.b8); dump();
uminp(v7.b8, v2.b8, v7.b8); dump();
uminp(v7.b8, v4.b8, v7.b8); dump();
uminp(v7.b8, v8.b8, v7.b8); dump();
uminp(v7.b8, v16.b8, v7.b8); dump();
uminp(v7.b8, v31.b8, v7.b8); dump();
uminp(v7.b8, v7.b8, v7.b8); dump();
uminp(v7.b8, v7.b8, v0.b8); dump();
uminp(v7.b8, v7.b8, v1.b8); dump();
uminp(v7.b8, v7.b8, v2.b8); dump();
uminp(v7.b8, v7.b8, v4.b8); dump();
uminp(v7.b8, v7.b8, v8.b8); dump();
uminp(v7.b8, v7.b8, v16.b8); dump();
uminp(v7.b8, v7.b8, v31.b8); dump();
//DataProcSimd_PairwiseArithmetic4:1
smaxp(v7.b16, v7.b16, v7.b16); dump();
smaxp(v0.b16, v7.b16, v7.b16); dump();
smaxp(v1.b16, v7.b16, v7.b16); dump();
smaxp(v2.b16, v7.b16, v7.b16); dump();
smaxp(v4.b16, v7.b16, v7.b16); dump();
smaxp(v8.b16, v7.b16, v7.b16); dump();
smaxp(v16.b16, v7.b16, v7.b16); dump();
smaxp(v31.b16, v7.b16, v7.b16); dump();
smaxp(v7.b16, v7.b16, v7.b16); dump();
smaxp(v7.b16, v0.b16, v7.b16); dump();
smaxp(v7.b16, v1.b16, v7.b16); dump();
smaxp(v7.b16, v2.b16, v7.b16); dump();
smaxp(v7.b16, v4.b16, v7.b16); dump();
smaxp(v7.b16, v8.b16, v7.b16); dump();
smaxp(v7.b16, v16.b16, v7.b16); dump();
smaxp(v7.b16, v31.b16, v7.b16); dump();
smaxp(v7.b16, v7.b16, v7.b16); dump();
smaxp(v7.b16, v7.b16, v0.b16); dump();
smaxp(v7.b16, v7.b16, v1.b16); dump();
smaxp(v7.b16, v7.b16, v2.b16); dump();
smaxp(v7.b16, v7.b16, v4.b16); dump();
smaxp(v7.b16, v7.b16, v8.b16); dump();
smaxp(v7.b16, v7.b16, v16.b16); dump();
smaxp(v7.b16, v7.b16, v31.b16); dump();
sminp(v7.b16, v7.b16, v7.b16); dump();
sminp(v0.b16, v7.b16, v7.b16); dump();
sminp(v1.b16, v7.b16, v7.b16); dump();
sminp(v2.b16, v7.b16, v7.b16); dump();
sminp(v4.b16, v7.b16, v7.b16); dump();
sminp(v8.b16, v7.b16, v7.b16); dump();
sminp(v16.b16, v7.b16, v7.b16); dump();
sminp(v31.b16, v7.b16, v7.b16); dump();
sminp(v7.b16, v7.b16, v7.b16); dump();
sminp(v7.b16, v0.b16, v7.b16); dump();
sminp(v7.b16, v1.b16, v7.b16); dump();
sminp(v7.b16, v2.b16, v7.b16); dump();
sminp(v7.b16, v4.b16, v7.b16); dump();
sminp(v7.b16, v8.b16, v7.b16); dump();
sminp(v7.b16, v16.b16, v7.b16); dump();
sminp(v7.b16, v31.b16, v7.b16); dump();
sminp(v7.b16, v7.b16, v7.b16); dump();
sminp(v7.b16, v7.b16, v0.b16); dump();
sminp(v7.b16, v7.b16, v1.b16); dump();
sminp(v7.b16, v7.b16, v2.b16); dump();
sminp(v7.b16, v7.b16, v4.b16); dump();
sminp(v7.b16, v7.b16, v8.b16); dump();
sminp(v7.b16, v7.b16, v16.b16); dump();
sminp(v7.b16, v7.b16, v31.b16); dump();
umaxp(v7.b16, v7.b16, v7.b16); dump();
umaxp(v0.b16, v7.b16, v7.b16); dump();
umaxp(v1.b16, v7.b16, v7.b16); dump();
umaxp(v2.b16, v7.b16, v7.b16); dump();
umaxp(v4.b16, v7.b16, v7.b16); dump();
umaxp(v8.b16, v7.b16, v7.b16); dump();
umaxp(v16.b16, v7.b16, v7.b16); dump();
umaxp(v31.b16, v7.b16, v7.b16); dump();
umaxp(v7.b16, v7.b16, v7.b16); dump();
umaxp(v7.b16, v0.b16, v7.b16); dump();
umaxp(v7.b16, v1.b16, v7.b16); dump();
umaxp(v7.b16, v2.b16, v7.b16); dump();
umaxp(v7.b16, v4.b16, v7.b16); dump();
umaxp(v7.b16, v8.b16, v7.b16); dump();
umaxp(v7.b16, v16.b16, v7.b16); dump();
umaxp(v7.b16, v31.b16, v7.b16); dump();
umaxp(v7.b16, v7.b16, v7.b16); dump();
umaxp(v7.b16, v7.b16, v0.b16); dump();
umaxp(v7.b16, v7.b16, v1.b16); dump();
umaxp(v7.b16, v7.b16, v2.b16); dump();
umaxp(v7.b16, v7.b16, v4.b16); dump();
umaxp(v7.b16, v7.b16, v8.b16); dump();
umaxp(v7.b16, v7.b16, v16.b16); dump();
umaxp(v7.b16, v7.b16, v31.b16); dump();
uminp(v7.b16, v7.b16, v7.b16); dump();
uminp(v0.b16, v7.b16, v7.b16); dump();
uminp(v1.b16, v7.b16, v7.b16); dump();
uminp(v2.b16, v7.b16, v7.b16); dump();
uminp(v4.b16, v7.b16, v7.b16); dump();
uminp(v8.b16, v7.b16, v7.b16); dump();
uminp(v16.b16, v7.b16, v7.b16); dump();
uminp(v31.b16, v7.b16, v7.b16); dump();
uminp(v7.b16, v7.b16, v7.b16); dump();
uminp(v7.b16, v0.b16, v7.b16); dump();
uminp(v7.b16, v1.b16, v7.b16); dump();
uminp(v7.b16, v2.b16, v7.b16); dump();
uminp(v7.b16, v4.b16, v7.b16); dump();
uminp(v7.b16, v8.b16, v7.b16); dump();
uminp(v7.b16, v16.b16, v7.b16); dump();
uminp(v7.b16, v31.b16, v7.b16); dump();
uminp(v7.b16, v7.b16, v7.b16); dump();
uminp(v7.b16, v7.b16, v0.b16); dump();
uminp(v7.b16, v7.b16, v1.b16); dump();
uminp(v7.b16, v7.b16, v2.b16); dump();
uminp(v7.b16, v7.b16, v4.b16); dump();
uminp(v7.b16, v7.b16, v8.b16); dump();
uminp(v7.b16, v7.b16, v16.b16); dump();
uminp(v7.b16, v7.b16, v31.b16); dump();
//DataProcSimd_PairwiseArithmetic4:2
smaxp(v7.h4, v7.h4, v7.h4); dump();
smaxp(v0.h4, v7.h4, v7.h4); dump();
smaxp(v1.h4, v7.h4, v7.h4); dump();
smaxp(v2.h4, v7.h4, v7.h4); dump();
smaxp(v4.h4, v7.h4, v7.h4); dump();
smaxp(v8.h4, v7.h4, v7.h4); dump();
smaxp(v16.h4, v7.h4, v7.h4); dump();
smaxp(v31.h4, v7.h4, v7.h4); dump();
smaxp(v7.h4, v7.h4, v7.h4); dump();
smaxp(v7.h4, v0.h4, v7.h4); dump();
smaxp(v7.h4, v1.h4, v7.h4); dump();
smaxp(v7.h4, v2.h4, v7.h4); dump();
smaxp(v7.h4, v4.h4, v7.h4); dump();
smaxp(v7.h4, v8.h4, v7.h4); dump();
smaxp(v7.h4, v16.h4, v7.h4); dump();
smaxp(v7.h4, v31.h4, v7.h4); dump();
smaxp(v7.h4, v7.h4, v7.h4); dump();
smaxp(v7.h4, v7.h4, v0.h4); dump();
smaxp(v7.h4, v7.h4, v1.h4); dump();
smaxp(v7.h4, v7.h4, v2.h4); dump();
smaxp(v7.h4, v7.h4, v4.h4); dump();
smaxp(v7.h4, v7.h4, v8.h4); dump();
smaxp(v7.h4, v7.h4, v16.h4); dump();
smaxp(v7.h4, v7.h4, v31.h4); dump();
sminp(v7.h4, v7.h4, v7.h4); dump();
sminp(v0.h4, v7.h4, v7.h4); dump();
sminp(v1.h4, v7.h4, v7.h4); dump();
sminp(v2.h4, v7.h4, v7.h4); dump();
sminp(v4.h4, v7.h4, v7.h4); dump();
sminp(v8.h4, v7.h4, v7.h4); dump();
sminp(v16.h4, v7.h4, v7.h4); dump();
sminp(v31.h4, v7.h4, v7.h4); dump();
sminp(v7.h4, v7.h4, v7.h4); dump();
sminp(v7.h4, v0.h4, v7.h4); dump();
sminp(v7.h4, v1.h4, v7.h4); dump();
sminp(v7.h4, v2.h4, v7.h4); dump();
sminp(v7.h4, v4.h4, v7.h4); dump();
sminp(v7.h4, v8.h4, v7.h4); dump();
sminp(v7.h4, v16.h4, v7.h4); dump();
sminp(v7.h4, v31.h4, v7.h4); dump();
sminp(v7.h4, v7.h4, v7.h4); dump();
sminp(v7.h4, v7.h4, v0.h4); dump();
sminp(v7.h4, v7.h4, v1.h4); dump();
sminp(v7.h4, v7.h4, v2.h4); dump();
sminp(v7.h4, v7.h4, v4.h4); dump();
sminp(v7.h4, v7.h4, v8.h4); dump();
sminp(v7.h4, v7.h4, v16.h4); dump();
sminp(v7.h4, v7.h4, v31.h4); dump();
umaxp(v7.h4, v7.h4, v7.h4); dump();
umaxp(v0.h4, v7.h4, v7.h4); dump();
umaxp(v1.h4, v7.h4, v7.h4); dump();
umaxp(v2.h4, v7.h4, v7.h4); dump();
umaxp(v4.h4, v7.h4, v7.h4); dump();
umaxp(v8.h4, v7.h4, v7.h4); dump();
umaxp(v16.h4, v7.h4, v7.h4); dump();
umaxp(v31.h4, v7.h4, v7.h4); dump();
umaxp(v7.h4, v7.h4, v7.h4); dump();
umaxp(v7.h4, v0.h4, v7.h4); dump();
umaxp(v7.h4, v1.h4, v7.h4); dump();
umaxp(v7.h4, v2.h4, v7.h4); dump();
umaxp(v7.h4, v4.h4, v7.h4); dump();
umaxp(v7.h4, v8.h4, v7.h4); dump();
umaxp(v7.h4, v16.h4, v7.h4); dump();
umaxp(v7.h4, v31.h4, v7.h4); dump();
umaxp(v7.h4, v7.h4, v7.h4); dump();
umaxp(v7.h4, v7.h4, v0.h4); dump();
umaxp(v7.h4, v7.h4, v1.h4); dump();
umaxp(v7.h4, v7.h4, v2.h4); dump();
umaxp(v7.h4, v7.h4, v4.h4); dump();
umaxp(v7.h4, v7.h4, v8.h4); dump();
umaxp(v7.h4, v7.h4, v16.h4); dump();
umaxp(v7.h4, v7.h4, v31.h4); dump();
uminp(v7.h4, v7.h4, v7.h4); dump();
uminp(v0.h4, v7.h4, v7.h4); dump();
uminp(v1.h4, v7.h4, v7.h4); dump();
uminp(v2.h4, v7.h4, v7.h4); dump();
uminp(v4.h4, v7.h4, v7.h4); dump();
uminp(v8.h4, v7.h4, v7.h4); dump();
uminp(v16.h4, v7.h4, v7.h4); dump();
uminp(v31.h4, v7.h4, v7.h4); dump();
uminp(v7.h4, v7.h4, v7.h4); dump();
uminp(v7.h4, v0.h4, v7.h4); dump();
uminp(v7.h4, v1.h4, v7.h4); dump();
uminp(v7.h4, v2.h4, v7.h4); dump();
uminp(v7.h4, v4.h4, v7.h4); dump();
uminp(v7.h4, v8.h4, v7.h4); dump();
uminp(v7.h4, v16.h4, v7.h4); dump();
uminp(v7.h4, v31.h4, v7.h4); dump();
uminp(v7.h4, v7.h4, v7.h4); dump();
uminp(v7.h4, v7.h4, v0.h4); dump();
uminp(v7.h4, v7.h4, v1.h4); dump();
uminp(v7.h4, v7.h4, v2.h4); dump();
uminp(v7.h4, v7.h4, v4.h4); dump();
uminp(v7.h4, v7.h4, v8.h4); dump();
uminp(v7.h4, v7.h4, v16.h4); dump();
uminp(v7.h4, v7.h4, v31.h4); dump();
//DataProcSimd_PairwiseArithmetic4:3
smaxp(v7.h8, v7.h8, v7.h8); dump();
smaxp(v0.h8, v7.h8, v7.h8); dump();
smaxp(v1.h8, v7.h8, v7.h8); dump();
smaxp(v2.h8, v7.h8, v7.h8); dump();
smaxp(v4.h8, v7.h8, v7.h8); dump();
smaxp(v8.h8, v7.h8, v7.h8); dump();
smaxp(v16.h8, v7.h8, v7.h8); dump();
smaxp(v31.h8, v7.h8, v7.h8); dump();
smaxp(v7.h8, v7.h8, v7.h8); dump();
smaxp(v7.h8, v0.h8, v7.h8); dump();
smaxp(v7.h8, v1.h8, v7.h8); dump();
smaxp(v7.h8, v2.h8, v7.h8); dump();
smaxp(v7.h8, v4.h8, v7.h8); dump();
smaxp(v7.h8, v8.h8, v7.h8); dump();
smaxp(v7.h8, v16.h8, v7.h8); dump();
smaxp(v7.h8, v31.h8, v7.h8); dump();
smaxp(v7.h8, v7.h8, v7.h8); dump();
smaxp(v7.h8, v7.h8, v0.h8); dump();
smaxp(v7.h8, v7.h8, v1.h8); dump();
smaxp(v7.h8, v7.h8, v2.h8); dump();
smaxp(v7.h8, v7.h8, v4.h8); dump();
smaxp(v7.h8, v7.h8, v8.h8); dump();
smaxp(v7.h8, v7.h8, v16.h8); dump();
smaxp(v7.h8, v7.h8, v31.h8); dump();
sminp(v7.h8, v7.h8, v7.h8); dump();
sminp(v0.h8, v7.h8, v7.h8); dump();
sminp(v1.h8, v7.h8, v7.h8); dump();
sminp(v2.h8, v7.h8, v7.h8); dump();
sminp(v4.h8, v7.h8, v7.h8); dump();
sminp(v8.h8, v7.h8, v7.h8); dump();
sminp(v16.h8, v7.h8, v7.h8); dump();
sminp(v31.h8, v7.h8, v7.h8); dump();
sminp(v7.h8, v7.h8, v7.h8); dump();
sminp(v7.h8, v0.h8, v7.h8); dump();
sminp(v7.h8, v1.h8, v7.h8); dump();
sminp(v7.h8, v2.h8, v7.h8); dump();
sminp(v7.h8, v4.h8, v7.h8); dump();
sminp(v7.h8, v8.h8, v7.h8); dump();
sminp(v7.h8, v16.h8, v7.h8); dump();
sminp(v7.h8, v31.h8, v7.h8); dump();
sminp(v7.h8, v7.h8, v7.h8); dump();
sminp(v7.h8, v7.h8, v0.h8); dump();
sminp(v7.h8, v7.h8, v1.h8); dump();
sminp(v7.h8, v7.h8, v2.h8); dump();
sminp(v7.h8, v7.h8, v4.h8); dump();
sminp(v7.h8, v7.h8, v8.h8); dump();
sminp(v7.h8, v7.h8, v16.h8); dump();
sminp(v7.h8, v7.h8, v31.h8); dump();
umaxp(v7.h8, v7.h8, v7.h8); dump();
umaxp(v0.h8, v7.h8, v7.h8); dump();
umaxp(v1.h8, v7.h8, v7.h8); dump();
umaxp(v2.h8, v7.h8, v7.h8); dump();
umaxp(v4.h8, v7.h8, v7.h8); dump();
umaxp(v8.h8, v7.h8, v7.h8); dump();
umaxp(v16.h8, v7.h8, v7.h8); dump();
umaxp(v31.h8, v7.h8, v7.h8); dump();
umaxp(v7.h8, v7.h8, v7.h8); dump();
umaxp(v7.h8, v0.h8, v7.h8); dump();
umaxp(v7.h8, v1.h8, v7.h8); dump();
umaxp(v7.h8, v2.h8, v7.h8); dump();
umaxp(v7.h8, v4.h8, v7.h8); dump();
umaxp(v7.h8, v8.h8, v7.h8); dump();
umaxp(v7.h8, v16.h8, v7.h8); dump();
umaxp(v7.h8, v31.h8, v7.h8); dump();
umaxp(v7.h8, v7.h8, v7.h8); dump();
umaxp(v7.h8, v7.h8, v0.h8); dump();
umaxp(v7.h8, v7.h8, v1.h8); dump();
umaxp(v7.h8, v7.h8, v2.h8); dump();
umaxp(v7.h8, v7.h8, v4.h8); dump();
umaxp(v7.h8, v7.h8, v8.h8); dump();
umaxp(v7.h8, v7.h8, v16.h8); dump();
umaxp(v7.h8, v7.h8, v31.h8); dump();
uminp(v7.h8, v7.h8, v7.h8); dump();
uminp(v0.h8, v7.h8, v7.h8); dump();
uminp(v1.h8, v7.h8, v7.h8); dump();
uminp(v2.h8, v7.h8, v7.h8); dump();
uminp(v4.h8, v7.h8, v7.h8); dump();
uminp(v8.h8, v7.h8, v7.h8); dump();
uminp(v16.h8, v7.h8, v7.h8); dump();
uminp(v31.h8, v7.h8, v7.h8); dump();
uminp(v7.h8, v7.h8, v7.h8); dump();
uminp(v7.h8, v0.h8, v7.h8); dump();
uminp(v7.h8, v1.h8, v7.h8); dump();
uminp(v7.h8, v2.h8, v7.h8); dump();
uminp(v7.h8, v4.h8, v7.h8); dump();
uminp(v7.h8, v8.h8, v7.h8); dump();
uminp(v7.h8, v16.h8, v7.h8); dump();
uminp(v7.h8, v31.h8, v7.h8); dump();
uminp(v7.h8, v7.h8, v7.h8); dump();
uminp(v7.h8, v7.h8, v0.h8); dump();
uminp(v7.h8, v7.h8, v1.h8); dump();
uminp(v7.h8, v7.h8, v2.h8); dump();
uminp(v7.h8, v7.h8, v4.h8); dump();
uminp(v7.h8, v7.h8, v8.h8); dump();
uminp(v7.h8, v7.h8, v16.h8); dump();
uminp(v7.h8, v7.h8, v31.h8); dump();
//DataProcSimd_PairwiseArithmetic4:4
smaxp(v7.s2, v7.s2, v7.s2); dump();
smaxp(v0.s2, v7.s2, v7.s2); dump();
smaxp(v1.s2, v7.s2, v7.s2); dump();
smaxp(v2.s2, v7.s2, v7.s2); dump();
smaxp(v4.s2, v7.s2, v7.s2); dump();
smaxp(v8.s2, v7.s2, v7.s2); dump();
smaxp(v16.s2, v7.s2, v7.s2); dump();
smaxp(v31.s2, v7.s2, v7.s2); dump();
smaxp(v7.s2, v7.s2, v7.s2); dump();
smaxp(v7.s2, v0.s2, v7.s2); dump();
smaxp(v7.s2, v1.s2, v7.s2); dump();
smaxp(v7.s2, v2.s2, v7.s2); dump();
smaxp(v7.s2, v4.s2, v7.s2); dump();
smaxp(v7.s2, v8.s2, v7.s2); dump();
smaxp(v7.s2, v16.s2, v7.s2); dump();
smaxp(v7.s2, v31.s2, v7.s2); dump();
smaxp(v7.s2, v7.s2, v7.s2); dump();
smaxp(v7.s2, v7.s2, v0.s2); dump();
smaxp(v7.s2, v7.s2, v1.s2); dump();
smaxp(v7.s2, v7.s2, v2.s2); dump();
smaxp(v7.s2, v7.s2, v4.s2); dump();
smaxp(v7.s2, v7.s2, v8.s2); dump();
smaxp(v7.s2, v7.s2, v16.s2); dump();
smaxp(v7.s2, v7.s2, v31.s2); dump();
sminp(v7.s2, v7.s2, v7.s2); dump();
sminp(v0.s2, v7.s2, v7.s2); dump();
sminp(v1.s2, v7.s2, v7.s2); dump();
sminp(v2.s2, v7.s2, v7.s2); dump();
sminp(v4.s2, v7.s2, v7.s2); dump();
sminp(v8.s2, v7.s2, v7.s2); dump();
sminp(v16.s2, v7.s2, v7.s2); dump();
sminp(v31.s2, v7.s2, v7.s2); dump();
sminp(v7.s2, v7.s2, v7.s2); dump();
sminp(v7.s2, v0.s2, v7.s2); dump();
sminp(v7.s2, v1.s2, v7.s2); dump();
sminp(v7.s2, v2.s2, v7.s2); dump();
sminp(v7.s2, v4.s2, v7.s2); dump();
sminp(v7.s2, v8.s2, v7.s2); dump();
sminp(v7.s2, v16.s2, v7.s2); dump();
sminp(v7.s2, v31.s2, v7.s2); dump();
sminp(v7.s2, v7.s2, v7.s2); dump();
sminp(v7.s2, v7.s2, v0.s2); dump();
sminp(v7.s2, v7.s2, v1.s2); dump();
sminp(v7.s2, v7.s2, v2.s2); dump();
sminp(v7.s2, v7.s2, v4.s2); dump();
sminp(v7.s2, v7.s2, v8.s2); dump();
sminp(v7.s2, v7.s2, v16.s2); dump();
sminp(v7.s2, v7.s2, v31.s2); dump();
umaxp(v7.s2, v7.s2, v7.s2); dump();
umaxp(v0.s2, v7.s2, v7.s2); dump();
umaxp(v1.s2, v7.s2, v7.s2); dump();
umaxp(v2.s2, v7.s2, v7.s2); dump();
umaxp(v4.s2, v7.s2, v7.s2); dump();
umaxp(v8.s2, v7.s2, v7.s2); dump();
umaxp(v16.s2, v7.s2, v7.s2); dump();
umaxp(v31.s2, v7.s2, v7.s2); dump();
umaxp(v7.s2, v7.s2, v7.s2); dump();
umaxp(v7.s2, v0.s2, v7.s2); dump();
umaxp(v7.s2, v1.s2, v7.s2); dump();
umaxp(v7.s2, v2.s2, v7.s2); dump();
umaxp(v7.s2, v4.s2, v7.s2); dump();
umaxp(v7.s2, v8.s2, v7.s2); dump();
umaxp(v7.s2, v16.s2, v7.s2); dump();
umaxp(v7.s2, v31.s2, v7.s2); dump();
umaxp(v7.s2, v7.s2, v7.s2); dump();
umaxp(v7.s2, v7.s2, v0.s2); dump();
umaxp(v7.s2, v7.s2, v1.s2); dump();
umaxp(v7.s2, v7.s2, v2.s2); dump();
umaxp(v7.s2, v7.s2, v4.s2); dump();
umaxp(v7.s2, v7.s2, v8.s2); dump();
umaxp(v7.s2, v7.s2, v16.s2); dump();
umaxp(v7.s2, v7.s2, v31.s2); dump();
uminp(v7.s2, v7.s2, v7.s2); dump();
uminp(v0.s2, v7.s2, v7.s2); dump();
uminp(v1.s2, v7.s2, v7.s2); dump();
uminp(v2.s2, v7.s2, v7.s2); dump();
uminp(v4.s2, v7.s2, v7.s2); dump();
uminp(v8.s2, v7.s2, v7.s2); dump();
uminp(v16.s2, v7.s2, v7.s2); dump();
uminp(v31.s2, v7.s2, v7.s2); dump();
uminp(v7.s2, v7.s2, v7.s2); dump();
uminp(v7.s2, v0.s2, v7.s2); dump();
uminp(v7.s2, v1.s2, v7.s2); dump();
uminp(v7.s2, v2.s2, v7.s2); dump();
uminp(v7.s2, v4.s2, v7.s2); dump();
uminp(v7.s2, v8.s2, v7.s2); dump();
uminp(v7.s2, v16.s2, v7.s2); dump();
uminp(v7.s2, v31.s2, v7.s2); dump();
uminp(v7.s2, v7.s2, v7.s2); dump();
uminp(v7.s2, v7.s2, v0.s2); dump();
uminp(v7.s2, v7.s2, v1.s2); dump();
uminp(v7.s2, v7.s2, v2.s2); dump();
uminp(v7.s2, v7.s2, v4.s2); dump();
uminp(v7.s2, v7.s2, v8.s2); dump();
uminp(v7.s2, v7.s2, v16.s2); dump();
uminp(v7.s2, v7.s2, v31.s2); dump();
//DataProcSimd_PairwiseArithmetic4:5
smaxp(v7.s4, v7.s4, v7.s4); dump();
smaxp(v0.s4, v7.s4, v7.s4); dump();
smaxp(v1.s4, v7.s4, v7.s4); dump();
smaxp(v2.s4, v7.s4, v7.s4); dump();
smaxp(v4.s4, v7.s4, v7.s4); dump();
smaxp(v8.s4, v7.s4, v7.s4); dump();
smaxp(v16.s4, v7.s4, v7.s4); dump();
smaxp(v31.s4, v7.s4, v7.s4); dump();
smaxp(v7.s4, v7.s4, v7.s4); dump();
smaxp(v7.s4, v0.s4, v7.s4); dump();
smaxp(v7.s4, v1.s4, v7.s4); dump();
smaxp(v7.s4, v2.s4, v7.s4); dump();
smaxp(v7.s4, v4.s4, v7.s4); dump();
smaxp(v7.s4, v8.s4, v7.s4); dump();
smaxp(v7.s4, v16.s4, v7.s4); dump();
smaxp(v7.s4, v31.s4, v7.s4); dump();
smaxp(v7.s4, v7.s4, v7.s4); dump();
smaxp(v7.s4, v7.s4, v0.s4); dump();
smaxp(v7.s4, v7.s4, v1.s4); dump();
smaxp(v7.s4, v7.s4, v2.s4); dump();
smaxp(v7.s4, v7.s4, v4.s4); dump();
smaxp(v7.s4, v7.s4, v8.s4); dump();
smaxp(v7.s4, v7.s4, v16.s4); dump();
smaxp(v7.s4, v7.s4, v31.s4); dump();
sminp(v7.s4, v7.s4, v7.s4); dump();
sminp(v0.s4, v7.s4, v7.s4); dump();
sminp(v1.s4, v7.s4, v7.s4); dump();
sminp(v2.s4, v7.s4, v7.s4); dump();
sminp(v4.s4, v7.s4, v7.s4); dump();
sminp(v8.s4, v7.s4, v7.s4); dump();
sminp(v16.s4, v7.s4, v7.s4); dump();
sminp(v31.s4, v7.s4, v7.s4); dump();
sminp(v7.s4, v7.s4, v7.s4); dump();
sminp(v7.s4, v0.s4, v7.s4); dump();
sminp(v7.s4, v1.s4, v7.s4); dump();
sminp(v7.s4, v2.s4, v7.s4); dump();
sminp(v7.s4, v4.s4, v7.s4); dump();
sminp(v7.s4, v8.s4, v7.s4); dump();
sminp(v7.s4, v16.s4, v7.s4); dump();
sminp(v7.s4, v31.s4, v7.s4); dump();
sminp(v7.s4, v7.s4, v7.s4); dump();
sminp(v7.s4, v7.s4, v0.s4); dump();
sminp(v7.s4, v7.s4, v1.s4); dump();
sminp(v7.s4, v7.s4, v2.s4); dump();
sminp(v7.s4, v7.s4, v4.s4); dump();
sminp(v7.s4, v7.s4, v8.s4); dump();
sminp(v7.s4, v7.s4, v16.s4); dump();
sminp(v7.s4, v7.s4, v31.s4); dump();
umaxp(v7.s4, v7.s4, v7.s4); dump();
umaxp(v0.s4, v7.s4, v7.s4); dump();
umaxp(v1.s4, v7.s4, v7.s4); dump();
umaxp(v2.s4, v7.s4, v7.s4); dump();
umaxp(v4.s4, v7.s4, v7.s4); dump();
umaxp(v8.s4, v7.s4, v7.s4); dump();
umaxp(v16.s4, v7.s4, v7.s4); dump();
umaxp(v31.s4, v7.s4, v7.s4); dump();
umaxp(v7.s4, v7.s4, v7.s4); dump();
umaxp(v7.s4, v0.s4, v7.s4); dump();
umaxp(v7.s4, v1.s4, v7.s4); dump();
umaxp(v7.s4, v2.s4, v7.s4); dump();
umaxp(v7.s4, v4.s4, v7.s4); dump();
umaxp(v7.s4, v8.s4, v7.s4); dump();
umaxp(v7.s4, v16.s4, v7.s4); dump();
umaxp(v7.s4, v31.s4, v7.s4); dump();
umaxp(v7.s4, v7.s4, v7.s4); dump();
umaxp(v7.s4, v7.s4, v0.s4); dump();
umaxp(v7.s4, v7.s4, v1.s4); dump();
umaxp(v7.s4, v7.s4, v2.s4); dump();
umaxp(v7.s4, v7.s4, v4.s4); dump();
umaxp(v7.s4, v7.s4, v8.s4); dump();
umaxp(v7.s4, v7.s4, v16.s4); dump();
umaxp(v7.s4, v7.s4, v31.s4); dump();
uminp(v7.s4, v7.s4, v7.s4); dump();
uminp(v0.s4, v7.s4, v7.s4); dump();
uminp(v1.s4, v7.s4, v7.s4); dump();
uminp(v2.s4, v7.s4, v7.s4); dump();
uminp(v4.s4, v7.s4, v7.s4); dump();
uminp(v8.s4, v7.s4, v7.s4); dump();
uminp(v16.s4, v7.s4, v7.s4); dump();
uminp(v31.s4, v7.s4, v7.s4); dump();
uminp(v7.s4, v7.s4, v7.s4); dump();
uminp(v7.s4, v0.s4, v7.s4); dump();
uminp(v7.s4, v1.s4, v7.s4); dump();
uminp(v7.s4, v2.s4, v7.s4); dump();
uminp(v7.s4, v4.s4, v7.s4); dump();
uminp(v7.s4, v8.s4, v7.s4); dump();
uminp(v7.s4, v16.s4, v7.s4); dump();
uminp(v7.s4, v31.s4, v7.s4); dump();
uminp(v7.s4, v7.s4, v7.s4); dump();
uminp(v7.s4, v7.s4, v0.s4); dump();
uminp(v7.s4, v7.s4, v1.s4); dump();
uminp(v7.s4, v7.s4, v2.s4); dump();
uminp(v7.s4, v7.s4, v4.s4); dump();
uminp(v7.s4, v7.s4, v8.s4); dump();
uminp(v7.s4, v7.s4, v16.s4); dump();
uminp(v7.s4, v7.s4, v31.s4); dump();
//DataProcSimd_DotProduct0:0
sdot(v7.s2, v7.b8, v7.b8); dump();
sdot(v0.s2, v7.b8, v7.b8); dump();
sdot(v1.s2, v7.b8, v7.b8); dump();
sdot(v2.s2, v7.b8, v7.b8); dump();
sdot(v4.s2, v7.b8, v7.b8); dump();
sdot(v8.s2, v7.b8, v7.b8); dump();
sdot(v16.s2, v7.b8, v7.b8); dump();
sdot(v31.s2, v7.b8, v7.b8); dump();
sdot(v7.s2, v7.b8, v7.b8); dump();
sdot(v7.s2, v0.b8, v7.b8); dump();
sdot(v7.s2, v1.b8, v7.b8); dump();
sdot(v7.s2, v2.b8, v7.b8); dump();
sdot(v7.s2, v4.b8, v7.b8); dump();
sdot(v7.s2, v8.b8, v7.b8); dump();
sdot(v7.s2, v16.b8, v7.b8); dump();
sdot(v7.s2, v31.b8, v7.b8); dump();
sdot(v7.s2, v7.b8, v7.b8); dump();
sdot(v7.s2, v7.b8, v0.b8); dump();
sdot(v7.s2, v7.b8, v1.b8); dump();
sdot(v7.s2, v7.b8, v2.b8); dump();
sdot(v7.s2, v7.b8, v4.b8); dump();
sdot(v7.s2, v7.b8, v8.b8); dump();
sdot(v7.s2, v7.b8, v16.b8); dump();
sdot(v7.s2, v7.b8, v31.b8); dump();
udot(v7.s2, v7.b8, v7.b8); dump();
udot(v0.s2, v7.b8, v7.b8); dump();
udot(v1.s2, v7.b8, v7.b8); dump();
udot(v2.s2, v7.b8, v7.b8); dump();
udot(v4.s2, v7.b8, v7.b8); dump();
udot(v8.s2, v7.b8, v7.b8); dump();
udot(v16.s2, v7.b8, v7.b8); dump();
udot(v31.s2, v7.b8, v7.b8); dump();
udot(v7.s2, v7.b8, v7.b8); dump();
udot(v7.s2, v0.b8, v7.b8); dump();
udot(v7.s2, v1.b8, v7.b8); dump();
udot(v7.s2, v2.b8, v7.b8); dump();
udot(v7.s2, v4.b8, v7.b8); dump();
udot(v7.s2, v8.b8, v7.b8); dump();
udot(v7.s2, v16.b8, v7.b8); dump();
udot(v7.s2, v31.b8, v7.b8); dump();
udot(v7.s2, v7.b8, v7.b8); dump();
udot(v7.s2, v7.b8, v0.b8); dump();
udot(v7.s2, v7.b8, v1.b8); dump();
udot(v7.s2, v7.b8, v2.b8); dump();
udot(v7.s2, v7.b8, v4.b8); dump();
udot(v7.s2, v7.b8, v8.b8); dump();
udot(v7.s2, v7.b8, v16.b8); dump();
udot(v7.s2, v7.b8, v31.b8); dump();
//DataProcSimd_DotProduct0:1
sdot(v7.s4, v7.b16, v7.b16); dump();
sdot(v0.s4, v7.b16, v7.b16); dump();
sdot(v1.s4, v7.b16, v7.b16); dump();
sdot(v2.s4, v7.b16, v7.b16); dump();
sdot(v4.s4, v7.b16, v7.b16); dump();
sdot(v8.s4, v7.b16, v7.b16); dump();
sdot(v16.s4, v7.b16, v7.b16); dump();
sdot(v31.s4, v7.b16, v7.b16); dump();
sdot(v7.s4, v7.b16, v7.b16); dump();
sdot(v7.s4, v0.b16, v7.b16); dump();
sdot(v7.s4, v1.b16, v7.b16); dump();
sdot(v7.s4, v2.b16, v7.b16); dump();
sdot(v7.s4, v4.b16, v7.b16); dump();
sdot(v7.s4, v8.b16, v7.b16); dump();
sdot(v7.s4, v16.b16, v7.b16); dump();
sdot(v7.s4, v31.b16, v7.b16); dump();
sdot(v7.s4, v7.b16, v7.b16); dump();
sdot(v7.s4, v7.b16, v0.b16); dump();
sdot(v7.s4, v7.b16, v1.b16); dump();
sdot(v7.s4, v7.b16, v2.b16); dump();
sdot(v7.s4, v7.b16, v4.b16); dump();
sdot(v7.s4, v7.b16, v8.b16); dump();
sdot(v7.s4, v7.b16, v16.b16); dump();
sdot(v7.s4, v7.b16, v31.b16); dump();
udot(v7.s4, v7.b16, v7.b16); dump();
udot(v0.s4, v7.b16, v7.b16); dump();
udot(v1.s4, v7.b16, v7.b16); dump();
udot(v2.s4, v7.b16, v7.b16); dump();
udot(v4.s4, v7.b16, v7.b16); dump();
udot(v8.s4, v7.b16, v7.b16); dump();
udot(v16.s4, v7.b16, v7.b16); dump();
udot(v31.s4, v7.b16, v7.b16); dump();
udot(v7.s4, v7.b16, v7.b16); dump();
udot(v7.s4, v0.b16, v7.b16); dump();
udot(v7.s4, v1.b16, v7.b16); dump();
udot(v7.s4, v2.b16, v7.b16); dump();
udot(v7.s4, v4.b16, v7.b16); dump();
udot(v7.s4, v8.b16, v7.b16); dump();
udot(v7.s4, v16.b16, v7.b16); dump();
udot(v7.s4, v31.b16, v7.b16); dump();
udot(v7.s4, v7.b16, v7.b16); dump();
udot(v7.s4, v7.b16, v0.b16); dump();
udot(v7.s4, v7.b16, v1.b16); dump();
udot(v7.s4, v7.b16, v2.b16); dump();
udot(v7.s4, v7.b16, v4.b16); dump();
udot(v7.s4, v7.b16, v8.b16); dump();
udot(v7.s4, v7.b16, v16.b16); dump();
udot(v7.s4, v7.b16, v31.b16); dump();
//DataProcSimd_DotProduct1:0
sdot(v7.s2, v7.b8, v15.b4[3]); dump();
sdot(v0.s2, v7.b8, v15.b4[3]); dump();
sdot(v1.s2, v7.b8, v15.b4[3]); dump();
sdot(v2.s2, v7.b8, v15.b4[3]); dump();
sdot(v4.s2, v7.b8, v15.b4[3]); dump();
sdot(v8.s2, v7.b8, v15.b4[3]); dump();
sdot(v16.s2, v7.b8, v15.b4[3]); dump();
sdot(v31.s2, v7.b8, v15.b4[3]); dump();
sdot(v7.s2, v7.b8, v15.b4[3]); dump();
sdot(v7.s2, v0.b8, v15.b4[3]); dump();
sdot(v7.s2, v1.b8, v15.b4[3]); dump();
sdot(v7.s2, v2.b8, v15.b4[3]); dump();
sdot(v7.s2, v4.b8, v15.b4[3]); dump();
sdot(v7.s2, v8.b8, v15.b4[3]); dump();
sdot(v7.s2, v16.b8, v15.b4[3]); dump();
sdot(v7.s2, v31.b8, v15.b4[3]); dump();
sdot(v7.s2, v7.b8, v15.b4[3]); dump();
sdot(v7.s2, v7.b8, v0.b4[3]); dump();
sdot(v7.s2, v7.b8, v1.b4[3]); dump();
sdot(v7.s2, v7.b8, v2.b4[3]); dump();
sdot(v7.s2, v7.b8, v4.b4[3]); dump();
sdot(v7.s2, v7.b8, v8.b4[3]); dump();
sdot(v7.s2, v7.b8, v16.b4[3]); dump();
sdot(v7.s2, v7.b8, v31.b4[3]); dump();
sdot(v7.s2, v7.b8, v15.b4[3]); dump();
sdot(v7.s2, v7.b8, v15.b4[0]); dump();
sdot(v7.s2, v7.b8, v15.b4[1]); dump();
sdot(v7.s2, v7.b8, v15.b4[2]); dump();
udot(v7.s2, v7.b8, v15.b4[3]); dump();
udot(v0.s2, v7.b8, v15.b4[3]); dump();
udot(v1.s2, v7.b8, v15.b4[3]); dump();
udot(v2.s2, v7.b8, v15.b4[3]); dump();
udot(v4.s2, v7.b8, v15.b4[3]); dump();
udot(v8.s2, v7.b8, v15.b4[3]); dump();
udot(v16.s2, v7.b8, v15.b4[3]); dump();
udot(v31.s2, v7.b8, v15.b4[3]); dump();
udot(v7.s2, v7.b8, v15.b4[3]); dump();
udot(v7.s2, v0.b8, v15.b4[3]); dump();
udot(v7.s2, v1.b8, v15.b4[3]); dump();
udot(v7.s2, v2.b8, v15.b4[3]); dump();
udot(v7.s2, v4.b8, v15.b4[3]); dump();
udot(v7.s2, v8.b8, v15.b4[3]); dump();
udot(v7.s2, v16.b8, v15.b4[3]); dump();
udot(v7.s2, v31.b8, v15.b4[3]); dump();
udot(v7.s2, v7.b8, v15.b4[3]); dump();
udot(v7.s2, v7.b8, v0.b4[3]); dump();
udot(v7.s2, v7.b8, v1.b4[3]); dump();
udot(v7.s2, v7.b8, v2.b4[3]); dump();
udot(v7.s2, v7.b8, v4.b4[3]); dump();
udot(v7.s2, v7.b8, v8.b4[3]); dump();
udot(v7.s2, v7.b8, v16.b4[3]); dump();
udot(v7.s2, v7.b8, v31.b4[3]); dump();
udot(v7.s2, v7.b8, v15.b4[3]); dump();
udot(v7.s2, v7.b8, v15.b4[0]); dump();
udot(v7.s2, v7.b8, v15.b4[1]); dump();
udot(v7.s2, v7.b8, v15.b4[2]); dump();
//DataProcSimd_DotProduct1:1
sdot(v7.s4, v7.b16, v15.b4[3]); dump();
sdot(v0.s4, v7.b16, v15.b4[3]); dump();
sdot(v1.s4, v7.b16, v15.b4[3]); dump();
sdot(v2.s4, v7.b16, v15.b4[3]); dump();
sdot(v4.s4, v7.b16, v15.b4[3]); dump();
sdot(v8.s4, v7.b16, v15.b4[3]); dump();
sdot(v16.s4, v7.b16, v15.b4[3]); dump();
sdot(v31.s4, v7.b16, v15.b4[3]); dump();
sdot(v7.s4, v7.b16, v15.b4[3]); dump();
sdot(v7.s4, v0.b16, v15.b4[3]); dump();
sdot(v7.s4, v1.b16, v15.b4[3]); dump();
sdot(v7.s4, v2.b16, v15.b4[3]); dump();
sdot(v7.s4, v4.b16, v15.b4[3]); dump();
sdot(v7.s4, v8.b16, v15.b4[3]); dump();
sdot(v7.s4, v16.b16, v15.b4[3]); dump();
sdot(v7.s4, v31.b16, v15.b4[3]); dump();
sdot(v7.s4, v7.b16, v15.b4[3]); dump();
sdot(v7.s4, v7.b16, v0.b4[3]); dump();
sdot(v7.s4, v7.b16, v1.b4[3]); dump();
sdot(v7.s4, v7.b16, v2.b4[3]); dump();
sdot(v7.s4, v7.b16, v4.b4[3]); dump();
sdot(v7.s4, v7.b16, v8.b4[3]); dump();
sdot(v7.s4, v7.b16, v16.b4[3]); dump();
sdot(v7.s4, v7.b16, v31.b4[3]); dump();
sdot(v7.s4, v7.b16, v15.b4[3]); dump();
sdot(v7.s4, v7.b16, v15.b4[0]); dump();
sdot(v7.s4, v7.b16, v15.b4[1]); dump();
sdot(v7.s4, v7.b16, v15.b4[2]); dump();
udot(v7.s4, v7.b16, v15.b4[3]); dump();
udot(v0.s4, v7.b16, v15.b4[3]); dump();
udot(v1.s4, v7.b16, v15.b4[3]); dump();
udot(v2.s4, v7.b16, v15.b4[3]); dump();
udot(v4.s4, v7.b16, v15.b4[3]); dump();
udot(v8.s4, v7.b16, v15.b4[3]); dump();
udot(v16.s4, v7.b16, v15.b4[3]); dump();
udot(v31.s4, v7.b16, v15.b4[3]); dump();
udot(v7.s4, v7.b16, v15.b4[3]); dump();
udot(v7.s4, v0.b16, v15.b4[3]); dump();
udot(v7.s4, v1.b16, v15.b4[3]); dump();
udot(v7.s4, v2.b16, v15.b4[3]); dump();
udot(v7.s4, v4.b16, v15.b4[3]); dump();
udot(v7.s4, v8.b16, v15.b4[3]); dump();
udot(v7.s4, v16.b16, v15.b4[3]); dump();
udot(v7.s4, v31.b16, v15.b4[3]); dump();
udot(v7.s4, v7.b16, v15.b4[3]); dump();
udot(v7.s4, v7.b16, v0.b4[3]); dump();
udot(v7.s4, v7.b16, v1.b4[3]); dump();
udot(v7.s4, v7.b16, v2.b4[3]); dump();
udot(v7.s4, v7.b16, v4.b4[3]); dump();
udot(v7.s4, v7.b16, v8.b4[3]); dump();
udot(v7.s4, v7.b16, v16.b4[3]); dump();
udot(v7.s4, v7.b16, v31.b4[3]); dump();
udot(v7.s4, v7.b16, v15.b4[3]); dump();
udot(v7.s4, v7.b16, v15.b4[0]); dump();
udot(v7.s4, v7.b16, v15.b4[1]); dump();
udot(v7.s4, v7.b16, v15.b4[2]); dump();
//DataProcSimd_TableLookup0:0
tbl(v7.b8, v15.b16, 1, v7.b8); dump();
tbl(v0.b8, v15.b16, 1, v7.b8); dump();
tbl(v1.b8, v15.b16, 1, v7.b8); dump();
tbl(v2.b8, v15.b16, 1, v7.b8); dump();
tbl(v4.b8, v15.b16, 1, v7.b8); dump();
tbl(v8.b8, v15.b16, 1, v7.b8); dump();
tbl(v16.b8, v15.b16, 1, v7.b8); dump();
tbl(v31.b8, v15.b16, 1, v7.b8); dump();
tbl(v7.b8, v15.b16, 1, v7.b8); dump();
tbl(v7.b8, v0.b16, 1, v7.b8); dump();
tbl(v7.b8, v1.b16, 1, v7.b8); dump();
tbl(v7.b8, v2.b16, 1, v7.b8); dump();
tbl(v7.b8, v4.b16, 1, v7.b8); dump();
tbl(v7.b8, v8.b16, 1, v7.b8); dump();
tbl(v7.b8, v16.b16, 1, v7.b8); dump();
tbl(v7.b8, v31.b16, 1, v7.b8); dump();
tbl(v7.b8, v15.b16, 2, v7.b8); dump();
tbl(v7.b8, v0.b16, 2, v7.b8); dump();
tbl(v7.b8, v1.b16, 2, v7.b8); dump();
tbl(v7.b8, v2.b16, 2, v7.b8); dump();
tbl(v7.b8, v4.b16, 2, v7.b8); dump();
tbl(v7.b8, v8.b16, 2, v7.b8); dump();
tbl(v7.b8, v16.b16, 2, v7.b8); dump();
tbl(v7.b8, v31.b16, 2, v7.b8); dump();
tbl(v7.b8, v15.b16, 3, v7.b8); dump();
tbl(v7.b8, v0.b16, 3, v7.b8); dump();
tbl(v7.b8, v1.b16, 3, v7.b8); dump();
tbl(v7.b8, v2.b16, 3, v7.b8); dump();
tbl(v7.b8, v4.b16, 3, v7.b8); dump();
tbl(v7.b8, v8.b16, 3, v7.b8); dump();
tbl(v7.b8, v16.b16, 3, v7.b8); dump();
tbl(v7.b8, v31.b16, 3, v7.b8); dump();
tbl(v7.b8, v15.b16, 4, v7.b8); dump();
tbl(v7.b8, v0.b16, 4, v7.b8); dump();
tbl(v7.b8, v1.b16, 4, v7.b8); dump();
tbl(v7.b8, v2.b16, 4, v7.b8); dump();
tbl(v7.b8, v4.b16, 4, v7.b8); dump();
tbl(v7.b8, v8.b16, 4, v7.b8); dump();
tbl(v7.b8, v16.b16, 4, v7.b8); dump();
tbl(v7.b8, v31.b16, 4, v7.b8); dump();
tbl(v7.b8, v15.b16, 1, v7.b8); dump();
tbl(v7.b8, v15.b16, 1, v0.b8); dump();
tbl(v7.b8, v15.b16, 1, v1.b8); dump();
tbl(v7.b8, v15.b16, 1, v2.b8); dump();
tbl(v7.b8, v15.b16, 1, v4.b8); dump();
tbl(v7.b8, v15.b16, 1, v8.b8); dump();
tbl(v7.b8, v15.b16, 1, v16.b8); dump();
tbl(v7.b8, v15.b16, 1, v31.b8); dump();
tbx(v7.b8, v15.b16, 1, v7.b8); dump();
tbx(v0.b8, v15.b16, 1, v7.b8); dump();
tbx(v1.b8, v15.b16, 1, v7.b8); dump();
tbx(v2.b8, v15.b16, 1, v7.b8); dump();
tbx(v4.b8, v15.b16, 1, v7.b8); dump();
tbx(v8.b8, v15.b16, 1, v7.b8); dump();
tbx(v16.b8, v15.b16, 1, v7.b8); dump();
tbx(v31.b8, v15.b16, 1, v7.b8); dump();
tbx(v7.b8, v15.b16, 1, v7.b8); dump();
tbx(v7.b8, v0.b16, 1, v7.b8); dump();
tbx(v7.b8, v1.b16, 1, v7.b8); dump();
tbx(v7.b8, v2.b16, 1, v7.b8); dump();
tbx(v7.b8, v4.b16, 1, v7.b8); dump();
tbx(v7.b8, v8.b16, 1, v7.b8); dump();
tbx(v7.b8, v16.b16, 1, v7.b8); dump();
tbx(v7.b8, v31.b16, 1, v7.b8); dump();
tbx(v7.b8, v15.b16, 2, v7.b8); dump();
tbx(v7.b8, v0.b16, 2, v7.b8); dump();
tbx(v7.b8, v1.b16, 2, v7.b8); dump();
tbx(v7.b8, v2.b16, 2, v7.b8); dump();
tbx(v7.b8, v4.b16, 2, v7.b8); dump();
tbx(v7.b8, v8.b16, 2, v7.b8); dump();
tbx(v7.b8, v16.b16, 2, v7.b8); dump();
tbx(v7.b8, v31.b16, 2, v7.b8); dump();
tbx(v7.b8, v15.b16, 3, v7.b8); dump();
tbx(v7.b8, v0.b16, 3, v7.b8); dump();
tbx(v7.b8, v1.b16, 3, v7.b8); dump();
tbx(v7.b8, v2.b16, 3, v7.b8); dump();
tbx(v7.b8, v4.b16, 3, v7.b8); dump();
tbx(v7.b8, v8.b16, 3, v7.b8); dump();
tbx(v7.b8, v16.b16, 3, v7.b8); dump();
tbx(v7.b8, v31.b16, 3, v7.b8); dump();
tbx(v7.b8, v15.b16, 4, v7.b8); dump();
tbx(v7.b8, v0.b16, 4, v7.b8); dump();
tbx(v7.b8, v1.b16, 4, v7.b8); dump();
tbx(v7.b8, v2.b16, 4, v7.b8); dump();
tbx(v7.b8, v4.b16, 4, v7.b8); dump();
tbx(v7.b8, v8.b16, 4, v7.b8); dump();
tbx(v7.b8, v16.b16, 4, v7.b8); dump();
tbx(v7.b8, v31.b16, 4, v7.b8); dump();
tbx(v7.b8, v15.b16, 1, v7.b8); dump();
tbx(v7.b8, v15.b16, 1, v0.b8); dump();
tbx(v7.b8, v15.b16, 1, v1.b8); dump();
tbx(v7.b8, v15.b16, 1, v2.b8); dump();
tbx(v7.b8, v15.b16, 1, v4.b8); dump();
tbx(v7.b8, v15.b16, 1, v8.b8); dump();
tbx(v7.b8, v15.b16, 1, v16.b8); dump();
tbx(v7.b8, v15.b16, 1, v31.b8); dump();
//DataProcSimd_TableLookup0:1
tbl(v7.b16, v15.b16, 1, v7.b16); dump();
tbl(v0.b16, v15.b16, 1, v7.b16); dump();
tbl(v1.b16, v15.b16, 1, v7.b16); dump();
tbl(v2.b16, v15.b16, 1, v7.b16); dump();
tbl(v4.b16, v15.b16, 1, v7.b16); dump();
tbl(v8.b16, v15.b16, 1, v7.b16); dump();
tbl(v16.b16, v15.b16, 1, v7.b16); dump();
tbl(v31.b16, v15.b16, 1, v7.b16); dump();
tbl(v7.b16, v15.b16, 1, v7.b16); dump();
tbl(v7.b16, v0.b16, 1, v7.b16); dump();
tbl(v7.b16, v1.b16, 1, v7.b16); dump();
tbl(v7.b16, v2.b16, 1, v7.b16); dump();
tbl(v7.b16, v4.b16, 1, v7.b16); dump();
tbl(v7.b16, v8.b16, 1, v7.b16); dump();
tbl(v7.b16, v16.b16, 1, v7.b16); dump();
tbl(v7.b16, v31.b16, 1, v7.b16); dump();
tbl(v7.b16, v15.b16, 2, v7.b16); dump();
tbl(v7.b16, v0.b16, 2, v7.b16); dump();
tbl(v7.b16, v1.b16, 2, v7.b16); dump();
tbl(v7.b16, v2.b16, 2, v7.b16); dump();
tbl(v7.b16, v4.b16, 2, v7.b16); dump();
tbl(v7.b16, v8.b16, 2, v7.b16); dump();
tbl(v7.b16, v16.b16, 2, v7.b16); dump();
tbl(v7.b16, v31.b16, 2, v7.b16); dump();
tbl(v7.b16, v15.b16, 3, v7.b16); dump();
tbl(v7.b16, v0.b16, 3, v7.b16); dump();
tbl(v7.b16, v1.b16, 3, v7.b16); dump();
tbl(v7.b16, v2.b16, 3, v7.b16); dump();
tbl(v7.b16, v4.b16, 3, v7.b16); dump();
tbl(v7.b16, v8.b16, 3, v7.b16); dump();
tbl(v7.b16, v16.b16, 3, v7.b16); dump();
tbl(v7.b16, v31.b16, 3, v7.b16); dump();
tbl(v7.b16, v15.b16, 4, v7.b16); dump();
tbl(v7.b16, v0.b16, 4, v7.b16); dump();
tbl(v7.b16, v1.b16, 4, v7.b16); dump();
tbl(v7.b16, v2.b16, 4, v7.b16); dump();
tbl(v7.b16, v4.b16, 4, v7.b16); dump();
tbl(v7.b16, v8.b16, 4, v7.b16); dump();
tbl(v7.b16, v16.b16, 4, v7.b16); dump();
tbl(v7.b16, v31.b16, 4, v7.b16); dump();
tbl(v7.b16, v15.b16, 1, v7.b16); dump();
tbl(v7.b16, v15.b16, 1, v0.b16); dump();
tbl(v7.b16, v15.b16, 1, v1.b16); dump();
tbl(v7.b16, v15.b16, 1, v2.b16); dump();
tbl(v7.b16, v15.b16, 1, v4.b16); dump();
tbl(v7.b16, v15.b16, 1, v8.b16); dump();
tbl(v7.b16, v15.b16, 1, v16.b16); dump();
tbl(v7.b16, v15.b16, 1, v31.b16); dump();
tbx(v7.b16, v15.b16, 1, v7.b16); dump();
tbx(v0.b16, v15.b16, 1, v7.b16); dump();
tbx(v1.b16, v15.b16, 1, v7.b16); dump();
tbx(v2.b16, v15.b16, 1, v7.b16); dump();
tbx(v4.b16, v15.b16, 1, v7.b16); dump();
tbx(v8.b16, v15.b16, 1, v7.b16); dump();
tbx(v16.b16, v15.b16, 1, v7.b16); dump();
tbx(v31.b16, v15.b16, 1, v7.b16); dump();
tbx(v7.b16, v15.b16, 1, v7.b16); dump();
tbx(v7.b16, v0.b16, 1, v7.b16); dump();
tbx(v7.b16, v1.b16, 1, v7.b16); dump();
tbx(v7.b16, v2.b16, 1, v7.b16); dump();
tbx(v7.b16, v4.b16, 1, v7.b16); dump();
tbx(v7.b16, v8.b16, 1, v7.b16); dump();
tbx(v7.b16, v16.b16, 1, v7.b16); dump();
tbx(v7.b16, v31.b16, 1, v7.b16); dump();
tbx(v7.b16, v15.b16, 2, v7.b16); dump();
tbx(v7.b16, v0.b16, 2, v7.b16); dump();
tbx(v7.b16, v1.b16, 2, v7.b16); dump();
tbx(v7.b16, v2.b16, 2, v7.b16); dump();
tbx(v7.b16, v4.b16, 2, v7.b16); dump();
tbx(v7.b16, v8.b16, 2, v7.b16); dump();
tbx(v7.b16, v16.b16, 2, v7.b16); dump();
tbx(v7.b16, v31.b16, 2, v7.b16); dump();
tbx(v7.b16, v15.b16, 3, v7.b16); dump();
tbx(v7.b16, v0.b16, 3, v7.b16); dump();
tbx(v7.b16, v1.b16, 3, v7.b16); dump();
tbx(v7.b16, v2.b16, 3, v7.b16); dump();
tbx(v7.b16, v4.b16, 3, v7.b16); dump();
tbx(v7.b16, v8.b16, 3, v7.b16); dump();
tbx(v7.b16, v16.b16, 3, v7.b16); dump();
tbx(v7.b16, v31.b16, 3, v7.b16); dump();
tbx(v7.b16, v15.b16, 4, v7.b16); dump();
tbx(v7.b16, v0.b16, 4, v7.b16); dump();
tbx(v7.b16, v1.b16, 4, v7.b16); dump();
tbx(v7.b16, v2.b16, 4, v7.b16); dump();
tbx(v7.b16, v4.b16, 4, v7.b16); dump();
tbx(v7.b16, v8.b16, 4, v7.b16); dump();
tbx(v7.b16, v16.b16, 4, v7.b16); dump();
tbx(v7.b16, v31.b16, 4, v7.b16); dump();
tbx(v7.b16, v15.b16, 1, v7.b16); dump();
tbx(v7.b16, v15.b16, 1, v0.b16); dump();
tbx(v7.b16, v15.b16, 1, v1.b16); dump();
tbx(v7.b16, v15.b16, 1, v2.b16); dump();
tbx(v7.b16, v15.b16, 1, v4.b16); dump();
tbx(v7.b16, v15.b16, 1, v8.b16); dump();
tbx(v7.b16, v15.b16, 1, v16.b16); dump();
tbx(v7.b16, v15.b16, 1, v31.b16); dump();
//DataProcSimd_ComplexNumberArithmetic0:0
fcadd(v7.h4, v7.h4, v7.h4, 90); dump();
fcadd(v0.h4, v7.h4, v7.h4, 90); dump();
fcadd(v1.h4, v7.h4, v7.h4, 90); dump();
fcadd(v2.h4, v7.h4, v7.h4, 90); dump();
fcadd(v4.h4, v7.h4, v7.h4, 90); dump();
fcadd(v8.h4, v7.h4, v7.h4, 90); dump();
fcadd(v16.h4, v7.h4, v7.h4, 90); dump();
fcadd(v31.h4, v7.h4, v7.h4, 90); dump();
fcadd(v7.h4, v7.h4, v7.h4, 90); dump();
fcadd(v7.h4, v0.h4, v7.h4, 90); dump();
fcadd(v7.h4, v1.h4, v7.h4, 90); dump();
fcadd(v7.h4, v2.h4, v7.h4, 90); dump();
fcadd(v7.h4, v4.h4, v7.h4, 90); dump();
fcadd(v7.h4, v8.h4, v7.h4, 90); dump();
fcadd(v7.h4, v16.h4, v7.h4, 90); dump();
fcadd(v7.h4, v31.h4, v7.h4, 90); dump();
fcadd(v7.h4, v7.h4, v7.h4, 90); dump();
fcadd(v7.h4, v7.h4, v0.h4, 90); dump();
fcadd(v7.h4, v7.h4, v1.h4, 90); dump();
fcadd(v7.h4, v7.h4, v2.h4, 90); dump();
fcadd(v7.h4, v7.h4, v4.h4, 90); dump();
fcadd(v7.h4, v7.h4, v8.h4, 90); dump();
fcadd(v7.h4, v7.h4, v16.h4, 90); dump();
fcadd(v7.h4, v7.h4, v31.h4, 90); dump();
fcadd(v7.h4, v7.h4, v7.h4, 90); dump();
fcadd(v7.h4, v7.h4, v7.h4, 270); dump();
//DataProcSimd_ComplexNumberArithmetic0:1
fcadd(v7.h8, v7.h8, v7.h8, 90); dump();
fcadd(v0.h8, v7.h8, v7.h8, 90); dump();
fcadd(v1.h8, v7.h8, v7.h8, 90); dump();
fcadd(v2.h8, v7.h8, v7.h8, 90); dump();
fcadd(v4.h8, v7.h8, v7.h8, 90); dump();
fcadd(v8.h8, v7.h8, v7.h8, 90); dump();
fcadd(v16.h8, v7.h8, v7.h8, 90); dump();
fcadd(v31.h8, v7.h8, v7.h8, 90); dump();
fcadd(v7.h8, v7.h8, v7.h8, 90); dump();
fcadd(v7.h8, v0.h8, v7.h8, 90); dump();
fcadd(v7.h8, v1.h8, v7.h8, 90); dump();
fcadd(v7.h8, v2.h8, v7.h8, 90); dump();
fcadd(v7.h8, v4.h8, v7.h8, 90); dump();
fcadd(v7.h8, v8.h8, v7.h8, 90); dump();
fcadd(v7.h8, v16.h8, v7.h8, 90); dump();
fcadd(v7.h8, v31.h8, v7.h8, 90); dump();
fcadd(v7.h8, v7.h8, v7.h8, 90); dump();
fcadd(v7.h8, v7.h8, v0.h8, 90); dump();
fcadd(v7.h8, v7.h8, v1.h8, 90); dump();
fcadd(v7.h8, v7.h8, v2.h8, 90); dump();
fcadd(v7.h8, v7.h8, v4.h8, 90); dump();
fcadd(v7.h8, v7.h8, v8.h8, 90); dump();
fcadd(v7.h8, v7.h8, v16.h8, 90); dump();
fcadd(v7.h8, v7.h8, v31.h8, 90); dump();
fcadd(v7.h8, v7.h8, v7.h8, 90); dump();
fcadd(v7.h8, v7.h8, v7.h8, 270); dump();
//DataProcSimd_ComplexNumberArithmetic0:2
fcadd(v7.s2, v7.s2, v7.s2, 90); dump();
fcadd(v0.s2, v7.s2, v7.s2, 90); dump();
fcadd(v1.s2, v7.s2, v7.s2, 90); dump();
fcadd(v2.s2, v7.s2, v7.s2, 90); dump();
fcadd(v4.s2, v7.s2, v7.s2, 90); dump();
fcadd(v8.s2, v7.s2, v7.s2, 90); dump();
fcadd(v16.s2, v7.s2, v7.s2, 90); dump();
fcadd(v31.s2, v7.s2, v7.s2, 90); dump();
fcadd(v7.s2, v7.s2, v7.s2, 90); dump();
fcadd(v7.s2, v0.s2, v7.s2, 90); dump();
fcadd(v7.s2, v1.s2, v7.s2, 90); dump();
fcadd(v7.s2, v2.s2, v7.s2, 90); dump();
fcadd(v7.s2, v4.s2, v7.s2, 90); dump();
fcadd(v7.s2, v8.s2, v7.s2, 90); dump();
fcadd(v7.s2, v16.s2, v7.s2, 90); dump();
fcadd(v7.s2, v31.s2, v7.s2, 90); dump();
fcadd(v7.s2, v7.s2, v7.s2, 90); dump();
fcadd(v7.s2, v7.s2, v0.s2, 90); dump();
fcadd(v7.s2, v7.s2, v1.s2, 90); dump();
fcadd(v7.s2, v7.s2, v2.s2, 90); dump();
fcadd(v7.s2, v7.s2, v4.s2, 90); dump();
fcadd(v7.s2, v7.s2, v8.s2, 90); dump();
fcadd(v7.s2, v7.s2, v16.s2, 90); dump();
fcadd(v7.s2, v7.s2, v31.s2, 90); dump();
fcadd(v7.s2, v7.s2, v7.s2, 90); dump();
fcadd(v7.s2, v7.s2, v7.s2, 270); dump();
//DataProcSimd_ComplexNumberArithmetic0:3
fcadd(v7.s4, v7.s4, v7.s4, 90); dump();
fcadd(v0.s4, v7.s4, v7.s4, 90); dump();
fcadd(v1.s4, v7.s4, v7.s4, 90); dump();
fcadd(v2.s4, v7.s4, v7.s4, 90); dump();
fcadd(v4.s4, v7.s4, v7.s4, 90); dump();
fcadd(v8.s4, v7.s4, v7.s4, 90); dump();
fcadd(v16.s4, v7.s4, v7.s4, 90); dump();
fcadd(v31.s4, v7.s4, v7.s4, 90); dump();
fcadd(v7.s4, v7.s4, v7.s4, 90); dump();
fcadd(v7.s4, v0.s4, v7.s4, 90); dump();
fcadd(v7.s4, v1.s4, v7.s4, 90); dump();
fcadd(v7.s4, v2.s4, v7.s4, 90); dump();
fcadd(v7.s4, v4.s4, v7.s4, 90); dump();
fcadd(v7.s4, v8.s4, v7.s4, 90); dump();
fcadd(v7.s4, v16.s4, v7.s4, 90); dump();
fcadd(v7.s4, v31.s4, v7.s4, 90); dump();
fcadd(v7.s4, v7.s4, v7.s4, 90); dump();
fcadd(v7.s4, v7.s4, v0.s4, 90); dump();
fcadd(v7.s4, v7.s4, v1.s4, 90); dump();
fcadd(v7.s4, v7.s4, v2.s4, 90); dump();
fcadd(v7.s4, v7.s4, v4.s4, 90); dump();
fcadd(v7.s4, v7.s4, v8.s4, 90); dump();
fcadd(v7.s4, v7.s4, v16.s4, 90); dump();
fcadd(v7.s4, v7.s4, v31.s4, 90); dump();
fcadd(v7.s4, v7.s4, v7.s4, 90); dump();
fcadd(v7.s4, v7.s4, v7.s4, 270); dump();
//DataProcSimd_ComplexNumberArithmetic0:4
fcadd(v7.d2, v7.d2, v7.d2, 90); dump();
fcadd(v0.d2, v7.d2, v7.d2, 90); dump();
fcadd(v1.d2, v7.d2, v7.d2, 90); dump();
fcadd(v2.d2, v7.d2, v7.d2, 90); dump();
fcadd(v4.d2, v7.d2, v7.d2, 90); dump();
fcadd(v8.d2, v7.d2, v7.d2, 90); dump();
fcadd(v16.d2, v7.d2, v7.d2, 90); dump();
fcadd(v31.d2, v7.d2, v7.d2, 90); dump();
fcadd(v7.d2, v7.d2, v7.d2, 90); dump();
fcadd(v7.d2, v0.d2, v7.d2, 90); dump();
fcadd(v7.d2, v1.d2, v7.d2, 90); dump();
fcadd(v7.d2, v2.d2, v7.d2, 90); dump();
fcadd(v7.d2, v4.d2, v7.d2, 90); dump();
fcadd(v7.d2, v8.d2, v7.d2, 90); dump();
fcadd(v7.d2, v16.d2, v7.d2, 90); dump();
fcadd(v7.d2, v31.d2, v7.d2, 90); dump();
fcadd(v7.d2, v7.d2, v7.d2, 90); dump();
fcadd(v7.d2, v7.d2, v0.d2, 90); dump();
fcadd(v7.d2, v7.d2, v1.d2, 90); dump();
fcadd(v7.d2, v7.d2, v2.d2, 90); dump();
fcadd(v7.d2, v7.d2, v4.d2, 90); dump();
fcadd(v7.d2, v7.d2, v8.d2, 90); dump();
fcadd(v7.d2, v7.d2, v16.d2, 90); dump();
fcadd(v7.d2, v7.d2, v31.d2, 90); dump();
fcadd(v7.d2, v7.d2, v7.d2, 90); dump();
fcadd(v7.d2, v7.d2, v7.d2, 270); dump();
//DataProcSimd_ComplexNumberArithmetic1:0
fcmla(v7.h4, v7.h4, v7.h4, 0); dump();
fcmla(v0.h4, v7.h4, v7.h4, 0); dump();
fcmla(v1.h4, v7.h4, v7.h4, 0); dump();
fcmla(v2.h4, v7.h4, v7.h4, 0); dump();
fcmla(v4.h4, v7.h4, v7.h4, 0); dump();
fcmla(v8.h4, v7.h4, v7.h4, 0); dump();
fcmla(v16.h4, v7.h4, v7.h4, 0); dump();
fcmla(v31.h4, v7.h4, v7.h4, 0); dump();
fcmla(v7.h4, v7.h4, v7.h4, 0); dump();
fcmla(v7.h4, v0.h4, v7.h4, 0); dump();
fcmla(v7.h4, v1.h4, v7.h4, 0); dump();
fcmla(v7.h4, v2.h4, v7.h4, 0); dump();
fcmla(v7.h4, v4.h4, v7.h4, 0); dump();
fcmla(v7.h4, v8.h4, v7.h4, 0); dump();
fcmla(v7.h4, v16.h4, v7.h4, 0); dump();
fcmla(v7.h4, v31.h4, v7.h4, 0); dump();
fcmla(v7.h4, v7.h4, v7.h4, 0); dump();
fcmla(v7.h4, v7.h4, v0.h4, 0); dump();
fcmla(v7.h4, v7.h4, v1.h4, 0); dump();
fcmla(v7.h4, v7.h4, v2.h4, 0); dump();
fcmla(v7.h4, v7.h4, v4.h4, 0); dump();
fcmla(v7.h4, v7.h4, v8.h4, 0); dump();
fcmla(v7.h4, v7.h4, v16.h4, 0); dump();
fcmla(v7.h4, v7.h4, v31.h4, 0); dump();
fcmla(v7.h4, v7.h4, v7.h4, 0); dump();
fcmla(v7.h4, v7.h4, v7.h4, 90); dump();
fcmla(v7.h4, v7.h4, v7.h4, 180); dump();
fcmla(v7.h4, v7.h4, v7.h4, 270); dump();
//DataProcSimd_ComplexNumberArithmetic1:1
fcmla(v7.h8, v7.h8, v7.h8, 0); dump();
fcmla(v0.h8, v7.h8, v7.h8, 0); dump();
fcmla(v1.h8, v7.h8, v7.h8, 0); dump();
fcmla(v2.h8, v7.h8, v7.h8, 0); dump();
fcmla(v4.h8, v7.h8, v7.h8, 0); dump();
fcmla(v8.h8, v7.h8, v7.h8, 0); dump();
fcmla(v16.h8, v7.h8, v7.h8, 0); dump();
fcmla(v31.h8, v7.h8, v7.h8, 0); dump();
fcmla(v7.h8, v7.h8, v7.h8, 0); dump();
fcmla(v7.h8, v0.h8, v7.h8, 0); dump();
fcmla(v7.h8, v1.h8, v7.h8, 0); dump();
fcmla(v7.h8, v2.h8, v7.h8, 0); dump();
fcmla(v7.h8, v4.h8, v7.h8, 0); dump();
fcmla(v7.h8, v8.h8, v7.h8, 0); dump();
fcmla(v7.h8, v16.h8, v7.h8, 0); dump();
fcmla(v7.h8, v31.h8, v7.h8, 0); dump();
fcmla(v7.h8, v7.h8, v7.h8, 0); dump();
fcmla(v7.h8, v7.h8, v0.h8, 0); dump();
fcmla(v7.h8, v7.h8, v1.h8, 0); dump();
fcmla(v7.h8, v7.h8, v2.h8, 0); dump();
fcmla(v7.h8, v7.h8, v4.h8, 0); dump();
fcmla(v7.h8, v7.h8, v8.h8, 0); dump();
fcmla(v7.h8, v7.h8, v16.h8, 0); dump();
fcmla(v7.h8, v7.h8, v31.h8, 0); dump();
fcmla(v7.h8, v7.h8, v7.h8, 0); dump();
fcmla(v7.h8, v7.h8, v7.h8, 90); dump();
fcmla(v7.h8, v7.h8, v7.h8, 180); dump();
fcmla(v7.h8, v7.h8, v7.h8, 270); dump();
//DataProcSimd_ComplexNumberArithmetic1:2
fcmla(v7.s2, v7.s2, v7.s2, 0); dump();
fcmla(v0.s2, v7.s2, v7.s2, 0); dump();
fcmla(v1.s2, v7.s2, v7.s2, 0); dump();
fcmla(v2.s2, v7.s2, v7.s2, 0); dump();
fcmla(v4.s2, v7.s2, v7.s2, 0); dump();
fcmla(v8.s2, v7.s2, v7.s2, 0); dump();
fcmla(v16.s2, v7.s2, v7.s2, 0); dump();
fcmla(v31.s2, v7.s2, v7.s2, 0); dump();
fcmla(v7.s2, v7.s2, v7.s2, 0); dump();
fcmla(v7.s2, v0.s2, v7.s2, 0); dump();
fcmla(v7.s2, v1.s2, v7.s2, 0); dump();
fcmla(v7.s2, v2.s2, v7.s2, 0); dump();
fcmla(v7.s2, v4.s2, v7.s2, 0); dump();
fcmla(v7.s2, v8.s2, v7.s2, 0); dump();
fcmla(v7.s2, v16.s2, v7.s2, 0); dump();
fcmla(v7.s2, v31.s2, v7.s2, 0); dump();
fcmla(v7.s2, v7.s2, v7.s2, 0); dump();
fcmla(v7.s2, v7.s2, v0.s2, 0); dump();
fcmla(v7.s2, v7.s2, v1.s2, 0); dump();
fcmla(v7.s2, v7.s2, v2.s2, 0); dump();
fcmla(v7.s2, v7.s2, v4.s2, 0); dump();
fcmla(v7.s2, v7.s2, v8.s2, 0); dump();
fcmla(v7.s2, v7.s2, v16.s2, 0); dump();
fcmla(v7.s2, v7.s2, v31.s2, 0); dump();
fcmla(v7.s2, v7.s2, v7.s2, 0); dump();
fcmla(v7.s2, v7.s2, v7.s2, 90); dump();
fcmla(v7.s2, v7.s2, v7.s2, 180); dump();
fcmla(v7.s2, v7.s2, v7.s2, 270); dump();
//DataProcSimd_ComplexNumberArithmetic1:3
fcmla(v7.s4, v7.s4, v7.s4, 0); dump();
fcmla(v0.s4, v7.s4, v7.s4, 0); dump();
fcmla(v1.s4, v7.s4, v7.s4, 0); dump();
fcmla(v2.s4, v7.s4, v7.s4, 0); dump();
fcmla(v4.s4, v7.s4, v7.s4, 0); dump();
fcmla(v8.s4, v7.s4, v7.s4, 0); dump();
fcmla(v16.s4, v7.s4, v7.s4, 0); dump();
fcmla(v31.s4, v7.s4, v7.s4, 0); dump();
fcmla(v7.s4, v7.s4, v7.s4, 0); dump();
fcmla(v7.s4, v0.s4, v7.s4, 0); dump();
fcmla(v7.s4, v1.s4, v7.s4, 0); dump();
fcmla(v7.s4, v2.s4, v7.s4, 0); dump();
fcmla(v7.s4, v4.s4, v7.s4, 0); dump();
fcmla(v7.s4, v8.s4, v7.s4, 0); dump();
fcmla(v7.s4, v16.s4, v7.s4, 0); dump();
fcmla(v7.s4, v31.s4, v7.s4, 0); dump();
fcmla(v7.s4, v7.s4, v7.s4, 0); dump();
fcmla(v7.s4, v7.s4, v0.s4, 0); dump();
fcmla(v7.s4, v7.s4, v1.s4, 0); dump();
fcmla(v7.s4, v7.s4, v2.s4, 0); dump();
fcmla(v7.s4, v7.s4, v4.s4, 0); dump();
fcmla(v7.s4, v7.s4, v8.s4, 0); dump();
fcmla(v7.s4, v7.s4, v16.s4, 0); dump();
fcmla(v7.s4, v7.s4, v31.s4, 0); dump();
fcmla(v7.s4, v7.s4, v7.s4, 0); dump();
fcmla(v7.s4, v7.s4, v7.s4, 90); dump();
fcmla(v7.s4, v7.s4, v7.s4, 180); dump();
fcmla(v7.s4, v7.s4, v7.s4, 270); dump();
//DataProcSimd_ComplexNumberArithmetic1:4
fcmla(v7.d2, v7.d2, v7.d2, 0); dump();
fcmla(v0.d2, v7.d2, v7.d2, 0); dump();
fcmla(v1.d2, v7.d2, v7.d2, 0); dump();
fcmla(v2.d2, v7.d2, v7.d2, 0); dump();
fcmla(v4.d2, v7.d2, v7.d2, 0); dump();
fcmla(v8.d2, v7.d2, v7.d2, 0); dump();
fcmla(v16.d2, v7.d2, v7.d2, 0); dump();
fcmla(v31.d2, v7.d2, v7.d2, 0); dump();
fcmla(v7.d2, v7.d2, v7.d2, 0); dump();
fcmla(v7.d2, v0.d2, v7.d2, 0); dump();
fcmla(v7.d2, v1.d2, v7.d2, 0); dump();
fcmla(v7.d2, v2.d2, v7.d2, 0); dump();
fcmla(v7.d2, v4.d2, v7.d2, 0); dump();
fcmla(v7.d2, v8.d2, v7.d2, 0); dump();
fcmla(v7.d2, v16.d2, v7.d2, 0); dump();
fcmla(v7.d2, v31.d2, v7.d2, 0); dump();
fcmla(v7.d2, v7.d2, v7.d2, 0); dump();
fcmla(v7.d2, v7.d2, v0.d2, 0); dump();
fcmla(v7.d2, v7.d2, v1.d2, 0); dump();
fcmla(v7.d2, v7.d2, v2.d2, 0); dump();
fcmla(v7.d2, v7.d2, v4.d2, 0); dump();
fcmla(v7.d2, v7.d2, v8.d2, 0); dump();
fcmla(v7.d2, v7.d2, v16.d2, 0); dump();
fcmla(v7.d2, v7.d2, v31.d2, 0); dump();
fcmla(v7.d2, v7.d2, v7.d2, 0); dump();
fcmla(v7.d2, v7.d2, v7.d2, 90); dump();
fcmla(v7.d2, v7.d2, v7.d2, 180); dump();
fcmla(v7.d2, v7.d2, v7.d2, 270); dump();
//DataProcSimd_ComplexNumberArithmetic2:0
fcmla(v7.h4, v7.h4, v15.h4[0], 0); dump();
fcmla(v0.h4, v7.h4, v15.h4[0], 0); dump();
fcmla(v1.h4, v7.h4, v15.h4[0], 0); dump();
fcmla(v2.h4, v7.h4, v15.h4[0], 0); dump();
fcmla(v4.h4, v7.h4, v15.h4[0], 0); dump();
fcmla(v8.h4, v7.h4, v15.h4[0], 0); dump();
fcmla(v16.h4, v7.h4, v15.h4[0], 0); dump();
fcmla(v31.h4, v7.h4, v15.h4[0], 0); dump();
fcmla(v7.h4, v7.h4, v15.h4[0], 0); dump();
fcmla(v7.h4, v0.h4, v15.h4[0], 0); dump();
fcmla(v7.h4, v1.h4, v15.h4[0], 0); dump();
fcmla(v7.h4, v2.h4, v15.h4[0], 0); dump();
fcmla(v7.h4, v4.h4, v15.h4[0], 0); dump();
fcmla(v7.h4, v8.h4, v15.h4[0], 0); dump();
fcmla(v7.h4, v16.h4, v15.h4[0], 0); dump();
fcmla(v7.h4, v31.h4, v15.h4[0], 0); dump();
fcmla(v7.h4, v7.h4, v15.h4[0], 0); dump();
fcmla(v7.h4, v7.h4, v15.h4[1], 0); dump();
fcmla(v7.h4, v7.h4, v0.h4[0], 0); dump();
fcmla(v7.h4, v7.h4, v0.h4[1], 0); dump();
fcmla(v7.h4, v7.h4, v1.h4[0], 0); dump();
fcmla(v7.h4, v7.h4, v1.h4[1], 0); dump();
fcmla(v7.h4, v7.h4, v2.h4[0], 0); dump();
fcmla(v7.h4, v7.h4, v2.h4[1], 0); dump();
fcmla(v7.h4, v7.h4, v4.h4[0], 0); dump();
fcmla(v7.h4, v7.h4, v4.h4[1], 0); dump();
fcmla(v7.h4, v7.h4, v8.h4[0], 0); dump();
fcmla(v7.h4, v7.h4, v8.h4[1], 0); dump();
fcmla(v7.h4, v7.h4, v15.h4[0], 0); dump();
fcmla(v7.h4, v7.h4, v15.h4[0], 90); dump();
fcmla(v7.h4, v7.h4, v15.h4[0], 180); dump();
fcmla(v7.h4, v7.h4, v15.h4[0], 270); dump();
//DataProcSimd_ComplexNumberArithmetic2:1
fcmla(v7.h8, v7.h8, v15.h4[0], 0); dump();
fcmla(v0.h8, v7.h8, v15.h4[0], 0); dump();
fcmla(v1.h8, v7.h8, v15.h4[0], 0); dump();
fcmla(v2.h8, v7.h8, v15.h4[0], 0); dump();
fcmla(v4.h8, v7.h8, v15.h4[0], 0); dump();
fcmla(v8.h8, v7.h8, v15.h4[0], 0); dump();
fcmla(v16.h8, v7.h8, v15.h4[0], 0); dump();
fcmla(v31.h8, v7.h8, v15.h4[0], 0); dump();
fcmla(v7.h8, v7.h8, v15.h4[0], 0); dump();
fcmla(v7.h8, v0.h8, v15.h4[0], 0); dump();
fcmla(v7.h8, v1.h8, v15.h4[0], 0); dump();
fcmla(v7.h8, v2.h8, v15.h4[0], 0); dump();
fcmla(v7.h8, v4.h8, v15.h4[0], 0); dump();
fcmla(v7.h8, v8.h8, v15.h4[0], 0); dump();
fcmla(v7.h8, v16.h8, v15.h4[0], 0); dump();
fcmla(v7.h8, v31.h8, v15.h4[0], 0); dump();
fcmla(v7.h8, v7.h8, v15.h4[0], 0); dump();
fcmla(v7.h8, v7.h8, v15.h4[1], 0); dump();
fcmla(v7.h8, v7.h8, v0.h4[0], 0); dump();
fcmla(v7.h8, v7.h8, v0.h4[1], 0); dump();
fcmla(v7.h8, v7.h8, v1.h4[0], 0); dump();
fcmla(v7.h8, v7.h8, v1.h4[1], 0); dump();
fcmla(v7.h8, v7.h8, v2.h4[0], 0); dump();
fcmla(v7.h8, v7.h8, v2.h4[1], 0); dump();
fcmla(v7.h8, v7.h8, v4.h4[0], 0); dump();
fcmla(v7.h8, v7.h8, v4.h4[1], 0); dump();
fcmla(v7.h8, v7.h8, v8.h4[0], 0); dump();
fcmla(v7.h8, v7.h8, v8.h4[1], 0); dump();
fcmla(v7.h8, v7.h8, v15.h4[0], 0); dump();
fcmla(v7.h8, v7.h8, v15.h4[0], 90); dump();
fcmla(v7.h8, v7.h8, v15.h4[0], 180); dump();
fcmla(v7.h8, v7.h8, v15.h4[0], 270); dump();
//DataProcSimd_ComplexNumberArithmetic2:2
fcmla(v7.s4, v7.s4, v15.s2[1], 0); dump();
fcmla(v0.s4, v7.s4, v15.s2[1], 0); dump();
fcmla(v1.s4, v7.s4, v15.s2[1], 0); dump();
fcmla(v2.s4, v7.s4, v15.s2[1], 0); dump();
fcmla(v4.s4, v7.s4, v15.s2[1], 0); dump();
fcmla(v8.s4, v7.s4, v15.s2[1], 0); dump();
fcmla(v16.s4, v7.s4, v15.s2[1], 0); dump();
fcmla(v31.s4, v7.s4, v15.s2[1], 0); dump();
fcmla(v7.s4, v7.s4, v15.s2[1], 0); dump();
fcmla(v7.s4, v0.s4, v15.s2[1], 0); dump();
fcmla(v7.s4, v1.s4, v15.s2[1], 0); dump();
fcmla(v7.s4, v2.s4, v15.s2[1], 0); dump();
fcmla(v7.s4, v4.s4, v15.s2[1], 0); dump();
fcmla(v7.s4, v8.s4, v15.s2[1], 0); dump();
fcmla(v7.s4, v16.s4, v15.s2[1], 0); dump();
fcmla(v7.s4, v31.s4, v15.s2[1], 0); dump();
fcmla(v7.s4, v7.s4, v15.s2[1], 0); dump();
fcmla(v7.s4, v7.s4, v15.s2[0], 0); dump();
fcmla(v7.s4, v7.s4, v0.s2[1], 0); dump();
fcmla(v7.s4, v7.s4, v0.s2[0], 0); dump();
fcmla(v7.s4, v7.s4, v1.s2[1], 0); dump();
fcmla(v7.s4, v7.s4, v1.s2[0], 0); dump();
fcmla(v7.s4, v7.s4, v2.s2[1], 0); dump();
fcmla(v7.s4, v7.s4, v2.s2[0], 0); dump();
fcmla(v7.s4, v7.s4, v4.s2[1], 0); dump();
fcmla(v7.s4, v7.s4, v4.s2[0], 0); dump();
fcmla(v7.s4, v7.s4, v8.s2[1], 0); dump();
fcmla(v7.s4, v7.s4, v8.s2[0], 0); dump();
fcmla(v7.s4, v7.s4, v15.s2[1], 0); dump();
fcmla(v7.s4, v7.s4, v15.s2[1], 90); dump();
fcmla(v7.s4, v7.s4, v15.s2[1], 180); dump();
fcmla(v7.s4, v7.s4, v15.s2[1], 270); dump();
//DataProcSimd_CryptographicExtension0:0
aesd(v7.b16, v7.b16); dump();
aesd(v0.b16, v7.b16); dump();
aesd(v1.b16, v7.b16); dump();
aesd(v2.b16, v7.b16); dump();
aesd(v4.b16, v7.b16); dump();
aesd(v8.b16, v7.b16); dump();
aesd(v16.b16, v7.b16); dump();
aesd(v31.b16, v7.b16); dump();
aesd(v7.b16, v7.b16); dump();
aesd(v7.b16, v0.b16); dump();
aesd(v7.b16, v1.b16); dump();
aesd(v7.b16, v2.b16); dump();
aesd(v7.b16, v4.b16); dump();
aesd(v7.b16, v8.b16); dump();
aesd(v7.b16, v16.b16); dump();
aesd(v7.b16, v31.b16); dump();
aese(v7.b16, v7.b16); dump();
aese(v0.b16, v7.b16); dump();
aese(v1.b16, v7.b16); dump();
aese(v2.b16, v7.b16); dump();
aese(v4.b16, v7.b16); dump();
aese(v8.b16, v7.b16); dump();
aese(v16.b16, v7.b16); dump();
aese(v31.b16, v7.b16); dump();
aese(v7.b16, v7.b16); dump();
aese(v7.b16, v0.b16); dump();
aese(v7.b16, v1.b16); dump();
aese(v7.b16, v2.b16); dump();
aese(v7.b16, v4.b16); dump();
aese(v7.b16, v8.b16); dump();
aese(v7.b16, v16.b16); dump();
aese(v7.b16, v31.b16); dump();
aesimc(v7.b16, v7.b16); dump();
aesimc(v0.b16, v7.b16); dump();
aesimc(v1.b16, v7.b16); dump();
aesimc(v2.b16, v7.b16); dump();
aesimc(v4.b16, v7.b16); dump();
aesimc(v8.b16, v7.b16); dump();
aesimc(v16.b16, v7.b16); dump();
aesimc(v31.b16, v7.b16); dump();
aesimc(v7.b16, v7.b16); dump();
aesimc(v7.b16, v0.b16); dump();
aesimc(v7.b16, v1.b16); dump();
aesimc(v7.b16, v2.b16); dump();
aesimc(v7.b16, v4.b16); dump();
aesimc(v7.b16, v8.b16); dump();
aesimc(v7.b16, v16.b16); dump();
aesimc(v7.b16, v31.b16); dump();
aesmc(v7.b16, v7.b16); dump();
aesmc(v0.b16, v7.b16); dump();
aesmc(v1.b16, v7.b16); dump();
aesmc(v2.b16, v7.b16); dump();
aesmc(v4.b16, v7.b16); dump();
aesmc(v8.b16, v7.b16); dump();
aesmc(v16.b16, v7.b16); dump();
aesmc(v31.b16, v7.b16); dump();
aesmc(v7.b16, v7.b16); dump();
aesmc(v7.b16, v0.b16); dump();
aesmc(v7.b16, v1.b16); dump();
aesmc(v7.b16, v2.b16); dump();
aesmc(v7.b16, v4.b16); dump();
aesmc(v7.b16, v8.b16); dump();
aesmc(v7.b16, v16.b16); dump();
aesmc(v7.b16, v31.b16); dump();
//DataProcSimd_CryptographicExtension1:0
sha1c(q7, s7, v7.s4); dump();
sha1c(q0, s7, v7.s4); dump();
sha1c(q1, s7, v7.s4); dump();
sha1c(q2, s7, v7.s4); dump();
sha1c(q4, s7, v7.s4); dump();
sha1c(q8, s7, v7.s4); dump();
sha1c(q16, s7, v7.s4); dump();
sha1c(q31, s7, v7.s4); dump();
sha1c(q7, s7, v7.s4); dump();
sha1c(q7, s0, v7.s4); dump();
sha1c(q7, s1, v7.s4); dump();
sha1c(q7, s2, v7.s4); dump();
sha1c(q7, s4, v7.s4); dump();
sha1c(q7, s8, v7.s4); dump();
sha1c(q7, s16, v7.s4); dump();
sha1c(q7, s31, v7.s4); dump();
sha1c(q7, s7, v7.s4); dump();
sha1c(q7, s7, v0.s4); dump();
sha1c(q7, s7, v1.s4); dump();
sha1c(q7, s7, v2.s4); dump();
sha1c(q7, s7, v4.s4); dump();
sha1c(q7, s7, v8.s4); dump();
sha1c(q7, s7, v16.s4); dump();
sha1c(q7, s7, v31.s4); dump();
sha1m(q7, s7, v7.s4); dump();
sha1m(q0, s7, v7.s4); dump();
sha1m(q1, s7, v7.s4); dump();
sha1m(q2, s7, v7.s4); dump();
sha1m(q4, s7, v7.s4); dump();
sha1m(q8, s7, v7.s4); dump();
sha1m(q16, s7, v7.s4); dump();
sha1m(q31, s7, v7.s4); dump();
sha1m(q7, s7, v7.s4); dump();
sha1m(q7, s0, v7.s4); dump();
sha1m(q7, s1, v7.s4); dump();
sha1m(q7, s2, v7.s4); dump();
sha1m(q7, s4, v7.s4); dump();
sha1m(q7, s8, v7.s4); dump();
sha1m(q7, s16, v7.s4); dump();
sha1m(q7, s31, v7.s4); dump();
sha1m(q7, s7, v7.s4); dump();
sha1m(q7, s7, v0.s4); dump();
sha1m(q7, s7, v1.s4); dump();
sha1m(q7, s7, v2.s4); dump();
sha1m(q7, s7, v4.s4); dump();
sha1m(q7, s7, v8.s4); dump();
sha1m(q7, s7, v16.s4); dump();
sha1m(q7, s7, v31.s4); dump();
sha1p(q7, s7, v7.s4); dump();
sha1p(q0, s7, v7.s4); dump();
sha1p(q1, s7, v7.s4); dump();
sha1p(q2, s7, v7.s4); dump();
sha1p(q4, s7, v7.s4); dump();
sha1p(q8, s7, v7.s4); dump();
sha1p(q16, s7, v7.s4); dump();
sha1p(q31, s7, v7.s4); dump();
sha1p(q7, s7, v7.s4); dump();
sha1p(q7, s0, v7.s4); dump();
sha1p(q7, s1, v7.s4); dump();
sha1p(q7, s2, v7.s4); dump();
sha1p(q7, s4, v7.s4); dump();
sha1p(q7, s8, v7.s4); dump();
sha1p(q7, s16, v7.s4); dump();
sha1p(q7, s31, v7.s4); dump();
sha1p(q7, s7, v7.s4); dump();
sha1p(q7, s7, v0.s4); dump();
sha1p(q7, s7, v1.s4); dump();
sha1p(q7, s7, v2.s4); dump();
sha1p(q7, s7, v4.s4); dump();
sha1p(q7, s7, v8.s4); dump();
sha1p(q7, s7, v16.s4); dump();
sha1p(q7, s7, v31.s4); dump();
//DataProcSimd_CryptographicExtension2:0
sha1h(s7, s7); dump();
sha1h(s0, s7); dump();
sha1h(s1, s7); dump();
sha1h(s2, s7); dump();
sha1h(s4, s7); dump();
sha1h(s8, s7); dump();
sha1h(s16, s7); dump();
sha1h(s31, s7); dump();
sha1h(s7, s7); dump();
sha1h(s7, s0); dump();
sha1h(s7, s1); dump();
sha1h(s7, s2); dump();
sha1h(s7, s4); dump();
sha1h(s7, s8); dump();
sha1h(s7, s16); dump();
sha1h(s7, s31); dump();
//DataProcSimd_CryptographicExtension3:0
sha1su0(v7.s4, v7.s4, v7.s4); dump();
sha1su0(v0.s4, v7.s4, v7.s4); dump();
sha1su0(v1.s4, v7.s4, v7.s4); dump();
sha1su0(v2.s4, v7.s4, v7.s4); dump();
sha1su0(v4.s4, v7.s4, v7.s4); dump();
sha1su0(v8.s4, v7.s4, v7.s4); dump();
sha1su0(v16.s4, v7.s4, v7.s4); dump();
sha1su0(v31.s4, v7.s4, v7.s4); dump();
sha1su0(v7.s4, v7.s4, v7.s4); dump();
sha1su0(v7.s4, v0.s4, v7.s4); dump();
sha1su0(v7.s4, v1.s4, v7.s4); dump();
sha1su0(v7.s4, v2.s4, v7.s4); dump();
sha1su0(v7.s4, v4.s4, v7.s4); dump();
sha1su0(v7.s4, v8.s4, v7.s4); dump();
sha1su0(v7.s4, v16.s4, v7.s4); dump();
sha1su0(v7.s4, v31.s4, v7.s4); dump();
sha1su0(v7.s4, v7.s4, v7.s4); dump();
sha1su0(v7.s4, v7.s4, v0.s4); dump();
sha1su0(v7.s4, v7.s4, v1.s4); dump();
sha1su0(v7.s4, v7.s4, v2.s4); dump();
sha1su0(v7.s4, v7.s4, v4.s4); dump();
sha1su0(v7.s4, v7.s4, v8.s4); dump();
sha1su0(v7.s4, v7.s4, v16.s4); dump();
sha1su0(v7.s4, v7.s4, v31.s4); dump();
sha256su1(v7.s4, v7.s4, v7.s4); dump();
sha256su1(v0.s4, v7.s4, v7.s4); dump();
sha256su1(v1.s4, v7.s4, v7.s4); dump();
sha256su1(v2.s4, v7.s4, v7.s4); dump();
sha256su1(v4.s4, v7.s4, v7.s4); dump();
sha256su1(v8.s4, v7.s4, v7.s4); dump();
sha256su1(v16.s4, v7.s4, v7.s4); dump();
sha256su1(v31.s4, v7.s4, v7.s4); dump();
sha256su1(v7.s4, v7.s4, v7.s4); dump();
sha256su1(v7.s4, v0.s4, v7.s4); dump();
sha256su1(v7.s4, v1.s4, v7.s4); dump();
sha256su1(v7.s4, v2.s4, v7.s4); dump();
sha256su1(v7.s4, v4.s4, v7.s4); dump();
sha256su1(v7.s4, v8.s4, v7.s4); dump();
sha256su1(v7.s4, v16.s4, v7.s4); dump();
sha256su1(v7.s4, v31.s4, v7.s4); dump();
sha256su1(v7.s4, v7.s4, v7.s4); dump();
sha256su1(v7.s4, v7.s4, v0.s4); dump();
sha256su1(v7.s4, v7.s4, v1.s4); dump();
sha256su1(v7.s4, v7.s4, v2.s4); dump();
sha256su1(v7.s4, v7.s4, v4.s4); dump();
sha256su1(v7.s4, v7.s4, v8.s4); dump();
sha256su1(v7.s4, v7.s4, v16.s4); dump();
sha256su1(v7.s4, v7.s4, v31.s4); dump();
sm3partw1(v7.s4, v7.s4, v7.s4); dump();
sm3partw1(v0.s4, v7.s4, v7.s4); dump();
sm3partw1(v1.s4, v7.s4, v7.s4); dump();
sm3partw1(v2.s4, v7.s4, v7.s4); dump();
sm3partw1(v4.s4, v7.s4, v7.s4); dump();
sm3partw1(v8.s4, v7.s4, v7.s4); dump();
sm3partw1(v16.s4, v7.s4, v7.s4); dump();
sm3partw1(v31.s4, v7.s4, v7.s4); dump();
sm3partw1(v7.s4, v7.s4, v7.s4); dump();
sm3partw1(v7.s4, v0.s4, v7.s4); dump();
sm3partw1(v7.s4, v1.s4, v7.s4); dump();
sm3partw1(v7.s4, v2.s4, v7.s4); dump();
sm3partw1(v7.s4, v4.s4, v7.s4); dump();
sm3partw1(v7.s4, v8.s4, v7.s4); dump();
sm3partw1(v7.s4, v16.s4, v7.s4); dump();
sm3partw1(v7.s4, v31.s4, v7.s4); dump();
sm3partw1(v7.s4, v7.s4, v7.s4); dump();
sm3partw1(v7.s4, v7.s4, v0.s4); dump();
sm3partw1(v7.s4, v7.s4, v1.s4); dump();
sm3partw1(v7.s4, v7.s4, v2.s4); dump();
sm3partw1(v7.s4, v7.s4, v4.s4); dump();
sm3partw1(v7.s4, v7.s4, v8.s4); dump();
sm3partw1(v7.s4, v7.s4, v16.s4); dump();
sm3partw1(v7.s4, v7.s4, v31.s4); dump();
sm3partw2(v7.s4, v7.s4, v7.s4); dump();
sm3partw2(v0.s4, v7.s4, v7.s4); dump();
sm3partw2(v1.s4, v7.s4, v7.s4); dump();
sm3partw2(v2.s4, v7.s4, v7.s4); dump();
sm3partw2(v4.s4, v7.s4, v7.s4); dump();
sm3partw2(v8.s4, v7.s4, v7.s4); dump();
sm3partw2(v16.s4, v7.s4, v7.s4); dump();
sm3partw2(v31.s4, v7.s4, v7.s4); dump();
sm3partw2(v7.s4, v7.s4, v7.s4); dump();
sm3partw2(v7.s4, v0.s4, v7.s4); dump();
sm3partw2(v7.s4, v1.s4, v7.s4); dump();
sm3partw2(v7.s4, v2.s4, v7.s4); dump();
sm3partw2(v7.s4, v4.s4, v7.s4); dump();
sm3partw2(v7.s4, v8.s4, v7.s4); dump();
sm3partw2(v7.s4, v16.s4, v7.s4); dump();
sm3partw2(v7.s4, v31.s4, v7.s4); dump();
sm3partw2(v7.s4, v7.s4, v7.s4); dump();
sm3partw2(v7.s4, v7.s4, v0.s4); dump();
sm3partw2(v7.s4, v7.s4, v1.s4); dump();
sm3partw2(v7.s4, v7.s4, v2.s4); dump();
sm3partw2(v7.s4, v7.s4, v4.s4); dump();
sm3partw2(v7.s4, v7.s4, v8.s4); dump();
sm3partw2(v7.s4, v7.s4, v16.s4); dump();
sm3partw2(v7.s4, v7.s4, v31.s4); dump();
//DataProcSimd_CryptographicExtension4:0
sha1su1(v7.s4, v7.s4); dump();
sha1su1(v0.s4, v7.s4); dump();
sha1su1(v1.s4, v7.s4); dump();
sha1su1(v2.s4, v7.s4); dump();
sha1su1(v4.s4, v7.s4); dump();
sha1su1(v8.s4, v7.s4); dump();
sha1su1(v16.s4, v7.s4); dump();
sha1su1(v31.s4, v7.s4); dump();
sha1su1(v7.s4, v7.s4); dump();
sha1su1(v7.s4, v0.s4); dump();
sha1su1(v7.s4, v1.s4); dump();
sha1su1(v7.s4, v2.s4); dump();
sha1su1(v7.s4, v4.s4); dump();
sha1su1(v7.s4, v8.s4); dump();
sha1su1(v7.s4, v16.s4); dump();
sha1su1(v7.s4, v31.s4); dump();
sha256su0(v7.s4, v7.s4); dump();
sha256su0(v0.s4, v7.s4); dump();
sha256su0(v1.s4, v7.s4); dump();
sha256su0(v2.s4, v7.s4); dump();
sha256su0(v4.s4, v7.s4); dump();
sha256su0(v8.s4, v7.s4); dump();
sha256su0(v16.s4, v7.s4); dump();
sha256su0(v31.s4, v7.s4); dump();
sha256su0(v7.s4, v7.s4); dump();
sha256su0(v7.s4, v0.s4); dump();
sha256su0(v7.s4, v1.s4); dump();
sha256su0(v7.s4, v2.s4); dump();
sha256su0(v7.s4, v4.s4); dump();
sha256su0(v7.s4, v8.s4); dump();
sha256su0(v7.s4, v16.s4); dump();
sha256su0(v7.s4, v31.s4); dump();
//DataProcSimd_CryptographicExtension5:0
sha256h(q7, q7, v7.s4); dump();
sha256h(q0, q7, v7.s4); dump();
sha256h(q1, q7, v7.s4); dump();
sha256h(q2, q7, v7.s4); dump();
sha256h(q4, q7, v7.s4); dump();
sha256h(q8, q7, v7.s4); dump();
sha256h(q16, q7, v7.s4); dump();
sha256h(q31, q7, v7.s4); dump();
sha256h(q7, q7, v7.s4); dump();
sha256h(q7, q0, v7.s4); dump();
sha256h(q7, q1, v7.s4); dump();
sha256h(q7, q2, v7.s4); dump();
sha256h(q7, q4, v7.s4); dump();
sha256h(q7, q8, v7.s4); dump();
sha256h(q7, q16, v7.s4); dump();
sha256h(q7, q31, v7.s4); dump();
sha256h(q7, q7, v7.s4); dump();
sha256h(q7, q7, v0.s4); dump();
sha256h(q7, q7, v1.s4); dump();
sha256h(q7, q7, v2.s4); dump();
sha256h(q7, q7, v4.s4); dump();
sha256h(q7, q7, v8.s4); dump();
sha256h(q7, q7, v16.s4); dump();
sha256h(q7, q7, v31.s4); dump();
sha256h2(q7, q7, v7.s4); dump();
sha256h2(q0, q7, v7.s4); dump();
sha256h2(q1, q7, v7.s4); dump();
sha256h2(q2, q7, v7.s4); dump();
sha256h2(q4, q7, v7.s4); dump();
sha256h2(q8, q7, v7.s4); dump();
sha256h2(q16, q7, v7.s4); dump();
sha256h2(q31, q7, v7.s4); dump();
sha256h2(q7, q7, v7.s4); dump();
sha256h2(q7, q0, v7.s4); dump();
sha256h2(q7, q1, v7.s4); dump();
sha256h2(q7, q2, v7.s4); dump();
sha256h2(q7, q4, v7.s4); dump();
sha256h2(q7, q8, v7.s4); dump();
sha256h2(q7, q16, v7.s4); dump();
sha256h2(q7, q31, v7.s4); dump();
sha256h2(q7, q7, v7.s4); dump();
sha256h2(q7, q7, v0.s4); dump();
sha256h2(q7, q7, v1.s4); dump();
sha256h2(q7, q7, v2.s4); dump();
sha256h2(q7, q7, v4.s4); dump();
sha256h2(q7, q7, v8.s4); dump();
sha256h2(q7, q7, v16.s4); dump();
sha256h2(q7, q7, v31.s4); dump();
//DataProcSimd_CryptographicExtension6:0
sha512h(q7, q7, v7.d2); dump();
sha512h(q0, q7, v7.d2); dump();
sha512h(q1, q7, v7.d2); dump();
sha512h(q2, q7, v7.d2); dump();
sha512h(q4, q7, v7.d2); dump();
sha512h(q8, q7, v7.d2); dump();
sha512h(q16, q7, v7.d2); dump();
sha512h(q31, q7, v7.d2); dump();
sha512h(q7, q7, v7.d2); dump();
sha512h(q7, q0, v7.d2); dump();
sha512h(q7, q1, v7.d2); dump();
sha512h(q7, q2, v7.d2); dump();
sha512h(q7, q4, v7.d2); dump();
sha512h(q7, q8, v7.d2); dump();
sha512h(q7, q16, v7.d2); dump();
sha512h(q7, q31, v7.d2); dump();
sha512h(q7, q7, v7.d2); dump();
sha512h(q7, q7, v0.d2); dump();
sha512h(q7, q7, v1.d2); dump();
sha512h(q7, q7, v2.d2); dump();
sha512h(q7, q7, v4.d2); dump();
sha512h(q7, q7, v8.d2); dump();
sha512h(q7, q7, v16.d2); dump();
sha512h(q7, q7, v31.d2); dump();
sha512h2(q7, q7, v7.d2); dump();
sha512h2(q0, q7, v7.d2); dump();
sha512h2(q1, q7, v7.d2); dump();
sha512h2(q2, q7, v7.d2); dump();
sha512h2(q4, q7, v7.d2); dump();
sha512h2(q8, q7, v7.d2); dump();
sha512h2(q16, q7, v7.d2); dump();
sha512h2(q31, q7, v7.d2); dump();
sha512h2(q7, q7, v7.d2); dump();
sha512h2(q7, q0, v7.d2); dump();
sha512h2(q7, q1, v7.d2); dump();
sha512h2(q7, q2, v7.d2); dump();
sha512h2(q7, q4, v7.d2); dump();
sha512h2(q7, q8, v7.d2); dump();
sha512h2(q7, q16, v7.d2); dump();
sha512h2(q7, q31, v7.d2); dump();
sha512h2(q7, q7, v7.d2); dump();
sha512h2(q7, q7, v0.d2); dump();
sha512h2(q7, q7, v1.d2); dump();
sha512h2(q7, q7, v2.d2); dump();
sha512h2(q7, q7, v4.d2); dump();
sha512h2(q7, q7, v8.d2); dump();
sha512h2(q7, q7, v16.d2); dump();
sha512h2(q7, q7, v31.d2); dump();
//DataProcSimd_CryptographicExtension7:0
sha512su0(v7.d2, v7.d2); dump();
sha512su0(v0.d2, v7.d2); dump();
sha512su0(v1.d2, v7.d2); dump();
sha512su0(v2.d2, v7.d2); dump();
sha512su0(v4.d2, v7.d2); dump();
sha512su0(v8.d2, v7.d2); dump();
sha512su0(v16.d2, v7.d2); dump();
sha512su0(v31.d2, v7.d2); dump();
sha512su0(v7.d2, v7.d2); dump();
sha512su0(v7.d2, v0.d2); dump();
sha512su0(v7.d2, v1.d2); dump();
sha512su0(v7.d2, v2.d2); dump();
sha512su0(v7.d2, v4.d2); dump();
sha512su0(v7.d2, v8.d2); dump();
sha512su0(v7.d2, v16.d2); dump();
sha512su0(v7.d2, v31.d2); dump();
//DataProcSimd_CryptographicExtension8:0
sha512su1(v7.d2, v7.d2, v7.d2); dump();
sha512su1(v0.d2, v7.d2, v7.d2); dump();
sha512su1(v1.d2, v7.d2, v7.d2); dump();
sha512su1(v2.d2, v7.d2, v7.d2); dump();
sha512su1(v4.d2, v7.d2, v7.d2); dump();
sha512su1(v8.d2, v7.d2, v7.d2); dump();
sha512su1(v16.d2, v7.d2, v7.d2); dump();
sha512su1(v31.d2, v7.d2, v7.d2); dump();
sha512su1(v7.d2, v7.d2, v7.d2); dump();
sha512su1(v7.d2, v0.d2, v7.d2); dump();
sha512su1(v7.d2, v1.d2, v7.d2); dump();
sha512su1(v7.d2, v2.d2, v7.d2); dump();
sha512su1(v7.d2, v4.d2, v7.d2); dump();
sha512su1(v7.d2, v8.d2, v7.d2); dump();
sha512su1(v7.d2, v16.d2, v7.d2); dump();
sha512su1(v7.d2, v31.d2, v7.d2); dump();
sha512su1(v7.d2, v7.d2, v7.d2); dump();
sha512su1(v7.d2, v7.d2, v0.d2); dump();
sha512su1(v7.d2, v7.d2, v1.d2); dump();
sha512su1(v7.d2, v7.d2, v2.d2); dump();
sha512su1(v7.d2, v7.d2, v4.d2); dump();
sha512su1(v7.d2, v7.d2, v8.d2); dump();
sha512su1(v7.d2, v7.d2, v16.d2); dump();
sha512su1(v7.d2, v7.d2, v31.d2); dump();
//DataProcSimd_CryptographicExtension9:0
eor3(v7.b16, v7.b16, v7.b16, v7.b16); dump();
eor3(v0.b16, v7.b16, v7.b16, v7.b16); dump();
eor3(v1.b16, v7.b16, v7.b16, v7.b16); dump();
eor3(v2.b16, v7.b16, v7.b16, v7.b16); dump();
eor3(v4.b16, v7.b16, v7.b16, v7.b16); dump();
eor3(v8.b16, v7.b16, v7.b16, v7.b16); dump();
eor3(v16.b16, v7.b16, v7.b16, v7.b16); dump();
eor3(v31.b16, v7.b16, v7.b16, v7.b16); dump();
eor3(v7.b16, v7.b16, v7.b16, v7.b16); dump();
eor3(v7.b16, v0.b16, v7.b16, v7.b16); dump();
eor3(v7.b16, v1.b16, v7.b16, v7.b16); dump();
eor3(v7.b16, v2.b16, v7.b16, v7.b16); dump();
eor3(v7.b16, v4.b16, v7.b16, v7.b16); dump();
eor3(v7.b16, v8.b16, v7.b16, v7.b16); dump();
eor3(v7.b16, v16.b16, v7.b16, v7.b16); dump();
eor3(v7.b16, v31.b16, v7.b16, v7.b16); dump();
eor3(v7.b16, v7.b16, v7.b16, v7.b16); dump();
eor3(v7.b16, v7.b16, v0.b16, v7.b16); dump();
eor3(v7.b16, v7.b16, v1.b16, v7.b16); dump();
eor3(v7.b16, v7.b16, v2.b16, v7.b16); dump();
eor3(v7.b16, v7.b16, v4.b16, v7.b16); dump();
eor3(v7.b16, v7.b16, v8.b16, v7.b16); dump();
eor3(v7.b16, v7.b16, v16.b16, v7.b16); dump();
eor3(v7.b16, v7.b16, v31.b16, v7.b16); dump();
eor3(v7.b16, v7.b16, v7.b16, v7.b16); dump();
eor3(v7.b16, v7.b16, v7.b16, v0.b16); dump();
eor3(v7.b16, v7.b16, v7.b16, v1.b16); dump();
eor3(v7.b16, v7.b16, v7.b16, v2.b16); dump();
eor3(v7.b16, v7.b16, v7.b16, v4.b16); dump();
eor3(v7.b16, v7.b16, v7.b16, v8.b16); dump();
eor3(v7.b16, v7.b16, v7.b16, v16.b16); dump();
eor3(v7.b16, v7.b16, v7.b16, v31.b16); dump();
bcax(v7.b16, v7.b16, v7.b16, v7.b16); dump();
bcax(v0.b16, v7.b16, v7.b16, v7.b16); dump();
bcax(v1.b16, v7.b16, v7.b16, v7.b16); dump();
bcax(v2.b16, v7.b16, v7.b16, v7.b16); dump();
bcax(v4.b16, v7.b16, v7.b16, v7.b16); dump();
bcax(v8.b16, v7.b16, v7.b16, v7.b16); dump();
bcax(v16.b16, v7.b16, v7.b16, v7.b16); dump();
bcax(v31.b16, v7.b16, v7.b16, v7.b16); dump();
bcax(v7.b16, v7.b16, v7.b16, v7.b16); dump();
bcax(v7.b16, v0.b16, v7.b16, v7.b16); dump();
bcax(v7.b16, v1.b16, v7.b16, v7.b16); dump();
bcax(v7.b16, v2.b16, v7.b16, v7.b16); dump();
bcax(v7.b16, v4.b16, v7.b16, v7.b16); dump();
bcax(v7.b16, v8.b16, v7.b16, v7.b16); dump();
bcax(v7.b16, v16.b16, v7.b16, v7.b16); dump();
bcax(v7.b16, v31.b16, v7.b16, v7.b16); dump();
bcax(v7.b16, v7.b16, v7.b16, v7.b16); dump();
bcax(v7.b16, v7.b16, v0.b16, v7.b16); dump();
bcax(v7.b16, v7.b16, v1.b16, v7.b16); dump();
bcax(v7.b16, v7.b16, v2.b16, v7.b16); dump();
bcax(v7.b16, v7.b16, v4.b16, v7.b16); dump();
bcax(v7.b16, v7.b16, v8.b16, v7.b16); dump();
bcax(v7.b16, v7.b16, v16.b16, v7.b16); dump();
bcax(v7.b16, v7.b16, v31.b16, v7.b16); dump();
bcax(v7.b16, v7.b16, v7.b16, v7.b16); dump();
bcax(v7.b16, v7.b16, v7.b16, v0.b16); dump();
bcax(v7.b16, v7.b16, v7.b16, v1.b16); dump();
bcax(v7.b16, v7.b16, v7.b16, v2.b16); dump();
bcax(v7.b16, v7.b16, v7.b16, v4.b16); dump();
bcax(v7.b16, v7.b16, v7.b16, v8.b16); dump();
bcax(v7.b16, v7.b16, v7.b16, v16.b16); dump();
bcax(v7.b16, v7.b16, v7.b16, v31.b16); dump();
//DataProcSimd_CryptographicExtension10:0
rax1(v7.d2, v7.d2, v7.d2); dump();
rax1(v0.d2, v7.d2, v7.d2); dump();
rax1(v1.d2, v7.d2, v7.d2); dump();
rax1(v2.d2, v7.d2, v7.d2); dump();
rax1(v4.d2, v7.d2, v7.d2); dump();
rax1(v8.d2, v7.d2, v7.d2); dump();
rax1(v16.d2, v7.d2, v7.d2); dump();
rax1(v31.d2, v7.d2, v7.d2); dump();
rax1(v7.d2, v7.d2, v7.d2); dump();
rax1(v7.d2, v0.d2, v7.d2); dump();
rax1(v7.d2, v1.d2, v7.d2); dump();
rax1(v7.d2, v2.d2, v7.d2); dump();
rax1(v7.d2, v4.d2, v7.d2); dump();
rax1(v7.d2, v8.d2, v7.d2); dump();
rax1(v7.d2, v16.d2, v7.d2); dump();
rax1(v7.d2, v31.d2, v7.d2); dump();
rax1(v7.d2, v7.d2, v7.d2); dump();
rax1(v7.d2, v7.d2, v0.d2); dump();
rax1(v7.d2, v7.d2, v1.d2); dump();
rax1(v7.d2, v7.d2, v2.d2); dump();
rax1(v7.d2, v7.d2, v4.d2); dump();
rax1(v7.d2, v7.d2, v8.d2); dump();
rax1(v7.d2, v7.d2, v16.d2); dump();
rax1(v7.d2, v7.d2, v31.d2); dump();
//DataProcSimd_CryptographicExtension11:0
xar(v7.d2, v7.d2, v7.d2, 0x39); dump();
xar(v0.d2, v7.d2, v7.d2, 0x39); dump();
xar(v1.d2, v7.d2, v7.d2, 0x39); dump();
xar(v2.d2, v7.d2, v7.d2, 0x39); dump();
xar(v4.d2, v7.d2, v7.d2, 0x39); dump();
xar(v8.d2, v7.d2, v7.d2, 0x39); dump();
xar(v16.d2, v7.d2, v7.d2, 0x39); dump();
xar(v31.d2, v7.d2, v7.d2, 0x39); dump();
xar(v7.d2, v7.d2, v7.d2, 0x39); dump();
xar(v7.d2, v0.d2, v7.d2, 0x39); dump();
xar(v7.d2, v1.d2, v7.d2, 0x39); dump();
xar(v7.d2, v2.d2, v7.d2, 0x39); dump();
xar(v7.d2, v4.d2, v7.d2, 0x39); dump();
xar(v7.d2, v8.d2, v7.d2, 0x39); dump();
xar(v7.d2, v16.d2, v7.d2, 0x39); dump();
xar(v7.d2, v31.d2, v7.d2, 0x39); dump();
xar(v7.d2, v7.d2, v7.d2, 0x39); dump();
xar(v7.d2, v7.d2, v0.d2, 0x39); dump();
xar(v7.d2, v7.d2, v1.d2, 0x39); dump();
xar(v7.d2, v7.d2, v2.d2, 0x39); dump();
xar(v7.d2, v7.d2, v4.d2, 0x39); dump();
xar(v7.d2, v7.d2, v8.d2, 0x39); dump();
xar(v7.d2, v7.d2, v16.d2, 0x39); dump();
xar(v7.d2, v7.d2, v31.d2, 0x39); dump();
xar(v7.d2, v7.d2, v7.d2, 0x39); dump();
xar(v7.d2, v7.d2, v7.d2, 0); dump();
xar(v7.d2, v7.d2, v7.d2, 1); dump();
xar(v7.d2, v7.d2, v7.d2, 2); dump();
xar(v7.d2, v7.d2, v7.d2, 4); dump();
xar(v7.d2, v7.d2, v7.d2, 8); dump();
xar(v7.d2, v7.d2, v7.d2, 16); dump();
xar(v7.d2, v7.d2, v7.d2, 32); dump();
xar(v7.d2, v7.d2, v7.d2, 63); dump();
//DataProcSimd_CryptographicExtension12:0
sm3ss1(v7.s4, v7.s4, v7.s4, v7.s4); dump();
sm3ss1(v0.s4, v7.s4, v7.s4, v7.s4); dump();
sm3ss1(v1.s4, v7.s4, v7.s4, v7.s4); dump();
sm3ss1(v2.s4, v7.s4, v7.s4, v7.s4); dump();
sm3ss1(v4.s4, v7.s4, v7.s4, v7.s4); dump();
sm3ss1(v8.s4, v7.s4, v7.s4, v7.s4); dump();
sm3ss1(v16.s4, v7.s4, v7.s4, v7.s4); dump();
sm3ss1(v31.s4, v7.s4, v7.s4, v7.s4); dump();
sm3ss1(v7.s4, v7.s4, v7.s4, v7.s4); dump();
sm3ss1(v7.s4, v0.s4, v7.s4, v7.s4); dump();
sm3ss1(v7.s4, v1.s4, v7.s4, v7.s4); dump();
sm3ss1(v7.s4, v2.s4, v7.s4, v7.s4); dump();
sm3ss1(v7.s4, v4.s4, v7.s4, v7.s4); dump();
sm3ss1(v7.s4, v8.s4, v7.s4, v7.s4); dump();
sm3ss1(v7.s4, v16.s4, v7.s4, v7.s4); dump();
sm3ss1(v7.s4, v31.s4, v7.s4, v7.s4); dump();
sm3ss1(v7.s4, v7.s4, v7.s4, v7.s4); dump();
sm3ss1(v7.s4, v7.s4, v0.s4, v7.s4); dump();
sm3ss1(v7.s4, v7.s4, v1.s4, v7.s4); dump();
sm3ss1(v7.s4, v7.s4, v2.s4, v7.s4); dump();
sm3ss1(v7.s4, v7.s4, v4.s4, v7.s4); dump();
sm3ss1(v7.s4, v7.s4, v8.s4, v7.s4); dump();
sm3ss1(v7.s4, v7.s4, v16.s4, v7.s4); dump();
sm3ss1(v7.s4, v7.s4, v31.s4, v7.s4); dump();
sm3ss1(v7.s4, v7.s4, v7.s4, v7.s4); dump();
sm3ss1(v7.s4, v7.s4, v7.s4, v0.s4); dump();
sm3ss1(v7.s4, v7.s4, v7.s4, v1.s4); dump();
sm3ss1(v7.s4, v7.s4, v7.s4, v2.s4); dump();
sm3ss1(v7.s4, v7.s4, v7.s4, v4.s4); dump();
sm3ss1(v7.s4, v7.s4, v7.s4, v8.s4); dump();
sm3ss1(v7.s4, v7.s4, v7.s4, v16.s4); dump();
sm3ss1(v7.s4, v7.s4, v7.s4, v31.s4); dump();
//DataProcSimd_CryptographicExtension13:0
sm3tt1a(v7.s4, v7.s4, v7.s4[3]); dump();
sm3tt1a(v0.s4, v7.s4, v7.s4[3]); dump();
sm3tt1a(v1.s4, v7.s4, v7.s4[3]); dump();
sm3tt1a(v2.s4, v7.s4, v7.s4[3]); dump();
sm3tt1a(v4.s4, v7.s4, v7.s4[3]); dump();
sm3tt1a(v8.s4, v7.s4, v7.s4[3]); dump();
sm3tt1a(v16.s4, v7.s4, v7.s4[3]); dump();
sm3tt1a(v31.s4, v7.s4, v7.s4[3]); dump();
sm3tt1a(v7.s4, v7.s4, v7.s4[3]); dump();
sm3tt1a(v7.s4, v0.s4, v7.s4[3]); dump();
sm3tt1a(v7.s4, v1.s4, v7.s4[3]); dump();
sm3tt1a(v7.s4, v2.s4, v7.s4[3]); dump();
sm3tt1a(v7.s4, v4.s4, v7.s4[3]); dump();
sm3tt1a(v7.s4, v8.s4, v7.s4[3]); dump();
sm3tt1a(v7.s4, v16.s4, v7.s4[3]); dump();
sm3tt1a(v7.s4, v31.s4, v7.s4[3]); dump();
sm3tt1a(v7.s4, v7.s4, v7.s4[3]); dump();
sm3tt1a(v7.s4, v7.s4, v7s4_3); dump();
sm3tt1a(v7.s4, v7.s4, v0.s4[3]); dump();
sm3tt1a(v7.s4, v7.s4, v0s4_3); dump();
sm3tt1a(v7.s4, v7.s4, v1.s4[3]); dump();
sm3tt1a(v7.s4, v7.s4, v1s4_3); dump();
sm3tt1a(v7.s4, v7.s4, v2.s4[3]); dump();
sm3tt1a(v7.s4, v7.s4, v2s4_3); dump();
sm3tt1a(v7.s4, v7.s4, v4.s4[3]); dump();
sm3tt1a(v7.s4, v7.s4, v4s4_3); dump();
sm3tt1a(v7.s4, v7.s4, v8.s4[3]); dump();
sm3tt1a(v7.s4, v7.s4, v8s4_3); dump();
sm3tt1a(v7.s4, v7.s4, v16.s4[3]); dump();
sm3tt1a(v7.s4, v7.s4, v16s4_3); dump();
sm3tt1a(v7.s4, v7.s4, v31.s4[3]); dump();
sm3tt1a(v7.s4, v7.s4, v31s4_3); dump();
sm3tt1a(v7.s4, v7.s4, v7.s4[0]); dump();
sm3tt1a(v7.s4, v7.s4, v7s4_0); dump();
sm3tt1a(v7.s4, v7.s4, v7.s4[1]); dump();
sm3tt1a(v7.s4, v7.s4, v7s4_1); dump();
sm3tt1a(v7.s4, v7.s4, v7.s4[2]); dump();
sm3tt1a(v7.s4, v7.s4, v7s4_2); dump();
sm3tt1b(v7.s4, v7.s4, v7.s4[3]); dump();
sm3tt1b(v0.s4, v7.s4, v7.s4[3]); dump();
sm3tt1b(v1.s4, v7.s4, v7.s4[3]); dump();
sm3tt1b(v2.s4, v7.s4, v7.s4[3]); dump();
sm3tt1b(v4.s4, v7.s4, v7.s4[3]); dump();
sm3tt1b(v8.s4, v7.s4, v7.s4[3]); dump();
sm3tt1b(v16.s4, v7.s4, v7.s4[3]); dump();
sm3tt1b(v31.s4, v7.s4, v7.s4[3]); dump();
sm3tt1b(v7.s4, v7.s4, v7.s4[3]); dump();
sm3tt1b(v7.s4, v0.s4, v7.s4[3]); dump();
sm3tt1b(v7.s4, v1.s4, v7.s4[3]); dump();
sm3tt1b(v7.s4, v2.s4, v7.s4[3]); dump();
sm3tt1b(v7.s4, v4.s4, v7.s4[3]); dump();
sm3tt1b(v7.s4, v8.s4, v7.s4[3]); dump();
sm3tt1b(v7.s4, v16.s4, v7.s4[3]); dump();
sm3tt1b(v7.s4, v31.s4, v7.s4[3]); dump();
sm3tt1b(v7.s4, v7.s4, v7.s4[3]); dump();
sm3tt1b(v7.s4, v7.s4, v7s4_3); dump();
sm3tt1b(v7.s4, v7.s4, v0.s4[3]); dump();
sm3tt1b(v7.s4, v7.s4, v0s4_3); dump();
sm3tt1b(v7.s4, v7.s4, v1.s4[3]); dump();
sm3tt1b(v7.s4, v7.s4, v1s4_3); dump();
sm3tt1b(v7.s4, v7.s4, v2.s4[3]); dump();
sm3tt1b(v7.s4, v7.s4, v2s4_3); dump();
sm3tt1b(v7.s4, v7.s4, v4.s4[3]); dump();
sm3tt1b(v7.s4, v7.s4, v4s4_3); dump();
sm3tt1b(v7.s4, v7.s4, v8.s4[3]); dump();
sm3tt1b(v7.s4, v7.s4, v8s4_3); dump();
sm3tt1b(v7.s4, v7.s4, v16.s4[3]); dump();
sm3tt1b(v7.s4, v7.s4, v16s4_3); dump();
sm3tt1b(v7.s4, v7.s4, v31.s4[3]); dump();
sm3tt1b(v7.s4, v7.s4, v31s4_3); dump();
sm3tt1b(v7.s4, v7.s4, v7.s4[0]); dump();
sm3tt1b(v7.s4, v7.s4, v7s4_0); dump();
sm3tt1b(v7.s4, v7.s4, v7.s4[1]); dump();
sm3tt1b(v7.s4, v7.s4, v7s4_1); dump();
sm3tt1b(v7.s4, v7.s4, v7.s4[2]); dump();
sm3tt1b(v7.s4, v7.s4, v7s4_2); dump();
sm3tt2a(v7.s4, v7.s4, v7.s4[3]); dump();
sm3tt2a(v0.s4, v7.s4, v7.s4[3]); dump();
sm3tt2a(v1.s4, v7.s4, v7.s4[3]); dump();
sm3tt2a(v2.s4, v7.s4, v7.s4[3]); dump();
sm3tt2a(v4.s4, v7.s4, v7.s4[3]); dump();
sm3tt2a(v8.s4, v7.s4, v7.s4[3]); dump();
sm3tt2a(v16.s4, v7.s4, v7.s4[3]); dump();
sm3tt2a(v31.s4, v7.s4, v7.s4[3]); dump();
sm3tt2a(v7.s4, v7.s4, v7.s4[3]); dump();
sm3tt2a(v7.s4, v0.s4, v7.s4[3]); dump();
sm3tt2a(v7.s4, v1.s4, v7.s4[3]); dump();
sm3tt2a(v7.s4, v2.s4, v7.s4[3]); dump();
sm3tt2a(v7.s4, v4.s4, v7.s4[3]); dump();
sm3tt2a(v7.s4, v8.s4, v7.s4[3]); dump();
sm3tt2a(v7.s4, v16.s4, v7.s4[3]); dump();
sm3tt2a(v7.s4, v31.s4, v7.s4[3]); dump();
sm3tt2a(v7.s4, v7.s4, v7.s4[3]); dump();
sm3tt2a(v7.s4, v7.s4, v7s4_3); dump();
sm3tt2a(v7.s4, v7.s4, v0.s4[3]); dump();
sm3tt2a(v7.s4, v7.s4, v0s4_3); dump();
sm3tt2a(v7.s4, v7.s4, v1.s4[3]); dump();
sm3tt2a(v7.s4, v7.s4, v1s4_3); dump();
sm3tt2a(v7.s4, v7.s4, v2.s4[3]); dump();
sm3tt2a(v7.s4, v7.s4, v2s4_3); dump();
sm3tt2a(v7.s4, v7.s4, v4.s4[3]); dump();
sm3tt2a(v7.s4, v7.s4, v4s4_3); dump();
sm3tt2a(v7.s4, v7.s4, v8.s4[3]); dump();
sm3tt2a(v7.s4, v7.s4, v8s4_3); dump();
sm3tt2a(v7.s4, v7.s4, v16.s4[3]); dump();
sm3tt2a(v7.s4, v7.s4, v16s4_3); dump();
sm3tt2a(v7.s4, v7.s4, v31.s4[3]); dump();
sm3tt2a(v7.s4, v7.s4, v31s4_3); dump();
sm3tt2a(v7.s4, v7.s4, v7.s4[0]); dump();
sm3tt2a(v7.s4, v7.s4, v7s4_0); dump();
sm3tt2a(v7.s4, v7.s4, v7.s4[1]); dump();
sm3tt2a(v7.s4, v7.s4, v7s4_1); dump();
sm3tt2a(v7.s4, v7.s4, v7.s4[2]); dump();
sm3tt2a(v7.s4, v7.s4, v7s4_2); dump();
sm3tt2b(v7.s4, v7.s4, v7.s4[3]); dump();
sm3tt2b(v0.s4, v7.s4, v7.s4[3]); dump();
sm3tt2b(v1.s4, v7.s4, v7.s4[3]); dump();
sm3tt2b(v2.s4, v7.s4, v7.s4[3]); dump();
sm3tt2b(v4.s4, v7.s4, v7.s4[3]); dump();
sm3tt2b(v8.s4, v7.s4, v7.s4[3]); dump();
sm3tt2b(v16.s4, v7.s4, v7.s4[3]); dump();
sm3tt2b(v31.s4, v7.s4, v7.s4[3]); dump();
sm3tt2b(v7.s4, v7.s4, v7.s4[3]); dump();
sm3tt2b(v7.s4, v0.s4, v7.s4[3]); dump();
sm3tt2b(v7.s4, v1.s4, v7.s4[3]); dump();
sm3tt2b(v7.s4, v2.s4, v7.s4[3]); dump();
sm3tt2b(v7.s4, v4.s4, v7.s4[3]); dump();
sm3tt2b(v7.s4, v8.s4, v7.s4[3]); dump();
sm3tt2b(v7.s4, v16.s4, v7.s4[3]); dump();
sm3tt2b(v7.s4, v31.s4, v7.s4[3]); dump();
sm3tt2b(v7.s4, v7.s4, v7.s4[3]); dump();
sm3tt2b(v7.s4, v7.s4, v7s4_3); dump();
sm3tt2b(v7.s4, v7.s4, v0.s4[3]); dump();
sm3tt2b(v7.s4, v7.s4, v0s4_3); dump();
sm3tt2b(v7.s4, v7.s4, v1.s4[3]); dump();
sm3tt2b(v7.s4, v7.s4, v1s4_3); dump();
sm3tt2b(v7.s4, v7.s4, v2.s4[3]); dump();
sm3tt2b(v7.s4, v7.s4, v2s4_3); dump();
sm3tt2b(v7.s4, v7.s4, v4.s4[3]); dump();
sm3tt2b(v7.s4, v7.s4, v4s4_3); dump();
sm3tt2b(v7.s4, v7.s4, v8.s4[3]); dump();
sm3tt2b(v7.s4, v7.s4, v8s4_3); dump();
sm3tt2b(v7.s4, v7.s4, v16.s4[3]); dump();
sm3tt2b(v7.s4, v7.s4, v16s4_3); dump();
sm3tt2b(v7.s4, v7.s4, v31.s4[3]); dump();
sm3tt2b(v7.s4, v7.s4, v31s4_3); dump();
sm3tt2b(v7.s4, v7.s4, v7.s4[0]); dump();
sm3tt2b(v7.s4, v7.s4, v7s4_0); dump();
sm3tt2b(v7.s4, v7.s4, v7.s4[1]); dump();
sm3tt2b(v7.s4, v7.s4, v7s4_1); dump();
sm3tt2b(v7.s4, v7.s4, v7.s4[2]); dump();
sm3tt2b(v7.s4, v7.s4, v7s4_2); dump();
    }
    void gen()
    {
        gen0();
    }
