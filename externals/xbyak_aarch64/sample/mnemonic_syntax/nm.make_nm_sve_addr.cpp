/*******************************************************************************
 * Copyright 2019 FUJITSU LIMITED 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/
    void gen0()
    {
//SVE_32_bit_gather_load_scalar_plus_32_bit_unscaled_offsets0:0
ld1sb(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z0.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z1.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z2.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z4.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z8.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z16.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z31.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z7.d, p0/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z7.d, p1/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z7.d, p2/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z7.d, p4/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x0, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x1, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x2, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x4, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x8, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x16, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x30, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( sp, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z0.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z1.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z2.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z4.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z8.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z16.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z31.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z7.d, SXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z0.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z1.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z2.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z4.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z8.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z16.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z31.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p0/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p1/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p2/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p4/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x0, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x1, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x2, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x4, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x8, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x16, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x30, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( sp, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z0.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z1.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z2.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z4.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z8.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z16.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z31.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z7.d, SXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z0.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z1.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z2.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z4.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z8.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z16.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z31.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z7.d, p0/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z7.d, p1/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z7.d, p2/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z7.d, p4/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x0, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x1, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x2, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x4, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x8, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x16, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x30, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( sp, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z0.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z1.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z2.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z4.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z8.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z16.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z31.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z7.d, SXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z0.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z1.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z2.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z4.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z8.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z16.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z31.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z7.d, p0/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z7.d, p1/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z7.d, p2/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z7.d, p4/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x0, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x1, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x2, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x4, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x8, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x16, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x30, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( sp, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z0.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z1.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z2.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z4.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z8.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z16.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z31.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z7.d, SXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
//SVE_32_bit_gather_load_scalar_plus_32_bit_unscaled_offsets1:0
ld1sb(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sb(z0.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sb(z1.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sb(z2.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sb(z4.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sb(z8.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sb(z16.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sb(z31.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sb(z7.s, p0/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sb(z7.s, p1/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sb(z7.s, p2/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sb(z7.s, p4/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x0, z7.s, UXT ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x1, z7.s, UXT ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x2, z7.s, UXT ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x4, z7.s, UXT ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x8, z7.s, UXT ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x16, z7.s, UXT ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x30, z7.s, UXT ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( sp, z7.s, UXT ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, z0.s, UXT ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, z1.s, UXT ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, z2.s, UXT ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, z4.s, UXT ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, z8.s, UXT ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, z16.s, UXT ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, z31.s, UXT ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, z7.s, SXT ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sb(z0.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sb(z1.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sb(z2.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sb(z4.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sb(z8.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sb(z16.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sb(z31.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sb(z7.s, p0/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sb(z7.s, p1/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sb(z7.s, p2/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sb(z7.s, p4/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x0, z7.s, UXT ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x1, z7.s, UXT ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x2, z7.s, UXT ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x4, z7.s, UXT ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x8, z7.s, UXT ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x16, z7.s, UXT ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x30, z7.s, UXT ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( sp, z7.s, UXT ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, z0.s, UXT ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, z1.s, UXT ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, z2.s, UXT ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, z4.s, UXT ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, z8.s, UXT ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, z16.s, UXT ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, z31.s, UXT ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, z7.s, SXT ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1b(z0.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1b(z1.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1b(z2.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1b(z4.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1b(z8.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1b(z16.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1b(z31.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1b(z7.s, p0/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1b(z7.s, p1/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1b(z7.s, p2/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1b(z7.s, p4/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x0, z7.s, UXT ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x1, z7.s, UXT ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x2, z7.s, UXT ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x4, z7.s, UXT ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x8, z7.s, UXT ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x16, z7.s, UXT ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x30, z7.s, UXT ) ); dump();
ld1b(z7.s, p7/T_z, ptr( sp, z7.s, UXT ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, z0.s, UXT ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, z1.s, UXT ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, z2.s, UXT ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, z4.s, UXT ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, z8.s, UXT ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, z16.s, UXT ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, z31.s, UXT ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, z7.s, SXT ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1b(z0.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1b(z1.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1b(z2.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1b(z4.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1b(z8.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1b(z16.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1b(z31.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1b(z7.s, p0/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1b(z7.s, p1/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1b(z7.s, p2/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1b(z7.s, p4/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x0, z7.s, UXT ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x1, z7.s, UXT ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x2, z7.s, UXT ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x4, z7.s, UXT ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x8, z7.s, UXT ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x16, z7.s, UXT ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x30, z7.s, UXT ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( sp, z7.s, UXT ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, z0.s, UXT ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, z1.s, UXT ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, z2.s, UXT ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, z4.s, UXT ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, z8.s, UXT ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, z16.s, UXT ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, z31.s, UXT ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, z7.s, SXT ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
//SVE_32_bit_gather_load_scalar_plus_32_bit_unscaled_offsets2:0
ld1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z0.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z1.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z2.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z4.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z8.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z16.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z31.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p0/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p1/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p2/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p4/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x0, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x1, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x2, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x4, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x8, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x16, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x30, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( sp, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z0.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z1.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z2.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z4.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z8.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z16.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z31.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z7.s, SXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z0.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z1.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z2.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z4.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z8.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z16.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z31.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p0/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p1/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p2/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p4/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x0, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x1, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x2, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x4, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x8, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x16, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x30, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( sp, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z0.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z1.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z2.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z4.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z8.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z16.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z31.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z7.s, SXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z0.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z1.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z2.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z4.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z8.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z16.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z31.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p0/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p1/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p2/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p4/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x0, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x1, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x2, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x4, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x8, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x16, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x30, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( sp, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z0.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z1.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z2.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z4.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z8.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z16.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z31.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z7.s, SXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z0.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z1.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z2.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z4.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z8.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z16.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z31.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p0/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p1/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p2/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p4/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x0, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x1, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x2, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x4, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x8, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x16, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x30, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( sp, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z0.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z1.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z2.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z4.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z8.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z16.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z31.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z7.s, SXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
//SVE_32_bit_gather_load_scalar_plus_32_bit_unscaled_offsets3:0
ld1w(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z0.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z1.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z2.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z4.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z8.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z16.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z31.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p0/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p1/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p2/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p4/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x0, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x1, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x2, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x4, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x8, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x16, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x30, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( sp, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z0.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z1.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z2.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z4.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z8.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z16.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z31.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z7.s, SXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z0.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z1.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z2.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z4.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z8.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z16.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z31.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p0/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p1/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p2/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p4/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x0, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x1, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x2, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x4, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x8, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x16, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x30, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( sp, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z0.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z1.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z2.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z4.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z8.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z16.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z31.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z7.s, SXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
//SVE_contiguous_prefetch_scalar_plus_scalar0:0
prfb(PLDL1KEEP_SVE, p7, ptr( x7, x0 ) ); dump();
prfb(PLDL1STRM_SVE, p7, ptr( x7, x0 ) ); dump();
prfb(PLDL2KEEP_SVE, p7, ptr( x7, x0 ) ); dump();
prfb(PLDL2STRM_SVE, p7, ptr( x7, x0 ) ); dump();
prfb(PLDL3KEEP_SVE, p7, ptr( x7, x0 ) ); dump();
prfb(PLDL3STRM_SVE, p7, ptr( x7, x0 ) ); dump();
prfb(PSTL1KEEP_SVE, p7, ptr( x7, x0 ) ); dump();
prfb(PSTL1STRM_SVE, p7, ptr( x7, x0 ) ); dump();
prfb(PSTL2KEEP_SVE, p7, ptr( x7, x0 ) ); dump();
prfb(PSTL2STRM_SVE, p7, ptr( x7, x0 ) ); dump();
prfb(PSTL3KEEP_SVE, p7, ptr( x7, x0 ) ); dump();
prfb(PSTL3STRM_SVE, p7, ptr( x7, x0 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, x0 ) ); dump();
prfb(PLDL1KEEP_SVE, p0, ptr( x7, x0 ) ); dump();
prfb(PLDL1KEEP_SVE, p1, ptr( x7, x0 ) ); dump();
prfb(PLDL1KEEP_SVE, p2, ptr( x7, x0 ) ); dump();
prfb(PLDL1KEEP_SVE, p4, ptr( x7, x0 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, x0 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, x0 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x0, x0 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x1, x0 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x2, x0 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x4, x0 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x8, x0 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x16, x0 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x30, x0 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( sp, x0 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, x0 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, x1 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, x2 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, x4 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, x8 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, x16 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, x30 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, x0 ) ); dump();
//SVE_contiguous_prefetch_scalar_plus_scalar1:0
prfh(PLDL1KEEP_SVE, p7, ptr( x7, x0, LSL, 1 ) ); dump();
prfh(PLDL1STRM_SVE, p7, ptr( x7, x0, LSL, 1 ) ); dump();
prfh(PLDL2KEEP_SVE, p7, ptr( x7, x0, LSL, 1 ) ); dump();
prfh(PLDL2STRM_SVE, p7, ptr( x7, x0, LSL, 1 ) ); dump();
prfh(PLDL3KEEP_SVE, p7, ptr( x7, x0, LSL, 1 ) ); dump();
prfh(PLDL3STRM_SVE, p7, ptr( x7, x0, LSL, 1 ) ); dump();
prfh(PSTL1KEEP_SVE, p7, ptr( x7, x0, LSL, 1 ) ); dump();
prfh(PSTL1STRM_SVE, p7, ptr( x7, x0, LSL, 1 ) ); dump();
prfh(PSTL2KEEP_SVE, p7, ptr( x7, x0, LSL, 1 ) ); dump();
prfh(PSTL2STRM_SVE, p7, ptr( x7, x0, LSL, 1 ) ); dump();
prfh(PSTL3KEEP_SVE, p7, ptr( x7, x0, LSL, 1 ) ); dump();
prfh(PSTL3STRM_SVE, p7, ptr( x7, x0, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, x0, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p0, ptr( x7, x0, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p1, ptr( x7, x0, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p2, ptr( x7, x0, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p4, ptr( x7, x0, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, x0, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, x0, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x0, x0, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x1, x0, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x2, x0, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x4, x0, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x8, x0, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x16, x0, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x30, x0, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( sp, x0, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, x0, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, x1, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, x2, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, x4, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, x8, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, x16, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, x30, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, x0, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, x0, LSL, 1 ) ); dump();
//SVE_contiguous_prefetch_scalar_plus_scalar2:0
prfw(PLDL1KEEP_SVE, p7, ptr( x7, x0, LSL, 2 ) ); dump();
prfw(PLDL1STRM_SVE, p7, ptr( x7, x0, LSL, 2 ) ); dump();
prfw(PLDL2KEEP_SVE, p7, ptr( x7, x0, LSL, 2 ) ); dump();
prfw(PLDL2STRM_SVE, p7, ptr( x7, x0, LSL, 2 ) ); dump();
prfw(PLDL3KEEP_SVE, p7, ptr( x7, x0, LSL, 2 ) ); dump();
prfw(PLDL3STRM_SVE, p7, ptr( x7, x0, LSL, 2 ) ); dump();
prfw(PSTL1KEEP_SVE, p7, ptr( x7, x0, LSL, 2 ) ); dump();
prfw(PSTL1STRM_SVE, p7, ptr( x7, x0, LSL, 2 ) ); dump();
prfw(PSTL2KEEP_SVE, p7, ptr( x7, x0, LSL, 2 ) ); dump();
prfw(PSTL2STRM_SVE, p7, ptr( x7, x0, LSL, 2 ) ); dump();
prfw(PSTL3KEEP_SVE, p7, ptr( x7, x0, LSL, 2 ) ); dump();
prfw(PSTL3STRM_SVE, p7, ptr( x7, x0, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, x0, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p0, ptr( x7, x0, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p1, ptr( x7, x0, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p2, ptr( x7, x0, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p4, ptr( x7, x0, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, x0, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, x0, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x0, x0, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x1, x0, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x2, x0, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x4, x0, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x8, x0, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x16, x0, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x30, x0, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( sp, x0, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, x0, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, x1, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, x2, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, x4, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, x8, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, x16, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, x30, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, x0, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, x0, LSL, 2 ) ); dump();
//SVE_contiguous_prefetch_scalar_plus_scalar3:0
prfd(PLDL1KEEP_SVE, p7, ptr( x7, x0, LSL, 3 ) ); dump();
prfd(PLDL1STRM_SVE, p7, ptr( x7, x0, LSL, 3 ) ); dump();
prfd(PLDL2KEEP_SVE, p7, ptr( x7, x0, LSL, 3 ) ); dump();
prfd(PLDL2STRM_SVE, p7, ptr( x7, x0, LSL, 3 ) ); dump();
prfd(PLDL3KEEP_SVE, p7, ptr( x7, x0, LSL, 3 ) ); dump();
prfd(PLDL3STRM_SVE, p7, ptr( x7, x0, LSL, 3 ) ); dump();
prfd(PSTL1KEEP_SVE, p7, ptr( x7, x0, LSL, 3 ) ); dump();
prfd(PSTL1STRM_SVE, p7, ptr( x7, x0, LSL, 3 ) ); dump();
prfd(PSTL2KEEP_SVE, p7, ptr( x7, x0, LSL, 3 ) ); dump();
prfd(PSTL2STRM_SVE, p7, ptr( x7, x0, LSL, 3 ) ); dump();
prfd(PSTL3KEEP_SVE, p7, ptr( x7, x0, LSL, 3 ) ); dump();
prfd(PSTL3STRM_SVE, p7, ptr( x7, x0, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, x0, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p0, ptr( x7, x0, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p1, ptr( x7, x0, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p2, ptr( x7, x0, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p4, ptr( x7, x0, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, x0, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, x0, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x0, x0, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x1, x0, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x2, x0, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x4, x0, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x8, x0, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x16, x0, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x30, x0, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( sp, x0, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, x0, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, x1, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, x2, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, x4, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, x8, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, x16, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, x30, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, x0, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, x0, LSL, 3 ) ); dump();
//SVE_32_bit_gather_prefetch_vector_plus_immediate0:0
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfb(PLDL1STRM_SVE, p7, ptr( z7.s ) ); dump();
prfb(PLDL2KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfb(PLDL2STRM_SVE, p7, ptr( z7.s ) ); dump();
prfb(PLDL3KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfb(PLDL3STRM_SVE, p7, ptr( z7.s ) ); dump();
prfb(PSTL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfb(PSTL1STRM_SVE, p7, ptr( z7.s ) ); dump();
prfb(PSTL2KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfb(PSTL2STRM_SVE, p7, ptr( z7.s ) ); dump();
prfb(PSTL3KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfb(PSTL3STRM_SVE, p7, ptr( z7.s ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfb(PLDL1KEEP_SVE, p0, ptr( z7.s ) ); dump();
prfb(PLDL1KEEP_SVE, p1, ptr( z7.s ) ); dump();
prfb(PLDL1KEEP_SVE, p2, ptr( z7.s ) ); dump();
prfb(PLDL1KEEP_SVE, p4, ptr( z7.s ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z0.s ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z1.s ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z2.s ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z4.s ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z8.s ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z16.s ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z31.s ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
//SVE_32_bit_gather_prefetch_vector_plus_immediate0:1
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s, 0x1e ) ); dump();
prfb(PLDL1STRM_SVE, p7, ptr( z7.s, 0x1e ) ); dump();
prfb(PLDL2KEEP_SVE, p7, ptr( z7.s, 0x1e ) ); dump();
prfb(PLDL2STRM_SVE, p7, ptr( z7.s, 0x1e ) ); dump();
prfb(PLDL3KEEP_SVE, p7, ptr( z7.s, 0x1e ) ); dump();
prfb(PLDL3STRM_SVE, p7, ptr( z7.s, 0x1e ) ); dump();
prfb(PSTL1KEEP_SVE, p7, ptr( z7.s, 0x1e ) ); dump();
prfb(PSTL1STRM_SVE, p7, ptr( z7.s, 0x1e ) ); dump();
prfb(PSTL2KEEP_SVE, p7, ptr( z7.s, 0x1e ) ); dump();
prfb(PSTL2STRM_SVE, p7, ptr( z7.s, 0x1e ) ); dump();
prfb(PSTL3KEEP_SVE, p7, ptr( z7.s, 0x1e ) ); dump();
prfb(PSTL3STRM_SVE, p7, ptr( z7.s, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p0, ptr( z7.s, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p1, ptr( z7.s, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p2, ptr( z7.s, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p4, ptr( z7.s, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z0.s, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z1.s, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z2.s, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z4.s, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z8.s, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z16.s, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z31.s, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s, 0 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s, 1 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s, 2 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s, 4 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s, 8 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s, 16 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s, 31 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s, 0x1e ) ); dump();
//SVE_32_bit_gather_prefetch_vector_plus_immediate0:2
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfb(PLDL1STRM_SVE, p7, ptr( z7.d ) ); dump();
prfb(PLDL2KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfb(PLDL2STRM_SVE, p7, ptr( z7.d ) ); dump();
prfb(PLDL3KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfb(PLDL3STRM_SVE, p7, ptr( z7.d ) ); dump();
prfb(PSTL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfb(PSTL1STRM_SVE, p7, ptr( z7.d ) ); dump();
prfb(PSTL2KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfb(PSTL2STRM_SVE, p7, ptr( z7.d ) ); dump();
prfb(PSTL3KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfb(PSTL3STRM_SVE, p7, ptr( z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p0, ptr( z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p1, ptr( z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p2, ptr( z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p4, ptr( z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z0.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z1.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z2.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z4.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z8.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z16.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z31.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
//SVE_32_bit_gather_prefetch_vector_plus_immediate0:3
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d, 0x1e ) ); dump();
prfb(PLDL1STRM_SVE, p7, ptr( z7.d, 0x1e ) ); dump();
prfb(PLDL2KEEP_SVE, p7, ptr( z7.d, 0x1e ) ); dump();
prfb(PLDL2STRM_SVE, p7, ptr( z7.d, 0x1e ) ); dump();
prfb(PLDL3KEEP_SVE, p7, ptr( z7.d, 0x1e ) ); dump();
prfb(PLDL3STRM_SVE, p7, ptr( z7.d, 0x1e ) ); dump();
prfb(PSTL1KEEP_SVE, p7, ptr( z7.d, 0x1e ) ); dump();
prfb(PSTL1STRM_SVE, p7, ptr( z7.d, 0x1e ) ); dump();
prfb(PSTL2KEEP_SVE, p7, ptr( z7.d, 0x1e ) ); dump();
prfb(PSTL2STRM_SVE, p7, ptr( z7.d, 0x1e ) ); dump();
prfb(PSTL3KEEP_SVE, p7, ptr( z7.d, 0x1e ) ); dump();
prfb(PSTL3STRM_SVE, p7, ptr( z7.d, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p0, ptr( z7.d, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p1, ptr( z7.d, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p2, ptr( z7.d, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p4, ptr( z7.d, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z0.d, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z1.d, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z2.d, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z4.d, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z8.d, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z16.d, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z31.d, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d, 0x1e ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d, 0 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d, 1 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d, 2 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d, 4 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d, 8 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d, 16 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d, 31 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d, 0x1e ) ); dump();
//SVE_32_bit_gather_prefetch_vector_plus_immediate1:0
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfh(PLDL1STRM_SVE, p7, ptr( z7.s ) ); dump();
prfh(PLDL2KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfh(PLDL2STRM_SVE, p7, ptr( z7.s ) ); dump();
prfh(PLDL3KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfh(PLDL3STRM_SVE, p7, ptr( z7.s ) ); dump();
prfh(PSTL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfh(PSTL1STRM_SVE, p7, ptr( z7.s ) ); dump();
prfh(PSTL2KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfh(PSTL2STRM_SVE, p7, ptr( z7.s ) ); dump();
prfh(PSTL3KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfh(PSTL3STRM_SVE, p7, ptr( z7.s ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfh(PLDL1KEEP_SVE, p0, ptr( z7.s ) ); dump();
prfh(PLDL1KEEP_SVE, p1, ptr( z7.s ) ); dump();
prfh(PLDL1KEEP_SVE, p2, ptr( z7.s ) ); dump();
prfh(PLDL1KEEP_SVE, p4, ptr( z7.s ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z0.s ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z1.s ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z2.s ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z4.s ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z8.s ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z16.s ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z31.s ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
//SVE_32_bit_gather_prefetch_vector_plus_immediate1:1
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PLDL1STRM_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PLDL2KEEP_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PLDL2STRM_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PLDL3KEEP_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PLDL3STRM_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PSTL1KEEP_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PSTL1STRM_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PSTL2KEEP_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PSTL2STRM_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PSTL3KEEP_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PSTL3STRM_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p0, ptr( z7.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p1, ptr( z7.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p2, ptr( z7.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p4, ptr( z7.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z0.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z1.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z2.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z4.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z8.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z16.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z31.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s, 0 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s, 2 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s, 4 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s, 8 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s, 16 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s, 32 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s, 62 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s, 30 ) ); dump();
//SVE_32_bit_gather_prefetch_vector_plus_immediate1:2
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfh(PLDL1STRM_SVE, p7, ptr( z7.d ) ); dump();
prfh(PLDL2KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfh(PLDL2STRM_SVE, p7, ptr( z7.d ) ); dump();
prfh(PLDL3KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfh(PLDL3STRM_SVE, p7, ptr( z7.d ) ); dump();
prfh(PSTL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfh(PSTL1STRM_SVE, p7, ptr( z7.d ) ); dump();
prfh(PSTL2KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfh(PSTL2STRM_SVE, p7, ptr( z7.d ) ); dump();
prfh(PSTL3KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfh(PSTL3STRM_SVE, p7, ptr( z7.d ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfh(PLDL1KEEP_SVE, p0, ptr( z7.d ) ); dump();
prfh(PLDL1KEEP_SVE, p1, ptr( z7.d ) ); dump();
prfh(PLDL1KEEP_SVE, p2, ptr( z7.d ) ); dump();
prfh(PLDL1KEEP_SVE, p4, ptr( z7.d ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z0.d ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z1.d ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z2.d ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z4.d ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z8.d ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z16.d ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z31.d ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
//SVE_32_bit_gather_prefetch_vector_plus_immediate1:3
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PLDL1STRM_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PLDL2KEEP_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PLDL2STRM_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PLDL3KEEP_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PLDL3STRM_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PSTL1KEEP_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PSTL1STRM_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PSTL2KEEP_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PSTL2STRM_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PSTL3KEEP_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PSTL3STRM_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p0, ptr( z7.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p1, ptr( z7.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p2, ptr( z7.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p4, ptr( z7.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z0.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z1.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z2.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z4.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z8.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z16.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z31.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d, 0 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d, 2 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d, 4 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d, 8 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d, 16 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d, 32 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d, 62 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d, 30 ) ); dump();
//SVE_32_bit_gather_prefetch_vector_plus_immediate2:0
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfw(PLDL1STRM_SVE, p7, ptr( z7.s ) ); dump();
prfw(PLDL2KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfw(PLDL2STRM_SVE, p7, ptr( z7.s ) ); dump();
prfw(PLDL3KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfw(PLDL3STRM_SVE, p7, ptr( z7.s ) ); dump();
prfw(PSTL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfw(PSTL1STRM_SVE, p7, ptr( z7.s ) ); dump();
prfw(PSTL2KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfw(PSTL2STRM_SVE, p7, ptr( z7.s ) ); dump();
prfw(PSTL3KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfw(PSTL3STRM_SVE, p7, ptr( z7.s ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfw(PLDL1KEEP_SVE, p0, ptr( z7.s ) ); dump();
prfw(PLDL1KEEP_SVE, p1, ptr( z7.s ) ); dump();
prfw(PLDL1KEEP_SVE, p2, ptr( z7.s ) ); dump();
prfw(PLDL1KEEP_SVE, p4, ptr( z7.s ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z0.s ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z1.s ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z2.s ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z4.s ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z8.s ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z16.s ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z31.s ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
//SVE_32_bit_gather_prefetch_vector_plus_immediate2:1
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PLDL1STRM_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PLDL2KEEP_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PLDL2STRM_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PLDL3KEEP_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PLDL3STRM_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PSTL1KEEP_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PSTL1STRM_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PSTL2KEEP_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PSTL2STRM_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PSTL3KEEP_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PSTL3STRM_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p0, ptr( z7.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p1, ptr( z7.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p2, ptr( z7.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p4, ptr( z7.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z0.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z1.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z2.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z4.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z8.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z16.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z31.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s, 0 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s, 4 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s, 8 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s, 16 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s, 32 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s, 64 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s, 124 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s, 60 ) ); dump();
//SVE_32_bit_gather_prefetch_vector_plus_immediate2:2
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfw(PLDL1STRM_SVE, p7, ptr( z7.d ) ); dump();
prfw(PLDL2KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfw(PLDL2STRM_SVE, p7, ptr( z7.d ) ); dump();
prfw(PLDL3KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfw(PLDL3STRM_SVE, p7, ptr( z7.d ) ); dump();
prfw(PSTL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfw(PSTL1STRM_SVE, p7, ptr( z7.d ) ); dump();
prfw(PSTL2KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfw(PSTL2STRM_SVE, p7, ptr( z7.d ) ); dump();
prfw(PSTL3KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfw(PSTL3STRM_SVE, p7, ptr( z7.d ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfw(PLDL1KEEP_SVE, p0, ptr( z7.d ) ); dump();
prfw(PLDL1KEEP_SVE, p1, ptr( z7.d ) ); dump();
prfw(PLDL1KEEP_SVE, p2, ptr( z7.d ) ); dump();
prfw(PLDL1KEEP_SVE, p4, ptr( z7.d ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z0.d ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z1.d ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z2.d ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z4.d ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z8.d ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z16.d ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z31.d ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
//SVE_32_bit_gather_prefetch_vector_plus_immediate2:3
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PLDL1STRM_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PLDL2KEEP_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PLDL2STRM_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PLDL3KEEP_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PLDL3STRM_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PSTL1KEEP_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PSTL1STRM_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PSTL2KEEP_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PSTL2STRM_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PSTL3KEEP_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PSTL3STRM_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p0, ptr( z7.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p1, ptr( z7.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p2, ptr( z7.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p4, ptr( z7.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z0.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z1.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z2.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z4.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z8.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z16.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z31.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d, 0 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d, 4 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d, 8 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d, 16 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d, 32 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d, 64 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d, 124 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d, 60 ) ); dump();
//SVE_32_bit_gather_prefetch_vector_plus_immediate3:0
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfd(PLDL1STRM_SVE, p7, ptr( z7.s ) ); dump();
prfd(PLDL2KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfd(PLDL2STRM_SVE, p7, ptr( z7.s ) ); dump();
prfd(PLDL3KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfd(PLDL3STRM_SVE, p7, ptr( z7.s ) ); dump();
prfd(PSTL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfd(PSTL1STRM_SVE, p7, ptr( z7.s ) ); dump();
prfd(PSTL2KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfd(PSTL2STRM_SVE, p7, ptr( z7.s ) ); dump();
prfd(PSTL3KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfd(PSTL3STRM_SVE, p7, ptr( z7.s ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfd(PLDL1KEEP_SVE, p0, ptr( z7.s ) ); dump();
prfd(PLDL1KEEP_SVE, p1, ptr( z7.s ) ); dump();
prfd(PLDL1KEEP_SVE, p2, ptr( z7.s ) ); dump();
prfd(PLDL1KEEP_SVE, p4, ptr( z7.s ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z0.s ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z1.s ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z2.s ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z4.s ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z8.s ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z16.s ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z31.s ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
//SVE_32_bit_gather_prefetch_vector_plus_immediate3:1
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PLDL1STRM_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PLDL2KEEP_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PLDL2STRM_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PLDL3KEEP_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PLDL3STRM_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PSTL1KEEP_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PSTL1STRM_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PSTL2KEEP_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PSTL2STRM_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PSTL3KEEP_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PSTL3STRM_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p0, ptr( z7.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p1, ptr( z7.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p2, ptr( z7.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p4, ptr( z7.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z0.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z1.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z2.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z4.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z8.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z16.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z31.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s, 0 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s, 8 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s, 16 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s, 32 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s, 64 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s, 128 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s, 248 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s, 120 ) ); dump();
//SVE_32_bit_gather_prefetch_vector_plus_immediate3:2
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfd(PLDL1STRM_SVE, p7, ptr( z7.d ) ); dump();
prfd(PLDL2KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfd(PLDL2STRM_SVE, p7, ptr( z7.d ) ); dump();
prfd(PLDL3KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfd(PLDL3STRM_SVE, p7, ptr( z7.d ) ); dump();
prfd(PSTL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfd(PSTL1STRM_SVE, p7, ptr( z7.d ) ); dump();
prfd(PSTL2KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfd(PSTL2STRM_SVE, p7, ptr( z7.d ) ); dump();
prfd(PSTL3KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfd(PSTL3STRM_SVE, p7, ptr( z7.d ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfd(PLDL1KEEP_SVE, p0, ptr( z7.d ) ); dump();
prfd(PLDL1KEEP_SVE, p1, ptr( z7.d ) ); dump();
prfd(PLDL1KEEP_SVE, p2, ptr( z7.d ) ); dump();
prfd(PLDL1KEEP_SVE, p4, ptr( z7.d ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z0.d ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z1.d ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z2.d ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z4.d ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z8.d ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z16.d ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z31.d ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
//SVE_32_bit_gather_prefetch_vector_plus_immediate3:3
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PLDL1STRM_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PLDL2KEEP_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PLDL2STRM_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PLDL3KEEP_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PLDL3STRM_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PSTL1KEEP_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PSTL1STRM_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PSTL2KEEP_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PSTL2STRM_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PSTL3KEEP_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PSTL3STRM_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p0, ptr( z7.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p1, ptr( z7.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p2, ptr( z7.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p4, ptr( z7.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z0.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z1.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z2.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z4.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z8.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z16.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z31.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d, 0 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d, 8 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d, 16 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d, 32 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d, 64 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d, 128 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d, 248 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d, 120 ) ); dump();
//SVE_32_bit_gather_load_vector_plus_immediate0:0
ld1sb(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ld1sb(z0.s, p7/T_z, ptr( z7.s ) ); dump();
ld1sb(z1.s, p7/T_z, ptr( z7.s ) ); dump();
ld1sb(z2.s, p7/T_z, ptr( z7.s ) ); dump();
ld1sb(z4.s, p7/T_z, ptr( z7.s ) ); dump();
ld1sb(z8.s, p7/T_z, ptr( z7.s ) ); dump();
ld1sb(z16.s, p7/T_z, ptr( z7.s ) ); dump();
ld1sb(z31.s, p7/T_z, ptr( z7.s ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ld1sb(z7.s, p0/T_z, ptr( z7.s ) ); dump();
ld1sb(z7.s, p1/T_z, ptr( z7.s ) ); dump();
ld1sb(z7.s, p2/T_z, ptr( z7.s ) ); dump();
ld1sb(z7.s, p4/T_z, ptr( z7.s ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z0.s ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z1.s ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z2.s ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z4.s ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z8.s ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z16.s ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z31.s ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1sb(z0.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1sb(z1.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1sb(z2.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1sb(z4.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1sb(z8.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1sb(z16.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1sb(z31.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1sb(z7.s, p0/T_z, ptr( z7.s ) ); dump();
ldff1sb(z7.s, p1/T_z, ptr( z7.s ) ); dump();
ldff1sb(z7.s, p2/T_z, ptr( z7.s ) ); dump();
ldff1sb(z7.s, p4/T_z, ptr( z7.s ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z0.s ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z1.s ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z2.s ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z4.s ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z8.s ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z16.s ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z31.s ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ld1b(z0.s, p7/T_z, ptr( z7.s ) ); dump();
ld1b(z1.s, p7/T_z, ptr( z7.s ) ); dump();
ld1b(z2.s, p7/T_z, ptr( z7.s ) ); dump();
ld1b(z4.s, p7/T_z, ptr( z7.s ) ); dump();
ld1b(z8.s, p7/T_z, ptr( z7.s ) ); dump();
ld1b(z16.s, p7/T_z, ptr( z7.s ) ); dump();
ld1b(z31.s, p7/T_z, ptr( z7.s ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ld1b(z7.s, p0/T_z, ptr( z7.s ) ); dump();
ld1b(z7.s, p1/T_z, ptr( z7.s ) ); dump();
ld1b(z7.s, p2/T_z, ptr( z7.s ) ); dump();
ld1b(z7.s, p4/T_z, ptr( z7.s ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z0.s ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z1.s ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z2.s ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z4.s ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z8.s ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z16.s ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z31.s ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1b(z0.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1b(z1.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1b(z2.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1b(z4.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1b(z8.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1b(z16.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1b(z31.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1b(z7.s, p0/T_z, ptr( z7.s ) ); dump();
ldff1b(z7.s, p1/T_z, ptr( z7.s ) ); dump();
ldff1b(z7.s, p2/T_z, ptr( z7.s ) ); dump();
ldff1b(z7.s, p4/T_z, ptr( z7.s ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z0.s ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z1.s ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z2.s ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z4.s ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z8.s ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z16.s ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z31.s ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z7.s ) ); dump();
//SVE_32_bit_gather_load_vector_plus_immediate0:1
ld1sb(z7.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1sb(z0.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1sb(z1.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1sb(z2.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1sb(z4.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1sb(z8.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1sb(z16.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1sb(z31.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1sb(z7.s, p0/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1sb(z7.s, p1/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1sb(z7.s, p2/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1sb(z7.s, p4/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z0.s, 0x1e ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z1.s, 0x1e ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z2.s, 0x1e ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z4.s, 0x1e ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z8.s, 0x1e ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z16.s, 0x1e ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z31.s, 0x1e ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z7.s, 0 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z7.s, 1 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z7.s, 2 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z7.s, 4 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z7.s, 8 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z7.s, 16 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z7.s, 31 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1sb(z0.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1sb(z1.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1sb(z2.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1sb(z4.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1sb(z8.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1sb(z16.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1sb(z31.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1sb(z7.s, p0/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1sb(z7.s, p1/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1sb(z7.s, p2/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1sb(z7.s, p4/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z0.s, 0x1e ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z1.s, 0x1e ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z2.s, 0x1e ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z4.s, 0x1e ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z8.s, 0x1e ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z16.s, 0x1e ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z31.s, 0x1e ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z7.s, 0 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z7.s, 1 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z7.s, 2 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z7.s, 4 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z7.s, 8 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z7.s, 16 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z7.s, 31 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1b(z0.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1b(z1.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1b(z2.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1b(z4.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1b(z8.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1b(z16.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1b(z31.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1b(z7.s, p0/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1b(z7.s, p1/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1b(z7.s, p2/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1b(z7.s, p4/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z0.s, 0x1e ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z1.s, 0x1e ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z2.s, 0x1e ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z4.s, 0x1e ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z8.s, 0x1e ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z16.s, 0x1e ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z31.s, 0x1e ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z7.s, 0 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z7.s, 1 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z7.s, 2 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z7.s, 4 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z7.s, 8 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z7.s, 16 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z7.s, 31 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1b(z0.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1b(z1.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1b(z2.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1b(z4.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1b(z8.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1b(z16.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1b(z31.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1b(z7.s, p0/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1b(z7.s, p1/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1b(z7.s, p2/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1b(z7.s, p4/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z0.s, 0x1e ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z1.s, 0x1e ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z2.s, 0x1e ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z4.s, 0x1e ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z8.s, 0x1e ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z16.s, 0x1e ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z31.s, 0x1e ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z7.s, 0 ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z7.s, 1 ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z7.s, 2 ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z7.s, 4 ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z7.s, 8 ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z7.s, 16 ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z7.s, 31 ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( z7.s, 0x1e ) ); dump();
//SVE_32_bit_gather_load_vector_plus_immediate1:0
ld1sh(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ld1sh(z0.s, p7/T_z, ptr( z7.s ) ); dump();
ld1sh(z1.s, p7/T_z, ptr( z7.s ) ); dump();
ld1sh(z2.s, p7/T_z, ptr( z7.s ) ); dump();
ld1sh(z4.s, p7/T_z, ptr( z7.s ) ); dump();
ld1sh(z8.s, p7/T_z, ptr( z7.s ) ); dump();
ld1sh(z16.s, p7/T_z, ptr( z7.s ) ); dump();
ld1sh(z31.s, p7/T_z, ptr( z7.s ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ld1sh(z7.s, p0/T_z, ptr( z7.s ) ); dump();
ld1sh(z7.s, p1/T_z, ptr( z7.s ) ); dump();
ld1sh(z7.s, p2/T_z, ptr( z7.s ) ); dump();
ld1sh(z7.s, p4/T_z, ptr( z7.s ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z0.s ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z1.s ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z2.s ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z4.s ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z8.s ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z16.s ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z31.s ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1sh(z0.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1sh(z1.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1sh(z2.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1sh(z4.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1sh(z8.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1sh(z16.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1sh(z31.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1sh(z7.s, p0/T_z, ptr( z7.s ) ); dump();
ldff1sh(z7.s, p1/T_z, ptr( z7.s ) ); dump();
ldff1sh(z7.s, p2/T_z, ptr( z7.s ) ); dump();
ldff1sh(z7.s, p4/T_z, ptr( z7.s ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z0.s ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z1.s ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z2.s ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z4.s ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z8.s ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z16.s ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z31.s ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ld1h(z0.s, p7/T_z, ptr( z7.s ) ); dump();
ld1h(z1.s, p7/T_z, ptr( z7.s ) ); dump();
ld1h(z2.s, p7/T_z, ptr( z7.s ) ); dump();
ld1h(z4.s, p7/T_z, ptr( z7.s ) ); dump();
ld1h(z8.s, p7/T_z, ptr( z7.s ) ); dump();
ld1h(z16.s, p7/T_z, ptr( z7.s ) ); dump();
ld1h(z31.s, p7/T_z, ptr( z7.s ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ld1h(z7.s, p0/T_z, ptr( z7.s ) ); dump();
ld1h(z7.s, p1/T_z, ptr( z7.s ) ); dump();
ld1h(z7.s, p2/T_z, ptr( z7.s ) ); dump();
ld1h(z7.s, p4/T_z, ptr( z7.s ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z0.s ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z1.s ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z2.s ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z4.s ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z8.s ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z16.s ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z31.s ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1h(z0.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1h(z1.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1h(z2.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1h(z4.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1h(z8.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1h(z16.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1h(z31.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1h(z7.s, p0/T_z, ptr( z7.s ) ); dump();
ldff1h(z7.s, p1/T_z, ptr( z7.s ) ); dump();
ldff1h(z7.s, p2/T_z, ptr( z7.s ) ); dump();
ldff1h(z7.s, p4/T_z, ptr( z7.s ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z0.s ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z1.s ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z2.s ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z4.s ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z8.s ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z16.s ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z31.s ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z7.s ) ); dump();
//SVE_32_bit_gather_load_vector_plus_immediate1:1
ld1sh(z7.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ld1sh(z0.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ld1sh(z1.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ld1sh(z2.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ld1sh(z4.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ld1sh(z8.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ld1sh(z16.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ld1sh(z31.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ld1sh(z7.s, p0/T_z, ptr( z7.s, 30 ) ); dump();
ld1sh(z7.s, p1/T_z, ptr( z7.s, 30 ) ); dump();
ld1sh(z7.s, p2/T_z, ptr( z7.s, 30 ) ); dump();
ld1sh(z7.s, p4/T_z, ptr( z7.s, 30 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z0.s, 30 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z1.s, 30 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z2.s, 30 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z4.s, 30 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z8.s, 30 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z16.s, 30 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z31.s, 30 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z7.s, 0 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z7.s, 2 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z7.s, 4 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z7.s, 8 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z7.s, 16 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z7.s, 32 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z7.s, 62 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ldff1sh(z0.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ldff1sh(z1.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ldff1sh(z2.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ldff1sh(z4.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ldff1sh(z8.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ldff1sh(z16.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ldff1sh(z31.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ldff1sh(z7.s, p0/T_z, ptr( z7.s, 30 ) ); dump();
ldff1sh(z7.s, p1/T_z, ptr( z7.s, 30 ) ); dump();
ldff1sh(z7.s, p2/T_z, ptr( z7.s, 30 ) ); dump();
ldff1sh(z7.s, p4/T_z, ptr( z7.s, 30 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z0.s, 30 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z1.s, 30 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z2.s, 30 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z4.s, 30 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z8.s, 30 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z16.s, 30 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z31.s, 30 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z7.s, 0 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z7.s, 2 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z7.s, 4 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z7.s, 8 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z7.s, 16 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z7.s, 32 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z7.s, 62 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ld1h(z0.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ld1h(z1.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ld1h(z2.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ld1h(z4.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ld1h(z8.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ld1h(z16.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ld1h(z31.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ld1h(z7.s, p0/T_z, ptr( z7.s, 30 ) ); dump();
ld1h(z7.s, p1/T_z, ptr( z7.s, 30 ) ); dump();
ld1h(z7.s, p2/T_z, ptr( z7.s, 30 ) ); dump();
ld1h(z7.s, p4/T_z, ptr( z7.s, 30 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z0.s, 30 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z1.s, 30 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z2.s, 30 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z4.s, 30 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z8.s, 30 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z16.s, 30 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z31.s, 30 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z7.s, 0 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z7.s, 2 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z7.s, 4 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z7.s, 8 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z7.s, 16 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z7.s, 32 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z7.s, 62 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ldff1h(z0.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ldff1h(z1.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ldff1h(z2.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ldff1h(z4.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ldff1h(z8.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ldff1h(z16.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ldff1h(z31.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ldff1h(z7.s, p0/T_z, ptr( z7.s, 30 ) ); dump();
ldff1h(z7.s, p1/T_z, ptr( z7.s, 30 ) ); dump();
ldff1h(z7.s, p2/T_z, ptr( z7.s, 30 ) ); dump();
ldff1h(z7.s, p4/T_z, ptr( z7.s, 30 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z0.s, 30 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z1.s, 30 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z2.s, 30 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z4.s, 30 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z8.s, 30 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z16.s, 30 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z31.s, 30 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z7.s, 0 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z7.s, 2 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z7.s, 4 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z7.s, 8 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z7.s, 16 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z7.s, 32 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z7.s, 62 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( z7.s, 30 ) ); dump();
//SVE_32_bit_gather_load_vector_plus_immediate2:0
ld1w(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ld1w(z0.s, p7/T_z, ptr( z7.s ) ); dump();
ld1w(z1.s, p7/T_z, ptr( z7.s ) ); dump();
ld1w(z2.s, p7/T_z, ptr( z7.s ) ); dump();
ld1w(z4.s, p7/T_z, ptr( z7.s ) ); dump();
ld1w(z8.s, p7/T_z, ptr( z7.s ) ); dump();
ld1w(z16.s, p7/T_z, ptr( z7.s ) ); dump();
ld1w(z31.s, p7/T_z, ptr( z7.s ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ld1w(z7.s, p0/T_z, ptr( z7.s ) ); dump();
ld1w(z7.s, p1/T_z, ptr( z7.s ) ); dump();
ld1w(z7.s, p2/T_z, ptr( z7.s ) ); dump();
ld1w(z7.s, p4/T_z, ptr( z7.s ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z0.s ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z1.s ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z2.s ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z4.s ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z8.s ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z16.s ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z31.s ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1w(z0.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1w(z1.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1w(z2.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1w(z4.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1w(z8.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1w(z16.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1w(z31.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1w(z7.s, p0/T_z, ptr( z7.s ) ); dump();
ldff1w(z7.s, p1/T_z, ptr( z7.s ) ); dump();
ldff1w(z7.s, p2/T_z, ptr( z7.s ) ); dump();
ldff1w(z7.s, p4/T_z, ptr( z7.s ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z7.s ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z0.s ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z1.s ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z2.s ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z4.s ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z8.s ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z16.s ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z31.s ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z7.s ) ); dump();
//SVE_32_bit_gather_load_vector_plus_immediate2:1
ld1w(z7.s, p7/T_z, ptr( z7.s, 60 ) ); dump();
ld1w(z0.s, p7/T_z, ptr( z7.s, 60 ) ); dump();
ld1w(z1.s, p7/T_z, ptr( z7.s, 60 ) ); dump();
ld1w(z2.s, p7/T_z, ptr( z7.s, 60 ) ); dump();
ld1w(z4.s, p7/T_z, ptr( z7.s, 60 ) ); dump();
ld1w(z8.s, p7/T_z, ptr( z7.s, 60 ) ); dump();
ld1w(z16.s, p7/T_z, ptr( z7.s, 60 ) ); dump();
ld1w(z31.s, p7/T_z, ptr( z7.s, 60 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z7.s, 60 ) ); dump();
ld1w(z7.s, p0/T_z, ptr( z7.s, 60 ) ); dump();
ld1w(z7.s, p1/T_z, ptr( z7.s, 60 ) ); dump();
ld1w(z7.s, p2/T_z, ptr( z7.s, 60 ) ); dump();
ld1w(z7.s, p4/T_z, ptr( z7.s, 60 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z7.s, 60 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z7.s, 60 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z0.s, 60 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z1.s, 60 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z2.s, 60 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z4.s, 60 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z8.s, 60 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z16.s, 60 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z31.s, 60 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z7.s, 60 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z7.s, 0 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z7.s, 4 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z7.s, 8 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z7.s, 16 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z7.s, 32 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z7.s, 64 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z7.s, 124 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( z7.s, 60 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z7.s, 60 ) ); dump();
ldff1w(z0.s, p7/T_z, ptr( z7.s, 60 ) ); dump();
ldff1w(z1.s, p7/T_z, ptr( z7.s, 60 ) ); dump();
ldff1w(z2.s, p7/T_z, ptr( z7.s, 60 ) ); dump();
ldff1w(z4.s, p7/T_z, ptr( z7.s, 60 ) ); dump();
ldff1w(z8.s, p7/T_z, ptr( z7.s, 60 ) ); dump();
ldff1w(z16.s, p7/T_z, ptr( z7.s, 60 ) ); dump();
ldff1w(z31.s, p7/T_z, ptr( z7.s, 60 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z7.s, 60 ) ); dump();
ldff1w(z7.s, p0/T_z, ptr( z7.s, 60 ) ); dump();
ldff1w(z7.s, p1/T_z, ptr( z7.s, 60 ) ); dump();
ldff1w(z7.s, p2/T_z, ptr( z7.s, 60 ) ); dump();
ldff1w(z7.s, p4/T_z, ptr( z7.s, 60 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z7.s, 60 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z7.s, 60 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z0.s, 60 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z1.s, 60 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z2.s, 60 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z4.s, 60 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z8.s, 60 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z16.s, 60 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z31.s, 60 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z7.s, 60 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z7.s, 0 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z7.s, 4 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z7.s, 8 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z7.s, 16 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z7.s, 32 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z7.s, 64 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z7.s, 124 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( z7.s, 60 ) ); dump();
//SVE_load_and_broadcast_element0:0
ld1rb(z7.b, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z0.b, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z1.b, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z2.b, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z4.b, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z8.b, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z16.b, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z31.b, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z7.b, p0/T_z, ptr( x7 ) ); dump();
ld1rb(z7.b, p1/T_z, ptr( x7 ) ); dump();
ld1rb(z7.b, p2/T_z, ptr( x7 ) ); dump();
ld1rb(z7.b, p4/T_z, ptr( x7 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x0 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x1 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x2 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x4 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x8 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x16 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x30 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( sp ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_and_broadcast_element0:1
ld1rb(z7.b, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z0.b, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z1.b, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z2.b, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z4.b, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z8.b, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z16.b, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z31.b, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.b, p0/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.b, p1/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.b, p2/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.b, p4/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x0, 0x39 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x1, 0x39 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x2, 0x39 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x4, 0x39 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x8, 0x39 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x16, 0x39 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x30, 0x39 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( sp, 0x39 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x7, 0 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x7, 1 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x7, 2 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x7, 4 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x7, 8 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x7, 16 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x7, 32 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x7, 63 ) ); dump();
ld1rb(z7.b, p7/T_z, ptr( x7, 0x39 ) ); dump();
//SVE_load_and_broadcast_element0:2
ld1rb(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z0.h, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z1.h, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z2.h, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z4.h, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z8.h, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z16.h, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z31.h, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z7.h, p0/T_z, ptr( x7 ) ); dump();
ld1rb(z7.h, p1/T_z, ptr( x7 ) ); dump();
ld1rb(z7.h, p2/T_z, ptr( x7 ) ); dump();
ld1rb(z7.h, p4/T_z, ptr( x7 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x0 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x1 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x2 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x4 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x8 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x16 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x30 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( sp ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_and_broadcast_element0:3
ld1rb(z7.h, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z0.h, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z1.h, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z2.h, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z4.h, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z8.h, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z16.h, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z31.h, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.h, p0/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.h, p1/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.h, p2/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.h, p4/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x0, 0x39 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x1, 0x39 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x2, 0x39 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x4, 0x39 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x8, 0x39 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x16, 0x39 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x30, 0x39 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( sp, 0x39 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x7, 0 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x7, 1 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x7, 2 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x7, 4 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x7, 8 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x7, 16 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x7, 32 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x7, 63 ) ); dump();
ld1rb(z7.h, p7/T_z, ptr( x7, 0x39 ) ); dump();
//SVE_load_and_broadcast_element0:4
ld1rb(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z0.s, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z1.s, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z2.s, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z4.s, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z8.s, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z16.s, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z31.s, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z7.s, p0/T_z, ptr( x7 ) ); dump();
ld1rb(z7.s, p1/T_z, ptr( x7 ) ); dump();
ld1rb(z7.s, p2/T_z, ptr( x7 ) ); dump();
ld1rb(z7.s, p4/T_z, ptr( x7 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x0 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x1 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x2 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x4 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x8 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x16 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x30 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( sp ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_and_broadcast_element0:5
ld1rb(z7.s, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z0.s, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z1.s, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z2.s, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z4.s, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z8.s, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z16.s, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z31.s, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.s, p0/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.s, p1/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.s, p2/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.s, p4/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x0, 0x39 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x1, 0x39 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x2, 0x39 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x4, 0x39 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x8, 0x39 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x16, 0x39 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x30, 0x39 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( sp, 0x39 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x7, 0 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x7, 1 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x7, 2 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x7, 4 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x7, 8 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x7, 16 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x7, 32 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x7, 63 ) ); dump();
ld1rb(z7.s, p7/T_z, ptr( x7, 0x39 ) ); dump();
//SVE_load_and_broadcast_element0:6
ld1rb(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z0.d, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z1.d, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z2.d, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z4.d, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z8.d, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z16.d, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z31.d, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z7.d, p0/T_z, ptr( x7 ) ); dump();
ld1rb(z7.d, p1/T_z, ptr( x7 ) ); dump();
ld1rb(z7.d, p2/T_z, ptr( x7 ) ); dump();
ld1rb(z7.d, p4/T_z, ptr( x7 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x0 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x1 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x2 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x4 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x8 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x16 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x30 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( sp ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_and_broadcast_element0:7
ld1rb(z7.d, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z0.d, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z1.d, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z2.d, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z4.d, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z8.d, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z16.d, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z31.d, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.d, p0/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.d, p1/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.d, p2/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.d, p4/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x0, 0x39 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x1, 0x39 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x2, 0x39 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x4, 0x39 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x8, 0x39 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x16, 0x39 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x30, 0x39 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( sp, 0x39 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x7, 0 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x7, 1 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x7, 2 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x7, 4 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x7, 8 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x7, 16 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x7, 32 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x7, 63 ) ); dump();
ld1rb(z7.d, p7/T_z, ptr( x7, 0x39 ) ); dump();
//SVE_load_and_broadcast_element1:0
ld1rsw(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsw(z0.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsw(z1.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsw(z2.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsw(z4.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsw(z8.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsw(z16.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsw(z31.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsw(z7.d, p0/T_z, ptr( x7 ) ); dump();
ld1rsw(z7.d, p1/T_z, ptr( x7 ) ); dump();
ld1rsw(z7.d, p2/T_z, ptr( x7 ) ); dump();
ld1rsw(z7.d, p4/T_z, ptr( x7 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x0 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x1 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x2 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x4 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x8 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x16 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x30 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( sp ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_and_broadcast_element1:1
ld1rsw(z7.d, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rsw(z0.d, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rsw(z1.d, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rsw(z2.d, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rsw(z4.d, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rsw(z8.d, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rsw(z16.d, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rsw(z31.d, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rsw(z7.d, p0/T_z, ptr( x7, 60 ) ); dump();
ld1rsw(z7.d, p1/T_z, ptr( x7, 60 ) ); dump();
ld1rsw(z7.d, p2/T_z, ptr( x7, 60 ) ); dump();
ld1rsw(z7.d, p4/T_z, ptr( x7, 60 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x0, 60 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x1, 60 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x2, 60 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x4, 60 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x8, 60 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x16, 60 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x30, 60 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( sp, 60 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x7, 0 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x7, 4 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x7, 8 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x7, 16 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x7, 32 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x7, 64 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x7, 124 ) ); dump();
ld1rsw(z7.d, p7/T_z, ptr( x7, 60 ) ); dump();
//SVE_load_and_broadcast_element2:0
ld1rh(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z0.h, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z1.h, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z2.h, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z4.h, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z8.h, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z16.h, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z31.h, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z7.h, p0/T_z, ptr( x7 ) ); dump();
ld1rh(z7.h, p1/T_z, ptr( x7 ) ); dump();
ld1rh(z7.h, p2/T_z, ptr( x7 ) ); dump();
ld1rh(z7.h, p4/T_z, ptr( x7 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x0 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x1 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x2 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x4 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x8 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x16 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x30 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( sp ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_and_broadcast_element2:1
ld1rh(z7.h, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z0.h, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z1.h, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z2.h, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z4.h, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z8.h, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z16.h, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z31.h, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z7.h, p0/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z7.h, p1/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z7.h, p2/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z7.h, p4/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x0, 30 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x1, 30 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x2, 30 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x4, 30 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x8, 30 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x16, 30 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x30, 30 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( sp, 30 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x7, 0 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x7, 2 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x7, 4 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x7, 8 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x7, 16 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x7, 32 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x7, 62 ) ); dump();
ld1rh(z7.h, p7/T_z, ptr( x7, 30 ) ); dump();
//SVE_load_and_broadcast_element2:2
ld1rh(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z0.s, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z1.s, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z2.s, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z4.s, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z8.s, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z16.s, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z31.s, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z7.s, p0/T_z, ptr( x7 ) ); dump();
ld1rh(z7.s, p1/T_z, ptr( x7 ) ); dump();
ld1rh(z7.s, p2/T_z, ptr( x7 ) ); dump();
ld1rh(z7.s, p4/T_z, ptr( x7 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x0 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x1 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x2 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x4 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x8 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x16 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x30 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( sp ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_and_broadcast_element2:3
ld1rh(z7.s, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z0.s, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z1.s, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z2.s, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z4.s, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z8.s, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z16.s, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z31.s, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z7.s, p0/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z7.s, p1/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z7.s, p2/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z7.s, p4/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x0, 30 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x1, 30 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x2, 30 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x4, 30 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x8, 30 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x16, 30 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x30, 30 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( sp, 30 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x7, 0 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x7, 2 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x7, 4 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x7, 8 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x7, 16 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x7, 32 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x7, 62 ) ); dump();
ld1rh(z7.s, p7/T_z, ptr( x7, 30 ) ); dump();
//SVE_load_and_broadcast_element2:4
ld1rh(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z0.d, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z1.d, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z2.d, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z4.d, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z8.d, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z16.d, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z31.d, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z7.d, p0/T_z, ptr( x7 ) ); dump();
ld1rh(z7.d, p1/T_z, ptr( x7 ) ); dump();
ld1rh(z7.d, p2/T_z, ptr( x7 ) ); dump();
ld1rh(z7.d, p4/T_z, ptr( x7 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x0 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x1 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x2 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x4 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x8 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x16 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x30 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( sp ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_and_broadcast_element2:5
ld1rh(z7.d, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z0.d, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z1.d, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z2.d, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z4.d, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z8.d, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z16.d, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z31.d, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z7.d, p0/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z7.d, p1/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z7.d, p2/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z7.d, p4/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x0, 30 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x1, 30 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x2, 30 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x4, 30 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x8, 30 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x16, 30 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x30, 30 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( sp, 30 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x7, 0 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x7, 2 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x7, 4 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x7, 8 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x7, 16 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x7, 32 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x7, 62 ) ); dump();
ld1rh(z7.d, p7/T_z, ptr( x7, 30 ) ); dump();
//SVE_load_and_broadcast_element3:0
ld1rsh(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1rsh(z0.s, p7/T_z, ptr( x7 ) ); dump();
ld1rsh(z1.s, p7/T_z, ptr( x7 ) ); dump();
ld1rsh(z2.s, p7/T_z, ptr( x7 ) ); dump();
ld1rsh(z4.s, p7/T_z, ptr( x7 ) ); dump();
ld1rsh(z8.s, p7/T_z, ptr( x7 ) ); dump();
ld1rsh(z16.s, p7/T_z, ptr( x7 ) ); dump();
ld1rsh(z31.s, p7/T_z, ptr( x7 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1rsh(z7.s, p0/T_z, ptr( x7 ) ); dump();
ld1rsh(z7.s, p1/T_z, ptr( x7 ) ); dump();
ld1rsh(z7.s, p2/T_z, ptr( x7 ) ); dump();
ld1rsh(z7.s, p4/T_z, ptr( x7 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x0 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x1 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x2 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x4 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x8 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x16 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x30 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( sp ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_and_broadcast_element3:1
ld1rsh(z7.s, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z0.s, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z1.s, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z2.s, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z4.s, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z8.s, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z16.s, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z31.s, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z7.s, p0/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z7.s, p1/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z7.s, p2/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z7.s, p4/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x0, 30 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x1, 30 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x2, 30 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x4, 30 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x8, 30 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x16, 30 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x30, 30 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( sp, 30 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x7, 0 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x7, 2 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x7, 4 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x7, 8 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x7, 16 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x7, 32 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x7, 62 ) ); dump();
ld1rsh(z7.s, p7/T_z, ptr( x7, 30 ) ); dump();
//SVE_load_and_broadcast_element3:2
ld1rsh(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsh(z0.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsh(z1.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsh(z2.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsh(z4.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsh(z8.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsh(z16.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsh(z31.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsh(z7.d, p0/T_z, ptr( x7 ) ); dump();
ld1rsh(z7.d, p1/T_z, ptr( x7 ) ); dump();
ld1rsh(z7.d, p2/T_z, ptr( x7 ) ); dump();
ld1rsh(z7.d, p4/T_z, ptr( x7 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x0 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x1 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x2 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x4 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x8 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x16 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x30 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( sp ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_and_broadcast_element3:3
ld1rsh(z7.d, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z0.d, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z1.d, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z2.d, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z4.d, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z8.d, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z16.d, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z31.d, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z7.d, p0/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z7.d, p1/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z7.d, p2/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z7.d, p4/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x0, 30 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x1, 30 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x2, 30 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x4, 30 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x8, 30 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x16, 30 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x30, 30 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( sp, 30 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x7, 30 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x7, 0 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x7, 2 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x7, 4 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x7, 8 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x7, 16 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x7, 32 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x7, 62 ) ); dump();
ld1rsh(z7.d, p7/T_z, ptr( x7, 30 ) ); dump();
//SVE_load_and_broadcast_element4:0
ld1rw(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1rw(z0.s, p7/T_z, ptr( x7 ) ); dump();
ld1rw(z1.s, p7/T_z, ptr( x7 ) ); dump();
ld1rw(z2.s, p7/T_z, ptr( x7 ) ); dump();
ld1rw(z4.s, p7/T_z, ptr( x7 ) ); dump();
ld1rw(z8.s, p7/T_z, ptr( x7 ) ); dump();
ld1rw(z16.s, p7/T_z, ptr( x7 ) ); dump();
ld1rw(z31.s, p7/T_z, ptr( x7 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1rw(z7.s, p0/T_z, ptr( x7 ) ); dump();
ld1rw(z7.s, p1/T_z, ptr( x7 ) ); dump();
ld1rw(z7.s, p2/T_z, ptr( x7 ) ); dump();
ld1rw(z7.s, p4/T_z, ptr( x7 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x0 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x1 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x2 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x4 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x8 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x16 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x30 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( sp ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_and_broadcast_element4:1
ld1rw(z7.s, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z0.s, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z1.s, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z2.s, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z4.s, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z8.s, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z16.s, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z31.s, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z7.s, p0/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z7.s, p1/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z7.s, p2/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z7.s, p4/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x0, 60 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x1, 60 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x2, 60 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x4, 60 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x8, 60 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x16, 60 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x30, 60 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( sp, 60 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x7, 0 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x7, 4 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x7, 8 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x7, 16 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x7, 32 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x7, 64 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x7, 124 ) ); dump();
ld1rw(z7.s, p7/T_z, ptr( x7, 60 ) ); dump();
//SVE_load_and_broadcast_element4:2
ld1rw(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rw(z0.d, p7/T_z, ptr( x7 ) ); dump();
ld1rw(z1.d, p7/T_z, ptr( x7 ) ); dump();
ld1rw(z2.d, p7/T_z, ptr( x7 ) ); dump();
ld1rw(z4.d, p7/T_z, ptr( x7 ) ); dump();
ld1rw(z8.d, p7/T_z, ptr( x7 ) ); dump();
ld1rw(z16.d, p7/T_z, ptr( x7 ) ); dump();
ld1rw(z31.d, p7/T_z, ptr( x7 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rw(z7.d, p0/T_z, ptr( x7 ) ); dump();
ld1rw(z7.d, p1/T_z, ptr( x7 ) ); dump();
ld1rw(z7.d, p2/T_z, ptr( x7 ) ); dump();
ld1rw(z7.d, p4/T_z, ptr( x7 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x0 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x1 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x2 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x4 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x8 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x16 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x30 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( sp ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_and_broadcast_element4:3
ld1rw(z7.d, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z0.d, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z1.d, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z2.d, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z4.d, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z8.d, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z16.d, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z31.d, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z7.d, p0/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z7.d, p1/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z7.d, p2/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z7.d, p4/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x0, 60 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x1, 60 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x2, 60 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x4, 60 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x8, 60 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x16, 60 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x30, 60 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( sp, 60 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x7, 60 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x7, 0 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x7, 4 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x7, 8 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x7, 16 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x7, 32 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x7, 64 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x7, 124 ) ); dump();
ld1rw(z7.d, p7/T_z, ptr( x7, 60 ) ); dump();
//SVE_load_and_broadcast_element5:0
ld1rsb(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z0.h, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z1.h, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z2.h, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z4.h, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z8.h, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z16.h, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z31.h, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z7.h, p0/T_z, ptr( x7 ) ); dump();
ld1rsb(z7.h, p1/T_z, ptr( x7 ) ); dump();
ld1rsb(z7.h, p2/T_z, ptr( x7 ) ); dump();
ld1rsb(z7.h, p4/T_z, ptr( x7 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x0 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x1 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x2 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x4 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x8 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x16 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x30 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( sp ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_and_broadcast_element5:1
ld1rsb(z7.h, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z0.h, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z1.h, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z2.h, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z4.h, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z8.h, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z16.h, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z31.h, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z7.h, p0/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z7.h, p1/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z7.h, p2/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z7.h, p4/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x0, 0x39 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x1, 0x39 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x2, 0x39 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x4, 0x39 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x8, 0x39 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x16, 0x39 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x30, 0x39 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( sp, 0x39 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x7, 0 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x7, 1 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x7, 2 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x7, 4 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x7, 8 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x7, 16 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x7, 32 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x7, 63 ) ); dump();
ld1rsb(z7.h, p7/T_z, ptr( x7, 0x39 ) ); dump();
//SVE_load_and_broadcast_element5:2
ld1rsb(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z0.s, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z1.s, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z2.s, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z4.s, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z8.s, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z16.s, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z31.s, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z7.s, p0/T_z, ptr( x7 ) ); dump();
ld1rsb(z7.s, p1/T_z, ptr( x7 ) ); dump();
ld1rsb(z7.s, p2/T_z, ptr( x7 ) ); dump();
ld1rsb(z7.s, p4/T_z, ptr( x7 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x0 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x1 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x2 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x4 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x8 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x16 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x30 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( sp ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_and_broadcast_element5:3
ld1rsb(z7.s, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z0.s, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z1.s, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z2.s, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z4.s, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z8.s, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z16.s, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z31.s, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z7.s, p0/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z7.s, p1/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z7.s, p2/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z7.s, p4/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x0, 0x39 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x1, 0x39 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x2, 0x39 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x4, 0x39 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x8, 0x39 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x16, 0x39 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x30, 0x39 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( sp, 0x39 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x7, 0 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x7, 1 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x7, 2 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x7, 4 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x7, 8 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x7, 16 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x7, 32 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x7, 63 ) ); dump();
ld1rsb(z7.s, p7/T_z, ptr( x7, 0x39 ) ); dump();
//SVE_load_and_broadcast_element5:4
ld1rsb(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z0.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z1.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z2.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z4.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z8.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z16.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z31.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z7.d, p0/T_z, ptr( x7 ) ); dump();
ld1rsb(z7.d, p1/T_z, ptr( x7 ) ); dump();
ld1rsb(z7.d, p2/T_z, ptr( x7 ) ); dump();
ld1rsb(z7.d, p4/T_z, ptr( x7 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x0 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x1 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x2 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x4 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x8 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x16 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x30 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( sp ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_and_broadcast_element5:5
ld1rsb(z7.d, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z0.d, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z1.d, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z2.d, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z4.d, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z8.d, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z16.d, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z31.d, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z7.d, p0/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z7.d, p1/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z7.d, p2/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z7.d, p4/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x0, 0x39 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x1, 0x39 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x2, 0x39 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x4, 0x39 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x8, 0x39 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x16, 0x39 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x30, 0x39 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( sp, 0x39 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x7, 0x39 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x7, 0 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x7, 1 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x7, 2 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x7, 4 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x7, 8 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x7, 16 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x7, 32 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x7, 63 ) ); dump();
ld1rsb(z7.d, p7/T_z, ptr( x7, 0x39 ) ); dump();
//SVE_load_and_broadcast_element6:0
ld1rd(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rd(z0.d, p7/T_z, ptr( x7 ) ); dump();
ld1rd(z1.d, p7/T_z, ptr( x7 ) ); dump();
ld1rd(z2.d, p7/T_z, ptr( x7 ) ); dump();
ld1rd(z4.d, p7/T_z, ptr( x7 ) ); dump();
ld1rd(z8.d, p7/T_z, ptr( x7 ) ); dump();
ld1rd(z16.d, p7/T_z, ptr( x7 ) ); dump();
ld1rd(z31.d, p7/T_z, ptr( x7 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rd(z7.d, p0/T_z, ptr( x7 ) ); dump();
ld1rd(z7.d, p1/T_z, ptr( x7 ) ); dump();
ld1rd(z7.d, p2/T_z, ptr( x7 ) ); dump();
ld1rd(z7.d, p4/T_z, ptr( x7 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x0 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x1 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x2 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x4 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x8 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x16 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x30 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( sp ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_and_broadcast_element6:1
ld1rd(z7.d, p7/T_z, ptr( x7, 120 ) ); dump();
ld1rd(z0.d, p7/T_z, ptr( x7, 120 ) ); dump();
ld1rd(z1.d, p7/T_z, ptr( x7, 120 ) ); dump();
ld1rd(z2.d, p7/T_z, ptr( x7, 120 ) ); dump();
ld1rd(z4.d, p7/T_z, ptr( x7, 120 ) ); dump();
ld1rd(z8.d, p7/T_z, ptr( x7, 120 ) ); dump();
ld1rd(z16.d, p7/T_z, ptr( x7, 120 ) ); dump();
ld1rd(z31.d, p7/T_z, ptr( x7, 120 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x7, 120 ) ); dump();
ld1rd(z7.d, p0/T_z, ptr( x7, 120 ) ); dump();
ld1rd(z7.d, p1/T_z, ptr( x7, 120 ) ); dump();
ld1rd(z7.d, p2/T_z, ptr( x7, 120 ) ); dump();
ld1rd(z7.d, p4/T_z, ptr( x7, 120 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x7, 120 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x7, 120 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x0, 120 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x1, 120 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x2, 120 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x4, 120 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x8, 120 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x16, 120 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x30, 120 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( sp, 120 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x7, 120 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x7, 0 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x7, 8 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x7, 16 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x7, 32 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x7, 64 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x7, 128 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x7, 248 ) ); dump();
ld1rd(z7.d, p7/T_z, ptr( x7, 120 ) ); dump();
//SVE_32_bit_gather_prefetch_scalar_plus_32_bit_scaled_offsets0:0
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, UXT ) ); dump();
prfb(PLDL1STRM_SVE, p7, ptr( x7, z7.s, UXT ) ); dump();
prfb(PLDL2KEEP_SVE, p7, ptr( x7, z7.s, UXT ) ); dump();
prfb(PLDL2STRM_SVE, p7, ptr( x7, z7.s, UXT ) ); dump();
prfb(PLDL3KEEP_SVE, p7, ptr( x7, z7.s, UXT ) ); dump();
prfb(PLDL3STRM_SVE, p7, ptr( x7, z7.s, UXT ) ); dump();
prfb(PSTL1KEEP_SVE, p7, ptr( x7, z7.s, UXT ) ); dump();
prfb(PSTL1STRM_SVE, p7, ptr( x7, z7.s, UXT ) ); dump();
prfb(PSTL2KEEP_SVE, p7, ptr( x7, z7.s, UXT ) ); dump();
prfb(PSTL2STRM_SVE, p7, ptr( x7, z7.s, UXT ) ); dump();
prfb(PSTL3KEEP_SVE, p7, ptr( x7, z7.s, UXT ) ); dump();
prfb(PSTL3STRM_SVE, p7, ptr( x7, z7.s, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p0, ptr( x7, z7.s, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p1, ptr( x7, z7.s, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p2, ptr( x7, z7.s, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p4, ptr( x7, z7.s, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x0, z7.s, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x1, z7.s, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x2, z7.s, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x4, z7.s, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x8, z7.s, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x16, z7.s, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x30, z7.s, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( sp, z7.s, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z0.s, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z1.s, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z2.s, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z4.s, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z8.s, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z16.s, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z31.s, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, SXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, UXT ) ); dump();
//SVE_32_bit_gather_prefetch_scalar_plus_32_bit_scaled_offsets1:0
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
prfh(PLDL1STRM_SVE, p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
prfh(PLDL2KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
prfh(PLDL2STRM_SVE, p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
prfh(PLDL3KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
prfh(PLDL3STRM_SVE, p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
prfh(PSTL1KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
prfh(PSTL1STRM_SVE, p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
prfh(PSTL2KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
prfh(PSTL2STRM_SVE, p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
prfh(PSTL3KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
prfh(PSTL3STRM_SVE, p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p0, ptr( x7, z7.s, UXTW, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p1, ptr( x7, z7.s, UXTW, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p2, ptr( x7, z7.s, UXTW, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p4, ptr( x7, z7.s, UXTW, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x0, z7.s, UXTW, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x1, z7.s, UXTW, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x2, z7.s, UXTW, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x4, z7.s, UXTW, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x8, z7.s, UXTW, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x16, z7.s, UXTW, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x30, z7.s, UXTW, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( sp, z7.s, UXTW, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z0.s, UXTW, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z1.s, UXTW, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z2.s, UXTW, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z4.s, UXTW, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z8.s, UXTW, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z16.s, UXTW, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z31.s, UXTW, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, SXTW, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
//SVE_32_bit_gather_prefetch_scalar_plus_32_bit_scaled_offsets2:0
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
prfw(PLDL1STRM_SVE, p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
prfw(PLDL2KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
prfw(PLDL2STRM_SVE, p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
prfw(PLDL3KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
prfw(PLDL3STRM_SVE, p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
prfw(PSTL1KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
prfw(PSTL1STRM_SVE, p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
prfw(PSTL2KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
prfw(PSTL2STRM_SVE, p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
prfw(PSTL3KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
prfw(PSTL3STRM_SVE, p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p0, ptr( x7, z7.s, UXTW, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p1, ptr( x7, z7.s, UXTW, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p2, ptr( x7, z7.s, UXTW, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p4, ptr( x7, z7.s, UXTW, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x0, z7.s, UXTW, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x1, z7.s, UXTW, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x2, z7.s, UXTW, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x4, z7.s, UXTW, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x8, z7.s, UXTW, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x16, z7.s, UXTW, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x30, z7.s, UXTW, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( sp, z7.s, UXTW, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z0.s, UXTW, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z1.s, UXTW, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z2.s, UXTW, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z4.s, UXTW, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z8.s, UXTW, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z16.s, UXTW, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z31.s, UXTW, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, SXTW, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
//SVE_32_bit_gather_prefetch_scalar_plus_32_bit_scaled_offsets3:0
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 3 ) ); dump();
prfd(PLDL1STRM_SVE, p7, ptr( x7, z7.s, UXTW, 3 ) ); dump();
prfd(PLDL2KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 3 ) ); dump();
prfd(PLDL2STRM_SVE, p7, ptr( x7, z7.s, UXTW, 3 ) ); dump();
prfd(PLDL3KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 3 ) ); dump();
prfd(PLDL3STRM_SVE, p7, ptr( x7, z7.s, UXTW, 3 ) ); dump();
prfd(PSTL1KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 3 ) ); dump();
prfd(PSTL1STRM_SVE, p7, ptr( x7, z7.s, UXTW, 3 ) ); dump();
prfd(PSTL2KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 3 ) ); dump();
prfd(PSTL2STRM_SVE, p7, ptr( x7, z7.s, UXTW, 3 ) ); dump();
prfd(PSTL3KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 3 ) ); dump();
prfd(PSTL3STRM_SVE, p7, ptr( x7, z7.s, UXTW, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p0, ptr( x7, z7.s, UXTW, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p1, ptr( x7, z7.s, UXTW, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p2, ptr( x7, z7.s, UXTW, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p4, ptr( x7, z7.s, UXTW, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x0, z7.s, UXTW, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x1, z7.s, UXTW, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x2, z7.s, UXTW, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x4, z7.s, UXTW, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x8, z7.s, UXTW, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x16, z7.s, UXTW, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x30, z7.s, UXTW, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( sp, z7.s, UXTW, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z0.s, UXTW, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z1.s, UXTW, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z2.s, UXTW, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z4.s, UXTW, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z8.s, UXTW, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z16.s, UXTW, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z31.s, UXTW, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, SXTW, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z7.s, UXTW, 3 ) ); dump();
//SVE_32_bit_gather_load_halfwords_scalar_plus_32_bit_scaled_offsets0:0
ld1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z0.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z1.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z2.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z4.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z8.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z16.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z31.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p0/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p1/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p2/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p4/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x0, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x1, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x2, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x4, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x8, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x16, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x30, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( sp, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z0.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z1.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z2.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z4.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z8.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z16.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z31.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z7.s, SXTW, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z0.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z1.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z2.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z4.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z8.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z16.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z31.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p0/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p1/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p2/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p4/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x0, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x1, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x2, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x4, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x8, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x16, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x30, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( sp, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z0.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z1.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z2.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z4.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z8.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z16.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z31.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z7.s, SXTW, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z0.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z1.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z2.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z4.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z8.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z16.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z31.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p0/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p1/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p2/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p4/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x0, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x1, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x2, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x4, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x8, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x16, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x30, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( sp, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z0.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z1.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z2.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z4.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z8.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z16.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z31.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z7.s, SXTW, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z0.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z1.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z2.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z4.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z8.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z16.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z31.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p0/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p1/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p2/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p4/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x0, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x1, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x2, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x4, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x8, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x16, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x30, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( sp, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z0.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z1.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z2.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z4.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z8.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z16.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z31.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z7.s, SXTW, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 1 ) ); dump();
//SVE_32_bit_gather_load_halfwords_scalar_plus_32_bit_scaled_offsets0:1
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z0.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z1.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z2.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z4.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z8.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z16.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z31.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p0/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p1/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p2/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p4/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x0, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x1, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x2, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x4, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x8, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x16, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x30, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( sp, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z0.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z1.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z2.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z4.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z8.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z16.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z31.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, SXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z0.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z1.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z2.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z4.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z8.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z16.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z31.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p0/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p1/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p2/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p4/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x0, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x1, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x2, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x4, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x8, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x16, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x30, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( sp, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z0.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z1.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z2.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z4.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z8.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z16.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z31.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, SXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z0.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z1.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z2.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z4.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z8.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z16.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z31.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p0/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p1/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p2/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p4/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x0, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x1, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x2, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x4, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x8, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x16, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x30, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( sp, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z0.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z1.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z2.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z4.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z8.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z16.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z31.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, SXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z0.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z1.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z2.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z4.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z8.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z16.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z31.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p0/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p1/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p2/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p4/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x0, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x1, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x2, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x4, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x8, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x16, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x30, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( sp, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z0.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z1.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z2.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z4.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z8.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z16.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z31.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, SXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
//SVE_32_bit_gather_load_halfwords_scalar_plus_32_bit_scaled_offsets0:2
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z0.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z1.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z2.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z4.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z8.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z16.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z31.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z7.d, p0/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z7.d, p1/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z7.d, p2/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z7.d, p4/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x0, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x1, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x2, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x4, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x8, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x16, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x30, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( sp, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z0.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z1.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z2.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z4.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z8.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z16.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z31.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, SXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z0.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z1.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z2.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z4.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z8.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z16.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z31.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p0/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p1/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p2/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p4/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x0, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x1, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x2, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x4, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x8, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x16, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x30, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( sp, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z0.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z1.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z2.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z4.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z8.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z16.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z31.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, SXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z0.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z1.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z2.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z4.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z8.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z16.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z31.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z7.d, p0/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z7.d, p1/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z7.d, p2/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z7.d, p4/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x0, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x1, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x2, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x4, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x8, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x16, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x30, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( sp, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z0.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z1.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z2.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z4.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z8.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z16.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z31.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, SXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z0.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z1.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z2.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z4.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z8.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z16.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z31.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z7.d, p0/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z7.d, p1/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z7.d, p2/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z7.d, p4/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x0, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x1, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x2, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x4, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x8, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x16, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x30, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( sp, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z0.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z1.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z2.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z4.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z8.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z16.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z31.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, SXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
//SVE_32_bit_gather_load_halfwords_scalar_plus_32_bit_scaled_offsets0:3
ld1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sh(z0.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sh(z1.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sh(z2.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sh(z4.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sh(z8.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sh(z16.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sh(z31.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sh(z7.s, p0/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sh(z7.s, p1/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sh(z7.s, p2/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sh(z7.s, p4/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x0, z7.s, UXT ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x1, z7.s, UXT ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x2, z7.s, UXT ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x4, z7.s, UXT ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x8, z7.s, UXT ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x16, z7.s, UXT ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x30, z7.s, UXT ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( sp, z7.s, UXT ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z0.s, UXT ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z1.s, UXT ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z2.s, UXT ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z4.s, UXT ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z8.s, UXT ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z16.s, UXT ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z31.s, UXT ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z7.s, SXT ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sh(z0.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sh(z1.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sh(z2.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sh(z4.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sh(z8.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sh(z16.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sh(z31.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sh(z7.s, p0/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sh(z7.s, p1/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sh(z7.s, p2/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sh(z7.s, p4/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x0, z7.s, UXT ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x1, z7.s, UXT ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x2, z7.s, UXT ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x4, z7.s, UXT ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x8, z7.s, UXT ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x16, z7.s, UXT ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x30, z7.s, UXT ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( sp, z7.s, UXT ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z0.s, UXT ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z1.s, UXT ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z2.s, UXT ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z4.s, UXT ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z8.s, UXT ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z16.s, UXT ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z31.s, UXT ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z7.s, SXT ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1h(z0.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1h(z1.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1h(z2.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1h(z4.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1h(z8.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1h(z16.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1h(z31.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1h(z7.s, p0/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1h(z7.s, p1/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1h(z7.s, p2/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1h(z7.s, p4/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x0, z7.s, UXT ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x1, z7.s, UXT ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x2, z7.s, UXT ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x4, z7.s, UXT ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x8, z7.s, UXT ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x16, z7.s, UXT ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x30, z7.s, UXT ) ); dump();
ld1h(z7.s, p7/T_z, ptr( sp, z7.s, UXT ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z0.s, UXT ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z1.s, UXT ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z2.s, UXT ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z4.s, UXT ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z8.s, UXT ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z16.s, UXT ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z31.s, UXT ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z7.s, SXT ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1h(z0.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1h(z1.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1h(z2.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1h(z4.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1h(z8.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1h(z16.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1h(z31.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1h(z7.s, p0/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1h(z7.s, p1/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1h(z7.s, p2/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1h(z7.s, p4/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x0, z7.s, UXT ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x1, z7.s, UXT ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x2, z7.s, UXT ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x4, z7.s, UXT ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x8, z7.s, UXT ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x16, z7.s, UXT ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x30, z7.s, UXT ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( sp, z7.s, UXT ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z0.s, UXT ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z1.s, UXT ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z2.s, UXT ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z4.s, UXT ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z8.s, UXT ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z16.s, UXT ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z31.s, UXT ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z7.s, SXT ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
//SVE_32_bit_gather_load_halfwords_scalar_plus_32_bit_scaled_offsets0:4
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z0.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z1.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z2.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z4.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z8.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z16.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z31.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p0/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p1/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p2/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p4/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x0, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x1, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x2, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x4, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x8, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x16, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x30, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( sp, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z0.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z1.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z2.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z4.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z8.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z16.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z31.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z0.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z1.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z2.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z4.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z8.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z16.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z31.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p0/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p1/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p2/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p4/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x0, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x1, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x2, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x4, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x8, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x16, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x30, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( sp, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z0.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z1.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z2.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z4.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z8.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z16.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z31.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z0.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z1.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z2.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z4.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z8.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z16.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z31.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p0/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p1/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p2/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p4/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x0, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x1, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x2, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x4, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x8, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x16, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x30, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( sp, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z0.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z1.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z2.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z4.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z8.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z16.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z31.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z0.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z1.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z2.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z4.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z8.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z16.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z31.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p0/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p1/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p2/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p4/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x0, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x1, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x2, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x4, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x8, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x16, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x30, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( sp, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z0.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z1.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z2.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z4.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z8.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z16.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z31.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
//SVE_32_bit_gather_load_halfwords_scalar_plus_32_bit_scaled_offsets0:5
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z0.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z1.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z2.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z4.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z8.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z16.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z31.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z7.d, p0/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z7.d, p1/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z7.d, p2/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z7.d, p4/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x0, z7.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x1, z7.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x2, z7.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x4, z7.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x8, z7.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x16, z7.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x30, z7.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( sp, z7.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z0.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z1.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z2.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z4.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z8.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z16.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z31.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z0.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z1.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z2.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z4.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z8.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z16.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z31.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z7.d, p0/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z7.d, p1/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z7.d, p2/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z7.d, p4/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x0, z7.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x1, z7.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x2, z7.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x4, z7.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x8, z7.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x16, z7.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x30, z7.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( sp, z7.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z0.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z1.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z2.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z4.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z8.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z16.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z31.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z0.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z1.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z2.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z4.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z8.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z16.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z31.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z7.d, p0/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z7.d, p1/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z7.d, p2/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z7.d, p4/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x0, z7.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x1, z7.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x2, z7.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x4, z7.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x8, z7.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x16, z7.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x30, z7.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( sp, z7.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z0.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z1.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z2.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z4.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z8.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z16.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z31.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z0.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z1.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z2.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z4.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z8.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z16.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z31.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z7.d, p0/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z7.d, p1/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z7.d, p2/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z7.d, p4/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x0, z7.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x1, z7.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x2, z7.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x4, z7.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x8, z7.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x16, z7.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x30, z7.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( sp, z7.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z0.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z1.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z2.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z4.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z8.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z16.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z31.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
//SVE_32_bit_gather_load_words_scalar_plus_32_bit_scaled_offsets0:0
ld1w(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z0.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z1.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z2.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z4.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z8.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z16.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z31.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p0/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p1/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p2/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p4/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x0, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x1, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x2, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x4, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x8, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x16, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x30, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( sp, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z0.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z1.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z2.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z4.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z8.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z16.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z31.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z7.s, SXTW, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z0.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z1.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z2.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z4.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z8.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z16.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z31.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p0/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p1/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p2/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p4/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x0, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x1, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x2, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x4, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x8, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x16, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x30, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( sp, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z0.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z1.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z2.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z4.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z8.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z16.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z31.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z7.s, SXTW, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z7.s, UXTW, 2 ) ); dump();
//SVE_32_bit_gather_load_words_scalar_plus_32_bit_scaled_offsets0:1
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z0.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z1.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z2.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z4.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z8.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z16.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z31.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p0/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p1/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p2/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p4/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x0, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x1, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x2, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x4, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x8, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x16, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x30, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( sp, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z0.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z1.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z2.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z4.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z8.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z16.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z31.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, SXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z0.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z1.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z2.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z4.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z8.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z16.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z31.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p0/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p1/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p2/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p4/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x0, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x1, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x2, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x4, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x8, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x16, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x30, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( sp, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z0.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z1.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z2.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z4.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z8.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z16.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z31.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, SXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
//SVE_32_bit_gather_load_words_scalar_plus_32_bit_scaled_offsets0:2
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z0.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z1.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z2.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z4.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z8.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z16.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z31.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z7.d, p0/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z7.d, p1/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z7.d, p2/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z7.d, p4/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x0, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x1, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x2, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x4, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x8, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x16, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x30, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( sp, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z0.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z1.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z2.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z4.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z8.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z16.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z31.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, SXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z0.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z1.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z2.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z4.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z8.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z16.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z31.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z7.d, p0/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z7.d, p1/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z7.d, p2/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z7.d, p4/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x0, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x1, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x2, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x4, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x8, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x16, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x30, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( sp, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z0.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z1.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z2.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z4.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z8.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z16.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z31.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, SXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
//SVE_32_bit_gather_load_words_scalar_plus_32_bit_scaled_offsets0:3
ld1w(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1w(z0.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1w(z1.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1w(z2.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1w(z4.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1w(z8.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1w(z16.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1w(z31.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1w(z7.s, p0/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1w(z7.s, p1/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1w(z7.s, p2/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1w(z7.s, p4/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x0, z7.s, UXT ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x1, z7.s, UXT ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x2, z7.s, UXT ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x4, z7.s, UXT ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x8, z7.s, UXT ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x16, z7.s, UXT ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x30, z7.s, UXT ) ); dump();
ld1w(z7.s, p7/T_z, ptr( sp, z7.s, UXT ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z0.s, UXT ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z1.s, UXT ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z2.s, UXT ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z4.s, UXT ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z8.s, UXT ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z16.s, UXT ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z31.s, UXT ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z7.s, SXT ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1w(z0.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1w(z1.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1w(z2.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1w(z4.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1w(z8.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1w(z16.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1w(z31.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1w(z7.s, p0/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1w(z7.s, p1/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1w(z7.s, p2/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1w(z7.s, p4/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x0, z7.s, UXT ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x1, z7.s, UXT ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x2, z7.s, UXT ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x4, z7.s, UXT ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x8, z7.s, UXT ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x16, z7.s, UXT ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x30, z7.s, UXT ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( sp, z7.s, UXT ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z0.s, UXT ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z1.s, UXT ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z2.s, UXT ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z4.s, UXT ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z8.s, UXT ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z16.s, UXT ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z31.s, UXT ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z7.s, SXT ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, z7.s, UXT ) ); dump();
//SVE_32_bit_gather_load_words_scalar_plus_32_bit_scaled_offsets0:4
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z0.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z1.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z2.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z4.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z8.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z16.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z31.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p0/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p1/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p2/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p4/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x0, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x1, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x2, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x4, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x8, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x16, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x30, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( sp, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z0.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z1.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z2.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z4.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z8.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z16.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z31.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z0.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z1.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z2.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z4.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z8.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z16.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z31.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p0/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p1/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p2/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p4/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x0, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x1, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x2, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x4, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x8, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x16, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x30, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( sp, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z0.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z1.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z2.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z4.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z8.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z16.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z31.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
//SVE_32_bit_gather_load_words_scalar_plus_32_bit_scaled_offsets0:5
ld1w(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z0.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z1.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z2.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z4.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z8.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z16.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z31.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z7.d, p0/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z7.d, p1/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z7.d, p2/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z7.d, p4/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x0, z7.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x1, z7.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x2, z7.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x4, z7.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x8, z7.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x16, z7.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x30, z7.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( sp, z7.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z0.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z1.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z2.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z4.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z8.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z16.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z31.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z0.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z1.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z2.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z4.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z8.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z16.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z31.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z7.d, p0/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z7.d, p1/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z7.d, p2/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z7.d, p4/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x0, z7.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x1, z7.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x2, z7.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x4, z7.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x8, z7.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x16, z7.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x30, z7.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( sp, z7.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z0.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z1.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z2.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z4.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z8.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z16.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z31.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
//SVE_load_predicate_register0:0
ldr(p7, ptr( x7 ) ); dump();
ldr(p0, ptr( x7 ) ); dump();
ldr(p1, ptr( x7 ) ); dump();
ldr(p2, ptr( x7 ) ); dump();
ldr(p4, ptr( x7 ) ); dump();
ldr(p7, ptr( x7 ) ); dump();
ldr(p7, ptr( x7 ) ); dump();
ldr(p7, ptr( x0 ) ); dump();
ldr(p7, ptr( x1 ) ); dump();
ldr(p7, ptr( x2 ) ); dump();
ldr(p7, ptr( x4 ) ); dump();
ldr(p7, ptr( x8 ) ); dump();
ldr(p7, ptr( x16 ) ); dump();
ldr(p7, ptr( x30 ) ); dump();
ldr(p7, ptr( sp ) ); dump();
ldr(p7, ptr( x7 ) ); dump();
//SVE_load_predicate_register0:1
ldr(p7, ptr( x7, 127, MUL_VL ) ); dump();
ldr(p0, ptr( x7, 127, MUL_VL ) ); dump();
ldr(p1, ptr( x7, 127, MUL_VL ) ); dump();
ldr(p2, ptr( x7, 127, MUL_VL ) ); dump();
ldr(p4, ptr( x7, 127, MUL_VL ) ); dump();
ldr(p7, ptr( x7, 127, MUL_VL ) ); dump();
ldr(p7, ptr( x7, 127, MUL_VL ) ); dump();
ldr(p7, ptr( x0, 127, MUL_VL ) ); dump();
ldr(p7, ptr( x1, 127, MUL_VL ) ); dump();
ldr(p7, ptr( x2, 127, MUL_VL ) ); dump();
ldr(p7, ptr( x4, 127, MUL_VL ) ); dump();
ldr(p7, ptr( x8, 127, MUL_VL ) ); dump();
ldr(p7, ptr( x16, 127, MUL_VL ) ); dump();
ldr(p7, ptr( x30, 127, MUL_VL ) ); dump();
ldr(p7, ptr( sp, 127, MUL_VL ) ); dump();
ldr(p7, ptr( x7, 127, MUL_VL ) ); dump();
ldr(p7, ptr( x7, -256, MUL_VL ) ); dump();
ldr(p7, ptr( x7, -128, MUL_VL ) ); dump();
ldr(p7, ptr( x7, -64, MUL_VL ) ); dump();
ldr(p7, ptr( x7, -32, MUL_VL ) ); dump();
ldr(p7, ptr( x7, -16, MUL_VL ) ); dump();
ldr(p7, ptr( x7, -8, MUL_VL ) ); dump();
ldr(p7, ptr( x7, -4, MUL_VL ) ); dump();
ldr(p7, ptr( x7, -2, MUL_VL ) ); dump();
ldr(p7, ptr( x7, -1, MUL_VL ) ); dump();
ldr(p7, ptr( x7, 0, MUL_VL ) ); dump();
ldr(p7, ptr( x7, 1, MUL_VL ) ); dump();
ldr(p7, ptr( x7, 2, MUL_VL ) ); dump();
ldr(p7, ptr( x7, 4, MUL_VL ) ); dump();
ldr(p7, ptr( x7, 8, MUL_VL ) ); dump();
ldr(p7, ptr( x7, 16, MUL_VL ) ); dump();
ldr(p7, ptr( x7, 32, MUL_VL ) ); dump();
ldr(p7, ptr( x7, 64, MUL_VL ) ); dump();
ldr(p7, ptr( x7, 128, MUL_VL ) ); dump();
ldr(p7, ptr( x7, 255, MUL_VL ) ); dump();
ldr(p7, ptr( x7, 127, MUL_VL ) ); dump();
ldr(p7, ptr( x7, 127, MUL_VL ) ); dump();
//SVE_contiguous_prefetch_scalar_plus_immediate0:0
prfb(PLDL1KEEP_SVE, p7, ptr( x7 ) ); dump();
prfb(PLDL1STRM_SVE, p7, ptr( x7 ) ); dump();
prfb(PLDL2KEEP_SVE, p7, ptr( x7 ) ); dump();
prfb(PLDL2STRM_SVE, p7, ptr( x7 ) ); dump();
prfb(PLDL3KEEP_SVE, p7, ptr( x7 ) ); dump();
prfb(PLDL3STRM_SVE, p7, ptr( x7 ) ); dump();
prfb(PSTL1KEEP_SVE, p7, ptr( x7 ) ); dump();
prfb(PSTL1STRM_SVE, p7, ptr( x7 ) ); dump();
prfb(PSTL2KEEP_SVE, p7, ptr( x7 ) ); dump();
prfb(PSTL2STRM_SVE, p7, ptr( x7 ) ); dump();
prfb(PSTL3KEEP_SVE, p7, ptr( x7 ) ); dump();
prfb(PSTL3STRM_SVE, p7, ptr( x7 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7 ) ); dump();
prfb(PLDL1KEEP_SVE, p0, ptr( x7 ) ); dump();
prfb(PLDL1KEEP_SVE, p1, ptr( x7 ) ); dump();
prfb(PLDL1KEEP_SVE, p2, ptr( x7 ) ); dump();
prfb(PLDL1KEEP_SVE, p4, ptr( x7 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x0 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x1 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x2 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x4 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x8 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x16 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x30 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( sp ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7 ) ); dump();
prfh(PLDL1STRM_SVE, p7, ptr( x7 ) ); dump();
prfh(PLDL2KEEP_SVE, p7, ptr( x7 ) ); dump();
prfh(PLDL2STRM_SVE, p7, ptr( x7 ) ); dump();
prfh(PLDL3KEEP_SVE, p7, ptr( x7 ) ); dump();
prfh(PLDL3STRM_SVE, p7, ptr( x7 ) ); dump();
prfh(PSTL1KEEP_SVE, p7, ptr( x7 ) ); dump();
prfh(PSTL1STRM_SVE, p7, ptr( x7 ) ); dump();
prfh(PSTL2KEEP_SVE, p7, ptr( x7 ) ); dump();
prfh(PSTL2STRM_SVE, p7, ptr( x7 ) ); dump();
prfh(PSTL3KEEP_SVE, p7, ptr( x7 ) ); dump();
prfh(PSTL3STRM_SVE, p7, ptr( x7 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7 ) ); dump();
prfh(PLDL1KEEP_SVE, p0, ptr( x7 ) ); dump();
prfh(PLDL1KEEP_SVE, p1, ptr( x7 ) ); dump();
prfh(PLDL1KEEP_SVE, p2, ptr( x7 ) ); dump();
prfh(PLDL1KEEP_SVE, p4, ptr( x7 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x0 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x2 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x4 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x8 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x16 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( sp ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7 ) ); dump();
prfw(PLDL1STRM_SVE, p7, ptr( x7 ) ); dump();
prfw(PLDL2KEEP_SVE, p7, ptr( x7 ) ); dump();
prfw(PLDL2STRM_SVE, p7, ptr( x7 ) ); dump();
prfw(PLDL3KEEP_SVE, p7, ptr( x7 ) ); dump();
prfw(PLDL3STRM_SVE, p7, ptr( x7 ) ); dump();
prfw(PSTL1KEEP_SVE, p7, ptr( x7 ) ); dump();
prfw(PSTL1STRM_SVE, p7, ptr( x7 ) ); dump();
prfw(PSTL2KEEP_SVE, p7, ptr( x7 ) ); dump();
prfw(PSTL2STRM_SVE, p7, ptr( x7 ) ); dump();
prfw(PSTL3KEEP_SVE, p7, ptr( x7 ) ); dump();
prfw(PSTL3STRM_SVE, p7, ptr( x7 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7 ) ); dump();
prfw(PLDL1KEEP_SVE, p0, ptr( x7 ) ); dump();
prfw(PLDL1KEEP_SVE, p1, ptr( x7 ) ); dump();
prfw(PLDL1KEEP_SVE, p2, ptr( x7 ) ); dump();
prfw(PLDL1KEEP_SVE, p4, ptr( x7 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x0 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x1 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x4 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x8 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x16 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x30 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( sp ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7 ) ); dump();
prfd(PLDL1STRM_SVE, p7, ptr( x7 ) ); dump();
prfd(PLDL2KEEP_SVE, p7, ptr( x7 ) ); dump();
prfd(PLDL2STRM_SVE, p7, ptr( x7 ) ); dump();
prfd(PLDL3KEEP_SVE, p7, ptr( x7 ) ); dump();
prfd(PLDL3STRM_SVE, p7, ptr( x7 ) ); dump();
prfd(PSTL1KEEP_SVE, p7, ptr( x7 ) ); dump();
prfd(PSTL1STRM_SVE, p7, ptr( x7 ) ); dump();
prfd(PSTL2KEEP_SVE, p7, ptr( x7 ) ); dump();
prfd(PSTL2STRM_SVE, p7, ptr( x7 ) ); dump();
prfd(PSTL3KEEP_SVE, p7, ptr( x7 ) ); dump();
prfd(PSTL3STRM_SVE, p7, ptr( x7 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7 ) ); dump();
prfd(PLDL1KEEP_SVE, p0, ptr( x7 ) ); dump();
prfd(PLDL1KEEP_SVE, p1, ptr( x7 ) ); dump();
prfd(PLDL1KEEP_SVE, p2, ptr( x7 ) ); dump();
prfd(PLDL1KEEP_SVE, p4, ptr( x7 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x0 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x1 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x2 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x4 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x8 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x16 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x30 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( sp ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7 ) ); dump();
//SVE_contiguous_prefetch_scalar_plus_immediate0:1
prfb(PLDL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfb(PLDL1STRM_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfb(PLDL2KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfb(PLDL2STRM_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfb(PLDL3KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfb(PLDL3STRM_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfb(PSTL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfb(PSTL1STRM_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfb(PSTL2KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfb(PSTL2STRM_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfb(PSTL3KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfb(PSTL3STRM_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfb(PLDL1KEEP_SVE, p0, ptr( x7, -8, MUL_VL ) ); dump();
prfb(PLDL1KEEP_SVE, p1, ptr( x7, -8, MUL_VL ) ); dump();
prfb(PLDL1KEEP_SVE, p2, ptr( x7, -8, MUL_VL ) ); dump();
prfb(PLDL1KEEP_SVE, p4, ptr( x7, -8, MUL_VL ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x0, -8, MUL_VL ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x1, -8, MUL_VL ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x2, -8, MUL_VL ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x4, -8, MUL_VL ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x8, -8, MUL_VL ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x16, -8, MUL_VL ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x30, -8, MUL_VL ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( sp, -8, MUL_VL ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, -4, MUL_VL ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, -2, MUL_VL ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, -1, MUL_VL ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, 0, MUL_VL ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, 1, MUL_VL ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, 2, MUL_VL ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, 4, MUL_VL ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, 7, MUL_VL ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfh(PLDL1STRM_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfh(PLDL2KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfh(PLDL2STRM_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfh(PLDL3KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfh(PLDL3STRM_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfh(PSTL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfh(PSTL1STRM_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfh(PSTL2KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfh(PSTL2STRM_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfh(PSTL3KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfh(PSTL3STRM_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfh(PLDL1KEEP_SVE, p0, ptr( x7, -8, MUL_VL ) ); dump();
prfh(PLDL1KEEP_SVE, p1, ptr( x7, -8, MUL_VL ) ); dump();
prfh(PLDL1KEEP_SVE, p2, ptr( x7, -8, MUL_VL ) ); dump();
prfh(PLDL1KEEP_SVE, p4, ptr( x7, -8, MUL_VL ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x0, -8, MUL_VL ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x1, -8, MUL_VL ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x2, -8, MUL_VL ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x4, -8, MUL_VL ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x8, -8, MUL_VL ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x16, -8, MUL_VL ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x30, -8, MUL_VL ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( sp, -8, MUL_VL ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, -4, MUL_VL ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, -2, MUL_VL ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, -1, MUL_VL ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, 0, MUL_VL ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, 1, MUL_VL ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, 2, MUL_VL ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, 4, MUL_VL ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, 7, MUL_VL ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfw(PLDL1STRM_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfw(PLDL2KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfw(PLDL2STRM_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfw(PLDL3KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfw(PLDL3STRM_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfw(PSTL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfw(PSTL1STRM_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfw(PSTL2KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfw(PSTL2STRM_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfw(PSTL3KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfw(PSTL3STRM_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfw(PLDL1KEEP_SVE, p0, ptr( x7, -8, MUL_VL ) ); dump();
prfw(PLDL1KEEP_SVE, p1, ptr( x7, -8, MUL_VL ) ); dump();
prfw(PLDL1KEEP_SVE, p2, ptr( x7, -8, MUL_VL ) ); dump();
prfw(PLDL1KEEP_SVE, p4, ptr( x7, -8, MUL_VL ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x0, -8, MUL_VL ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x1, -8, MUL_VL ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x2, -8, MUL_VL ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x4, -8, MUL_VL ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x8, -8, MUL_VL ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x16, -8, MUL_VL ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x30, -8, MUL_VL ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( sp, -8, MUL_VL ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, -4, MUL_VL ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, -2, MUL_VL ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, -1, MUL_VL ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, 0, MUL_VL ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, 1, MUL_VL ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, 2, MUL_VL ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, 4, MUL_VL ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, 7, MUL_VL ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfd(PLDL1STRM_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfd(PLDL2KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfd(PLDL2STRM_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfd(PLDL3KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfd(PLDL3STRM_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfd(PSTL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfd(PSTL1STRM_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfd(PSTL2KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfd(PSTL2STRM_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfd(PSTL3KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfd(PSTL3STRM_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfd(PLDL1KEEP_SVE, p0, ptr( x7, -8, MUL_VL ) ); dump();
prfd(PLDL1KEEP_SVE, p1, ptr( x7, -8, MUL_VL ) ); dump();
prfd(PLDL1KEEP_SVE, p2, ptr( x7, -8, MUL_VL ) ); dump();
prfd(PLDL1KEEP_SVE, p4, ptr( x7, -8, MUL_VL ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x0, -8, MUL_VL ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x1, -8, MUL_VL ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x2, -8, MUL_VL ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x4, -8, MUL_VL ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x8, -8, MUL_VL ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x16, -8, MUL_VL ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x30, -8, MUL_VL ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( sp, -8, MUL_VL ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, -4, MUL_VL ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, -2, MUL_VL ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, -1, MUL_VL ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, 0, MUL_VL ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, 1, MUL_VL ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, 2, MUL_VL ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, 4, MUL_VL ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, 7, MUL_VL ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, -8, MUL_VL ) ); dump();
//SVE_load_and_broadcast_quadword_scalar_plus_scalar0:0
ld1rqb(z7.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld1rqb(z0.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld1rqb(z1.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld1rqb(z2.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld1rqb(z4.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld1rqb(z8.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld1rqb(z16.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld1rqb(z31.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld1rqb(z7.b, p0/T_z, ptr( x7, x0 ) ); dump();
ld1rqb(z7.b, p1/T_z, ptr( x7, x0 ) ); dump();
ld1rqb(z7.b, p2/T_z, ptr( x7, x0 ) ); dump();
ld1rqb(z7.b, p4/T_z, ptr( x7, x0 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x0, x0 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x1, x0 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x2, x0 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x4, x0 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x8, x0 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x16, x0 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x30, x0 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( sp, x0 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x7, x1 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x7, x2 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x7, x4 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x7, x8 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x7, x16 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x7, x30 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x7, x0 ) ); dump();
//SVE_load_and_broadcast_quadword_scalar_plus_scalar1:0
ld1rqh(z7.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1rqh(z0.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1rqh(z1.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1rqh(z2.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1rqh(z4.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1rqh(z8.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1rqh(z16.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1rqh(z31.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1rqh(z7.h, p0/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1rqh(z7.h, p1/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1rqh(z7.h, p2/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1rqh(z7.h, p4/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x0, x0, LSL, 1 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x1, x0, LSL, 1 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x2, x0, LSL, 1 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x4, x0, LSL, 1 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x8, x0, LSL, 1 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x16, x0, LSL, 1 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x30, x0, LSL, 1 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( sp, x0, LSL, 1 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7, x1, LSL, 1 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7, x2, LSL, 1 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7, x4, LSL, 1 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7, x8, LSL, 1 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7, x16, LSL, 1 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7, x30, LSL, 1 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
//SVE_load_and_broadcast_quadword_scalar_plus_scalar2:0
ld1rqw(z7.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1rqw(z0.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1rqw(z1.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1rqw(z2.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1rqw(z4.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1rqw(z8.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1rqw(z16.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1rqw(z31.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1rqw(z7.s, p0/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1rqw(z7.s, p1/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1rqw(z7.s, p2/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1rqw(z7.s, p4/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x0, x0, LSL, 2 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x1, x0, LSL, 2 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x2, x0, LSL, 2 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x4, x0, LSL, 2 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x8, x0, LSL, 2 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x16, x0, LSL, 2 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x30, x0, LSL, 2 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( sp, x0, LSL, 2 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7, x1, LSL, 2 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7, x2, LSL, 2 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7, x4, LSL, 2 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7, x8, LSL, 2 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7, x16, LSL, 2 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7, x30, LSL, 2 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
//SVE_load_and_broadcast_quadword_scalar_plus_scalar3:0
ld1rqd(z7.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1rqd(z0.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1rqd(z1.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1rqd(z2.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1rqd(z4.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1rqd(z8.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1rqd(z16.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1rqd(z31.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1rqd(z7.d, p0/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1rqd(z7.d, p1/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1rqd(z7.d, p2/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1rqd(z7.d, p4/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x0, x0, LSL, 3 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x1, x0, LSL, 3 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x2, x0, LSL, 3 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x4, x0, LSL, 3 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x8, x0, LSL, 3 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x16, x0, LSL, 3 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x30, x0, LSL, 3 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( sp, x0, LSL, 3 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7, x1, LSL, 3 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7, x2, LSL, 3 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7, x4, LSL, 3 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7, x8, LSL, 3 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7, x16, LSL, 3 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7, x30, LSL, 3 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
//SVE_contiguous_load_scalar_plus_scalar0:0
ld1b(z7.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z0.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z1.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z2.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z4.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z8.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z16.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z31.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.b, p0/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.b, p1/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.b, p2/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.b, p4/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x0, x0 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x1, x0 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x2, x0 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x4, x0 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x8, x0 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x16, x0 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x30, x0 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( sp, x0 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7, x1 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7, x2 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7, x4 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7, x8 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7, x16 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7, x30 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7, x0 ) ); dump();
//SVE_contiguous_load_scalar_plus_scalar0:1
ld1b(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z0.h, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z1.h, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z2.h, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z4.h, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z8.h, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z16.h, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z31.h, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.h, p0/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.h, p1/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.h, p2/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.h, p4/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x0, x0 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x1, x0 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x2, x0 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x4, x0 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x8, x0 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x16, x0 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x30, x0 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( sp, x0 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7, x1 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7, x2 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7, x4 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7, x8 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7, x16 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7, x30 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
//SVE_contiguous_load_scalar_plus_scalar0:2
ld1b(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z0.s, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z1.s, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z2.s, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z4.s, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z8.s, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z16.s, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z31.s, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.s, p0/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.s, p1/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.s, p2/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.s, p4/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x0, x0 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x1, x0 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x2, x0 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x4, x0 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x8, x0 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x16, x0 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x30, x0 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( sp, x0 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, x1 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, x2 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, x4 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, x8 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, x16 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, x30 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
//SVE_contiguous_load_scalar_plus_scalar0:3
ld1b(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z0.d, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z1.d, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z2.d, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z4.d, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z8.d, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z16.d, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z31.d, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.d, p0/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.d, p1/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.d, p2/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.d, p4/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x0, x0 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x1, x0 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x2, x0 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x4, x0 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x8, x0 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x16, x0 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x30, x0 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( sp, x0 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, x1 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, x2 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, x4 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, x8 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, x16 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, x30 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
//SVE_contiguous_load_scalar_plus_scalar1:0
ld1sw(z7.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1sw(z0.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1sw(z1.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1sw(z2.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1sw(z4.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1sw(z8.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1sw(z16.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1sw(z31.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1sw(z7.d, p0/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1sw(z7.d, p1/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1sw(z7.d, p2/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1sw(z7.d, p4/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x0, x0, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x1, x0, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x2, x0, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x4, x0, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x8, x0, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x16, x0, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x30, x0, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( sp, x0, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, x1, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, x2, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, x4, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, x8, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, x16, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, x30, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
//SVE_contiguous_load_scalar_plus_scalar2:0
ld1h(z7.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z0.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z1.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z2.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z4.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z8.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z16.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z31.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.h, p0/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.h, p1/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.h, p2/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.h, p4/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x0, x0, LSL, 1 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x1, x0, LSL, 1 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x2, x0, LSL, 1 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x4, x0, LSL, 1 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x8, x0, LSL, 1 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x16, x0, LSL, 1 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x30, x0, LSL, 1 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( sp, x0, LSL, 1 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7, x1, LSL, 1 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7, x2, LSL, 1 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7, x4, LSL, 1 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7, x8, LSL, 1 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7, x16, LSL, 1 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7, x30, LSL, 1 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
//SVE_contiguous_load_scalar_plus_scalar2:1
ld1h(z7.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z0.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z1.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z2.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z4.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z8.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z16.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z31.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.s, p0/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.s, p1/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.s, p2/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.s, p4/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x0, x0, LSL, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x1, x0, LSL, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x2, x0, LSL, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x4, x0, LSL, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x8, x0, LSL, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x16, x0, LSL, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x30, x0, LSL, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( sp, x0, LSL, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, x1, LSL, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, x2, LSL, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, x4, LSL, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, x8, LSL, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, x16, LSL, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, x30, LSL, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
//SVE_contiguous_load_scalar_plus_scalar2:2
ld1h(z7.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z0.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z1.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z2.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z4.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z8.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z16.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z31.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.d, p0/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.d, p1/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.d, p2/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.d, p4/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x0, x0, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x1, x0, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x2, x0, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x4, x0, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x8, x0, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x16, x0, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x30, x0, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( sp, x0, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, x1, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, x2, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, x4, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, x8, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, x16, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, x30, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
//SVE_contiguous_load_scalar_plus_scalar3:0
ld1sh(z7.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z0.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z1.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z2.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z4.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z8.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z16.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z31.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z7.d, p0/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z7.d, p1/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z7.d, p2/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z7.d, p4/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x0, x0, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x1, x0, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x2, x0, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x4, x0, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x8, x0, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x16, x0, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x30, x0, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( sp, x0, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, x1, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, x2, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, x4, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, x8, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, x16, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, x30, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
//SVE_contiguous_load_scalar_plus_scalar3:1
ld1sh(z7.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z0.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z1.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z2.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z4.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z8.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z16.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z31.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z7.s, p0/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z7.s, p1/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z7.s, p2/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z7.s, p4/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x0, x0, LSL, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x1, x0, LSL, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x2, x0, LSL, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x4, x0, LSL, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x8, x0, LSL, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x16, x0, LSL, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x30, x0, LSL, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( sp, x0, LSL, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, x1, LSL, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, x2, LSL, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, x4, LSL, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, x8, LSL, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, x16, LSL, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, x30, LSL, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
//SVE_contiguous_load_scalar_plus_scalar4:0
ld1w(z7.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z0.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z1.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z2.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z4.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z8.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z16.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z31.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z7.s, p0/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z7.s, p1/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z7.s, p2/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z7.s, p4/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x0, x0, LSL, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x1, x0, LSL, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x2, x0, LSL, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x4, x0, LSL, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x8, x0, LSL, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x16, x0, LSL, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x30, x0, LSL, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( sp, x0, LSL, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, x1, LSL, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, x2, LSL, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, x4, LSL, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, x8, LSL, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, x16, LSL, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, x30, LSL, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
//SVE_contiguous_load_scalar_plus_scalar4:1
ld1w(z7.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z0.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z1.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z2.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z4.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z8.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z16.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z31.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z7.d, p0/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z7.d, p1/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z7.d, p2/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z7.d, p4/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x0, x0, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x1, x0, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x2, x0, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x4, x0, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x8, x0, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x16, x0, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x30, x0, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( sp, x0, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, x1, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, x2, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, x4, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, x8, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, x16, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, x30, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
//SVE_contiguous_load_scalar_plus_scalar5:0
ld1sb(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z0.d, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z1.d, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z2.d, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z4.d, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z8.d, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z16.d, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z31.d, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z7.d, p0/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z7.d, p1/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z7.d, p2/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z7.d, p4/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x0, x0 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x1, x0 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x2, x0 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x4, x0 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x8, x0 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x16, x0 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x30, x0 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( sp, x0 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, x1 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, x2 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, x4 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, x8 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, x16 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, x30 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
//SVE_contiguous_load_scalar_plus_scalar5:1
ld1sb(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z0.s, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z1.s, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z2.s, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z4.s, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z8.s, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z16.s, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z31.s, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z7.s, p0/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z7.s, p1/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z7.s, p2/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z7.s, p4/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x0, x0 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x1, x0 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x2, x0 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x4, x0 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x8, x0 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x16, x0 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x30, x0 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( sp, x0 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, x1 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, x2 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, x4 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, x8 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, x16 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, x30 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
//SVE_contiguous_load_scalar_plus_scalar5:2
ld1sb(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z0.h, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z1.h, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z2.h, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z4.h, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z8.h, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z16.h, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z31.h, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z7.h, p0/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z7.h, p1/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z7.h, p2/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z7.h, p4/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x0, x0 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x1, x0 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x2, x0 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x4, x0 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x8, x0 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x16, x0 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x30, x0 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( sp, x0 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7, x1 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7, x2 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7, x4 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7, x8 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7, x16 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7, x30 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
//SVE_contiguous_load_scalar_plus_scalar6:0
ld1d(z7.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1d(z0.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1d(z1.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1d(z2.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1d(z4.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1d(z8.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1d(z16.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1d(z31.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1d(z7.d, p0/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1d(z7.d, p1/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1d(z7.d, p2/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1d(z7.d, p4/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x0, x0, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x1, x0, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x2, x0, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x4, x0, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x8, x0, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x16, x0, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x30, x0, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( sp, x0, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, x1, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, x2, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, x4, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, x8, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, x16, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, x30, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar0:0
ldff1b(z7.b, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z0.b, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z1.b, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z2.b, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z4.b, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z8.b, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z16.b, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z31.b, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.b, p0/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.b, p1/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.b, p2/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.b, p4/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x0, xzr ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x1, xzr ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x2, xzr ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x4, xzr ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x8, xzr ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x16, xzr ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x30, xzr ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( sp, xzr ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x7, xzr ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar0:1
ldff1b(z7.b, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z0.b, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z1.b, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z2.b, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z4.b, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z8.b, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z16.b, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z31.b, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.b, p0/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.b, p1/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.b, p2/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.b, p4/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x0, x0 ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x1, x0 ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x2, x0 ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x4, x0 ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x8, x0 ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x16, x0 ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x30, x0 ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( sp, x0 ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x7, x1 ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x7, x2 ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x7, x4 ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x7, x8 ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x7, x16 ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x7, x30 ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.b, p7/T_z, ptr( x7, x0 ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar0:2
ldff1b(z7.h, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z0.h, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z1.h, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z2.h, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z4.h, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z8.h, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z16.h, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z31.h, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.h, p0/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.h, p1/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.h, p2/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.h, p4/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x0, xzr ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x1, xzr ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x2, xzr ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x4, xzr ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x8, xzr ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x16, xzr ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x30, xzr ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( sp, xzr ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x7, xzr ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar0:3
ldff1b(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z0.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z1.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z2.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z4.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z8.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z16.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z31.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.h, p0/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.h, p1/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.h, p2/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.h, p4/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x0, x0 ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x1, x0 ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x2, x0 ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x4, x0 ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x8, x0 ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x16, x0 ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x30, x0 ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( sp, x0 ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x7, x1 ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x7, x2 ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x7, x4 ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x7, x8 ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x7, x16 ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x7, x30 ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar0:4
ldff1b(z7.s, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z0.s, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z1.s, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z2.s, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z4.s, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z8.s, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z16.s, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z31.s, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.s, p0/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.s, p1/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.s, p2/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.s, p4/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x0, xzr ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x1, xzr ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x2, xzr ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x4, xzr ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x8, xzr ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x16, xzr ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x30, xzr ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( sp, xzr ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, xzr ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar0:5
ldff1b(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z0.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z1.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z2.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z4.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z8.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z16.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z31.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.s, p0/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.s, p1/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.s, p2/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.s, p4/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x0, x0 ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x1, x0 ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x2, x0 ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x4, x0 ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x8, x0 ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x16, x0 ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x30, x0 ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( sp, x0 ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, x1 ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, x2 ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, x4 ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, x8 ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, x16 ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, x30 ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar0:6
ldff1b(z7.d, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z0.d, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z1.d, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z2.d, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z4.d, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z8.d, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z16.d, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z31.d, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.d, p0/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.d, p1/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.d, p2/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.d, p4/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x0, xzr ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x1, xzr ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x2, xzr ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x4, xzr ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x8, xzr ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x16, xzr ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x30, xzr ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( sp, xzr ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, xzr ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar0:7
ldff1b(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z0.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z1.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z2.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z4.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z8.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z16.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z31.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.d, p0/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.d, p1/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.d, p2/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.d, p4/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x0, x0 ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x1, x0 ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x2, x0 ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x4, x0 ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x8, x0 ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x16, x0 ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x30, x0 ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( sp, x0 ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, x1 ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, x2 ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, x4 ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, x8 ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, x16 ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, x30 ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar1:0
ldff1sw(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sw(z0.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sw(z1.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sw(z2.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sw(z4.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sw(z8.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sw(z16.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sw(z31.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sw(z7.d, p0/T_z, ptr( x7, x0   ) ); dump();
ldff1sw(z7.d, p1/T_z, ptr( x7, x0   ) ); dump();
ldff1sw(z7.d, p2/T_z, ptr( x7, x0   ) ); dump();
ldff1sw(z7.d, p4/T_z, ptr( x7, x0   ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x0, x0   ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x1, x0   ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x2, x0   ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x4, x0   ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x8, x0   ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x16, x0   ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x30, x0   ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( sp, x0   ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, x1   ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, x2   ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, x4   ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, x8   ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, x16   ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, x30   ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, xzr   ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar1:1
ldff1sw(z7.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1sw(z0.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1sw(z1.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1sw(z2.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1sw(z4.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1sw(z8.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1sw(z16.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1sw(z31.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1sw(z7.d, p0/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1sw(z7.d, p1/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1sw(z7.d, p2/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1sw(z7.d, p4/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x0, x0, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x1, x0, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x2, x0, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x4, x0, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x8, x0, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x16, x0, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x30, x0, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( sp, x0, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, x1, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, x2, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, x4, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, x8, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, x16, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, x30, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, xzr, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar2:0
ldff1h(z7.h, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z0.h, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z1.h, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z2.h, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z4.h, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z8.h, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z16.h, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z31.h, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.h, p0/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.h, p1/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.h, p2/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.h, p4/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x0, x0   ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x1, x0   ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x2, x0   ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x4, x0   ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x8, x0   ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x16, x0   ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x30, x0   ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( sp, x0   ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x7, x1   ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x7, x2   ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x7, x4   ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x7, x8   ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x7, x16   ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x7, x30   ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x7, xzr   ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x7, x0   ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar2:1
ldff1h(z7.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z0.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z1.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z2.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z4.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z8.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z16.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z31.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.s, p0/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.s, p1/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.s, p2/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.s, p4/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x0, x0   ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x1, x0   ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x2, x0   ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x4, x0   ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x8, x0   ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x16, x0   ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x30, x0   ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( sp, x0   ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, x1   ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, x2   ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, x4   ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, x8   ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, x16   ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, x30   ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, xzr   ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, x0   ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar2:2
ldff1h(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z0.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z1.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z2.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z4.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z8.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z16.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z31.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.d, p0/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.d, p1/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.d, p2/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.d, p4/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x0, x0   ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x1, x0   ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x2, x0   ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x4, x0   ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x8, x0   ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x16, x0   ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x30, x0   ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( sp, x0   ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, x1   ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, x2   ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, x4   ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, x8   ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, x16   ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, x30   ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, xzr   ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar2:3
ldff1h(z7.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z0.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z1.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z2.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z4.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z8.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z16.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z31.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.h, p0/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.h, p1/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.h, p2/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.h, p4/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x0, x0, LSL, 1 ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x1, x0, LSL, 1 ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x2, x0, LSL, 1 ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x4, x0, LSL, 1 ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x8, x0, LSL, 1 ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x16, x0, LSL, 1 ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x30, x0, LSL, 1 ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( sp, x0, LSL, 1 ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x7, x1, LSL, 1 ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x7, x2, LSL, 1 ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x7, x4, LSL, 1 ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x7, x8, LSL, 1 ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x7, x16, LSL, 1 ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x7, x30, LSL, 1 ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x7, xzr, LSL, 1 ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar2:4
ldff1h(z7.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z0.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z1.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z2.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z4.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z8.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z16.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z31.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.s, p0/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.s, p1/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.s, p2/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.s, p4/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x0, x0, LSL, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x1, x0, LSL, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x2, x0, LSL, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x4, x0, LSL, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x8, x0, LSL, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x16, x0, LSL, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x30, x0, LSL, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( sp, x0, LSL, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, x1, LSL, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, x2, LSL, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, x4, LSL, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, x8, LSL, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, x16, LSL, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, x30, LSL, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, xzr, LSL, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar2:5
ldff1h(z7.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z0.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z1.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z2.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z4.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z8.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z16.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z31.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.d, p0/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.d, p1/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.d, p2/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.d, p4/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x0, x0, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x1, x0, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x2, x0, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x4, x0, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x8, x0, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x16, x0, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x30, x0, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( sp, x0, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, x1, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, x2, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, x4, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, x8, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, x16, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, x30, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, xzr, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar3:0
ldff1sh(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z0.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z1.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z2.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z4.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z8.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z16.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z31.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z7.d, p0/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z7.d, p1/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z7.d, p2/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z7.d, p4/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x0, x0   ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x1, x0   ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x2, x0   ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x4, x0   ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x8, x0   ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x16, x0   ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x30, x0   ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( sp, x0   ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, x1   ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, x2   ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, x4   ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, x8   ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, x16   ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, x30   ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, xzr   ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar3:1
ldff1sh(z7.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z0.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z1.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z2.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z4.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z8.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z16.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z31.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z7.s, p0/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z7.s, p1/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z7.s, p2/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z7.s, p4/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x0, x0   ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x1, x0   ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x2, x0   ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x4, x0   ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x8, x0   ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x16, x0   ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x30, x0   ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( sp, x0   ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, x1   ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, x2   ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, x4   ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, x8   ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, x16   ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, x30   ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, xzr   ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, x0   ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar3:2
ldff1sh(z7.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z0.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z1.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z2.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z4.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z8.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z16.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z31.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z7.d, p0/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z7.d, p1/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z7.d, p2/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z7.d, p4/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x0, x0, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x1, x0, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x2, x0, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x4, x0, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x8, x0, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x16, x0, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x30, x0, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( sp, x0, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, x1, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, x2, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, x4, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, x8, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, x16, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, x30, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, xzr, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar3:3
ldff1sh(z7.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z0.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z1.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z2.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z4.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z8.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z16.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z31.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z7.s, p0/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z7.s, p1/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z7.s, p2/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z7.s, p4/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x0, x0, LSL, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x1, x0, LSL, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x2, x0, LSL, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x4, x0, LSL, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x8, x0, LSL, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x16, x0, LSL, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x30, x0, LSL, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( sp, x0, LSL, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, x1, LSL, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, x2, LSL, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, x4, LSL, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, x8, LSL, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, x16, LSL, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, x30, LSL, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, xzr, LSL, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldff1sh(z7.s, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar4:0
ldff1w(z7.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z0.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z1.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z2.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z4.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z8.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z16.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z31.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z7.s, p0/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z7.s, p1/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z7.s, p2/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z7.s, p4/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x0, x0   ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x1, x0   ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x2, x0   ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x4, x0   ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x8, x0   ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x16, x0   ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x30, x0   ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( sp, x0   ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, x1   ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, x2   ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, x4   ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, x8   ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, x16   ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, x30   ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, xzr   ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, x0   ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar4:1
ldff1w(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z0.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z1.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z2.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z4.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z8.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z16.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z31.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z7.d, p0/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z7.d, p1/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z7.d, p2/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z7.d, p4/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x0, x0   ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x1, x0   ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x2, x0   ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x4, x0   ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x8, x0   ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x16, x0   ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x30, x0   ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( sp, x0   ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, x1   ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, x2   ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, x4   ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, x8   ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, x16   ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, x30   ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, xzr   ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar4:2
ldff1w(z7.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z0.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z1.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z2.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z4.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z8.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z16.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z31.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z7.s, p0/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z7.s, p1/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z7.s, p2/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z7.s, p4/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x0, x0, LSL, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x1, x0, LSL, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x2, x0, LSL, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x4, x0, LSL, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x8, x0, LSL, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x16, x0, LSL, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x30, x0, LSL, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( sp, x0, LSL, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, x1, LSL, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, x2, LSL, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, x4, LSL, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, x8, LSL, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, x16, LSL, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, x30, LSL, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, xzr, LSL, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z7.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar4:3
ldff1w(z7.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z0.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z1.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z2.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z4.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z8.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z16.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z31.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z7.d, p0/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z7.d, p1/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z7.d, p2/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z7.d, p4/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x0, x0, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x1, x0, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x2, x0, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x4, x0, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x8, x0, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x16, x0, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x30, x0, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( sp, x0, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, x1, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, x2, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, x4, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, x8, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, x16, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, x30, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, xzr, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar5:0
ldff1sb(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z0.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z1.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z2.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z4.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z8.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z16.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z31.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.d, p0/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.d, p1/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.d, p2/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.d, p4/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x0, x0 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x1, x0 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x2, x0 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x4, x0 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x8, x0 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x16, x0 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x30, x0 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( sp, x0 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, x1 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, x2 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, x4 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, x8 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, x16 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, x30 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar5:1
ldff1sb(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z0.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z1.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z2.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z4.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z8.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z16.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z31.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.s, p0/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.s, p1/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.s, p2/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.s, p4/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x0, x0 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x1, x0 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x2, x0 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x4, x0 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x8, x0 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x16, x0 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x30, x0 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( sp, x0 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, x1 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, x2 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, x4 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, x8 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, x16 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, x30 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar5:2
ldff1sb(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z0.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z1.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z2.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z4.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z8.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z16.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z31.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.h, p0/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.h, p1/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.h, p2/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.h, p4/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x0, x0 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x1, x0 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x2, x0 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x4, x0 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x8, x0 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x16, x0 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x30, x0 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( sp, x0 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x7, x1 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x7, x2 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x7, x4 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x7, x8 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x7, x16 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x7, x30 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar5:3
ldff1sb(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z0.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z1.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z2.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z4.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z8.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z16.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z31.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.d, p0/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.d, p1/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.d, p2/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.d, p4/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x0, x0 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x1, x0 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x2, x0 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x4, x0 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x8, x0 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x16, x0 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x30, x0 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( sp, x0 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, x1 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, x2 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, x4 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, x8 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, x16 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, x30 ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, x0 ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar5:4
ldff1sb(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z0.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z1.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z2.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z4.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z8.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z16.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z31.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.s, p0/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.s, p1/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.s, p2/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.s, p4/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x0, x0 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x1, x0 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x2, x0 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x4, x0 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x8, x0 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x16, x0 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x30, x0 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( sp, x0 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, x1 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, x2 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, x4 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, x8 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, x16 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, x30 ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1sb(z7.s, p7/T_z, ptr( x7, x0 ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar5:5
ldff1sb(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z0.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z1.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z2.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z4.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z8.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z16.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z31.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.h, p0/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.h, p1/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.h, p2/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.h, p4/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x0, x0 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x1, x0 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x2, x0 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x4, x0 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x8, x0 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x16, x0 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x30, x0 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( sp, x0 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x7, x1 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x7, x2 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x7, x4 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x7, x8 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x7, x16 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x7, x30 ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x7, xzr ) ); dump();
ldff1sb(z7.h, p7/T_z, ptr( x7, x0 ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar6:0
ldff1d(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1d(z0.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1d(z1.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1d(z2.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1d(z4.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1d(z8.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1d(z16.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1d(z31.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1d(z7.d, p0/T_z, ptr( x7, x0   ) ); dump();
ldff1d(z7.d, p1/T_z, ptr( x7, x0   ) ); dump();
ldff1d(z7.d, p2/T_z, ptr( x7, x0   ) ); dump();
ldff1d(z7.d, p4/T_z, ptr( x7, x0   ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x0, x0   ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x1, x0   ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x2, x0   ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x4, x0   ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x8, x0   ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x16, x0   ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x30, x0   ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( sp, x0   ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, x1   ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, x2   ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, x4   ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, x8   ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, x16   ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, x30   ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, xzr   ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, x0   ) ); dump();
//SVE_contiguous_first_fault_load_scalar_plus_scalar6:1
ldff1d(z7.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldff1d(z0.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldff1d(z1.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldff1d(z2.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldff1d(z4.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldff1d(z8.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldff1d(z16.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldff1d(z31.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldff1d(z7.d, p0/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldff1d(z7.d, p1/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldff1d(z7.d, p2/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldff1d(z7.d, p4/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x0, x0, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x1, x0, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x2, x0, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x4, x0, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x8, x0, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x16, x0, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x30, x0, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( sp, x0, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, x1, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, x2, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, x4, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, x8, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, x16, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, x30, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, xzr, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
//SVE_load_multiple_structures_scalar_plus_scalar0:0
ld2b(z15.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld2b(z0.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld2b(z1.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld2b(z2.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld2b(z4.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld2b(z8.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld2b(z16.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld2b(z31.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld2b(z15.b, p0/T_z, ptr( x7, x0 ) ); dump();
ld2b(z15.b, p1/T_z, ptr( x7, x0 ) ); dump();
ld2b(z15.b, p2/T_z, ptr( x7, x0 ) ); dump();
ld2b(z15.b, p4/T_z, ptr( x7, x0 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x0, x0 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x1, x0 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x2, x0 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x4, x0 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x8, x0 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x16, x0 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x30, x0 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( sp, x0 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7, x1 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7, x2 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7, x4 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7, x8 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7, x16 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7, x30 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7, x0 ) ); dump();
//SVE_load_multiple_structures_scalar_plus_scalar1:0
ld3b(z15.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld3b(z0.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld3b(z1.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld3b(z2.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld3b(z4.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld3b(z8.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld3b(z16.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld3b(z31.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld3b(z15.b, p0/T_z, ptr( x7, x0 ) ); dump();
ld3b(z15.b, p1/T_z, ptr( x7, x0 ) ); dump();
ld3b(z15.b, p2/T_z, ptr( x7, x0 ) ); dump();
ld3b(z15.b, p4/T_z, ptr( x7, x0 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x0, x0 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x1, x0 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x2, x0 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x4, x0 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x8, x0 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x16, x0 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x30, x0 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( sp, x0 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7, x1 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7, x2 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7, x4 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7, x8 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7, x16 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7, x30 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7, x0 ) ); dump();
//SVE_load_multiple_structures_scalar_plus_scalar2:0
ld4b(z15.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld4b(z0.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld4b(z1.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld4b(z2.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld4b(z4.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld4b(z8.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld4b(z16.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld4b(z31.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld4b(z15.b, p0/T_z, ptr( x7, x0 ) ); dump();
ld4b(z15.b, p1/T_z, ptr( x7, x0 ) ); dump();
ld4b(z15.b, p2/T_z, ptr( x7, x0 ) ); dump();
ld4b(z15.b, p4/T_z, ptr( x7, x0 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x0, x0 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x1, x0 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x2, x0 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x4, x0 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x8, x0 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x16, x0 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x30, x0 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( sp, x0 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7, x0 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7, x1 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7, x2 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7, x4 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7, x8 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7, x16 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7, x30 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7, x0 ) ); dump();
//SVE_load_multiple_structures_scalar_plus_scalar3:0
ld2h(z15.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld2h(z0.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld2h(z1.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld2h(z2.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld2h(z4.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld2h(z8.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld2h(z16.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld2h(z31.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld2h(z15.h, p0/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld2h(z15.h, p1/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld2h(z15.h, p2/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld2h(z15.h, p4/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x0, x0, LSL, 1 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x1, x0, LSL, 1 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x2, x0, LSL, 1 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x4, x0, LSL, 1 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x8, x0, LSL, 1 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x16, x0, LSL, 1 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x30, x0, LSL, 1 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( sp, x0, LSL, 1 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7, x1, LSL, 1 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7, x2, LSL, 1 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7, x4, LSL, 1 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7, x8, LSL, 1 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7, x16, LSL, 1 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7, x30, LSL, 1 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
//SVE_load_multiple_structures_scalar_plus_scalar4:0
ld3h(z15.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld3h(z0.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld3h(z1.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld3h(z2.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld3h(z4.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld3h(z8.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld3h(z16.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld3h(z31.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld3h(z15.h, p0/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld3h(z15.h, p1/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld3h(z15.h, p2/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld3h(z15.h, p4/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x0, x0, LSL, 1 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x1, x0, LSL, 1 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x2, x0, LSL, 1 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x4, x0, LSL, 1 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x8, x0, LSL, 1 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x16, x0, LSL, 1 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x30, x0, LSL, 1 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( sp, x0, LSL, 1 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7, x1, LSL, 1 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7, x2, LSL, 1 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7, x4, LSL, 1 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7, x8, LSL, 1 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7, x16, LSL, 1 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7, x30, LSL, 1 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
//SVE_load_multiple_structures_scalar_plus_scalar5:0
ld4h(z15.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld4h(z0.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld4h(z1.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld4h(z2.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld4h(z4.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld4h(z8.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld4h(z16.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld4h(z31.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld4h(z15.h, p0/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld4h(z15.h, p1/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld4h(z15.h, p2/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld4h(z15.h, p4/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x0, x0, LSL, 1 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x1, x0, LSL, 1 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x2, x0, LSL, 1 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x4, x0, LSL, 1 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x8, x0, LSL, 1 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x16, x0, LSL, 1 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x30, x0, LSL, 1 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( sp, x0, LSL, 1 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7, x1, LSL, 1 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7, x2, LSL, 1 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7, x4, LSL, 1 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7, x8, LSL, 1 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7, x16, LSL, 1 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7, x30, LSL, 1 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
//SVE_load_multiple_structures_scalar_plus_scalar6:0
ld2w(z15.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld2w(z0.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld2w(z1.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld2w(z2.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld2w(z4.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld2w(z8.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld2w(z16.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld2w(z31.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld2w(z15.s, p0/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld2w(z15.s, p1/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld2w(z15.s, p2/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld2w(z15.s, p4/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x0, x0, LSL, 2 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x1, x0, LSL, 2 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x2, x0, LSL, 2 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x4, x0, LSL, 2 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x8, x0, LSL, 2 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x16, x0, LSL, 2 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x30, x0, LSL, 2 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( sp, x0, LSL, 2 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7, x1, LSL, 2 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7, x2, LSL, 2 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7, x4, LSL, 2 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7, x8, LSL, 2 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7, x16, LSL, 2 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7, x30, LSL, 2 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
//SVE_load_multiple_structures_scalar_plus_scalar7:0
ld3w(z15.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld3w(z0.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld3w(z1.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld3w(z2.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld3w(z4.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld3w(z8.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld3w(z16.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld3w(z31.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld3w(z15.s, p0/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld3w(z15.s, p1/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld3w(z15.s, p2/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld3w(z15.s, p4/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x0, x0, LSL, 2 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x1, x0, LSL, 2 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x2, x0, LSL, 2 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x4, x0, LSL, 2 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x8, x0, LSL, 2 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x16, x0, LSL, 2 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x30, x0, LSL, 2 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( sp, x0, LSL, 2 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7, x1, LSL, 2 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7, x2, LSL, 2 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7, x4, LSL, 2 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7, x8, LSL, 2 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7, x16, LSL, 2 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7, x30, LSL, 2 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
//SVE_load_multiple_structures_scalar_plus_scalar8:0
ld4w(z15.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld4w(z0.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld4w(z1.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld4w(z2.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld4w(z4.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld4w(z8.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld4w(z16.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld4w(z31.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld4w(z15.s, p0/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld4w(z15.s, p1/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld4w(z15.s, p2/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld4w(z15.s, p4/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x0, x0, LSL, 2 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x1, x0, LSL, 2 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x2, x0, LSL, 2 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x4, x0, LSL, 2 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x8, x0, LSL, 2 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x16, x0, LSL, 2 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x30, x0, LSL, 2 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( sp, x0, LSL, 2 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7, x1, LSL, 2 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7, x2, LSL, 2 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7, x4, LSL, 2 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7, x8, LSL, 2 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7, x16, LSL, 2 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7, x30, LSL, 2 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
//SVE_load_multiple_structures_scalar_plus_scalar9:0
ld2d(z15.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld2d(z0.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld2d(z1.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld2d(z2.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld2d(z4.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld2d(z8.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld2d(z16.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld2d(z31.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld2d(z15.d, p0/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld2d(z15.d, p1/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld2d(z15.d, p2/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld2d(z15.d, p4/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x0, x0, LSL, 3 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x1, x0, LSL, 3 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x2, x0, LSL, 3 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x4, x0, LSL, 3 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x8, x0, LSL, 3 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x16, x0, LSL, 3 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x30, x0, LSL, 3 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( sp, x0, LSL, 3 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7, x1, LSL, 3 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7, x2, LSL, 3 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7, x4, LSL, 3 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7, x8, LSL, 3 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7, x16, LSL, 3 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7, x30, LSL, 3 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
//SVE_load_multiple_structures_scalar_plus_scalar10:0
ld3d(z15.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld3d(z0.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld3d(z1.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld3d(z2.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld3d(z4.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld3d(z8.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld3d(z16.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld3d(z31.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld3d(z15.d, p0/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld3d(z15.d, p1/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld3d(z15.d, p2/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld3d(z15.d, p4/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x0, x0, LSL, 3 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x1, x0, LSL, 3 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x2, x0, LSL, 3 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x4, x0, LSL, 3 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x8, x0, LSL, 3 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x16, x0, LSL, 3 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x30, x0, LSL, 3 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( sp, x0, LSL, 3 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7, x1, LSL, 3 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7, x2, LSL, 3 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7, x4, LSL, 3 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7, x8, LSL, 3 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7, x16, LSL, 3 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7, x30, LSL, 3 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
//SVE_load_multiple_structures_scalar_plus_scalar11:0
ld4d(z15.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld4d(z0.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld4d(z1.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld4d(z2.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld4d(z4.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld4d(z8.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld4d(z16.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld4d(z31.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld4d(z15.d, p0/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld4d(z15.d, p1/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld4d(z15.d, p2/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld4d(z15.d, p4/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x0, x0, LSL, 3 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x1, x0, LSL, 3 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x2, x0, LSL, 3 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x4, x0, LSL, 3 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x8, x0, LSL, 3 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x16, x0, LSL, 3 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x30, x0, LSL, 3 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( sp, x0, LSL, 3 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7, x1, LSL, 3 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7, x2, LSL, 3 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7, x4, LSL, 3 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7, x8, LSL, 3 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7, x16, LSL, 3 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7, x30, LSL, 3 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
//SVE_load_and_broadcast_quadword_scalar_plus_immediate0:0
ld1rqb(z7.b, p7/T_z, ptr( x7 ) ); dump();
ld1rqb(z0.b, p7/T_z, ptr( x7 ) ); dump();
ld1rqb(z1.b, p7/T_z, ptr( x7 ) ); dump();
ld1rqb(z2.b, p7/T_z, ptr( x7 ) ); dump();
ld1rqb(z4.b, p7/T_z, ptr( x7 ) ); dump();
ld1rqb(z8.b, p7/T_z, ptr( x7 ) ); dump();
ld1rqb(z16.b, p7/T_z, ptr( x7 ) ); dump();
ld1rqb(z31.b, p7/T_z, ptr( x7 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x7 ) ); dump();
ld1rqb(z7.b, p0/T_z, ptr( x7 ) ); dump();
ld1rqb(z7.b, p1/T_z, ptr( x7 ) ); dump();
ld1rqb(z7.b, p2/T_z, ptr( x7 ) ); dump();
ld1rqb(z7.b, p4/T_z, ptr( x7 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x7 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x7 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x0 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x1 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x2 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x4 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x8 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x16 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x30 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( sp ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_and_broadcast_quadword_scalar_plus_immediate0:1
ld1rqb(z7.b, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqb(z0.b, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqb(z1.b, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqb(z2.b, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqb(z4.b, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqb(z8.b, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqb(z16.b, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqb(z31.b, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqb(z7.b, p0/T_z, ptr( x7, 112 ) ); dump();
ld1rqb(z7.b, p1/T_z, ptr( x7, 112 ) ); dump();
ld1rqb(z7.b, p2/T_z, ptr( x7, 112 ) ); dump();
ld1rqb(z7.b, p4/T_z, ptr( x7, 112 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x0, 112 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x1, 112 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x2, 112 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x4, 112 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x8, 112 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x16, 112 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x30, 112 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( sp, 112 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x7, -128 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x7, -64 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x7, -32 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x7, -16 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x7, 0 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x7, 16 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x7, 32 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x7, 64 ) ); dump();
ld1rqb(z7.b, p7/T_z, ptr( x7, 112 ) ); dump();
//SVE_load_and_broadcast_quadword_scalar_plus_immediate1:0
ld1rqh(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1rqh(z0.h, p7/T_z, ptr( x7 ) ); dump();
ld1rqh(z1.h, p7/T_z, ptr( x7 ) ); dump();
ld1rqh(z2.h, p7/T_z, ptr( x7 ) ); dump();
ld1rqh(z4.h, p7/T_z, ptr( x7 ) ); dump();
ld1rqh(z8.h, p7/T_z, ptr( x7 ) ); dump();
ld1rqh(z16.h, p7/T_z, ptr( x7 ) ); dump();
ld1rqh(z31.h, p7/T_z, ptr( x7 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1rqh(z7.h, p0/T_z, ptr( x7 ) ); dump();
ld1rqh(z7.h, p1/T_z, ptr( x7 ) ); dump();
ld1rqh(z7.h, p2/T_z, ptr( x7 ) ); dump();
ld1rqh(z7.h, p4/T_z, ptr( x7 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x0 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x1 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x2 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x4 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x8 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x16 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x30 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( sp ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_and_broadcast_quadword_scalar_plus_immediate1:1
ld1rqh(z7.h, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqh(z0.h, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqh(z1.h, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqh(z2.h, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqh(z4.h, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqh(z8.h, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqh(z16.h, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqh(z31.h, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqh(z7.h, p0/T_z, ptr( x7, 112 ) ); dump();
ld1rqh(z7.h, p1/T_z, ptr( x7, 112 ) ); dump();
ld1rqh(z7.h, p2/T_z, ptr( x7, 112 ) ); dump();
ld1rqh(z7.h, p4/T_z, ptr( x7, 112 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x0, 112 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x1, 112 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x2, 112 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x4, 112 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x8, 112 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x16, 112 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x30, 112 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( sp, 112 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7, -128 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7, -64 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7, -32 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7, -16 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7, 0 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7, 16 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7, 32 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7, 64 ) ); dump();
ld1rqh(z7.h, p7/T_z, ptr( x7, 112 ) ); dump();
//SVE_load_and_broadcast_quadword_scalar_plus_immediate2:0
ld1rqw(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1rqw(z0.s, p7/T_z, ptr( x7 ) ); dump();
ld1rqw(z1.s, p7/T_z, ptr( x7 ) ); dump();
ld1rqw(z2.s, p7/T_z, ptr( x7 ) ); dump();
ld1rqw(z4.s, p7/T_z, ptr( x7 ) ); dump();
ld1rqw(z8.s, p7/T_z, ptr( x7 ) ); dump();
ld1rqw(z16.s, p7/T_z, ptr( x7 ) ); dump();
ld1rqw(z31.s, p7/T_z, ptr( x7 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1rqw(z7.s, p0/T_z, ptr( x7 ) ); dump();
ld1rqw(z7.s, p1/T_z, ptr( x7 ) ); dump();
ld1rqw(z7.s, p2/T_z, ptr( x7 ) ); dump();
ld1rqw(z7.s, p4/T_z, ptr( x7 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x0 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x1 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x2 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x4 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x8 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x16 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x30 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( sp ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_and_broadcast_quadword_scalar_plus_immediate2:1
ld1rqw(z7.s, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqw(z0.s, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqw(z1.s, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqw(z2.s, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqw(z4.s, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqw(z8.s, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqw(z16.s, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqw(z31.s, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqw(z7.s, p0/T_z, ptr( x7, 112 ) ); dump();
ld1rqw(z7.s, p1/T_z, ptr( x7, 112 ) ); dump();
ld1rqw(z7.s, p2/T_z, ptr( x7, 112 ) ); dump();
ld1rqw(z7.s, p4/T_z, ptr( x7, 112 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x0, 112 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x1, 112 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x2, 112 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x4, 112 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x8, 112 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x16, 112 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x30, 112 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( sp, 112 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7, -128 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7, -64 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7, -32 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7, -16 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7, 0 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7, 16 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7, 32 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7, 64 ) ); dump();
ld1rqw(z7.s, p7/T_z, ptr( x7, 112 ) ); dump();
//SVE_load_and_broadcast_quadword_scalar_plus_immediate3:0
ld1rqd(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rqd(z0.d, p7/T_z, ptr( x7 ) ); dump();
ld1rqd(z1.d, p7/T_z, ptr( x7 ) ); dump();
ld1rqd(z2.d, p7/T_z, ptr( x7 ) ); dump();
ld1rqd(z4.d, p7/T_z, ptr( x7 ) ); dump();
ld1rqd(z8.d, p7/T_z, ptr( x7 ) ); dump();
ld1rqd(z16.d, p7/T_z, ptr( x7 ) ); dump();
ld1rqd(z31.d, p7/T_z, ptr( x7 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rqd(z7.d, p0/T_z, ptr( x7 ) ); dump();
ld1rqd(z7.d, p1/T_z, ptr( x7 ) ); dump();
ld1rqd(z7.d, p2/T_z, ptr( x7 ) ); dump();
ld1rqd(z7.d, p4/T_z, ptr( x7 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x0 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x1 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x2 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x4 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x8 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x16 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x30 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( sp ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_and_broadcast_quadword_scalar_plus_immediate3:1
ld1rqd(z7.d, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqd(z0.d, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqd(z1.d, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqd(z2.d, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqd(z4.d, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqd(z8.d, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqd(z16.d, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqd(z31.d, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqd(z7.d, p0/T_z, ptr( x7, 112 ) ); dump();
ld1rqd(z7.d, p1/T_z, ptr( x7, 112 ) ); dump();
ld1rqd(z7.d, p2/T_z, ptr( x7, 112 ) ); dump();
ld1rqd(z7.d, p4/T_z, ptr( x7, 112 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x0, 112 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x1, 112 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x2, 112 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x4, 112 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x8, 112 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x16, 112 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x30, 112 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( sp, 112 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7, 112 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7, -128 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7, -64 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7, -32 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7, -16 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7, 0 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7, 16 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7, 32 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7, 64 ) ); dump();
ld1rqd(z7.d, p7/T_z, ptr( x7, 112 ) ); dump();
//SVE_load_multiple_structures_scalar_plus_immediate0:0
ld2b(z15.b, p7/T_z, ptr( x7 ) ); dump();
ld2b(z0.b, p7/T_z, ptr( x7 ) ); dump();
ld2b(z1.b, p7/T_z, ptr( x7 ) ); dump();
ld2b(z2.b, p7/T_z, ptr( x7 ) ); dump();
ld2b(z4.b, p7/T_z, ptr( x7 ) ); dump();
ld2b(z8.b, p7/T_z, ptr( x7 ) ); dump();
ld2b(z16.b, p7/T_z, ptr( x7 ) ); dump();
ld2b(z31.b, p7/T_z, ptr( x7 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7 ) ); dump();
ld2b(z15.b, p0/T_z, ptr( x7 ) ); dump();
ld2b(z15.b, p1/T_z, ptr( x7 ) ); dump();
ld2b(z15.b, p2/T_z, ptr( x7 ) ); dump();
ld2b(z15.b, p4/T_z, ptr( x7 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x0 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x1 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x2 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x4 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x8 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x16 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x30 ) ); dump();
ld2b(z15.b, p7/T_z, ptr( sp ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_multiple_structures_scalar_plus_immediate0:1
ld2b(z15.b, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2b(z0.b, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2b(z1.b, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2b(z2.b, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2b(z4.b, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2b(z8.b, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2b(z16.b, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2b(z31.b, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2b(z15.b, p0/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2b(z15.b, p1/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2b(z15.b, p2/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2b(z15.b, p4/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x0, 14, MUL_VL ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x1, 14, MUL_VL ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x2, 14, MUL_VL ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x4, 14, MUL_VL ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x8, 14, MUL_VL ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x16, 14, MUL_VL ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x30, 14, MUL_VL ) ); dump();
ld2b(z15.b, p7/T_z, ptr( sp, 14, MUL_VL ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7, -16, MUL_VL ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7, 8, MUL_VL ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2b(z15.b, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
//SVE_load_multiple_structures_scalar_plus_immediate1:0
ld3b(z15.b, p7/T_z, ptr( x7 ) ); dump();
ld3b(z0.b, p7/T_z, ptr( x7 ) ); dump();
ld3b(z1.b, p7/T_z, ptr( x7 ) ); dump();
ld3b(z2.b, p7/T_z, ptr( x7 ) ); dump();
ld3b(z4.b, p7/T_z, ptr( x7 ) ); dump();
ld3b(z8.b, p7/T_z, ptr( x7 ) ); dump();
ld3b(z16.b, p7/T_z, ptr( x7 ) ); dump();
ld3b(z31.b, p7/T_z, ptr( x7 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7 ) ); dump();
ld3b(z15.b, p0/T_z, ptr( x7 ) ); dump();
ld3b(z15.b, p1/T_z, ptr( x7 ) ); dump();
ld3b(z15.b, p2/T_z, ptr( x7 ) ); dump();
ld3b(z15.b, p4/T_z, ptr( x7 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x0 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x1 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x2 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x4 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x8 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x16 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x30 ) ); dump();
ld3b(z15.b, p7/T_z, ptr( sp ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_multiple_structures_scalar_plus_immediate1:1
ld3b(z15.b, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3b(z0.b, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3b(z1.b, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3b(z2.b, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3b(z4.b, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3b(z8.b, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3b(z16.b, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3b(z31.b, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3b(z15.b, p0/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3b(z15.b, p1/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3b(z15.b, p2/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3b(z15.b, p4/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x0, 21, MUL_VL ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x1, 21, MUL_VL ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x2, 21, MUL_VL ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x4, 21, MUL_VL ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x8, 21, MUL_VL ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x16, 21, MUL_VL ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x30, 21, MUL_VL ) ); dump();
ld3b(z15.b, p7/T_z, ptr( sp, 21, MUL_VL ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7, -24, MUL_VL ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7, -12, MUL_VL ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7, -6, MUL_VL ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7, -3, MUL_VL ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7, 3, MUL_VL ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7, 6, MUL_VL ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7, 12, MUL_VL ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3b(z15.b, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
//SVE_load_multiple_structures_scalar_plus_immediate2:0
ld4b(z15.b, p7/T_z, ptr( x7 ) ); dump();
ld4b(z0.b, p7/T_z, ptr( x7 ) ); dump();
ld4b(z1.b, p7/T_z, ptr( x7 ) ); dump();
ld4b(z2.b, p7/T_z, ptr( x7 ) ); dump();
ld4b(z4.b, p7/T_z, ptr( x7 ) ); dump();
ld4b(z8.b, p7/T_z, ptr( x7 ) ); dump();
ld4b(z16.b, p7/T_z, ptr( x7 ) ); dump();
ld4b(z31.b, p7/T_z, ptr( x7 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7 ) ); dump();
ld4b(z15.b, p0/T_z, ptr( x7 ) ); dump();
ld4b(z15.b, p1/T_z, ptr( x7 ) ); dump();
ld4b(z15.b, p2/T_z, ptr( x7 ) ); dump();
ld4b(z15.b, p4/T_z, ptr( x7 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x0 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x1 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x2 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x4 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x8 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x16 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x30 ) ); dump();
ld4b(z15.b, p7/T_z, ptr( sp ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_multiple_structures_scalar_plus_immediate2:1
ld4b(z15.b, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4b(z0.b, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4b(z1.b, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4b(z2.b, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4b(z4.b, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4b(z8.b, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4b(z16.b, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4b(z31.b, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4b(z15.b, p0/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4b(z15.b, p1/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4b(z15.b, p2/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4b(z15.b, p4/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x0, 28, MUL_VL ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x1, 28, MUL_VL ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x2, 28, MUL_VL ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x4, 28, MUL_VL ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x8, 28, MUL_VL ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x16, 28, MUL_VL ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x30, 28, MUL_VL ) ); dump();
ld4b(z15.b, p7/T_z, ptr( sp, 28, MUL_VL ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7, -32, MUL_VL ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7, -16, MUL_VL ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7, 8, MUL_VL ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7, 16, MUL_VL ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4b(z15.b, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
//SVE_load_multiple_structures_scalar_plus_immediate3:0
ld2h(z15.h, p7/T_z, ptr( x7 ) ); dump();
ld2h(z0.h, p7/T_z, ptr( x7 ) ); dump();
ld2h(z1.h, p7/T_z, ptr( x7 ) ); dump();
ld2h(z2.h, p7/T_z, ptr( x7 ) ); dump();
ld2h(z4.h, p7/T_z, ptr( x7 ) ); dump();
ld2h(z8.h, p7/T_z, ptr( x7 ) ); dump();
ld2h(z16.h, p7/T_z, ptr( x7 ) ); dump();
ld2h(z31.h, p7/T_z, ptr( x7 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7 ) ); dump();
ld2h(z15.h, p0/T_z, ptr( x7 ) ); dump();
ld2h(z15.h, p1/T_z, ptr( x7 ) ); dump();
ld2h(z15.h, p2/T_z, ptr( x7 ) ); dump();
ld2h(z15.h, p4/T_z, ptr( x7 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x0 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x1 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x2 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x4 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x8 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x16 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x30 ) ); dump();
ld2h(z15.h, p7/T_z, ptr( sp ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_multiple_structures_scalar_plus_immediate3:1
ld2h(z15.h, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2h(z0.h, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2h(z1.h, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2h(z2.h, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2h(z4.h, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2h(z8.h, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2h(z16.h, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2h(z31.h, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2h(z15.h, p0/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2h(z15.h, p1/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2h(z15.h, p2/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2h(z15.h, p4/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x0, 14, MUL_VL ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x1, 14, MUL_VL ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x2, 14, MUL_VL ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x4, 14, MUL_VL ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x8, 14, MUL_VL ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x16, 14, MUL_VL ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x30, 14, MUL_VL ) ); dump();
ld2h(z15.h, p7/T_z, ptr( sp, 14, MUL_VL ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7, -16, MUL_VL ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7, 8, MUL_VL ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2h(z15.h, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
//SVE_load_multiple_structures_scalar_plus_immediate4:0
ld3h(z15.h, p7/T_z, ptr( x7 ) ); dump();
ld3h(z0.h, p7/T_z, ptr( x7 ) ); dump();
ld3h(z1.h, p7/T_z, ptr( x7 ) ); dump();
ld3h(z2.h, p7/T_z, ptr( x7 ) ); dump();
ld3h(z4.h, p7/T_z, ptr( x7 ) ); dump();
ld3h(z8.h, p7/T_z, ptr( x7 ) ); dump();
ld3h(z16.h, p7/T_z, ptr( x7 ) ); dump();
ld3h(z31.h, p7/T_z, ptr( x7 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7 ) ); dump();
ld3h(z15.h, p0/T_z, ptr( x7 ) ); dump();
ld3h(z15.h, p1/T_z, ptr( x7 ) ); dump();
ld3h(z15.h, p2/T_z, ptr( x7 ) ); dump();
ld3h(z15.h, p4/T_z, ptr( x7 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x0 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x1 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x2 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x4 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x8 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x16 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x30 ) ); dump();
ld3h(z15.h, p7/T_z, ptr( sp ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_multiple_structures_scalar_plus_immediate4:1
ld3h(z15.h, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3h(z0.h, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3h(z1.h, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3h(z2.h, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3h(z4.h, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3h(z8.h, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3h(z16.h, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3h(z31.h, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3h(z15.h, p0/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3h(z15.h, p1/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3h(z15.h, p2/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3h(z15.h, p4/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x0, 21, MUL_VL ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x1, 21, MUL_VL ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x2, 21, MUL_VL ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x4, 21, MUL_VL ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x8, 21, MUL_VL ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x16, 21, MUL_VL ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x30, 21, MUL_VL ) ); dump();
ld3h(z15.h, p7/T_z, ptr( sp, 21, MUL_VL ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7, -24, MUL_VL ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7, -12, MUL_VL ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7, -6, MUL_VL ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7, -3, MUL_VL ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7, 3, MUL_VL ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7, 6, MUL_VL ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7, 12, MUL_VL ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3h(z15.h, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
//SVE_load_multiple_structures_scalar_plus_immediate5:0
ld4h(z15.h, p7/T_z, ptr( x7 ) ); dump();
ld4h(z0.h, p7/T_z, ptr( x7 ) ); dump();
ld4h(z1.h, p7/T_z, ptr( x7 ) ); dump();
ld4h(z2.h, p7/T_z, ptr( x7 ) ); dump();
ld4h(z4.h, p7/T_z, ptr( x7 ) ); dump();
ld4h(z8.h, p7/T_z, ptr( x7 ) ); dump();
ld4h(z16.h, p7/T_z, ptr( x7 ) ); dump();
ld4h(z31.h, p7/T_z, ptr( x7 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7 ) ); dump();
ld4h(z15.h, p0/T_z, ptr( x7 ) ); dump();
ld4h(z15.h, p1/T_z, ptr( x7 ) ); dump();
ld4h(z15.h, p2/T_z, ptr( x7 ) ); dump();
ld4h(z15.h, p4/T_z, ptr( x7 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x0 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x1 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x2 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x4 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x8 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x16 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x30 ) ); dump();
ld4h(z15.h, p7/T_z, ptr( sp ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_multiple_structures_scalar_plus_immediate5:1
ld4h(z15.h, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4h(z0.h, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4h(z1.h, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4h(z2.h, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4h(z4.h, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4h(z8.h, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4h(z16.h, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4h(z31.h, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4h(z15.h, p0/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4h(z15.h, p1/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4h(z15.h, p2/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4h(z15.h, p4/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x0, 28, MUL_VL ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x1, 28, MUL_VL ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x2, 28, MUL_VL ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x4, 28, MUL_VL ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x8, 28, MUL_VL ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x16, 28, MUL_VL ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x30, 28, MUL_VL ) ); dump();
ld4h(z15.h, p7/T_z, ptr( sp, 28, MUL_VL ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7, -32, MUL_VL ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7, -16, MUL_VL ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7, 8, MUL_VL ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7, 16, MUL_VL ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4h(z15.h, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
//SVE_load_multiple_structures_scalar_plus_immediate6:0
ld2w(z15.s, p7/T_z, ptr( x7 ) ); dump();
ld2w(z0.s, p7/T_z, ptr( x7 ) ); dump();
ld2w(z1.s, p7/T_z, ptr( x7 ) ); dump();
ld2w(z2.s, p7/T_z, ptr( x7 ) ); dump();
ld2w(z4.s, p7/T_z, ptr( x7 ) ); dump();
ld2w(z8.s, p7/T_z, ptr( x7 ) ); dump();
ld2w(z16.s, p7/T_z, ptr( x7 ) ); dump();
ld2w(z31.s, p7/T_z, ptr( x7 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7 ) ); dump();
ld2w(z15.s, p0/T_z, ptr( x7 ) ); dump();
ld2w(z15.s, p1/T_z, ptr( x7 ) ); dump();
ld2w(z15.s, p2/T_z, ptr( x7 ) ); dump();
ld2w(z15.s, p4/T_z, ptr( x7 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x0 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x1 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x2 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x4 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x8 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x16 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x30 ) ); dump();
ld2w(z15.s, p7/T_z, ptr( sp ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_multiple_structures_scalar_plus_immediate6:1
ld2w(z15.s, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2w(z0.s, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2w(z1.s, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2w(z2.s, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2w(z4.s, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2w(z8.s, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2w(z16.s, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2w(z31.s, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2w(z15.s, p0/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2w(z15.s, p1/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2w(z15.s, p2/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2w(z15.s, p4/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x0, 14, MUL_VL ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x1, 14, MUL_VL ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x2, 14, MUL_VL ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x4, 14, MUL_VL ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x8, 14, MUL_VL ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x16, 14, MUL_VL ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x30, 14, MUL_VL ) ); dump();
ld2w(z15.s, p7/T_z, ptr( sp, 14, MUL_VL ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7, -16, MUL_VL ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7, 8, MUL_VL ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2w(z15.s, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
//SVE_load_multiple_structures_scalar_plus_immediate7:0
ld3w(z15.s, p7/T_z, ptr( x7 ) ); dump();
ld3w(z0.s, p7/T_z, ptr( x7 ) ); dump();
ld3w(z1.s, p7/T_z, ptr( x7 ) ); dump();
ld3w(z2.s, p7/T_z, ptr( x7 ) ); dump();
ld3w(z4.s, p7/T_z, ptr( x7 ) ); dump();
ld3w(z8.s, p7/T_z, ptr( x7 ) ); dump();
ld3w(z16.s, p7/T_z, ptr( x7 ) ); dump();
ld3w(z31.s, p7/T_z, ptr( x7 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7 ) ); dump();
ld3w(z15.s, p0/T_z, ptr( x7 ) ); dump();
ld3w(z15.s, p1/T_z, ptr( x7 ) ); dump();
ld3w(z15.s, p2/T_z, ptr( x7 ) ); dump();
ld3w(z15.s, p4/T_z, ptr( x7 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x0 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x1 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x2 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x4 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x8 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x16 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x30 ) ); dump();
ld3w(z15.s, p7/T_z, ptr( sp ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_multiple_structures_scalar_plus_immediate7:1
ld3w(z15.s, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3w(z0.s, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3w(z1.s, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3w(z2.s, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3w(z4.s, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3w(z8.s, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3w(z16.s, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3w(z31.s, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3w(z15.s, p0/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3w(z15.s, p1/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3w(z15.s, p2/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3w(z15.s, p4/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x0, 21, MUL_VL ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x1, 21, MUL_VL ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x2, 21, MUL_VL ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x4, 21, MUL_VL ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x8, 21, MUL_VL ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x16, 21, MUL_VL ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x30, 21, MUL_VL ) ); dump();
ld3w(z15.s, p7/T_z, ptr( sp, 21, MUL_VL ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7, -24, MUL_VL ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7, -12, MUL_VL ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7, -6, MUL_VL ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7, -3, MUL_VL ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7, 3, MUL_VL ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7, 6, MUL_VL ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7, 12, MUL_VL ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3w(z15.s, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
//SVE_load_multiple_structures_scalar_plus_immediate8:0
ld4w(z15.s, p7/T_z, ptr( x7 ) ); dump();
ld4w(z0.s, p7/T_z, ptr( x7 ) ); dump();
ld4w(z1.s, p7/T_z, ptr( x7 ) ); dump();
ld4w(z2.s, p7/T_z, ptr( x7 ) ); dump();
ld4w(z4.s, p7/T_z, ptr( x7 ) ); dump();
ld4w(z8.s, p7/T_z, ptr( x7 ) ); dump();
ld4w(z16.s, p7/T_z, ptr( x7 ) ); dump();
ld4w(z31.s, p7/T_z, ptr( x7 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7 ) ); dump();
ld4w(z15.s, p0/T_z, ptr( x7 ) ); dump();
ld4w(z15.s, p1/T_z, ptr( x7 ) ); dump();
ld4w(z15.s, p2/T_z, ptr( x7 ) ); dump();
ld4w(z15.s, p4/T_z, ptr( x7 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x0 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x1 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x2 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x4 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x8 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x16 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x30 ) ); dump();
ld4w(z15.s, p7/T_z, ptr( sp ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_multiple_structures_scalar_plus_immediate8:1
ld4w(z15.s, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4w(z0.s, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4w(z1.s, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4w(z2.s, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4w(z4.s, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4w(z8.s, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4w(z16.s, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4w(z31.s, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4w(z15.s, p0/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4w(z15.s, p1/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4w(z15.s, p2/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4w(z15.s, p4/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x0, 28, MUL_VL ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x1, 28, MUL_VL ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x2, 28, MUL_VL ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x4, 28, MUL_VL ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x8, 28, MUL_VL ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x16, 28, MUL_VL ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x30, 28, MUL_VL ) ); dump();
ld4w(z15.s, p7/T_z, ptr( sp, 28, MUL_VL ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7, -32, MUL_VL ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7, -16, MUL_VL ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7, 8, MUL_VL ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7, 16, MUL_VL ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4w(z15.s, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
//SVE_load_multiple_structures_scalar_plus_immediate9:0
ld2d(z15.d, p7/T_z, ptr( x7 ) ); dump();
ld2d(z0.d, p7/T_z, ptr( x7 ) ); dump();
ld2d(z1.d, p7/T_z, ptr( x7 ) ); dump();
ld2d(z2.d, p7/T_z, ptr( x7 ) ); dump();
ld2d(z4.d, p7/T_z, ptr( x7 ) ); dump();
ld2d(z8.d, p7/T_z, ptr( x7 ) ); dump();
ld2d(z16.d, p7/T_z, ptr( x7 ) ); dump();
ld2d(z31.d, p7/T_z, ptr( x7 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7 ) ); dump();
ld2d(z15.d, p0/T_z, ptr( x7 ) ); dump();
ld2d(z15.d, p1/T_z, ptr( x7 ) ); dump();
ld2d(z15.d, p2/T_z, ptr( x7 ) ); dump();
ld2d(z15.d, p4/T_z, ptr( x7 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x0 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x1 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x2 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x4 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x8 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x16 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x30 ) ); dump();
ld2d(z15.d, p7/T_z, ptr( sp ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_multiple_structures_scalar_plus_immediate9:1
ld2d(z15.d, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2d(z0.d, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2d(z1.d, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2d(z2.d, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2d(z4.d, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2d(z8.d, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2d(z16.d, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2d(z31.d, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2d(z15.d, p0/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2d(z15.d, p1/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2d(z15.d, p2/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2d(z15.d, p4/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x0, 14, MUL_VL ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x1, 14, MUL_VL ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x2, 14, MUL_VL ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x4, 14, MUL_VL ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x8, 14, MUL_VL ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x16, 14, MUL_VL ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x30, 14, MUL_VL ) ); dump();
ld2d(z15.d, p7/T_z, ptr( sp, 14, MUL_VL ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7, -16, MUL_VL ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7, 8, MUL_VL ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
ld2d(z15.d, p7/T_z, ptr( x7, 14, MUL_VL ) ); dump();
//SVE_load_multiple_structures_scalar_plus_immediate10:0
ld3d(z15.d, p7/T_z, ptr( x7 ) ); dump();
ld3d(z0.d, p7/T_z, ptr( x7 ) ); dump();
ld3d(z1.d, p7/T_z, ptr( x7 ) ); dump();
ld3d(z2.d, p7/T_z, ptr( x7 ) ); dump();
ld3d(z4.d, p7/T_z, ptr( x7 ) ); dump();
ld3d(z8.d, p7/T_z, ptr( x7 ) ); dump();
ld3d(z16.d, p7/T_z, ptr( x7 ) ); dump();
ld3d(z31.d, p7/T_z, ptr( x7 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7 ) ); dump();
ld3d(z15.d, p0/T_z, ptr( x7 ) ); dump();
ld3d(z15.d, p1/T_z, ptr( x7 ) ); dump();
ld3d(z15.d, p2/T_z, ptr( x7 ) ); dump();
ld3d(z15.d, p4/T_z, ptr( x7 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x0 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x1 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x2 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x4 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x8 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x16 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x30 ) ); dump();
ld3d(z15.d, p7/T_z, ptr( sp ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_multiple_structures_scalar_plus_immediate10:1
ld3d(z15.d, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3d(z0.d, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3d(z1.d, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3d(z2.d, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3d(z4.d, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3d(z8.d, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3d(z16.d, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3d(z31.d, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3d(z15.d, p0/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3d(z15.d, p1/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3d(z15.d, p2/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3d(z15.d, p4/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x0, 21, MUL_VL ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x1, 21, MUL_VL ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x2, 21, MUL_VL ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x4, 21, MUL_VL ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x8, 21, MUL_VL ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x16, 21, MUL_VL ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x30, 21, MUL_VL ) ); dump();
ld3d(z15.d, p7/T_z, ptr( sp, 21, MUL_VL ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7, -24, MUL_VL ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7, -12, MUL_VL ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7, -6, MUL_VL ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7, -3, MUL_VL ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7, 3, MUL_VL ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7, 6, MUL_VL ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7, 12, MUL_VL ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
ld3d(z15.d, p7/T_z, ptr( x7, 21, MUL_VL ) ); dump();
//SVE_load_multiple_structures_scalar_plus_immediate11:0
ld4d(z15.d, p7/T_z, ptr( x7 ) ); dump();
ld4d(z0.d, p7/T_z, ptr( x7 ) ); dump();
ld4d(z1.d, p7/T_z, ptr( x7 ) ); dump();
ld4d(z2.d, p7/T_z, ptr( x7 ) ); dump();
ld4d(z4.d, p7/T_z, ptr( x7 ) ); dump();
ld4d(z8.d, p7/T_z, ptr( x7 ) ); dump();
ld4d(z16.d, p7/T_z, ptr( x7 ) ); dump();
ld4d(z31.d, p7/T_z, ptr( x7 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7 ) ); dump();
ld4d(z15.d, p0/T_z, ptr( x7 ) ); dump();
ld4d(z15.d, p1/T_z, ptr( x7 ) ); dump();
ld4d(z15.d, p2/T_z, ptr( x7 ) ); dump();
ld4d(z15.d, p4/T_z, ptr( x7 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x0 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x1 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x2 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x4 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x8 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x16 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x30 ) ); dump();
ld4d(z15.d, p7/T_z, ptr( sp ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7 ) ); dump();
//SVE_load_multiple_structures_scalar_plus_immediate11:1
ld4d(z15.d, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4d(z0.d, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4d(z1.d, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4d(z2.d, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4d(z4.d, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4d(z8.d, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4d(z16.d, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4d(z31.d, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4d(z15.d, p0/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4d(z15.d, p1/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4d(z15.d, p2/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4d(z15.d, p4/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x0, 28, MUL_VL ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x1, 28, MUL_VL ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x2, 28, MUL_VL ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x4, 28, MUL_VL ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x8, 28, MUL_VL ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x16, 28, MUL_VL ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x30, 28, MUL_VL ) ); dump();
ld4d(z15.d, p7/T_z, ptr( sp, 28, MUL_VL ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7, -32, MUL_VL ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7, -16, MUL_VL ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7, 8, MUL_VL ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7, 16, MUL_VL ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
ld4d(z15.d, p7/T_z, ptr( x7, 28, MUL_VL ) ); dump();
//SVE_contiguous_load_scalar_plus_immediate0:0
ld1b(z7.b, p7/T_z, ptr( x7 ) ); dump();
ld1b(z0.b, p7/T_z, ptr( x7 ) ); dump();
ld1b(z1.b, p7/T_z, ptr( x7 ) ); dump();
ld1b(z2.b, p7/T_z, ptr( x7 ) ); dump();
ld1b(z4.b, p7/T_z, ptr( x7 ) ); dump();
ld1b(z8.b, p7/T_z, ptr( x7 ) ); dump();
ld1b(z16.b, p7/T_z, ptr( x7 ) ); dump();
ld1b(z31.b, p7/T_z, ptr( x7 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7 ) ); dump();
ld1b(z7.b, p0/T_z, ptr( x7 ) ); dump();
ld1b(z7.b, p1/T_z, ptr( x7 ) ); dump();
ld1b(z7.b, p2/T_z, ptr( x7 ) ); dump();
ld1b(z7.b, p4/T_z, ptr( x7 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x0 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x1 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x2 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x4 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x8 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x16 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x30 ) ); dump();
ld1b(z7.b, p7/T_z, ptr( sp ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7 ) ); dump();
//SVE_contiguous_load_scalar_plus_immediate0:1
ld1b(z7.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z0.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z1.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z2.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z4.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z8.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z16.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z31.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.b, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.b, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.b, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.b, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ld1b(z7.b, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_load_scalar_plus_immediate0:2
ld1b(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1b(z0.h, p7/T_z, ptr( x7 ) ); dump();
ld1b(z1.h, p7/T_z, ptr( x7 ) ); dump();
ld1b(z2.h, p7/T_z, ptr( x7 ) ); dump();
ld1b(z4.h, p7/T_z, ptr( x7 ) ); dump();
ld1b(z8.h, p7/T_z, ptr( x7 ) ); dump();
ld1b(z16.h, p7/T_z, ptr( x7 ) ); dump();
ld1b(z31.h, p7/T_z, ptr( x7 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1b(z7.h, p0/T_z, ptr( x7 ) ); dump();
ld1b(z7.h, p1/T_z, ptr( x7 ) ); dump();
ld1b(z7.h, p2/T_z, ptr( x7 ) ); dump();
ld1b(z7.h, p4/T_z, ptr( x7 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x0 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x1 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x2 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x4 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x8 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x16 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x30 ) ); dump();
ld1b(z7.h, p7/T_z, ptr( sp ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7 ) ); dump();
//SVE_contiguous_load_scalar_plus_immediate0:3
ld1b(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z0.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z1.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z2.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z4.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z8.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z16.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z31.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.h, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.h, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.h, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.h, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ld1b(z7.h, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_load_scalar_plus_immediate0:4
ld1b(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1b(z0.s, p7/T_z, ptr( x7 ) ); dump();
ld1b(z1.s, p7/T_z, ptr( x7 ) ); dump();
ld1b(z2.s, p7/T_z, ptr( x7 ) ); dump();
ld1b(z4.s, p7/T_z, ptr( x7 ) ); dump();
ld1b(z8.s, p7/T_z, ptr( x7 ) ); dump();
ld1b(z16.s, p7/T_z, ptr( x7 ) ); dump();
ld1b(z31.s, p7/T_z, ptr( x7 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1b(z7.s, p0/T_z, ptr( x7 ) ); dump();
ld1b(z7.s, p1/T_z, ptr( x7 ) ); dump();
ld1b(z7.s, p2/T_z, ptr( x7 ) ); dump();
ld1b(z7.s, p4/T_z, ptr( x7 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x0 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x1 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x2 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x4 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x8 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x16 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x30 ) ); dump();
ld1b(z7.s, p7/T_z, ptr( sp ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7 ) ); dump();
//SVE_contiguous_load_scalar_plus_immediate0:5
ld1b(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z0.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z1.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z2.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z4.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z8.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z16.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z31.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.s, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.s, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.s, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.s, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ld1b(z7.s, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_load_scalar_plus_immediate0:6
ld1b(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1b(z0.d, p7/T_z, ptr( x7 ) ); dump();
ld1b(z1.d, p7/T_z, ptr( x7 ) ); dump();
ld1b(z2.d, p7/T_z, ptr( x7 ) ); dump();
ld1b(z4.d, p7/T_z, ptr( x7 ) ); dump();
ld1b(z8.d, p7/T_z, ptr( x7 ) ); dump();
ld1b(z16.d, p7/T_z, ptr( x7 ) ); dump();
ld1b(z31.d, p7/T_z, ptr( x7 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1b(z7.d, p0/T_z, ptr( x7 ) ); dump();
ld1b(z7.d, p1/T_z, ptr( x7 ) ); dump();
ld1b(z7.d, p2/T_z, ptr( x7 ) ); dump();
ld1b(z7.d, p4/T_z, ptr( x7 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x0 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x1 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x2 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x4 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x8 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x16 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x30 ) ); dump();
ld1b(z7.d, p7/T_z, ptr( sp ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7 ) ); dump();
//SVE_contiguous_load_scalar_plus_immediate0:7
ld1b(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z0.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z1.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z2.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z4.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z8.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z16.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z31.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.d, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.d, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.d, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.d, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ld1b(z7.d, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_load_scalar_plus_immediate1:0
ld1sw(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1sw(z0.d, p7/T_z, ptr( x7 ) ); dump();
ld1sw(z1.d, p7/T_z, ptr( x7 ) ); dump();
ld1sw(z2.d, p7/T_z, ptr( x7 ) ); dump();
ld1sw(z4.d, p7/T_z, ptr( x7 ) ); dump();
ld1sw(z8.d, p7/T_z, ptr( x7 ) ); dump();
ld1sw(z16.d, p7/T_z, ptr( x7 ) ); dump();
ld1sw(z31.d, p7/T_z, ptr( x7 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1sw(z7.d, p0/T_z, ptr( x7 ) ); dump();
ld1sw(z7.d, p1/T_z, ptr( x7 ) ); dump();
ld1sw(z7.d, p2/T_z, ptr( x7 ) ); dump();
ld1sw(z7.d, p4/T_z, ptr( x7 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x0 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x1 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x4 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x8 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x16 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x30 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( sp ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1d(z0.d, p7/T_z, ptr( x7 ) ); dump();
ld1d(z1.d, p7/T_z, ptr( x7 ) ); dump();
ld1d(z2.d, p7/T_z, ptr( x7 ) ); dump();
ld1d(z4.d, p7/T_z, ptr( x7 ) ); dump();
ld1d(z8.d, p7/T_z, ptr( x7 ) ); dump();
ld1d(z16.d, p7/T_z, ptr( x7 ) ); dump();
ld1d(z31.d, p7/T_z, ptr( x7 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1d(z7.d, p0/T_z, ptr( x7 ) ); dump();
ld1d(z7.d, p1/T_z, ptr( x7 ) ); dump();
ld1d(z7.d, p2/T_z, ptr( x7 ) ); dump();
ld1d(z7.d, p4/T_z, ptr( x7 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x0 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x1 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x2 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x4 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x8 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x16 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x30 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( sp ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7 ) ); dump();
//SVE_contiguous_load_scalar_plus_immediate1:1
ld1sw(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sw(z0.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sw(z1.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sw(z2.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sw(z4.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sw(z8.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sw(z16.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sw(z31.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sw(z7.d, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sw(z7.d, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sw(z7.d, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sw(z7.d, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1d(z0.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1d(z1.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1d(z2.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1d(z4.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1d(z8.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1d(z16.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1d(z31.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1d(z7.d, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1d(z7.d, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1d(z7.d, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1d(z7.d, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ld1d(z7.d, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_load_scalar_plus_immediate2:0
ld1h(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1h(z0.h, p7/T_z, ptr( x7 ) ); dump();
ld1h(z1.h, p7/T_z, ptr( x7 ) ); dump();
ld1h(z2.h, p7/T_z, ptr( x7 ) ); dump();
ld1h(z4.h, p7/T_z, ptr( x7 ) ); dump();
ld1h(z8.h, p7/T_z, ptr( x7 ) ); dump();
ld1h(z16.h, p7/T_z, ptr( x7 ) ); dump();
ld1h(z31.h, p7/T_z, ptr( x7 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1h(z7.h, p0/T_z, ptr( x7 ) ); dump();
ld1h(z7.h, p1/T_z, ptr( x7 ) ); dump();
ld1h(z7.h, p2/T_z, ptr( x7 ) ); dump();
ld1h(z7.h, p4/T_z, ptr( x7 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x0 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x1 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x2 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x4 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x8 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x16 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x30 ) ); dump();
ld1h(z7.h, p7/T_z, ptr( sp ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z0.h, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z1.h, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z2.h, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z4.h, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z8.h, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z16.h, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z31.h, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z7.h, p0/T_z, ptr( x7 ) ); dump();
ld1sb(z7.h, p1/T_z, ptr( x7 ) ); dump();
ld1sb(z7.h, p2/T_z, ptr( x7 ) ); dump();
ld1sb(z7.h, p4/T_z, ptr( x7 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x0 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x1 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x2 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x4 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x8 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x16 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x30 ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( sp ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7 ) ); dump();
//SVE_contiguous_load_scalar_plus_immediate2:1
ld1h(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z0.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z1.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z2.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z4.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z8.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z16.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z31.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.h, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.h, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.h, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.h, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ld1h(z7.h, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z0.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z1.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z2.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z4.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z8.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z16.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z31.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.h, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.h, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.h, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.h, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_load_scalar_plus_immediate2:2
ld1h(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1h(z0.s, p7/T_z, ptr( x7 ) ); dump();
ld1h(z1.s, p7/T_z, ptr( x7 ) ); dump();
ld1h(z2.s, p7/T_z, ptr( x7 ) ); dump();
ld1h(z4.s, p7/T_z, ptr( x7 ) ); dump();
ld1h(z8.s, p7/T_z, ptr( x7 ) ); dump();
ld1h(z16.s, p7/T_z, ptr( x7 ) ); dump();
ld1h(z31.s, p7/T_z, ptr( x7 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1h(z7.s, p0/T_z, ptr( x7 ) ); dump();
ld1h(z7.s, p1/T_z, ptr( x7 ) ); dump();
ld1h(z7.s, p2/T_z, ptr( x7 ) ); dump();
ld1h(z7.s, p4/T_z, ptr( x7 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x0 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x1 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x2 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x4 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x8 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x16 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x30 ) ); dump();
ld1h(z7.s, p7/T_z, ptr( sp ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z0.s, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z1.s, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z2.s, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z4.s, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z8.s, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z16.s, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z31.s, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z7.s, p0/T_z, ptr( x7 ) ); dump();
ld1sb(z7.s, p1/T_z, ptr( x7 ) ); dump();
ld1sb(z7.s, p2/T_z, ptr( x7 ) ); dump();
ld1sb(z7.s, p4/T_z, ptr( x7 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x0 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x1 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x2 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x4 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x8 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x16 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x30 ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( sp ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7 ) ); dump();
//SVE_contiguous_load_scalar_plus_immediate2:3
ld1h(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z0.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z1.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z2.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z4.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z8.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z16.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z31.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.s, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.s, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.s, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.s, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ld1h(z7.s, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z0.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z1.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z2.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z4.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z8.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z16.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z31.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.s, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.s, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.s, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.s, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_load_scalar_plus_immediate2:4
ld1h(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1h(z0.d, p7/T_z, ptr( x7 ) ); dump();
ld1h(z1.d, p7/T_z, ptr( x7 ) ); dump();
ld1h(z2.d, p7/T_z, ptr( x7 ) ); dump();
ld1h(z4.d, p7/T_z, ptr( x7 ) ); dump();
ld1h(z8.d, p7/T_z, ptr( x7 ) ); dump();
ld1h(z16.d, p7/T_z, ptr( x7 ) ); dump();
ld1h(z31.d, p7/T_z, ptr( x7 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1h(z7.d, p0/T_z, ptr( x7 ) ); dump();
ld1h(z7.d, p1/T_z, ptr( x7 ) ); dump();
ld1h(z7.d, p2/T_z, ptr( x7 ) ); dump();
ld1h(z7.d, p4/T_z, ptr( x7 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x0 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x2 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x4 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x8 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x16 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x30 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( sp ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z0.d, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z1.d, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z2.d, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z4.d, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z8.d, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z16.d, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z31.d, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z7.d, p0/T_z, ptr( x7 ) ); dump();
ld1sb(z7.d, p1/T_z, ptr( x7 ) ); dump();
ld1sb(z7.d, p2/T_z, ptr( x7 ) ); dump();
ld1sb(z7.d, p4/T_z, ptr( x7 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x0 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x1 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x2 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x4 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x8 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x16 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x30 ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( sp ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7 ) ); dump();
//SVE_contiguous_load_scalar_plus_immediate2:5
ld1h(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z0.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z1.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z2.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z4.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z8.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z16.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z31.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.d, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.d, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.d, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.d, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ld1h(z7.d, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z0.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z1.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z2.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z4.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z8.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z16.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z31.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.d, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.d, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.d, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.d, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_load_scalar_plus_immediate3:0
ld1sh(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1sh(z0.d, p7/T_z, ptr( x7 ) ); dump();
ld1sh(z1.d, p7/T_z, ptr( x7 ) ); dump();
ld1sh(z2.d, p7/T_z, ptr( x7 ) ); dump();
ld1sh(z4.d, p7/T_z, ptr( x7 ) ); dump();
ld1sh(z8.d, p7/T_z, ptr( x7 ) ); dump();
ld1sh(z16.d, p7/T_z, ptr( x7 ) ); dump();
ld1sh(z31.d, p7/T_z, ptr( x7 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1sh(z7.d, p0/T_z, ptr( x7 ) ); dump();
ld1sh(z7.d, p1/T_z, ptr( x7 ) ); dump();
ld1sh(z7.d, p2/T_z, ptr( x7 ) ); dump();
ld1sh(z7.d, p4/T_z, ptr( x7 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x0 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x2 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x4 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x8 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x16 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x30 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( sp ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1w(z0.d, p7/T_z, ptr( x7 ) ); dump();
ld1w(z1.d, p7/T_z, ptr( x7 ) ); dump();
ld1w(z2.d, p7/T_z, ptr( x7 ) ); dump();
ld1w(z4.d, p7/T_z, ptr( x7 ) ); dump();
ld1w(z8.d, p7/T_z, ptr( x7 ) ); dump();
ld1w(z16.d, p7/T_z, ptr( x7 ) ); dump();
ld1w(z31.d, p7/T_z, ptr( x7 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1w(z7.d, p0/T_z, ptr( x7 ) ); dump();
ld1w(z7.d, p1/T_z, ptr( x7 ) ); dump();
ld1w(z7.d, p2/T_z, ptr( x7 ) ); dump();
ld1w(z7.d, p4/T_z, ptr( x7 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x0 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x1 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x4 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x8 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x16 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x30 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( sp ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7 ) ); dump();
//SVE_contiguous_load_scalar_plus_immediate3:1
ld1sh(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z0.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z1.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z2.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z4.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z8.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z16.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z31.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z7.d, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z7.d, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z7.d, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z7.d, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z0.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z1.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z2.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z4.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z8.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z16.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z31.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z7.d, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z7.d, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z7.d, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z7.d, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ld1w(z7.d, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_load_scalar_plus_immediate3:2
ld1sh(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1sh(z0.s, p7/T_z, ptr( x7 ) ); dump();
ld1sh(z1.s, p7/T_z, ptr( x7 ) ); dump();
ld1sh(z2.s, p7/T_z, ptr( x7 ) ); dump();
ld1sh(z4.s, p7/T_z, ptr( x7 ) ); dump();
ld1sh(z8.s, p7/T_z, ptr( x7 ) ); dump();
ld1sh(z16.s, p7/T_z, ptr( x7 ) ); dump();
ld1sh(z31.s, p7/T_z, ptr( x7 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1sh(z7.s, p0/T_z, ptr( x7 ) ); dump();
ld1sh(z7.s, p1/T_z, ptr( x7 ) ); dump();
ld1sh(z7.s, p2/T_z, ptr( x7 ) ); dump();
ld1sh(z7.s, p4/T_z, ptr( x7 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x0 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x1 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x2 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x4 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x8 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x16 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x30 ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( sp ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1w(z0.s, p7/T_z, ptr( x7 ) ); dump();
ld1w(z1.s, p7/T_z, ptr( x7 ) ); dump();
ld1w(z2.s, p7/T_z, ptr( x7 ) ); dump();
ld1w(z4.s, p7/T_z, ptr( x7 ) ); dump();
ld1w(z8.s, p7/T_z, ptr( x7 ) ); dump();
ld1w(z16.s, p7/T_z, ptr( x7 ) ); dump();
ld1w(z31.s, p7/T_z, ptr( x7 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1w(z7.s, p0/T_z, ptr( x7 ) ); dump();
ld1w(z7.s, p1/T_z, ptr( x7 ) ); dump();
ld1w(z7.s, p2/T_z, ptr( x7 ) ); dump();
ld1w(z7.s, p4/T_z, ptr( x7 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x0 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x1 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x2 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x4 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x8 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x16 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x30 ) ); dump();
ld1w(z7.s, p7/T_z, ptr( sp ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7 ) ); dump();
//SVE_contiguous_load_scalar_plus_immediate3:3
ld1sh(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z0.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z1.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z2.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z4.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z8.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z16.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z31.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z7.s, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z7.s, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z7.s, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z7.s, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1sh(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z0.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z1.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z2.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z4.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z8.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z16.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z31.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z7.s, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z7.s, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z7.s, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z7.s, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ld1w(z7.s, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ld1w(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_non_fault_load_scalar_plus_immediate0:0
ldnf1b(z7.b, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z0.b, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z1.b, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z2.b, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z4.b, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z8.b, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z16.b, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z31.b, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.b, p0/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.b, p1/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.b, p2/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.b, p4/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x0 ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x1 ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x2 ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x4 ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x8 ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x16 ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x30 ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( sp ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x7 ) ); dump();
//SVE_contiguous_non_fault_load_scalar_plus_immediate0:1
ldnf1b(z7.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z0.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z1.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z2.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z4.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z8.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z16.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z31.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.b, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.b, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.b, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.b, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_non_fault_load_scalar_plus_immediate0:2
ldnf1b(z7.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z0.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z1.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z2.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z4.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z8.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z16.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z31.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.h, p0/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.h, p1/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.h, p2/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.h, p4/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x0 ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x1 ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x2 ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x4 ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x8 ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x16 ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x30 ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( sp ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x7 ) ); dump();
//SVE_contiguous_non_fault_load_scalar_plus_immediate0:3
ldnf1b(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z0.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z1.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z2.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z4.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z8.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z16.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z31.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.h, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.h, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.h, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.h, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_non_fault_load_scalar_plus_immediate0:4
ldnf1b(z7.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z0.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z1.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z2.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z4.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z8.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z16.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z31.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.s, p0/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.s, p1/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.s, p2/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.s, p4/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x0 ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x1 ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x2 ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x4 ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x8 ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x16 ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x30 ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( sp ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x7 ) ); dump();
//SVE_contiguous_non_fault_load_scalar_plus_immediate0:5
ldnf1b(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z0.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z1.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z2.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z4.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z8.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z16.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z31.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.s, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.s, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.s, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.s, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_non_fault_load_scalar_plus_immediate0:6
ldnf1b(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z0.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z1.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z2.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z4.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z8.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z16.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z31.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.d, p0/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.d, p1/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.d, p2/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.d, p4/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x0 ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x1 ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x2 ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x4 ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x8 ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x16 ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x30 ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( sp ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x7 ) ); dump();
//SVE_contiguous_non_fault_load_scalar_plus_immediate0:7
ldnf1b(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z0.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z1.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z2.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z4.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z8.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z16.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z31.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.d, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.d, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.d, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.d, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1b(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_non_fault_load_scalar_plus_immediate1:0
ldnf1sw(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sw(z0.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sw(z1.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sw(z2.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sw(z4.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sw(z8.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sw(z16.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sw(z31.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sw(z7.d, p0/T_z, ptr( x7 ) ); dump();
ldnf1sw(z7.d, p1/T_z, ptr( x7 ) ); dump();
ldnf1sw(z7.d, p2/T_z, ptr( x7 ) ); dump();
ldnf1sw(z7.d, p4/T_z, ptr( x7 ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x0 ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x1 ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x2 ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x4 ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x8 ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x16 ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x30 ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( sp ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1d(z0.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1d(z1.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1d(z2.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1d(z4.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1d(z8.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1d(z16.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1d(z31.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1d(z7.d, p0/T_z, ptr( x7 ) ); dump();
ldnf1d(z7.d, p1/T_z, ptr( x7 ) ); dump();
ldnf1d(z7.d, p2/T_z, ptr( x7 ) ); dump();
ldnf1d(z7.d, p4/T_z, ptr( x7 ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x0 ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x1 ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x2 ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x4 ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x8 ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x16 ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x30 ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( sp ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x7 ) ); dump();
//SVE_contiguous_non_fault_load_scalar_plus_immediate1:1
ldnf1sw(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sw(z0.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sw(z1.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sw(z2.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sw(z4.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sw(z8.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sw(z16.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sw(z31.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sw(z7.d, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sw(z7.d, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sw(z7.d, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sw(z7.d, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sw(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1d(z0.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1d(z1.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1d(z2.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1d(z4.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1d(z8.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1d(z16.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1d(z31.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1d(z7.d, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1d(z7.d, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1d(z7.d, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1d(z7.d, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1d(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_non_fault_load_scalar_plus_immediate2:0
ldnf1h(z7.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z0.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z1.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z2.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z4.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z8.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z16.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z31.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z7.h, p0/T_z, ptr( x7 ) ); dump();
ldnf1h(z7.h, p1/T_z, ptr( x7 ) ); dump();
ldnf1h(z7.h, p2/T_z, ptr( x7 ) ); dump();
ldnf1h(z7.h, p4/T_z, ptr( x7 ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x0 ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x1 ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x2 ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x4 ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x8 ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x16 ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x30 ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( sp ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z0.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z1.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z2.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z4.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z8.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z16.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z31.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z7.h, p0/T_z, ptr( x7 ) ); dump();
ldnf1sb(z7.h, p1/T_z, ptr( x7 ) ); dump();
ldnf1sb(z7.h, p2/T_z, ptr( x7 ) ); dump();
ldnf1sb(z7.h, p4/T_z, ptr( x7 ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x0 ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x1 ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x2 ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x4 ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x8 ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x16 ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x30 ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( sp ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x7 ) ); dump();
//SVE_contiguous_non_fault_load_scalar_plus_immediate2:1
ldnf1h(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z0.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z1.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z2.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z4.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z8.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z16.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z31.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.h, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.h, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.h, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.h, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z0.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z1.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z2.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z4.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z8.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z16.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z31.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.h, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.h, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.h, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.h, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_non_fault_load_scalar_plus_immediate2:2
ldnf1h(z7.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z0.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z1.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z2.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z4.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z8.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z16.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z31.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z7.s, p0/T_z, ptr( x7 ) ); dump();
ldnf1h(z7.s, p1/T_z, ptr( x7 ) ); dump();
ldnf1h(z7.s, p2/T_z, ptr( x7 ) ); dump();
ldnf1h(z7.s, p4/T_z, ptr( x7 ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x0 ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x1 ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x2 ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x4 ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x8 ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x16 ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x30 ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( sp ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z0.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z1.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z2.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z4.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z8.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z16.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z31.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z7.s, p0/T_z, ptr( x7 ) ); dump();
ldnf1sb(z7.s, p1/T_z, ptr( x7 ) ); dump();
ldnf1sb(z7.s, p2/T_z, ptr( x7 ) ); dump();
ldnf1sb(z7.s, p4/T_z, ptr( x7 ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x0 ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x1 ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x2 ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x4 ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x8 ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x16 ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x30 ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( sp ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x7 ) ); dump();
//SVE_contiguous_non_fault_load_scalar_plus_immediate2:3
ldnf1h(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z0.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z1.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z2.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z4.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z8.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z16.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z31.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.s, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.s, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.s, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.s, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z0.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z1.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z2.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z4.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z8.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z16.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z31.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.s, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.s, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.s, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.s, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_non_fault_load_scalar_plus_immediate2:4
ldnf1h(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z0.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z1.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z2.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z4.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z8.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z16.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z31.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z7.d, p0/T_z, ptr( x7 ) ); dump();
ldnf1h(z7.d, p1/T_z, ptr( x7 ) ); dump();
ldnf1h(z7.d, p2/T_z, ptr( x7 ) ); dump();
ldnf1h(z7.d, p4/T_z, ptr( x7 ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x0 ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x1 ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x2 ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x4 ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x8 ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x16 ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x30 ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( sp ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z0.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z1.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z2.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z4.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z8.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z16.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z31.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z7.d, p0/T_z, ptr( x7 ) ); dump();
ldnf1sb(z7.d, p1/T_z, ptr( x7 ) ); dump();
ldnf1sb(z7.d, p2/T_z, ptr( x7 ) ); dump();
ldnf1sb(z7.d, p4/T_z, ptr( x7 ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x0 ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x1 ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x2 ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x4 ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x8 ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x16 ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x30 ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( sp ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x7 ) ); dump();
//SVE_contiguous_non_fault_load_scalar_plus_immediate2:5
ldnf1h(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z0.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z1.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z2.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z4.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z8.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z16.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z31.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.d, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.d, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.d, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.d, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1h(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z0.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z1.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z2.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z4.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z8.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z16.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z31.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.d, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.d, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.d, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.d, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sb(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_non_fault_load_scalar_plus_immediate3:0
ldnf1sh(z7.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1sh(z0.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1sh(z1.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1sh(z2.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1sh(z4.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1sh(z8.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1sh(z16.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1sh(z31.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1sh(z7.s, p0/T_z, ptr( x7 ) ); dump();
ldnf1sh(z7.s, p1/T_z, ptr( x7 ) ); dump();
ldnf1sh(z7.s, p2/T_z, ptr( x7 ) ); dump();
ldnf1sh(z7.s, p4/T_z, ptr( x7 ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x0 ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x1 ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x2 ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x4 ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x8 ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x16 ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x30 ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( sp ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1w(z0.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1w(z1.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1w(z2.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1w(z4.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1w(z8.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1w(z16.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1w(z31.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1w(z7.s, p0/T_z, ptr( x7 ) ); dump();
ldnf1w(z7.s, p1/T_z, ptr( x7 ) ); dump();
ldnf1w(z7.s, p2/T_z, ptr( x7 ) ); dump();
ldnf1w(z7.s, p4/T_z, ptr( x7 ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x7 ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x0 ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x1 ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x2 ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x4 ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x8 ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x16 ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x30 ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( sp ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x7 ) ); dump();
//SVE_contiguous_non_fault_load_scalar_plus_immediate3:1
ldnf1sh(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z0.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z1.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z2.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z4.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z8.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z16.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z31.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z7.s, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z7.s, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z7.s, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z7.s, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z0.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z1.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z2.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z4.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z8.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z16.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z31.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z7.s, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z7.s, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z7.s, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z7.s, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_non_fault_load_scalar_plus_immediate3:2
ldnf1sh(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sh(z0.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sh(z1.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sh(z2.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sh(z4.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sh(z8.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sh(z16.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sh(z31.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sh(z7.d, p0/T_z, ptr( x7 ) ); dump();
ldnf1sh(z7.d, p1/T_z, ptr( x7 ) ); dump();
ldnf1sh(z7.d, p2/T_z, ptr( x7 ) ); dump();
ldnf1sh(z7.d, p4/T_z, ptr( x7 ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x0 ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x1 ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x2 ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x4 ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x8 ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x16 ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x30 ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( sp ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1w(z0.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1w(z1.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1w(z2.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1w(z4.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1w(z8.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1w(z16.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1w(z31.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1w(z7.d, p0/T_z, ptr( x7 ) ); dump();
ldnf1w(z7.d, p1/T_z, ptr( x7 ) ); dump();
ldnf1w(z7.d, p2/T_z, ptr( x7 ) ); dump();
ldnf1w(z7.d, p4/T_z, ptr( x7 ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x0 ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x1 ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x2 ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x4 ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x8 ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x16 ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x30 ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( sp ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x7 ) ); dump();
//SVE_contiguous_non_fault_load_scalar_plus_immediate3:3
ldnf1sh(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z0.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z1.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z2.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z4.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z8.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z16.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z31.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z7.d, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z7.d, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z7.d, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z7.d, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1sh(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z0.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z1.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z2.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z4.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z8.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z16.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z31.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z7.d, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z7.d, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z7.d, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z7.d, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnf1w(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_non_temporal_load_scalar_plus_scalar0:0
ldnt1b(z7.b, p7/T_z, ptr( x7, x0 ) ); dump();
ldnt1b(z0.b, p7/T_z, ptr( x7, x0 ) ); dump();
ldnt1b(z1.b, p7/T_z, ptr( x7, x0 ) ); dump();
ldnt1b(z2.b, p7/T_z, ptr( x7, x0 ) ); dump();
ldnt1b(z4.b, p7/T_z, ptr( x7, x0 ) ); dump();
ldnt1b(z8.b, p7/T_z, ptr( x7, x0 ) ); dump();
ldnt1b(z16.b, p7/T_z, ptr( x7, x0 ) ); dump();
ldnt1b(z31.b, p7/T_z, ptr( x7, x0 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7, x0 ) ); dump();
ldnt1b(z7.b, p0/T_z, ptr( x7, x0 ) ); dump();
ldnt1b(z7.b, p1/T_z, ptr( x7, x0 ) ); dump();
ldnt1b(z7.b, p2/T_z, ptr( x7, x0 ) ); dump();
ldnt1b(z7.b, p4/T_z, ptr( x7, x0 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7, x0 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7, x0 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x0, x0 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x1, x0 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x2, x0 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x4, x0 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x8, x0 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x16, x0 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x30, x0 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( sp, x0 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7, x0 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7, x1 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7, x2 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7, x4 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7, x8 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7, x16 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7, x30 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7, x0 ) ); dump();
//SVE_contiguous_non_temporal_load_scalar_plus_scalar1:0
ldnt1h(z7.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldnt1h(z0.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldnt1h(z1.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldnt1h(z2.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldnt1h(z4.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldnt1h(z8.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldnt1h(z16.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldnt1h(z31.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldnt1h(z7.h, p0/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldnt1h(z7.h, p1/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldnt1h(z7.h, p2/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldnt1h(z7.h, p4/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x0, x0, LSL, 1 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x1, x0, LSL, 1 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x2, x0, LSL, 1 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x4, x0, LSL, 1 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x8, x0, LSL, 1 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x16, x0, LSL, 1 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x30, x0, LSL, 1 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( sp, x0, LSL, 1 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7, x1, LSL, 1 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7, x2, LSL, 1 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7, x4, LSL, 1 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7, x8, LSL, 1 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7, x16, LSL, 1 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7, x30, LSL, 1 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7, x0, LSL, 1 ) ); dump();
//SVE_contiguous_non_temporal_load_scalar_plus_scalar2:0
ldnt1w(z7.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldnt1w(z0.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldnt1w(z1.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldnt1w(z2.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldnt1w(z4.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldnt1w(z8.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldnt1w(z16.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldnt1w(z31.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldnt1w(z7.s, p0/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldnt1w(z7.s, p1/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldnt1w(z7.s, p2/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldnt1w(z7.s, p4/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x0, x0, LSL, 2 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x1, x0, LSL, 2 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x2, x0, LSL, 2 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x4, x0, LSL, 2 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x8, x0, LSL, 2 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x16, x0, LSL, 2 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x30, x0, LSL, 2 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( sp, x0, LSL, 2 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7, x1, LSL, 2 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7, x2, LSL, 2 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7, x4, LSL, 2 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7, x8, LSL, 2 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7, x16, LSL, 2 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7, x30, LSL, 2 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7, x0, LSL, 2 ) ); dump();
//SVE_contiguous_non_temporal_load_scalar_plus_scalar3:0
ldnt1d(z7.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldnt1d(z0.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldnt1d(z1.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldnt1d(z2.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldnt1d(z4.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldnt1d(z8.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldnt1d(z16.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldnt1d(z31.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldnt1d(z7.d, p0/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldnt1d(z7.d, p1/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldnt1d(z7.d, p2/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldnt1d(z7.d, p4/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x0, x0, LSL, 3 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x1, x0, LSL, 3 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x2, x0, LSL, 3 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x4, x0, LSL, 3 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x8, x0, LSL, 3 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x16, x0, LSL, 3 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x30, x0, LSL, 3 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( sp, x0, LSL, 3 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7, x1, LSL, 3 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7, x2, LSL, 3 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7, x4, LSL, 3 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7, x8, LSL, 3 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7, x16, LSL, 3 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7, x30, LSL, 3 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7, x0, LSL, 3 ) ); dump();
//SVE_contiguous_non_temporal_load_scalar_plus_immediate0:0
ldnt1b(z7.b, p7/T_z, ptr( x7 ) ); dump();
ldnt1b(z0.b, p7/T_z, ptr( x7 ) ); dump();
ldnt1b(z1.b, p7/T_z, ptr( x7 ) ); dump();
ldnt1b(z2.b, p7/T_z, ptr( x7 ) ); dump();
ldnt1b(z4.b, p7/T_z, ptr( x7 ) ); dump();
ldnt1b(z8.b, p7/T_z, ptr( x7 ) ); dump();
ldnt1b(z16.b, p7/T_z, ptr( x7 ) ); dump();
ldnt1b(z31.b, p7/T_z, ptr( x7 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7 ) ); dump();
ldnt1b(z7.b, p0/T_z, ptr( x7 ) ); dump();
ldnt1b(z7.b, p1/T_z, ptr( x7 ) ); dump();
ldnt1b(z7.b, p2/T_z, ptr( x7 ) ); dump();
ldnt1b(z7.b, p4/T_z, ptr( x7 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x0 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x1 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x2 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x4 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x8 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x16 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x30 ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( sp ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7 ) ); dump();
//SVE_contiguous_non_temporal_load_scalar_plus_immediate0:1
ldnt1b(z7.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1b(z0.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1b(z1.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1b(z2.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1b(z4.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1b(z8.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1b(z16.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1b(z31.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1b(z7.b, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1b(z7.b, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1b(z7.b, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1b(z7.b, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1b(z7.b, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_non_temporal_load_scalar_plus_immediate1:0
ldnt1h(z7.h, p7/T_z, ptr( x7 ) ); dump();
ldnt1h(z0.h, p7/T_z, ptr( x7 ) ); dump();
ldnt1h(z1.h, p7/T_z, ptr( x7 ) ); dump();
ldnt1h(z2.h, p7/T_z, ptr( x7 ) ); dump();
ldnt1h(z4.h, p7/T_z, ptr( x7 ) ); dump();
ldnt1h(z8.h, p7/T_z, ptr( x7 ) ); dump();
ldnt1h(z16.h, p7/T_z, ptr( x7 ) ); dump();
ldnt1h(z31.h, p7/T_z, ptr( x7 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7 ) ); dump();
ldnt1h(z7.h, p0/T_z, ptr( x7 ) ); dump();
ldnt1h(z7.h, p1/T_z, ptr( x7 ) ); dump();
ldnt1h(z7.h, p2/T_z, ptr( x7 ) ); dump();
ldnt1h(z7.h, p4/T_z, ptr( x7 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x0 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x1 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x2 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x4 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x8 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x16 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x30 ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( sp ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7 ) ); dump();
//SVE_contiguous_non_temporal_load_scalar_plus_immediate1:1
ldnt1h(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1h(z0.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1h(z1.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1h(z2.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1h(z4.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1h(z8.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1h(z16.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1h(z31.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1h(z7.h, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1h(z7.h, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1h(z7.h, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1h(z7.h, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1h(z7.h, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_non_temporal_load_scalar_plus_immediate2:0
ldnt1w(z7.s, p7/T_z, ptr( x7 ) ); dump();
ldnt1w(z0.s, p7/T_z, ptr( x7 ) ); dump();
ldnt1w(z1.s, p7/T_z, ptr( x7 ) ); dump();
ldnt1w(z2.s, p7/T_z, ptr( x7 ) ); dump();
ldnt1w(z4.s, p7/T_z, ptr( x7 ) ); dump();
ldnt1w(z8.s, p7/T_z, ptr( x7 ) ); dump();
ldnt1w(z16.s, p7/T_z, ptr( x7 ) ); dump();
ldnt1w(z31.s, p7/T_z, ptr( x7 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7 ) ); dump();
ldnt1w(z7.s, p0/T_z, ptr( x7 ) ); dump();
ldnt1w(z7.s, p1/T_z, ptr( x7 ) ); dump();
ldnt1w(z7.s, p2/T_z, ptr( x7 ) ); dump();
ldnt1w(z7.s, p4/T_z, ptr( x7 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x0 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x1 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x2 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x4 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x8 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x16 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x30 ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( sp ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7 ) ); dump();
//SVE_contiguous_non_temporal_load_scalar_plus_immediate2:1
ldnt1w(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1w(z0.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1w(z1.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1w(z2.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1w(z4.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1w(z8.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1w(z16.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1w(z31.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1w(z7.s, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1w(z7.s, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1w(z7.s, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1w(z7.s, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1w(z7.s, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_non_temporal_load_scalar_plus_immediate3:0
ldnt1d(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnt1d(z0.d, p7/T_z, ptr( x7 ) ); dump();
ldnt1d(z1.d, p7/T_z, ptr( x7 ) ); dump();
ldnt1d(z2.d, p7/T_z, ptr( x7 ) ); dump();
ldnt1d(z4.d, p7/T_z, ptr( x7 ) ); dump();
ldnt1d(z8.d, p7/T_z, ptr( x7 ) ); dump();
ldnt1d(z16.d, p7/T_z, ptr( x7 ) ); dump();
ldnt1d(z31.d, p7/T_z, ptr( x7 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnt1d(z7.d, p0/T_z, ptr( x7 ) ); dump();
ldnt1d(z7.d, p1/T_z, ptr( x7 ) ); dump();
ldnt1d(z7.d, p2/T_z, ptr( x7 ) ); dump();
ldnt1d(z7.d, p4/T_z, ptr( x7 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x0 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x1 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x2 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x4 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x8 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x16 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x30 ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( sp ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7 ) ); dump();
//SVE_contiguous_non_temporal_load_scalar_plus_immediate3:1
ldnt1d(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1d(z0.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1d(z1.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1d(z2.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1d(z4.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1d(z8.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1d(z16.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1d(z31.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1d(z7.d, p0/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1d(z7.d, p1/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1d(z7.d, p2/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1d(z7.d, p4/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x0, 7, MUL_VL ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x1, 7, MUL_VL ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x2, 7, MUL_VL ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x4, 7, MUL_VL ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x8, 7, MUL_VL ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x16, 7, MUL_VL ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x30, 7, MUL_VL ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( sp, 7, MUL_VL ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7, -8, MUL_VL ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7, -4, MUL_VL ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7, -2, MUL_VL ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7, -1, MUL_VL ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7, 0, MUL_VL ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7, 1, MUL_VL ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7, 2, MUL_VL ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7, 4, MUL_VL ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
ldnt1d(z7.d, p7/T_z, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_64_bit_gather_load_scalar_plus_unpacked_32_bit_unscaled_offsets0:0
ldff1sb(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z0.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z1.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z2.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z4.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z8.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z16.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z31.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p0/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p1/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p2/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p4/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x0, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x1, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x2, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x4, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x8, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x16, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x30, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( sp, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z0.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z1.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z2.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z4.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z8.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z16.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z31.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z7.d, SXT ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z0.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z1.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z2.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z4.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z8.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z16.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z31.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z7.d, p0/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z7.d, p1/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z7.d, p2/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z7.d, p4/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x0, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x1, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x2, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x4, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x8, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x16, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x30, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( sp, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z0.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z1.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z2.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z4.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z8.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z16.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z31.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z7.d, SXT ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z0.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z1.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z2.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z4.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z8.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z16.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z31.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z7.d, p0/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z7.d, p1/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z7.d, p2/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z7.d, p4/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x0, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x1, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x2, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x4, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x8, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x16, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x30, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( sp, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z0.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z1.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z2.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z4.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z8.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z16.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z31.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z7.d, SXT ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z0.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z1.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z2.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z4.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z8.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z16.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z31.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z7.d, p0/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z7.d, p1/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z7.d, p2/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z7.d, p4/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x0, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x1, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x2, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x4, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x8, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x16, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x30, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( sp, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z0.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z1.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z2.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z4.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z8.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z16.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z31.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z7.d, SXT ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z0.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z1.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z2.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z4.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z8.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z16.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z31.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z7.d, p0/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z7.d, p1/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z7.d, p2/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z7.d, p4/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x0, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x1, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x2, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x4, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x8, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x16, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x30, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( sp, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z0.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z1.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z2.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z4.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z8.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z16.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z31.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, SXT ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z0.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z1.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z2.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z4.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z8.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z16.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z31.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p0/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p1/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p2/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p4/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x0, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x1, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x2, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x4, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x8, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x16, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x30, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( sp, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z0.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z1.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z2.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z4.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z8.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z16.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z31.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, SXT ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z0.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z1.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z2.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z4.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z8.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z16.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z31.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z7.d, p0/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z7.d, p1/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z7.d, p2/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z7.d, p4/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x0, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x1, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x2, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x4, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x8, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x16, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x30, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( sp, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z0.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z1.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z2.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z4.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z8.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z16.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z31.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, SXT ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z0.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z1.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z2.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z4.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z8.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z16.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z31.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z7.d, p0/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z7.d, p1/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z7.d, p2/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z7.d, p4/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x0, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x1, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x2, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x4, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x8, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x16, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x30, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( sp, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z0.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z1.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z2.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z4.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z8.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z16.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z31.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, SXT ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sw(z0.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sw(z1.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sw(z2.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sw(z4.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sw(z8.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sw(z16.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sw(z31.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sw(z7.d, p0/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sw(z7.d, p1/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sw(z7.d, p2/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sw(z7.d, p4/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x0, z7.d, UXT ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x1, z7.d, UXT ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x2, z7.d, UXT ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x4, z7.d, UXT ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x8, z7.d, UXT ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x16, z7.d, UXT ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x30, z7.d, UXT ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( sp, z7.d, UXT ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z0.d, UXT ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z1.d, UXT ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z2.d, UXT ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z4.d, UXT ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z8.d, UXT ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z16.d, UXT ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z31.d, UXT ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d, SXT ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sw(z0.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sw(z1.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sw(z2.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sw(z4.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sw(z8.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sw(z16.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sw(z31.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sw(z7.d, p0/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sw(z7.d, p1/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sw(z7.d, p2/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sw(z7.d, p4/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x0, z7.d, UXT ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x1, z7.d, UXT ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x2, z7.d, UXT ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x4, z7.d, UXT ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x8, z7.d, UXT ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x16, z7.d, UXT ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x30, z7.d, UXT ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( sp, z7.d, UXT ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z0.d, UXT ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z1.d, UXT ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z2.d, UXT ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z4.d, UXT ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z8.d, UXT ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z16.d, UXT ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z31.d, UXT ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d, SXT ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z0.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z1.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z2.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z4.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z8.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z16.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z31.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z7.d, p0/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z7.d, p1/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z7.d, p2/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z7.d, p4/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x0, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x1, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x2, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x4, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x8, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x16, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x30, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( sp, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z0.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z1.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z2.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z4.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z8.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z16.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z31.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, SXT ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z0.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z1.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z2.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z4.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z8.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z16.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z31.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z7.d, p0/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z7.d, p1/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z7.d, p2/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z7.d, p4/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x0, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x1, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x2, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x4, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x8, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x16, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x30, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( sp, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z0.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z1.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z2.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z4.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z8.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z16.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z31.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, SXT ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1d(z0.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1d(z1.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1d(z2.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1d(z4.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1d(z8.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1d(z16.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1d(z31.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1d(z7.d, p0/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1d(z7.d, p1/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1d(z7.d, p2/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1d(z7.d, p4/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x0, z7.d, UXT ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x1, z7.d, UXT ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x2, z7.d, UXT ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x4, z7.d, UXT ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x8, z7.d, UXT ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x16, z7.d, UXT ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x30, z7.d, UXT ) ); dump();
ld1d(z7.d, p7/T_z, ptr( sp, z7.d, UXT ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z0.d, UXT ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z1.d, UXT ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z2.d, UXT ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z4.d, UXT ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z8.d, UXT ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z16.d, UXT ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z31.d, UXT ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z7.d, SXT ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1d(z0.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1d(z1.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1d(z2.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1d(z4.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1d(z8.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1d(z16.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1d(z31.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1d(z7.d, p0/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1d(z7.d, p1/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1d(z7.d, p2/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1d(z7.d, p4/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x0, z7.d, UXT ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x1, z7.d, UXT ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x2, z7.d, UXT ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x4, z7.d, UXT ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x8, z7.d, UXT ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x16, z7.d, UXT ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x30, z7.d, UXT ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( sp, z7.d, UXT ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z0.d, UXT ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z1.d, UXT ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z2.d, UXT ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z4.d, UXT ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z8.d, UXT ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z16.d, UXT ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z31.d, UXT ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d, SXT ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d, UXT ) ); dump();
//SVE_64_bit_gather_load_scalar_plus_32_bit_unpacked_scaled_offsets0:0
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z0.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z1.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z2.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z4.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z8.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z16.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z31.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p0/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p1/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p2/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p4/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x0, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x1, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x2, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x4, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x8, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x16, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x30, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( sp, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z0.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z1.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z2.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z4.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z8.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z16.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z31.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, SXTW, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z0.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z1.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z2.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z4.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z8.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z16.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z31.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p0/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p1/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p2/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p4/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x0, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x1, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x2, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x4, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x8, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x16, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x30, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( sp, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z0.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z1.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z2.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z4.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z8.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z16.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z31.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, SXTW, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z0.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z1.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z2.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z4.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z8.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z16.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z31.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p0/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p1/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p2/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p4/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x0, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x1, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x2, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x4, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x8, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x16, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x30, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( sp, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z0.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z1.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z2.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z4.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z8.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z16.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z31.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, SXTW, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z0.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z1.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z2.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z4.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z8.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z16.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z31.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p0/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p1/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p2/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p4/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x0, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x1, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x2, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x4, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x8, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x16, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x30, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( sp, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z0.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z1.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z2.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z4.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z8.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z16.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z31.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, SXTW, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 1 ) ); dump();
//SVE_64_bit_gather_load_scalar_plus_32_bit_unpacked_scaled_offsets1:0
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1sw(z0.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1sw(z1.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1sw(z2.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1sw(z4.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1sw(z8.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1sw(z16.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1sw(z31.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1sw(z7.d, p0/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1sw(z7.d, p1/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1sw(z7.d, p2/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1sw(z7.d, p4/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x0, z7.d, UXTW, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x1, z7.d, UXTW, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x2, z7.d, UXTW, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x4, z7.d, UXTW, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x8, z7.d, UXTW, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x16, z7.d, UXTW, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x30, z7.d, UXTW, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( sp, z7.d, UXTW, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z0.d, UXTW, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z1.d, UXTW, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z2.d, UXTW, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z4.d, UXTW, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z8.d, UXTW, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z16.d, UXTW, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z31.d, UXTW, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d, SXTW, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1sw(z0.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1sw(z1.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1sw(z2.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1sw(z4.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1sw(z8.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1sw(z16.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1sw(z31.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1sw(z7.d, p0/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1sw(z7.d, p1/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1sw(z7.d, p2/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1sw(z7.d, p4/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x0, z7.d, UXTW, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x1, z7.d, UXTW, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x2, z7.d, UXTW, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x4, z7.d, UXTW, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x8, z7.d, UXTW, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x16, z7.d, UXTW, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x30, z7.d, UXTW, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( sp, z7.d, UXTW, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z0.d, UXTW, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z1.d, UXTW, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z2.d, UXTW, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z4.d, UXTW, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z8.d, UXTW, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z16.d, UXTW, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z31.d, UXTW, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d, SXTW, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z0.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z1.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z2.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z4.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z8.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z16.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z31.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p0/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p1/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p2/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p4/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x0, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x1, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x2, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x4, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x8, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x16, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x30, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( sp, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z0.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z1.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z2.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z4.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z8.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z16.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z31.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, SXTW, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z0.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z1.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z2.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z4.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z8.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z16.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z31.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p0/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p1/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p2/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p4/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x0, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x1, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x2, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x4, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x8, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x16, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x30, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( sp, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z0.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z1.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z2.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z4.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z8.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z16.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z31.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, SXTW, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 2 ) ); dump();
//SVE_64_bit_gather_load_scalar_plus_32_bit_unpacked_scaled_offsets2:0
ld1d(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ld1d(z0.d, p7/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ld1d(z1.d, p7/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ld1d(z2.d, p7/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ld1d(z4.d, p7/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ld1d(z8.d, p7/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ld1d(z16.d, p7/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ld1d(z31.d, p7/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ld1d(z7.d, p0/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ld1d(z7.d, p1/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ld1d(z7.d, p2/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ld1d(z7.d, p4/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x0, z7.d, UXTW, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x1, z7.d, UXTW, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x2, z7.d, UXTW, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x4, z7.d, UXTW, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x8, z7.d, UXTW, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x16, z7.d, UXTW, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x30, z7.d, UXTW, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( sp, z7.d, UXTW, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z0.d, UXTW, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z1.d, UXTW, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z2.d, UXTW, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z4.d, UXTW, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z8.d, UXTW, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z16.d, UXTW, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z31.d, UXTW, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z7.d, SXTW, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ldff1d(z0.d, p7/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ldff1d(z1.d, p7/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ldff1d(z2.d, p7/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ldff1d(z4.d, p7/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ldff1d(z8.d, p7/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ldff1d(z16.d, p7/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ldff1d(z31.d, p7/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ldff1d(z7.d, p0/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ldff1d(z7.d, p1/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ldff1d(z7.d, p2/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ldff1d(z7.d, p4/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x0, z7.d, UXTW, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x1, z7.d, UXTW, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x2, z7.d, UXTW, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x4, z7.d, UXTW, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x8, z7.d, UXTW, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x16, z7.d, UXTW, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x30, z7.d, UXTW, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( sp, z7.d, UXTW, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z0.d, UXTW, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z1.d, UXTW, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z2.d, UXTW, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z4.d, UXTW, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z8.d, UXTW, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z16.d, UXTW, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z31.d, UXTW, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d, SXTW, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d, UXTW, 3 ) ); dump();
//SVE_64_bit_gather_prefetch_vector_plus_immediate0:0
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfb(PLDL1STRM_SVE, p7, ptr( z7.s ) ); dump();
prfb(PLDL2KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfb(PLDL2STRM_SVE, p7, ptr( z7.s ) ); dump();
prfb(PLDL3KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfb(PLDL3STRM_SVE, p7, ptr( z7.s ) ); dump();
prfb(PSTL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfb(PSTL1STRM_SVE, p7, ptr( z7.s ) ); dump();
prfb(PSTL2KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfb(PSTL2STRM_SVE, p7, ptr( z7.s ) ); dump();
prfb(PSTL3KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfb(PSTL3STRM_SVE, p7, ptr( z7.s ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfb(PLDL1KEEP_SVE, p0, ptr( z7.s ) ); dump();
prfb(PLDL1KEEP_SVE, p1, ptr( z7.s ) ); dump();
prfb(PLDL1KEEP_SVE, p2, ptr( z7.s ) ); dump();
prfb(PLDL1KEEP_SVE, p4, ptr( z7.s ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z0.s ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z1.s ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z2.s ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z4.s ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z8.s ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z16.s ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z31.s ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
//SVE_64_bit_gather_prefetch_vector_plus_immediate0:1
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s, 15 ) ); dump();
prfb(PLDL1STRM_SVE, p7, ptr( z7.s, 15 ) ); dump();
prfb(PLDL2KEEP_SVE, p7, ptr( z7.s, 15 ) ); dump();
prfb(PLDL2STRM_SVE, p7, ptr( z7.s, 15 ) ); dump();
prfb(PLDL3KEEP_SVE, p7, ptr( z7.s, 15 ) ); dump();
prfb(PLDL3STRM_SVE, p7, ptr( z7.s, 15 ) ); dump();
prfb(PSTL1KEEP_SVE, p7, ptr( z7.s, 15 ) ); dump();
prfb(PSTL1STRM_SVE, p7, ptr( z7.s, 15 ) ); dump();
prfb(PSTL2KEEP_SVE, p7, ptr( z7.s, 15 ) ); dump();
prfb(PSTL2STRM_SVE, p7, ptr( z7.s, 15 ) ); dump();
prfb(PSTL3KEEP_SVE, p7, ptr( z7.s, 15 ) ); dump();
prfb(PSTL3STRM_SVE, p7, ptr( z7.s, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p0, ptr( z7.s, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p1, ptr( z7.s, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p2, ptr( z7.s, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p4, ptr( z7.s, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z0.s, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z1.s, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z2.s, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z4.s, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z8.s, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z16.s, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z31.s, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s, 0 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s, 1 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s, 2 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s, 4 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s, 8 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s, 16 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s, 31 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.s, 15 ) ); dump();
//SVE_64_bit_gather_prefetch_vector_plus_immediate0:2
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfb(PLDL1STRM_SVE, p7, ptr( z7.d ) ); dump();
prfb(PLDL2KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfb(PLDL2STRM_SVE, p7, ptr( z7.d ) ); dump();
prfb(PLDL3KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfb(PLDL3STRM_SVE, p7, ptr( z7.d ) ); dump();
prfb(PSTL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfb(PSTL1STRM_SVE, p7, ptr( z7.d ) ); dump();
prfb(PSTL2KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfb(PSTL2STRM_SVE, p7, ptr( z7.d ) ); dump();
prfb(PSTL3KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfb(PSTL3STRM_SVE, p7, ptr( z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p0, ptr( z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p1, ptr( z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p2, ptr( z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p4, ptr( z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z0.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z1.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z2.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z4.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z8.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z16.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z31.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
//SVE_64_bit_gather_prefetch_vector_plus_immediate0:3
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d, 15 ) ); dump();
prfb(PLDL1STRM_SVE, p7, ptr( z7.d, 15 ) ); dump();
prfb(PLDL2KEEP_SVE, p7, ptr( z7.d, 15 ) ); dump();
prfb(PLDL2STRM_SVE, p7, ptr( z7.d, 15 ) ); dump();
prfb(PLDL3KEEP_SVE, p7, ptr( z7.d, 15 ) ); dump();
prfb(PLDL3STRM_SVE, p7, ptr( z7.d, 15 ) ); dump();
prfb(PSTL1KEEP_SVE, p7, ptr( z7.d, 15 ) ); dump();
prfb(PSTL1STRM_SVE, p7, ptr( z7.d, 15 ) ); dump();
prfb(PSTL2KEEP_SVE, p7, ptr( z7.d, 15 ) ); dump();
prfb(PSTL2STRM_SVE, p7, ptr( z7.d, 15 ) ); dump();
prfb(PSTL3KEEP_SVE, p7, ptr( z7.d, 15 ) ); dump();
prfb(PSTL3STRM_SVE, p7, ptr( z7.d, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p0, ptr( z7.d, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p1, ptr( z7.d, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p2, ptr( z7.d, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p4, ptr( z7.d, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z0.d, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z1.d, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z2.d, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z4.d, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z8.d, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z16.d, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z31.d, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d, 15 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d, 0 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d, 1 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d, 2 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d, 4 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d, 8 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d, 16 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d, 31 ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( z7.d, 15 ) ); dump();
//SVE_64_bit_gather_prefetch_vector_plus_immediate1:0
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfh(PLDL1STRM_SVE, p7, ptr( z7.s ) ); dump();
prfh(PLDL2KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfh(PLDL2STRM_SVE, p7, ptr( z7.s ) ); dump();
prfh(PLDL3KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfh(PLDL3STRM_SVE, p7, ptr( z7.s ) ); dump();
prfh(PSTL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfh(PSTL1STRM_SVE, p7, ptr( z7.s ) ); dump();
prfh(PSTL2KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfh(PSTL2STRM_SVE, p7, ptr( z7.s ) ); dump();
prfh(PSTL3KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfh(PSTL3STRM_SVE, p7, ptr( z7.s ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfh(PLDL1KEEP_SVE, p0, ptr( z7.s ) ); dump();
prfh(PLDL1KEEP_SVE, p1, ptr( z7.s ) ); dump();
prfh(PLDL1KEEP_SVE, p2, ptr( z7.s ) ); dump();
prfh(PLDL1KEEP_SVE, p4, ptr( z7.s ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z0.s ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z1.s ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z2.s ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z4.s ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z8.s ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z16.s ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z31.s ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
//SVE_64_bit_gather_prefetch_vector_plus_immediate1:1
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PLDL1STRM_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PLDL2KEEP_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PLDL2STRM_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PLDL3KEEP_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PLDL3STRM_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PSTL1KEEP_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PSTL1STRM_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PSTL2KEEP_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PSTL2STRM_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PSTL3KEEP_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PSTL3STRM_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p0, ptr( z7.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p1, ptr( z7.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p2, ptr( z7.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p4, ptr( z7.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z0.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z1.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z2.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z4.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z8.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z16.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z31.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s, 0 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s, 2 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s, 4 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s, 8 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s, 16 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s, 32 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s, 62 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.s, 30 ) ); dump();
//SVE_64_bit_gather_prefetch_vector_plus_immediate1:2
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfh(PLDL1STRM_SVE, p7, ptr( z7.d ) ); dump();
prfh(PLDL2KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfh(PLDL2STRM_SVE, p7, ptr( z7.d ) ); dump();
prfh(PLDL3KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfh(PLDL3STRM_SVE, p7, ptr( z7.d ) ); dump();
prfh(PSTL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfh(PSTL1STRM_SVE, p7, ptr( z7.d ) ); dump();
prfh(PSTL2KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfh(PSTL2STRM_SVE, p7, ptr( z7.d ) ); dump();
prfh(PSTL3KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfh(PSTL3STRM_SVE, p7, ptr( z7.d ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfh(PLDL1KEEP_SVE, p0, ptr( z7.d ) ); dump();
prfh(PLDL1KEEP_SVE, p1, ptr( z7.d ) ); dump();
prfh(PLDL1KEEP_SVE, p2, ptr( z7.d ) ); dump();
prfh(PLDL1KEEP_SVE, p4, ptr( z7.d ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z0.d ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z1.d ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z2.d ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z4.d ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z8.d ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z16.d ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z31.d ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
//SVE_64_bit_gather_prefetch_vector_plus_immediate1:3
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PLDL1STRM_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PLDL2KEEP_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PLDL2STRM_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PLDL3KEEP_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PLDL3STRM_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PSTL1KEEP_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PSTL1STRM_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PSTL2KEEP_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PSTL2STRM_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PSTL3KEEP_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PSTL3STRM_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p0, ptr( z7.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p1, ptr( z7.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p2, ptr( z7.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p4, ptr( z7.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z0.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z1.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z2.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z4.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z8.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z16.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z31.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d, 30 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d, 0 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d, 2 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d, 4 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d, 8 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d, 16 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d, 32 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d, 62 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( z7.d, 30 ) ); dump();
//SVE_64_bit_gather_prefetch_vector_plus_immediate2:0
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfw(PLDL1STRM_SVE, p7, ptr( z7.s ) ); dump();
prfw(PLDL2KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfw(PLDL2STRM_SVE, p7, ptr( z7.s ) ); dump();
prfw(PLDL3KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfw(PLDL3STRM_SVE, p7, ptr( z7.s ) ); dump();
prfw(PSTL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfw(PSTL1STRM_SVE, p7, ptr( z7.s ) ); dump();
prfw(PSTL2KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfw(PSTL2STRM_SVE, p7, ptr( z7.s ) ); dump();
prfw(PSTL3KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfw(PSTL3STRM_SVE, p7, ptr( z7.s ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfw(PLDL1KEEP_SVE, p0, ptr( z7.s ) ); dump();
prfw(PLDL1KEEP_SVE, p1, ptr( z7.s ) ); dump();
prfw(PLDL1KEEP_SVE, p2, ptr( z7.s ) ); dump();
prfw(PLDL1KEEP_SVE, p4, ptr( z7.s ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z0.s ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z1.s ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z2.s ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z4.s ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z8.s ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z16.s ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z31.s ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
//SVE_64_bit_gather_prefetch_vector_plus_immediate2:1
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PLDL1STRM_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PLDL2KEEP_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PLDL2STRM_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PLDL3KEEP_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PLDL3STRM_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PSTL1KEEP_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PSTL1STRM_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PSTL2KEEP_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PSTL2STRM_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PSTL3KEEP_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PSTL3STRM_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p0, ptr( z7.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p1, ptr( z7.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p2, ptr( z7.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p4, ptr( z7.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z0.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z1.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z2.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z4.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z8.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z16.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z31.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s, 0 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s, 4 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s, 8 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s, 16 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s, 32 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s, 64 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s, 124 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.s, 60 ) ); dump();
//SVE_64_bit_gather_prefetch_vector_plus_immediate2:2
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfw(PLDL1STRM_SVE, p7, ptr( z7.d ) ); dump();
prfw(PLDL2KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfw(PLDL2STRM_SVE, p7, ptr( z7.d ) ); dump();
prfw(PLDL3KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfw(PLDL3STRM_SVE, p7, ptr( z7.d ) ); dump();
prfw(PSTL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfw(PSTL1STRM_SVE, p7, ptr( z7.d ) ); dump();
prfw(PSTL2KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfw(PSTL2STRM_SVE, p7, ptr( z7.d ) ); dump();
prfw(PSTL3KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfw(PSTL3STRM_SVE, p7, ptr( z7.d ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfw(PLDL1KEEP_SVE, p0, ptr( z7.d ) ); dump();
prfw(PLDL1KEEP_SVE, p1, ptr( z7.d ) ); dump();
prfw(PLDL1KEEP_SVE, p2, ptr( z7.d ) ); dump();
prfw(PLDL1KEEP_SVE, p4, ptr( z7.d ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z0.d ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z1.d ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z2.d ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z4.d ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z8.d ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z16.d ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z31.d ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
//SVE_64_bit_gather_prefetch_vector_plus_immediate2:3
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PLDL1STRM_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PLDL2KEEP_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PLDL2STRM_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PLDL3KEEP_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PLDL3STRM_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PSTL1KEEP_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PSTL1STRM_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PSTL2KEEP_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PSTL2STRM_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PSTL3KEEP_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PSTL3STRM_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p0, ptr( z7.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p1, ptr( z7.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p2, ptr( z7.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p4, ptr( z7.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z0.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z1.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z2.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z4.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z8.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z16.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z31.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d, 60 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d, 0 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d, 4 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d, 8 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d, 16 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d, 32 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d, 64 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d, 124 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( z7.d, 60 ) ); dump();
//SVE_64_bit_gather_prefetch_vector_plus_immediate3:0
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfd(PLDL1STRM_SVE, p7, ptr( z7.s ) ); dump();
prfd(PLDL2KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfd(PLDL2STRM_SVE, p7, ptr( z7.s ) ); dump();
prfd(PLDL3KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfd(PLDL3STRM_SVE, p7, ptr( z7.s ) ); dump();
prfd(PSTL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfd(PSTL1STRM_SVE, p7, ptr( z7.s ) ); dump();
prfd(PSTL2KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfd(PSTL2STRM_SVE, p7, ptr( z7.s ) ); dump();
prfd(PSTL3KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfd(PSTL3STRM_SVE, p7, ptr( z7.s ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfd(PLDL1KEEP_SVE, p0, ptr( z7.s ) ); dump();
prfd(PLDL1KEEP_SVE, p1, ptr( z7.s ) ); dump();
prfd(PLDL1KEEP_SVE, p2, ptr( z7.s ) ); dump();
prfd(PLDL1KEEP_SVE, p4, ptr( z7.s ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z0.s ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z1.s ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z2.s ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z4.s ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z8.s ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z16.s ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z31.s ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s ) ); dump();
//SVE_64_bit_gather_prefetch_vector_plus_immediate3:1
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PLDL1STRM_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PLDL2KEEP_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PLDL2STRM_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PLDL3KEEP_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PLDL3STRM_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PSTL1KEEP_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PSTL1STRM_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PSTL2KEEP_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PSTL2STRM_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PSTL3KEEP_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PSTL3STRM_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p0, ptr( z7.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p1, ptr( z7.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p2, ptr( z7.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p4, ptr( z7.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z0.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z1.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z2.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z4.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z8.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z16.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z31.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s, 0 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s, 8 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s, 16 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s, 32 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s, 64 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s, 128 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s, 248 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.s, 120 ) ); dump();
//SVE_64_bit_gather_prefetch_vector_plus_immediate3:2
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfd(PLDL1STRM_SVE, p7, ptr( z7.d ) ); dump();
prfd(PLDL2KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfd(PLDL2STRM_SVE, p7, ptr( z7.d ) ); dump();
prfd(PLDL3KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfd(PLDL3STRM_SVE, p7, ptr( z7.d ) ); dump();
prfd(PSTL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfd(PSTL1STRM_SVE, p7, ptr( z7.d ) ); dump();
prfd(PSTL2KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfd(PSTL2STRM_SVE, p7, ptr( z7.d ) ); dump();
prfd(PSTL3KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfd(PSTL3STRM_SVE, p7, ptr( z7.d ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfd(PLDL1KEEP_SVE, p0, ptr( z7.d ) ); dump();
prfd(PLDL1KEEP_SVE, p1, ptr( z7.d ) ); dump();
prfd(PLDL1KEEP_SVE, p2, ptr( z7.d ) ); dump();
prfd(PLDL1KEEP_SVE, p4, ptr( z7.d ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z0.d ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z1.d ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z2.d ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z4.d ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z8.d ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z16.d ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z31.d ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d ) ); dump();
//SVE_64_bit_gather_prefetch_vector_plus_immediate3:3
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PLDL1STRM_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PLDL2KEEP_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PLDL2STRM_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PLDL3KEEP_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PLDL3STRM_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PSTL1KEEP_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PSTL1STRM_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PSTL2KEEP_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PSTL2STRM_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PSTL3KEEP_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PSTL3STRM_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p0, ptr( z7.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p1, ptr( z7.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p2, ptr( z7.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p4, ptr( z7.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z0.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z1.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z2.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z4.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z8.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z16.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z31.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d, 120 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d, 0 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d, 8 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d, 16 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d, 32 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d, 64 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d, 128 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d, 248 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( z7.d, 120 ) ); dump();
//SVE_64_bit_gather_load_vector_plus_immediate0:0
ld1sb( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sb( z0.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sb( z1.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sb( z2.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sb( z4.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sb( z8.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sb( z16.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sb( z31.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sb( z7.d,  p0/T_z, ptr( z7.d ) ); dump();
ld1sb( z7.d,  p1/T_z, ptr( z7.d ) ); dump();
ld1sb( z7.d,  p2/T_z, ptr( z7.d ) ); dump();
ld1sb( z7.d,  p4/T_z, ptr( z7.d ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z0.d ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z1.d ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z2.d ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z4.d ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z8.d ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z16.d ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z31.d ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sb( z0.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sb( z1.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sb( z2.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sb( z4.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sb( z8.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sb( z16.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sb( z31.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sb( z7.d,  p0/T_z, ptr( z7.d ) ); dump();
ldff1sb( z7.d,  p1/T_z, ptr( z7.d ) ); dump();
ldff1sb( z7.d,  p2/T_z, ptr( z7.d ) ); dump();
ldff1sb( z7.d,  p4/T_z, ptr( z7.d ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z0.d ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z1.d ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z2.d ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z4.d ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z8.d ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z16.d ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z31.d ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1b( z0.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1b( z1.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1b( z2.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1b( z4.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1b( z8.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1b( z16.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1b( z31.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1b( z7.d,  p0/T_z, ptr( z7.d ) ); dump();
ld1b( z7.d,  p1/T_z, ptr( z7.d ) ); dump();
ld1b( z7.d,  p2/T_z, ptr( z7.d ) ); dump();
ld1b( z7.d,  p4/T_z, ptr( z7.d ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z0.d ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z1.d ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z2.d ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z4.d ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z8.d ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z16.d ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z31.d ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1b( z0.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1b( z1.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1b( z2.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1b( z4.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1b( z8.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1b( z16.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1b( z31.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1b( z7.d,  p0/T_z, ptr( z7.d ) ); dump();
ldff1b( z7.d,  p1/T_z, ptr( z7.d ) ); dump();
ldff1b( z7.d,  p2/T_z, ptr( z7.d ) ); dump();
ldff1b( z7.d,  p4/T_z, ptr( z7.d ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z0.d ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z1.d ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z2.d ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z4.d ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z8.d ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z16.d ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z31.d ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
//SVE_64_bit_gather_load_vector_plus_immediate0:1
ld1sb( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1sb( z0.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1sb( z1.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1sb( z2.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1sb( z4.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1sb( z8.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1sb( z16.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1sb( z31.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1sb( z7.d,  p0/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1sb( z7.d,  p1/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1sb( z7.d,  p2/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1sb( z7.d,  p4/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z0.d, 0x1e ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z1.d, 0x1e ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z2.d, 0x1e ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z4.d, 0x1e ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z8.d, 0x1e ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z16.d, 0x1e ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z31.d, 0x1e ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z7.d, 0 ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z7.d, 1 ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z7.d, 2 ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z7.d, 4 ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z7.d, 8 ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z7.d, 16 ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z7.d, 31 ) ); dump();
ld1sb( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1sb( z0.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1sb( z1.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1sb( z2.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1sb( z4.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1sb( z8.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1sb( z16.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1sb( z31.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1sb( z7.d,  p0/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1sb( z7.d,  p1/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1sb( z7.d,  p2/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1sb( z7.d,  p4/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z0.d, 0x1e ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z1.d, 0x1e ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z2.d, 0x1e ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z4.d, 0x1e ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z8.d, 0x1e ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z16.d, 0x1e ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z31.d, 0x1e ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z7.d, 0 ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z7.d, 1 ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z7.d, 2 ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z7.d, 4 ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z7.d, 8 ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z7.d, 16 ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z7.d, 31 ) ); dump();
ldff1sb( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1b( z0.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1b( z1.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1b( z2.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1b( z4.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1b( z8.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1b( z16.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1b( z31.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1b( z7.d,  p0/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1b( z7.d,  p1/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1b( z7.d,  p2/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1b( z7.d,  p4/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z0.d, 0x1e ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z1.d, 0x1e ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z2.d, 0x1e ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z4.d, 0x1e ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z8.d, 0x1e ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z16.d, 0x1e ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z31.d, 0x1e ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z7.d, 0 ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z7.d, 1 ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z7.d, 2 ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z7.d, 4 ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z7.d, 8 ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z7.d, 16 ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z7.d, 31 ) ); dump();
ld1b( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1b( z0.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1b( z1.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1b( z2.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1b( z4.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1b( z8.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1b( z16.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1b( z31.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1b( z7.d,  p0/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1b( z7.d,  p1/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1b( z7.d,  p2/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1b( z7.d,  p4/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z0.d, 0x1e ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z1.d, 0x1e ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z2.d, 0x1e ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z4.d, 0x1e ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z8.d, 0x1e ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z16.d, 0x1e ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z31.d, 0x1e ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z7.d, 0 ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z7.d, 1 ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z7.d, 2 ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z7.d, 4 ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z7.d, 8 ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z7.d, 16 ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z7.d, 31 ) ); dump();
ldff1b( z7.d,  p7/T_z, ptr( z7.d, 0x1e ) ); dump();
//SVE_64_bit_gather_load_vector_plus_immediate1:0
ld1sh( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sh( z0.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sh( z1.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sh( z2.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sh( z4.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sh( z8.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sh( z16.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sh( z31.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sh( z7.d,  p0/T_z, ptr( z7.d ) ); dump();
ld1sh( z7.d,  p1/T_z, ptr( z7.d ) ); dump();
ld1sh( z7.d,  p2/T_z, ptr( z7.d ) ); dump();
ld1sh( z7.d,  p4/T_z, ptr( z7.d ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z0.d ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z1.d ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z2.d ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z4.d ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z8.d ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z16.d ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z31.d ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sh( z0.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sh( z1.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sh( z2.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sh( z4.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sh( z8.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sh( z16.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sh( z31.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sh( z7.d,  p0/T_z, ptr( z7.d ) ); dump();
ldff1sh( z7.d,  p1/T_z, ptr( z7.d ) ); dump();
ldff1sh( z7.d,  p2/T_z, ptr( z7.d ) ); dump();
ldff1sh( z7.d,  p4/T_z, ptr( z7.d ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z0.d ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z1.d ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z2.d ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z4.d ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z8.d ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z16.d ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z31.d ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1h( z0.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1h( z1.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1h( z2.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1h( z4.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1h( z8.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1h( z16.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1h( z31.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1h( z7.d,  p0/T_z, ptr( z7.d ) ); dump();
ld1h( z7.d,  p1/T_z, ptr( z7.d ) ); dump();
ld1h( z7.d,  p2/T_z, ptr( z7.d ) ); dump();
ld1h( z7.d,  p4/T_z, ptr( z7.d ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z0.d ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z1.d ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z2.d ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z4.d ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z8.d ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z16.d ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z31.d ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1h( z0.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1h( z1.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1h( z2.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1h( z4.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1h( z8.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1h( z16.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1h( z31.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1h( z7.d,  p0/T_z, ptr( z7.d ) ); dump();
ldff1h( z7.d,  p1/T_z, ptr( z7.d ) ); dump();
ldff1h( z7.d,  p2/T_z, ptr( z7.d ) ); dump();
ldff1h( z7.d,  p4/T_z, ptr( z7.d ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z0.d ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z1.d ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z2.d ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z4.d ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z8.d ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z16.d ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z31.d ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
//SVE_64_bit_gather_load_vector_plus_immediate1:1
ld1sh( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1sh( z0.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1sh( z1.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1sh( z2.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1sh( z4.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1sh( z8.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1sh( z16.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1sh( z31.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1sh( z7.d,  p0/T_z, ptr( z7.d, 30 ) ); dump();
ld1sh( z7.d,  p1/T_z, ptr( z7.d, 30 ) ); dump();
ld1sh( z7.d,  p2/T_z, ptr( z7.d, 30 ) ); dump();
ld1sh( z7.d,  p4/T_z, ptr( z7.d, 30 ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z0.d, 30 ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z1.d, 30 ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z2.d, 30 ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z4.d, 30 ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z8.d, 30 ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z16.d, 30 ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z31.d, 30 ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z7.d, 0 ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z7.d, 2 ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z7.d, 4 ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z7.d, 8 ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z7.d, 16 ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z7.d, 32 ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z7.d, 62 ) ); dump();
ld1sh( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1sh( z0.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1sh( z1.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1sh( z2.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1sh( z4.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1sh( z8.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1sh( z16.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1sh( z31.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1sh( z7.d,  p0/T_z, ptr( z7.d, 30 ) ); dump();
ldff1sh( z7.d,  p1/T_z, ptr( z7.d, 30 ) ); dump();
ldff1sh( z7.d,  p2/T_z, ptr( z7.d, 30 ) ); dump();
ldff1sh( z7.d,  p4/T_z, ptr( z7.d, 30 ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z0.d, 30 ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z1.d, 30 ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z2.d, 30 ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z4.d, 30 ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z8.d, 30 ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z16.d, 30 ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z31.d, 30 ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z7.d, 0 ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z7.d, 2 ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z7.d, 4 ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z7.d, 8 ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z7.d, 16 ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z7.d, 32 ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z7.d, 62 ) ); dump();
ldff1sh( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1h( z0.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1h( z1.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1h( z2.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1h( z4.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1h( z8.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1h( z16.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1h( z31.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1h( z7.d,  p0/T_z, ptr( z7.d, 30 ) ); dump();
ld1h( z7.d,  p1/T_z, ptr( z7.d, 30 ) ); dump();
ld1h( z7.d,  p2/T_z, ptr( z7.d, 30 ) ); dump();
ld1h( z7.d,  p4/T_z, ptr( z7.d, 30 ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z0.d, 30 ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z1.d, 30 ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z2.d, 30 ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z4.d, 30 ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z8.d, 30 ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z16.d, 30 ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z31.d, 30 ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z7.d, 0 ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z7.d, 2 ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z7.d, 4 ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z7.d, 8 ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z7.d, 16 ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z7.d, 32 ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z7.d, 62 ) ); dump();
ld1h( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1h( z0.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1h( z1.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1h( z2.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1h( z4.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1h( z8.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1h( z16.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1h( z31.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1h( z7.d,  p0/T_z, ptr( z7.d, 30 ) ); dump();
ldff1h( z7.d,  p1/T_z, ptr( z7.d, 30 ) ); dump();
ldff1h( z7.d,  p2/T_z, ptr( z7.d, 30 ) ); dump();
ldff1h( z7.d,  p4/T_z, ptr( z7.d, 30 ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z0.d, 30 ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z1.d, 30 ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z2.d, 30 ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z4.d, 30 ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z8.d, 30 ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z16.d, 30 ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z31.d, 30 ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z7.d, 0 ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z7.d, 2 ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z7.d, 4 ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z7.d, 8 ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z7.d, 16 ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z7.d, 32 ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z7.d, 62 ) ); dump();
ldff1h( z7.d,  p7/T_z, ptr( z7.d, 30 ) ); dump();
//SVE_64_bit_gather_load_vector_plus_immediate2:0
ld1sw( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sw( z0.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sw( z1.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sw( z2.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sw( z4.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sw( z8.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sw( z16.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sw( z31.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sw( z7.d,  p0/T_z, ptr( z7.d ) ); dump();
ld1sw( z7.d,  p1/T_z, ptr( z7.d ) ); dump();
ld1sw( z7.d,  p2/T_z, ptr( z7.d ) ); dump();
ld1sw( z7.d,  p4/T_z, ptr( z7.d ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z0.d ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z1.d ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z2.d ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z4.d ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z8.d ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z16.d ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z31.d ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sw( z0.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sw( z1.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sw( z2.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sw( z4.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sw( z8.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sw( z16.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sw( z31.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sw( z7.d,  p0/T_z, ptr( z7.d ) ); dump();
ldff1sw( z7.d,  p1/T_z, ptr( z7.d ) ); dump();
ldff1sw( z7.d,  p2/T_z, ptr( z7.d ) ); dump();
ldff1sw( z7.d,  p4/T_z, ptr( z7.d ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z0.d ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z1.d ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z2.d ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z4.d ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z8.d ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z16.d ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z31.d ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
//SVE_64_bit_gather_load_vector_plus_immediate2:1
ld1sw( z7.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ld1sw( z0.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ld1sw( z1.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ld1sw( z2.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ld1sw( z4.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ld1sw( z8.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ld1sw( z16.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ld1sw( z31.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ld1sw( z7.d,  p0/T_z, ptr( z7.d, 60 ) ); dump();
ld1sw( z7.d,  p1/T_z, ptr( z7.d, 60 ) ); dump();
ld1sw( z7.d,  p2/T_z, ptr( z7.d, 60 ) ); dump();
ld1sw( z7.d,  p4/T_z, ptr( z7.d, 60 ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z0.d, 60 ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z1.d, 60 ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z2.d, 60 ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z4.d, 60 ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z8.d, 60 ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z16.d, 60 ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z31.d, 60 ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z7.d, 0 ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z7.d, 4 ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z7.d, 8 ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z7.d, 16 ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z7.d, 32 ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z7.d, 64 ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z7.d, 124 ) ); dump();
ld1sw( z7.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ldff1sw( z0.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ldff1sw( z1.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ldff1sw( z2.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ldff1sw( z4.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ldff1sw( z8.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ldff1sw( z16.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ldff1sw( z31.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ldff1sw( z7.d,  p0/T_z, ptr( z7.d, 60 ) ); dump();
ldff1sw( z7.d,  p1/T_z, ptr( z7.d, 60 ) ); dump();
ldff1sw( z7.d,  p2/T_z, ptr( z7.d, 60 ) ); dump();
ldff1sw( z7.d,  p4/T_z, ptr( z7.d, 60 ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z0.d, 60 ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z1.d, 60 ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z2.d, 60 ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z4.d, 60 ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z8.d, 60 ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z16.d, 60 ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z31.d, 60 ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z7.d, 0 ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z7.d, 4 ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z7.d, 8 ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z7.d, 16 ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z7.d, 32 ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z7.d, 64 ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z7.d, 124 ) ); dump();
ldff1sw( z7.d,  p7/T_z, ptr( z7.d, 60 ) ); dump();
//SVE_64_bit_gather_load_vector_plus_immediate3:0
ld1d( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1d( z0.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1d( z1.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1d( z2.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1d( z4.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1d( z8.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1d( z16.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1d( z31.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1d( z7.d,  p0/T_z, ptr( z7.d ) ); dump();
ld1d( z7.d,  p1/T_z, ptr( z7.d ) ); dump();
ld1d( z7.d,  p2/T_z, ptr( z7.d ) ); dump();
ld1d( z7.d,  p4/T_z, ptr( z7.d ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z0.d ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z1.d ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z2.d ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z4.d ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z8.d ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z16.d ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z31.d ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1d( z0.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1d( z1.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1d( z2.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1d( z4.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1d( z8.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1d( z16.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1d( z31.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1d( z7.d,  p0/T_z, ptr( z7.d ) ); dump();
ldff1d( z7.d,  p1/T_z, ptr( z7.d ) ); dump();
ldff1d( z7.d,  p2/T_z, ptr( z7.d ) ); dump();
ldff1d( z7.d,  p4/T_z, ptr( z7.d ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z0.d ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z1.d ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z2.d ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z4.d ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z8.d ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z16.d ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z31.d ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z7.d ) ); dump();
//SVE_64_bit_gather_load_vector_plus_immediate3:1
ld1d( z7.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ld1d( z0.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ld1d( z1.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ld1d( z2.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ld1d( z4.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ld1d( z8.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ld1d( z16.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ld1d( z31.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ld1d( z7.d,  p0/T_z, ptr( z7.d, 120 ) ); dump();
ld1d( z7.d,  p1/T_z, ptr( z7.d, 120 ) ); dump();
ld1d( z7.d,  p2/T_z, ptr( z7.d, 120 ) ); dump();
ld1d( z7.d,  p4/T_z, ptr( z7.d, 120 ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z0.d, 120 ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z1.d, 120 ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z2.d, 120 ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z4.d, 120 ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z8.d, 120 ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z16.d, 120 ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z31.d, 120 ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z7.d, 0 ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z7.d, 8 ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z7.d, 16 ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z7.d, 32 ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z7.d, 64 ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z7.d, 128 ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z7.d, 248 ) ); dump();
ld1d( z7.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ldff1d( z0.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ldff1d( z1.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ldff1d( z2.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ldff1d( z4.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ldff1d( z8.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ldff1d( z16.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ldff1d( z31.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ldff1d( z7.d,  p0/T_z, ptr( z7.d, 120 ) ); dump();
ldff1d( z7.d,  p1/T_z, ptr( z7.d, 120 ) ); dump();
ldff1d( z7.d,  p2/T_z, ptr( z7.d, 120 ) ); dump();
ldff1d( z7.d,  p4/T_z, ptr( z7.d, 120 ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z0.d, 120 ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z1.d, 120 ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z2.d, 120 ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z4.d, 120 ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z8.d, 120 ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z16.d, 120 ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z31.d, 120 ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z7.d, 0 ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z7.d, 8 ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z7.d, 16 ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z7.d, 32 ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z7.d, 64 ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z7.d, 128 ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z7.d, 248 ) ); dump();
ldff1d( z7.d,  p7/T_z, ptr( z7.d, 120 ) ); dump();
//SVE_64_bit_gather_load_scalar_plus_64_bit_unscaled_offset0:0
ld1sb(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sb(z0.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sb(z1.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sb(z2.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sb(z4.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sb(z8.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sb(z16.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sb(z31.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sb(z7.d, p0/T_z, ptr( x7, z7.d ) ); dump();
ld1sb(z7.d, p1/T_z, ptr( x7, z7.d ) ); dump();
ld1sb(z7.d, p2/T_z, ptr( x7, z7.d ) ); dump();
ld1sb(z7.d, p4/T_z, ptr( x7, z7.d ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x0, z7.d ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x1, z7.d ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x2, z7.d ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x4, z7.d ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x8, z7.d ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x16, z7.d ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x30, z7.d ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( sp, z7.d ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z0.d ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z1.d ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z2.d ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z4.d ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z8.d ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z16.d ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z31.d ) ); dump();
ld1sb(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sb(z0.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sb(z1.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sb(z2.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sb(z4.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sb(z8.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sb(z16.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sb(z31.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sb(z7.d, p0/T_z, ptr( x7, z7.d ) ); dump();
ldff1sb(z7.d, p1/T_z, ptr( x7, z7.d ) ); dump();
ldff1sb(z7.d, p2/T_z, ptr( x7, z7.d ) ); dump();
ldff1sb(z7.d, p4/T_z, ptr( x7, z7.d ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x0, z7.d ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x1, z7.d ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x2, z7.d ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x4, z7.d ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x8, z7.d ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x16, z7.d ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x30, z7.d ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( sp, z7.d ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z0.d ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z1.d ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z2.d ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z4.d ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z8.d ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z16.d ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z31.d ) ); dump();
ldff1sb(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1b(z0.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1b(z1.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1b(z2.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1b(z4.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1b(z8.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1b(z16.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1b(z31.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1b(z7.d, p0/T_z, ptr( x7, z7.d ) ); dump();
ld1b(z7.d, p1/T_z, ptr( x7, z7.d ) ); dump();
ld1b(z7.d, p2/T_z, ptr( x7, z7.d ) ); dump();
ld1b(z7.d, p4/T_z, ptr( x7, z7.d ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x0, z7.d ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x1, z7.d ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x2, z7.d ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x4, z7.d ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x8, z7.d ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x16, z7.d ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x30, z7.d ) ); dump();
ld1b(z7.d, p7/T_z, ptr( sp, z7.d ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z0.d ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z1.d ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z2.d ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z4.d ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z8.d ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z16.d ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z31.d ) ); dump();
ld1b(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1b(z0.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1b(z1.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1b(z2.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1b(z4.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1b(z8.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1b(z16.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1b(z31.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1b(z7.d, p0/T_z, ptr( x7, z7.d ) ); dump();
ldff1b(z7.d, p1/T_z, ptr( x7, z7.d ) ); dump();
ldff1b(z7.d, p2/T_z, ptr( x7, z7.d ) ); dump();
ldff1b(z7.d, p4/T_z, ptr( x7, z7.d ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x0, z7.d ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x1, z7.d ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x2, z7.d ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x4, z7.d ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x8, z7.d ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x16, z7.d ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x30, z7.d ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( sp, z7.d ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z0.d ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z1.d ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z2.d ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z4.d ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z8.d ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z16.d ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z31.d ) ); dump();
ldff1b(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z0.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z1.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z2.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z4.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z8.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z16.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z31.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z7.d, p0/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z7.d, p1/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z7.d, p2/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z7.d, p4/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x0, z7.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x1, z7.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x2, z7.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x4, z7.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x8, z7.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x16, z7.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x30, z7.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( sp, z7.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z0.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z1.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z2.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z4.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z8.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z16.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z31.d ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z0.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z1.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z2.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z4.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z8.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z16.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z31.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z7.d, p0/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z7.d, p1/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z7.d, p2/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z7.d, p4/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x0, z7.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x1, z7.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x2, z7.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x4, z7.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x8, z7.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x16, z7.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x30, z7.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( sp, z7.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z0.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z1.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z2.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z4.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z8.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z16.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z31.d ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z0.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z1.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z2.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z4.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z8.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z16.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z31.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z7.d, p0/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z7.d, p1/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z7.d, p2/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z7.d, p4/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x0, z7.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x1, z7.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x2, z7.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x4, z7.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x8, z7.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x16, z7.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x30, z7.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( sp, z7.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z0.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z1.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z2.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z4.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z8.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z16.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z31.d ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z0.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z1.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z2.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z4.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z8.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z16.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z31.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z7.d, p0/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z7.d, p1/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z7.d, p2/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z7.d, p4/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x0, z7.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x1, z7.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x2, z7.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x4, z7.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x8, z7.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x16, z7.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x30, z7.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( sp, z7.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z0.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z1.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z2.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z4.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z8.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z16.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z31.d ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sw(z0.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sw(z1.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sw(z2.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sw(z4.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sw(z8.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sw(z16.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sw(z31.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sw(z7.d, p0/T_z, ptr( x7, z7.d ) ); dump();
ld1sw(z7.d, p1/T_z, ptr( x7, z7.d ) ); dump();
ld1sw(z7.d, p2/T_z, ptr( x7, z7.d ) ); dump();
ld1sw(z7.d, p4/T_z, ptr( x7, z7.d ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x0, z7.d ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x1, z7.d ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x2, z7.d ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x4, z7.d ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x8, z7.d ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x16, z7.d ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x30, z7.d ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( sp, z7.d ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z0.d ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z1.d ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z2.d ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z4.d ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z8.d ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z16.d ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z31.d ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sw(z0.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sw(z1.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sw(z2.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sw(z4.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sw(z8.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sw(z16.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sw(z31.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sw(z7.d, p0/T_z, ptr( x7, z7.d ) ); dump();
ldff1sw(z7.d, p1/T_z, ptr( x7, z7.d ) ); dump();
ldff1sw(z7.d, p2/T_z, ptr( x7, z7.d ) ); dump();
ldff1sw(z7.d, p4/T_z, ptr( x7, z7.d ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x0, z7.d ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x1, z7.d ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x2, z7.d ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x4, z7.d ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x8, z7.d ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x16, z7.d ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x30, z7.d ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( sp, z7.d ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z0.d ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z1.d ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z2.d ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z4.d ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z8.d ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z16.d ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z31.d ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z0.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z1.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z2.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z4.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z8.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z16.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z31.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z7.d, p0/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z7.d, p1/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z7.d, p2/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z7.d, p4/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x0, z7.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x1, z7.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x2, z7.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x4, z7.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x8, z7.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x16, z7.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x30, z7.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( sp, z7.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z0.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z1.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z2.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z4.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z8.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z16.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z31.d ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z0.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z1.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z2.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z4.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z8.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z16.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z31.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z7.d, p0/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z7.d, p1/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z7.d, p2/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z7.d, p4/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x0, z7.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x1, z7.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x2, z7.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x4, z7.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x8, z7.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x16, z7.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x30, z7.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( sp, z7.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z0.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z1.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z2.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z4.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z8.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z16.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z31.d ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1d(z0.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1d(z1.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1d(z2.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1d(z4.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1d(z8.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1d(z16.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1d(z31.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1d(z7.d, p0/T_z, ptr( x7, z7.d ) ); dump();
ld1d(z7.d, p1/T_z, ptr( x7, z7.d ) ); dump();
ld1d(z7.d, p2/T_z, ptr( x7, z7.d ) ); dump();
ld1d(z7.d, p4/T_z, ptr( x7, z7.d ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x0, z7.d ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x1, z7.d ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x2, z7.d ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x4, z7.d ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x8, z7.d ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x16, z7.d ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x30, z7.d ) ); dump();
ld1d(z7.d, p7/T_z, ptr( sp, z7.d ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z0.d ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z1.d ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z2.d ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z4.d ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z8.d ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z16.d ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z31.d ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1d(z0.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1d(z1.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1d(z2.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1d(z4.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1d(z8.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1d(z16.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1d(z31.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1d(z7.d, p0/T_z, ptr( x7, z7.d ) ); dump();
ldff1d(z7.d, p1/T_z, ptr( x7, z7.d ) ); dump();
ldff1d(z7.d, p2/T_z, ptr( x7, z7.d ) ); dump();
ldff1d(z7.d, p4/T_z, ptr( x7, z7.d ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x0, z7.d ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x1, z7.d ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x2, z7.d ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x4, z7.d ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x8, z7.d ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x16, z7.d ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x30, z7.d ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( sp, z7.d ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z0.d ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z1.d ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z2.d ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z4.d ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z8.d ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z16.d ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z31.d ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d ) ); dump();
//SVE_64_bit_gather_load_scalar_plus_64_bit_scaled_offsets0:0
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z0.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z1.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z2.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z4.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z8.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z16.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z31.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p0/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p1/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p2/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p4/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x0, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x1, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x2, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x4, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x8, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x16, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x30, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( sp, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z0.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z1.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z2.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z4.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z8.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z16.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z31.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1sh(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z0.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z1.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z2.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z4.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z8.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z16.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z31.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p0/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p1/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p2/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p4/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x0, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x1, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x2, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x4, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x8, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x16, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x30, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( sp, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z0.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z1.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z2.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z4.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z8.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z16.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z31.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1sh(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z0.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z1.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z2.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z4.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z8.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z16.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z31.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p0/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p1/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p2/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p4/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x0, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x1, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x2, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x4, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x8, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x16, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x30, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( sp, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z0.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z1.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z2.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z4.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z8.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z16.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z31.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ld1h(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z0.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z1.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z2.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z4.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z8.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z16.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z31.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p0/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p1/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p2/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p4/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x0, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x1, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x2, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x4, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x8, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x16, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x30, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( sp, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z0.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z1.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z2.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z4.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z8.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z16.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z31.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
ldff1h(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 1 ) ); dump();
//SVE_64_bit_gather_load_scalar_plus_64_bit_scaled_offsets1:0
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1sw(z0.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1sw(z1.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1sw(z2.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1sw(z4.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1sw(z8.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1sw(z16.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1sw(z31.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1sw(z7.d, p0/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1sw(z7.d, p1/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1sw(z7.d, p2/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1sw(z7.d, p4/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x0, z7.d, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x1, z7.d, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x2, z7.d, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x4, z7.d, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x8, z7.d, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x16, z7.d, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x30, z7.d, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( sp, z7.d, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z0.d, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z1.d, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z2.d, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z4.d, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z8.d, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z16.d, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z31.d, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1sw(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1sw(z0.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1sw(z1.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1sw(z2.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1sw(z4.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1sw(z8.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1sw(z16.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1sw(z31.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1sw(z7.d, p0/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1sw(z7.d, p1/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1sw(z7.d, p2/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1sw(z7.d, p4/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x0, z7.d, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x1, z7.d, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x2, z7.d, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x4, z7.d, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x8, z7.d, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x16, z7.d, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x30, z7.d, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( sp, z7.d, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z0.d, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z1.d, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z2.d, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z4.d, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z8.d, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z16.d, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z31.d, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1sw(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z0.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z1.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z2.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z4.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z8.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z16.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z31.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p0/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p1/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p2/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p4/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x0, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x1, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x2, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x4, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x8, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x16, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x30, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( sp, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z0.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z1.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z2.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z4.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z8.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z16.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z31.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ld1w(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z0.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z1.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z2.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z4.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z8.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z16.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z31.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p0/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p1/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p2/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p4/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x0, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x1, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x2, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x4, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x8, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x16, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x30, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( sp, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z0.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z1.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z2.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z4.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z8.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z16.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z31.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
ldff1w(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 2 ) ); dump();
//SVE_64_bit_gather_load_scalar_plus_64_bit_scaled_offsets2:0
ld1d(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ld1d(z0.d, p7/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ld1d(z1.d, p7/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ld1d(z2.d, p7/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ld1d(z4.d, p7/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ld1d(z8.d, p7/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ld1d(z16.d, p7/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ld1d(z31.d, p7/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ld1d(z7.d, p0/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ld1d(z7.d, p1/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ld1d(z7.d, p2/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ld1d(z7.d, p4/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x0, z7.d, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x1, z7.d, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x2, z7.d, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x4, z7.d, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x8, z7.d, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x16, z7.d, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x30, z7.d, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( sp, z7.d, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z0.d, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z1.d, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z2.d, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z4.d, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z8.d, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z16.d, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z31.d, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ld1d(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ldff1d(z0.d, p7/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ldff1d(z1.d, p7/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ldff1d(z2.d, p7/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ldff1d(z4.d, p7/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ldff1d(z8.d, p7/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ldff1d(z16.d, p7/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ldff1d(z31.d, p7/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ldff1d(z7.d, p0/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ldff1d(z7.d, p1/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ldff1d(z7.d, p2/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ldff1d(z7.d, p4/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x0, z7.d, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x1, z7.d, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x2, z7.d, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x4, z7.d, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x8, z7.d, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x16, z7.d, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x30, z7.d, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( sp, z7.d, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z0.d, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z1.d, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z2.d, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z4.d, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z8.d, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z16.d, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z31.d, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
ldff1d(z7.d, p7/T_z, ptr( x7, z7.d, LSL, 3 ) ); dump();
//SVE_64_bit_gather_prefetch_scalar_plus_unpacked_32_bit_scaled_offsets0:0
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, UXT ) ); dump();
prfb(PLDL1STRM_SVE, p7, ptr( x7, z7.d, UXT ) ); dump();
prfb(PLDL2KEEP_SVE, p7, ptr( x7, z7.d, UXT ) ); dump();
prfb(PLDL2STRM_SVE, p7, ptr( x7, z7.d, UXT ) ); dump();
prfb(PLDL3KEEP_SVE, p7, ptr( x7, z7.d, UXT ) ); dump();
prfb(PLDL3STRM_SVE, p7, ptr( x7, z7.d, UXT ) ); dump();
prfb(PSTL1KEEP_SVE, p7, ptr( x7, z7.d, UXT ) ); dump();
prfb(PSTL1STRM_SVE, p7, ptr( x7, z7.d, UXT ) ); dump();
prfb(PSTL2KEEP_SVE, p7, ptr( x7, z7.d, UXT ) ); dump();
prfb(PSTL2STRM_SVE, p7, ptr( x7, z7.d, UXT ) ); dump();
prfb(PSTL3KEEP_SVE, p7, ptr( x7, z7.d, UXT ) ); dump();
prfb(PSTL3STRM_SVE, p7, ptr( x7, z7.d, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p0, ptr( x7, z7.d, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p1, ptr( x7, z7.d, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p2, ptr( x7, z7.d, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p4, ptr( x7, z7.d, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x0, z7.d, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x1, z7.d, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x2, z7.d, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x4, z7.d, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x8, z7.d, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x16, z7.d, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x30, z7.d, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( sp, z7.d, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z0.d, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z1.d, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z2.d, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z4.d, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z8.d, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z16.d, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z31.d, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, UXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, SXT ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, UXT ) ); dump();
//SVE_64_bit_gather_prefetch_scalar_plus_unpacked_32_bit_scaled_offsets1:0
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1STRM_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL2KEEP_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL2STRM_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL3KEEP_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL3STRM_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PSTL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PSTL1STRM_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PSTL2KEEP_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PSTL2STRM_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PSTL3KEEP_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PSTL3STRM_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p0, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p1, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p2, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p4, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x0, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x1, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x2, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x4, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x8, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x16, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x30, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( sp, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z0.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z1.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z2.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z4.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z8.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z16.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z31.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
//SVE_64_bit_gather_prefetch_scalar_plus_unpacked_32_bit_scaled_offsets2:0
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1STRM_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL2KEEP_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL2STRM_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL3KEEP_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL3STRM_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PSTL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PSTL1STRM_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PSTL2KEEP_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PSTL2STRM_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PSTL3KEEP_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PSTL3STRM_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p0, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p1, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p2, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p4, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x0, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x1, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x2, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x4, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x8, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x16, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x30, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( sp, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z0.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z1.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z2.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z4.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z8.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z16.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z31.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
//SVE_64_bit_gather_prefetch_scalar_plus_unpacked_32_bit_scaled_offsets3:0
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1STRM_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL2KEEP_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL2STRM_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL3KEEP_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL3STRM_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PSTL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PSTL1STRM_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PSTL2KEEP_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PSTL2STRM_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PSTL3KEEP_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PSTL3STRM_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p0, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p1, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p2, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p4, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x0, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x1, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x2, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x4, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x8, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x16, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x30, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( sp, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z0.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z1.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z2.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z4.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z8.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z16.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z31.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
//SVE_64_bit_gather_prefetch_scalar_plus_64_bit_scaled_offsets0:0
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z7.d ) ); dump();
prfb(PLDL1STRM_SVE, p7, ptr( x7, z7.d ) ); dump();
prfb(PLDL2KEEP_SVE, p7, ptr( x7, z7.d ) ); dump();
prfb(PLDL2STRM_SVE, p7, ptr( x7, z7.d ) ); dump();
prfb(PLDL3KEEP_SVE, p7, ptr( x7, z7.d ) ); dump();
prfb(PLDL3STRM_SVE, p7, ptr( x7, z7.d ) ); dump();
prfb(PSTL1KEEP_SVE, p7, ptr( x7, z7.d ) ); dump();
prfb(PSTL1STRM_SVE, p7, ptr( x7, z7.d ) ); dump();
prfb(PSTL2KEEP_SVE, p7, ptr( x7, z7.d ) ); dump();
prfb(PSTL2STRM_SVE, p7, ptr( x7, z7.d ) ); dump();
prfb(PSTL3KEEP_SVE, p7, ptr( x7, z7.d ) ); dump();
prfb(PSTL3STRM_SVE, p7, ptr( x7, z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p0, ptr( x7, z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p1, ptr( x7, z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p2, ptr( x7, z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p4, ptr( x7, z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x0, z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x1, z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x2, z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x4, z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x8, z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x16, z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x30, z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( sp, z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z7.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z0.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z1.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z2.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z4.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z8.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z16.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z31.d ) ); dump();
prfb(PLDL1KEEP_SVE, p7, ptr( x7, z7.d ) ); dump();
//SVE_64_bit_gather_prefetch_scalar_plus_64_bit_scaled_offsets1:0
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1STRM_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL2KEEP_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL2STRM_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL3KEEP_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL3STRM_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PSTL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PSTL1STRM_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PSTL2KEEP_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PSTL2STRM_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PSTL3KEEP_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PSTL3STRM_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p0, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p1, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p2, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p4, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x0, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x1, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x2, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x4, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x8, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x16, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x30, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( sp, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z0.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z1.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z2.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z4.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z8.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z16.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z31.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
prfh(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 1 ) ); dump();
//SVE_64_bit_gather_prefetch_scalar_plus_64_bit_scaled_offsets2:0
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1STRM_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL2KEEP_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL2STRM_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL3KEEP_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL3STRM_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PSTL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PSTL1STRM_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PSTL2KEEP_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PSTL2STRM_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PSTL3KEEP_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PSTL3STRM_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p0, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p1, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p2, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p4, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x0, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x1, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x2, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x4, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x8, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x16, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x30, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( sp, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z0.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z1.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z2.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z4.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z8.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z16.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z31.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
prfw(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 2 ) ); dump();
//SVE_64_bit_gather_prefetch_scalar_plus_64_bit_scaled_offsets3:0
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1STRM_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL2KEEP_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL2STRM_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL3KEEP_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL3STRM_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PSTL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PSTL1STRM_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PSTL2KEEP_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PSTL2STRM_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PSTL3KEEP_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PSTL3STRM_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p0, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p1, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p2, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p4, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x0, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x1, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x2, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x4, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x8, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x16, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x30, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( sp, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z0.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z1.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z2.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z4.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z8.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z16.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z31.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
prfd(PLDL1KEEP_SVE, p7, ptr( x7, z7.d, LSL, 3 ) ); dump();
//SVE_contiguous_store_scalar_plus_scalar0:0
st1b( z7.b,  p7, ptr( x7, x0 ) ); dump();
st1b( z7.b,  p7, ptr( x7, x0 ) ); dump();
st1b( z0.b,  p7, ptr( x7, x0 ) ); dump();
st1b( z1.b,  p7, ptr( x7, x0 ) ); dump();
st1b( z2.b,  p7, ptr( x7, x0 ) ); dump();
st1b( z4.b,  p7, ptr( x7, x0 ) ); dump();
st1b( z8.b,  p7, ptr( x7, x0 ) ); dump();
st1b( z16.b,  p7, ptr( x7, x0 ) ); dump();
st1b( z31.b,  p7, ptr( x7, x0 ) ); dump();
st1b( z7.b,  p7, ptr( x7, x0 ) ); dump();
st1b( z7.b,  p7, ptr( x7, x0 ) ); dump();
st1b( z7.b,  p0, ptr( x7, x0 ) ); dump();
st1b( z7.b,  p1, ptr( x7, x0 ) ); dump();
st1b( z7.b,  p2, ptr( x7, x0 ) ); dump();
st1b( z7.b,  p4, ptr( x7, x0 ) ); dump();
st1b( z7.b,  p7, ptr( x7, x0 ) ); dump();
st1b( z7.b,  p7, ptr( x7, x0 ) ); dump();
st1b( z7.b,  p7, ptr( x0, x0 ) ); dump();
st1b( z7.b,  p7, ptr( x1, x0 ) ); dump();
st1b( z7.b,  p7, ptr( x2, x0 ) ); dump();
st1b( z7.b,  p7, ptr( x4, x0 ) ); dump();
st1b( z7.b,  p7, ptr( x8, x0 ) ); dump();
st1b( z7.b,  p7, ptr( x16, x0 ) ); dump();
st1b( z7.b,  p7, ptr( x30, x0 ) ); dump();
st1b( z7.b,  p7, ptr( sp, x0 ) ); dump();
st1b( z7.b,  p7, ptr( x7, x0 ) ); dump();
st1b( z7.b,  p7, ptr( x7, x1 ) ); dump();
st1b( z7.b,  p7, ptr( x7, x2 ) ); dump();
st1b( z7.b,  p7, ptr( x7, x4 ) ); dump();
st1b( z7.b,  p7, ptr( x7, x8 ) ); dump();
st1b( z7.b,  p7, ptr( x7, x16 ) ); dump();
st1b( z7.b,  p7, ptr( x7, x30 ) ); dump();
st1b( z7.b,  p7, ptr( x7, x0 ) ); dump();
//SVE_contiguous_store_scalar_plus_scalar0:1
st1b( z7.h,  p7, ptr( x7, x0 ) ); dump();
st1b( z7.h,  p7, ptr( x7, x0 ) ); dump();
st1b( z0.h,  p7, ptr( x7, x0 ) ); dump();
st1b( z1.h,  p7, ptr( x7, x0 ) ); dump();
st1b( z2.h,  p7, ptr( x7, x0 ) ); dump();
st1b( z4.h,  p7, ptr( x7, x0 ) ); dump();
st1b( z8.h,  p7, ptr( x7, x0 ) ); dump();
st1b( z16.h,  p7, ptr( x7, x0 ) ); dump();
st1b( z31.h,  p7, ptr( x7, x0 ) ); dump();
st1b( z7.h,  p7, ptr( x7, x0 ) ); dump();
st1b( z7.h,  p7, ptr( x7, x0 ) ); dump();
st1b( z7.h,  p0, ptr( x7, x0 ) ); dump();
st1b( z7.h,  p1, ptr( x7, x0 ) ); dump();
st1b( z7.h,  p2, ptr( x7, x0 ) ); dump();
st1b( z7.h,  p4, ptr( x7, x0 ) ); dump();
st1b( z7.h,  p7, ptr( x7, x0 ) ); dump();
st1b( z7.h,  p7, ptr( x7, x0 ) ); dump();
st1b( z7.h,  p7, ptr( x0, x0 ) ); dump();
st1b( z7.h,  p7, ptr( x1, x0 ) ); dump();
st1b( z7.h,  p7, ptr( x2, x0 ) ); dump();
st1b( z7.h,  p7, ptr( x4, x0 ) ); dump();
st1b( z7.h,  p7, ptr( x8, x0 ) ); dump();
st1b( z7.h,  p7, ptr( x16, x0 ) ); dump();
st1b( z7.h,  p7, ptr( x30, x0 ) ); dump();
st1b( z7.h,  p7, ptr( sp, x0 ) ); dump();
st1b( z7.h,  p7, ptr( x7, x0 ) ); dump();
st1b( z7.h,  p7, ptr( x7, x1 ) ); dump();
st1b( z7.h,  p7, ptr( x7, x2 ) ); dump();
st1b( z7.h,  p7, ptr( x7, x4 ) ); dump();
st1b( z7.h,  p7, ptr( x7, x8 ) ); dump();
st1b( z7.h,  p7, ptr( x7, x16 ) ); dump();
st1b( z7.h,  p7, ptr( x7, x30 ) ); dump();
st1b( z7.h,  p7, ptr( x7, x0 ) ); dump();
//SVE_contiguous_store_scalar_plus_scalar0:2
st1b( z7.s,  p7, ptr( x7, x0 ) ); dump();
st1b( z7.s,  p7, ptr( x7, x0 ) ); dump();
st1b( z0.s,  p7, ptr( x7, x0 ) ); dump();
st1b( z1.s,  p7, ptr( x7, x0 ) ); dump();
st1b( z2.s,  p7, ptr( x7, x0 ) ); dump();
st1b( z4.s,  p7, ptr( x7, x0 ) ); dump();
st1b( z8.s,  p7, ptr( x7, x0 ) ); dump();
st1b( z16.s,  p7, ptr( x7, x0 ) ); dump();
st1b( z31.s,  p7, ptr( x7, x0 ) ); dump();
st1b( z7.s,  p7, ptr( x7, x0 ) ); dump();
st1b( z7.s,  p7, ptr( x7, x0 ) ); dump();
st1b( z7.s,  p0, ptr( x7, x0 ) ); dump();
st1b( z7.s,  p1, ptr( x7, x0 ) ); dump();
st1b( z7.s,  p2, ptr( x7, x0 ) ); dump();
st1b( z7.s,  p4, ptr( x7, x0 ) ); dump();
st1b( z7.s,  p7, ptr( x7, x0 ) ); dump();
st1b( z7.s,  p7, ptr( x7, x0 ) ); dump();
st1b( z7.s,  p7, ptr( x0, x0 ) ); dump();
st1b( z7.s,  p7, ptr( x1, x0 ) ); dump();
st1b( z7.s,  p7, ptr( x2, x0 ) ); dump();
st1b( z7.s,  p7, ptr( x4, x0 ) ); dump();
st1b( z7.s,  p7, ptr( x8, x0 ) ); dump();
st1b( z7.s,  p7, ptr( x16, x0 ) ); dump();
st1b( z7.s,  p7, ptr( x30, x0 ) ); dump();
st1b( z7.s,  p7, ptr( sp, x0 ) ); dump();
st1b( z7.s,  p7, ptr( x7, x0 ) ); dump();
st1b( z7.s,  p7, ptr( x7, x1 ) ); dump();
st1b( z7.s,  p7, ptr( x7, x2 ) ); dump();
st1b( z7.s,  p7, ptr( x7, x4 ) ); dump();
st1b( z7.s,  p7, ptr( x7, x8 ) ); dump();
st1b( z7.s,  p7, ptr( x7, x16 ) ); dump();
st1b( z7.s,  p7, ptr( x7, x30 ) ); dump();
st1b( z7.s,  p7, ptr( x7, x0 ) ); dump();
//SVE_contiguous_store_scalar_plus_scalar0:3
st1b( z7.d,  p7, ptr( x7, x0 ) ); dump();
st1b( z7.d,  p7, ptr( x7, x0 ) ); dump();
st1b( z0.d,  p7, ptr( x7, x0 ) ); dump();
st1b( z1.d,  p7, ptr( x7, x0 ) ); dump();
st1b( z2.d,  p7, ptr( x7, x0 ) ); dump();
st1b( z4.d,  p7, ptr( x7, x0 ) ); dump();
st1b( z8.d,  p7, ptr( x7, x0 ) ); dump();
st1b( z16.d,  p7, ptr( x7, x0 ) ); dump();
st1b( z31.d,  p7, ptr( x7, x0 ) ); dump();
st1b( z7.d,  p7, ptr( x7, x0 ) ); dump();
st1b( z7.d,  p7, ptr( x7, x0 ) ); dump();
st1b( z7.d,  p0, ptr( x7, x0 ) ); dump();
st1b( z7.d,  p1, ptr( x7, x0 ) ); dump();
st1b( z7.d,  p2, ptr( x7, x0 ) ); dump();
st1b( z7.d,  p4, ptr( x7, x0 ) ); dump();
st1b( z7.d,  p7, ptr( x7, x0 ) ); dump();
st1b( z7.d,  p7, ptr( x7, x0 ) ); dump();
st1b( z7.d,  p7, ptr( x0, x0 ) ); dump();
st1b( z7.d,  p7, ptr( x1, x0 ) ); dump();
st1b( z7.d,  p7, ptr( x2, x0 ) ); dump();
st1b( z7.d,  p7, ptr( x4, x0 ) ); dump();
st1b( z7.d,  p7, ptr( x8, x0 ) ); dump();
st1b( z7.d,  p7, ptr( x16, x0 ) ); dump();
st1b( z7.d,  p7, ptr( x30, x0 ) ); dump();
st1b( z7.d,  p7, ptr( sp, x0 ) ); dump();
st1b( z7.d,  p7, ptr( x7, x0 ) ); dump();
st1b( z7.d,  p7, ptr( x7, x1 ) ); dump();
st1b( z7.d,  p7, ptr( x7, x2 ) ); dump();
st1b( z7.d,  p7, ptr( x7, x4 ) ); dump();
st1b( z7.d,  p7, ptr( x7, x8 ) ); dump();
st1b( z7.d,  p7, ptr( x7, x16 ) ); dump();
st1b( z7.d,  p7, ptr( x7, x30 ) ); dump();
st1b( z7.d,  p7, ptr( x7, x0 ) ); dump();
//SVE_contiguous_store_scalar_plus_scalar1:0
st1h( z7.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z0.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z1.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z2.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z4.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z8.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z16.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z31.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.h,  p0, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.h,  p1, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.h,  p2, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.h,  p4, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.h,  p7, ptr( x0, x0, LSL, 1 ) ); dump();
st1h( z7.h,  p7, ptr( x1, x0, LSL, 1 ) ); dump();
st1h( z7.h,  p7, ptr( x2, x0, LSL, 1 ) ); dump();
st1h( z7.h,  p7, ptr( x4, x0, LSL, 1 ) ); dump();
st1h( z7.h,  p7, ptr( x8, x0, LSL, 1 ) ); dump();
st1h( z7.h,  p7, ptr( x16, x0, LSL, 1 ) ); dump();
st1h( z7.h,  p7, ptr( x30, x0, LSL, 1 ) ); dump();
st1h( z7.h,  p7, ptr( sp, x0, LSL, 1 ) ); dump();
st1h( z7.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.h,  p7, ptr( x7, x1, LSL, 1 ) ); dump();
st1h( z7.h,  p7, ptr( x7, x2, LSL, 1 ) ); dump();
st1h( z7.h,  p7, ptr( x7, x4, LSL, 1 ) ); dump();
st1h( z7.h,  p7, ptr( x7, x8, LSL, 1 ) ); dump();
st1h( z7.h,  p7, ptr( x7, x16, LSL, 1 ) ); dump();
st1h( z7.h,  p7, ptr( x7, x30, LSL, 1 ) ); dump();
st1h( z7.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
//SVE_contiguous_store_scalar_plus_scalar1:1
st1h( z7.s,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z0.s,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z1.s,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z2.s,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z4.s,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z8.s,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z16.s,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z31.s,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.s,  p0, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.s,  p1, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.s,  p2, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.s,  p4, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x0, x0, LSL, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x1, x0, LSL, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x2, x0, LSL, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x4, x0, LSL, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x8, x0, LSL, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x16, x0, LSL, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x30, x0, LSL, 1 ) ); dump();
st1h( z7.s,  p7, ptr( sp, x0, LSL, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, x1, LSL, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, x2, LSL, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, x4, LSL, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, x8, LSL, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, x16, LSL, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, x30, LSL, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
//SVE_contiguous_store_scalar_plus_scalar1:2
st1h( z7.d,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z0.d,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z1.d,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z2.d,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z4.d,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z8.d,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z16.d,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z31.d,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.d,  p0, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.d,  p1, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.d,  p2, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.d,  p4, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x0, x0, LSL, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x1, x0, LSL, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x2, x0, LSL, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x4, x0, LSL, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x8, x0, LSL, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x16, x0, LSL, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x30, x0, LSL, 1 ) ); dump();
st1h( z7.d,  p7, ptr( sp, x0, LSL, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, x1, LSL, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, x2, LSL, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, x4, LSL, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, x8, LSL, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, x16, LSL, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, x30, LSL, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
//SVE_contiguous_store_scalar_plus_scalar2:0
st1w( z7.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z0.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z1.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z2.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z4.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z8.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z16.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z31.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z7.s,  p0, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z7.s,  p1, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z7.s,  p2, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z7.s,  p4, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x0, x0, LSL, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x1, x0, LSL, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x2, x0, LSL, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x4, x0, LSL, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x8, x0, LSL, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x16, x0, LSL, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x30, x0, LSL, 2 ) ); dump();
st1w( z7.s,  p7, ptr( sp, x0, LSL, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, x1, LSL, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, x2, LSL, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, x4, LSL, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, x8, LSL, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, x16, LSL, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, x30, LSL, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
//SVE_contiguous_store_scalar_plus_scalar2:1
st1w( z7.d,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z0.d,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z1.d,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z2.d,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z4.d,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z8.d,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z16.d,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z31.d,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z7.d,  p0, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z7.d,  p1, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z7.d,  p2, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z7.d,  p4, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x0, x0, LSL, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x1, x0, LSL, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x2, x0, LSL, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x4, x0, LSL, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x8, x0, LSL, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x16, x0, LSL, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x30, x0, LSL, 2 ) ); dump();
st1w( z7.d,  p7, ptr( sp, x0, LSL, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, x1, LSL, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, x2, LSL, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, x4, LSL, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, x8, LSL, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, x16, LSL, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, x30, LSL, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
//SVE_contiguous_store_scalar_plus_scalar3:0
st1d( z7.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
st1d( z0.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
st1d( z1.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
st1d( z2.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
st1d( z4.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
st1d( z8.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
st1d( z16.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
st1d( z31.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
st1d( z7.d,  p0, ptr( x7, x0, LSL, 3 ) ); dump();
st1d( z7.d,  p1, ptr( x7, x0, LSL, 3 ) ); dump();
st1d( z7.d,  p2, ptr( x7, x0, LSL, 3 ) ); dump();
st1d( z7.d,  p4, ptr( x7, x0, LSL, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x0, x0, LSL, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x1, x0, LSL, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x2, x0, LSL, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x4, x0, LSL, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x8, x0, LSL, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x16, x0, LSL, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x30, x0, LSL, 3 ) ); dump();
st1d( z7.d,  p7, ptr( sp, x0, LSL, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, x1, LSL, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, x2, LSL, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, x4, LSL, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, x8, LSL, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, x16, LSL, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, x30, LSL, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
//SVE_contiguous_store_scalar_plus_immediate0:0
st1b( z7.b,  p7, ptr( x7 ) ); dump();
st1b( z7.b,  p7, ptr( x7 ) ); dump();
st1b( z0.b,  p7, ptr( x7 ) ); dump();
st1b( z1.b,  p7, ptr( x7 ) ); dump();
st1b( z2.b,  p7, ptr( x7 ) ); dump();
st1b( z4.b,  p7, ptr( x7 ) ); dump();
st1b( z8.b,  p7, ptr( x7 ) ); dump();
st1b( z16.b,  p7, ptr( x7 ) ); dump();
st1b( z31.b,  p7, ptr( x7 ) ); dump();
st1b( z7.b,  p7, ptr( x7 ) ); dump();
st1b( z7.b,  p7, ptr( x7 ) ); dump();
st1b( z7.b,  p0, ptr( x7 ) ); dump();
st1b( z7.b,  p1, ptr( x7 ) ); dump();
st1b( z7.b,  p2, ptr( x7 ) ); dump();
st1b( z7.b,  p4, ptr( x7 ) ); dump();
st1b( z7.b,  p7, ptr( x7 ) ); dump();
st1b( z7.b,  p7, ptr( x7 ) ); dump();
st1b( z7.b,  p7, ptr( x0 ) ); dump();
st1b( z7.b,  p7, ptr( x1 ) ); dump();
st1b( z7.b,  p7, ptr( x2 ) ); dump();
st1b( z7.b,  p7, ptr( x4 ) ); dump();
st1b( z7.b,  p7, ptr( x8 ) ); dump();
st1b( z7.b,  p7, ptr( x16 ) ); dump();
st1b( z7.b,  p7, ptr( x30 ) ); dump();
st1b( z7.b,  p7, ptr( sp ) ); dump();
st1b( z7.b,  p7, ptr( x7 ) ); dump();
//SVE_contiguous_store_scalar_plus_immediate0:1
st1b( z7.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z0.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z1.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z2.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z4.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z8.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z16.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z31.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.b,  p0, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.b,  p1, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.b,  p2, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.b,  p4, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.b,  p7, ptr( x0, 7, MUL_VL ) ); dump();
st1b( z7.b,  p7, ptr( x1, 7, MUL_VL ) ); dump();
st1b( z7.b,  p7, ptr( x2, 7, MUL_VL ) ); dump();
st1b( z7.b,  p7, ptr( x4, 7, MUL_VL ) ); dump();
st1b( z7.b,  p7, ptr( x8, 7, MUL_VL ) ); dump();
st1b( z7.b,  p7, ptr( x16, 7, MUL_VL ) ); dump();
st1b( z7.b,  p7, ptr( x30, 7, MUL_VL ) ); dump();
st1b( z7.b,  p7, ptr( sp, 7, MUL_VL ) ); dump();
st1b( z7.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.b,  p7, ptr( x7, -8, MUL_VL ) ); dump();
st1b( z7.b,  p7, ptr( x7, -4, MUL_VL ) ); dump();
st1b( z7.b,  p7, ptr( x7, -2, MUL_VL ) ); dump();
st1b( z7.b,  p7, ptr( x7, -1, MUL_VL ) ); dump();
st1b( z7.b,  p7, ptr( x7, 0, MUL_VL ) ); dump();
st1b( z7.b,  p7, ptr( x7, 1, MUL_VL ) ); dump();
st1b( z7.b,  p7, ptr( x7, 2, MUL_VL ) ); dump();
st1b( z7.b,  p7, ptr( x7, 4, MUL_VL ) ); dump();
st1b( z7.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_store_scalar_plus_immediate0:2
st1b( z7.h,  p7, ptr( x7 ) ); dump();
st1b( z7.h,  p7, ptr( x7 ) ); dump();
st1b( z0.h,  p7, ptr( x7 ) ); dump();
st1b( z1.h,  p7, ptr( x7 ) ); dump();
st1b( z2.h,  p7, ptr( x7 ) ); dump();
st1b( z4.h,  p7, ptr( x7 ) ); dump();
st1b( z8.h,  p7, ptr( x7 ) ); dump();
st1b( z16.h,  p7, ptr( x7 ) ); dump();
st1b( z31.h,  p7, ptr( x7 ) ); dump();
st1b( z7.h,  p7, ptr( x7 ) ); dump();
st1b( z7.h,  p7, ptr( x7 ) ); dump();
st1b( z7.h,  p0, ptr( x7 ) ); dump();
st1b( z7.h,  p1, ptr( x7 ) ); dump();
st1b( z7.h,  p2, ptr( x7 ) ); dump();
st1b( z7.h,  p4, ptr( x7 ) ); dump();
st1b( z7.h,  p7, ptr( x7 ) ); dump();
st1b( z7.h,  p7, ptr( x7 ) ); dump();
st1b( z7.h,  p7, ptr( x0 ) ); dump();
st1b( z7.h,  p7, ptr( x1 ) ); dump();
st1b( z7.h,  p7, ptr( x2 ) ); dump();
st1b( z7.h,  p7, ptr( x4 ) ); dump();
st1b( z7.h,  p7, ptr( x8 ) ); dump();
st1b( z7.h,  p7, ptr( x16 ) ); dump();
st1b( z7.h,  p7, ptr( x30 ) ); dump();
st1b( z7.h,  p7, ptr( sp ) ); dump();
st1b( z7.h,  p7, ptr( x7 ) ); dump();
//SVE_contiguous_store_scalar_plus_immediate0:3
st1b( z7.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z0.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z1.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z2.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z4.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z8.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z16.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z31.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.h,  p0, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.h,  p1, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.h,  p2, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.h,  p4, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.h,  p7, ptr( x0, 7, MUL_VL ) ); dump();
st1b( z7.h,  p7, ptr( x1, 7, MUL_VL ) ); dump();
st1b( z7.h,  p7, ptr( x2, 7, MUL_VL ) ); dump();
st1b( z7.h,  p7, ptr( x4, 7, MUL_VL ) ); dump();
st1b( z7.h,  p7, ptr( x8, 7, MUL_VL ) ); dump();
st1b( z7.h,  p7, ptr( x16, 7, MUL_VL ) ); dump();
st1b( z7.h,  p7, ptr( x30, 7, MUL_VL ) ); dump();
st1b( z7.h,  p7, ptr( sp, 7, MUL_VL ) ); dump();
st1b( z7.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.h,  p7, ptr( x7, -8, MUL_VL ) ); dump();
st1b( z7.h,  p7, ptr( x7, -4, MUL_VL ) ); dump();
st1b( z7.h,  p7, ptr( x7, -2, MUL_VL ) ); dump();
st1b( z7.h,  p7, ptr( x7, -1, MUL_VL ) ); dump();
st1b( z7.h,  p7, ptr( x7, 0, MUL_VL ) ); dump();
st1b( z7.h,  p7, ptr( x7, 1, MUL_VL ) ); dump();
st1b( z7.h,  p7, ptr( x7, 2, MUL_VL ) ); dump();
st1b( z7.h,  p7, ptr( x7, 4, MUL_VL ) ); dump();
st1b( z7.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_store_scalar_plus_immediate0:4
st1b( z7.s,  p7, ptr( x7 ) ); dump();
st1b( z7.s,  p7, ptr( x7 ) ); dump();
st1b( z0.s,  p7, ptr( x7 ) ); dump();
st1b( z1.s,  p7, ptr( x7 ) ); dump();
st1b( z2.s,  p7, ptr( x7 ) ); dump();
st1b( z4.s,  p7, ptr( x7 ) ); dump();
st1b( z8.s,  p7, ptr( x7 ) ); dump();
st1b( z16.s,  p7, ptr( x7 ) ); dump();
st1b( z31.s,  p7, ptr( x7 ) ); dump();
st1b( z7.s,  p7, ptr( x7 ) ); dump();
st1b( z7.s,  p7, ptr( x7 ) ); dump();
st1b( z7.s,  p0, ptr( x7 ) ); dump();
st1b( z7.s,  p1, ptr( x7 ) ); dump();
st1b( z7.s,  p2, ptr( x7 ) ); dump();
st1b( z7.s,  p4, ptr( x7 ) ); dump();
st1b( z7.s,  p7, ptr( x7 ) ); dump();
st1b( z7.s,  p7, ptr( x7 ) ); dump();
st1b( z7.s,  p7, ptr( x0 ) ); dump();
st1b( z7.s,  p7, ptr( x1 ) ); dump();
st1b( z7.s,  p7, ptr( x2 ) ); dump();
st1b( z7.s,  p7, ptr( x4 ) ); dump();
st1b( z7.s,  p7, ptr( x8 ) ); dump();
st1b( z7.s,  p7, ptr( x16 ) ); dump();
st1b( z7.s,  p7, ptr( x30 ) ); dump();
st1b( z7.s,  p7, ptr( sp ) ); dump();
st1b( z7.s,  p7, ptr( x7 ) ); dump();
//SVE_contiguous_store_scalar_plus_immediate0:5
st1b( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z0.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z1.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z2.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z4.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z8.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z16.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z31.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.s,  p0, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.s,  p1, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.s,  p2, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.s,  p4, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.s,  p7, ptr( x0, 7, MUL_VL ) ); dump();
st1b( z7.s,  p7, ptr( x1, 7, MUL_VL ) ); dump();
st1b( z7.s,  p7, ptr( x2, 7, MUL_VL ) ); dump();
st1b( z7.s,  p7, ptr( x4, 7, MUL_VL ) ); dump();
st1b( z7.s,  p7, ptr( x8, 7, MUL_VL ) ); dump();
st1b( z7.s,  p7, ptr( x16, 7, MUL_VL ) ); dump();
st1b( z7.s,  p7, ptr( x30, 7, MUL_VL ) ); dump();
st1b( z7.s,  p7, ptr( sp, 7, MUL_VL ) ); dump();
st1b( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.s,  p7, ptr( x7, -8, MUL_VL ) ); dump();
st1b( z7.s,  p7, ptr( x7, -4, MUL_VL ) ); dump();
st1b( z7.s,  p7, ptr( x7, -2, MUL_VL ) ); dump();
st1b( z7.s,  p7, ptr( x7, -1, MUL_VL ) ); dump();
st1b( z7.s,  p7, ptr( x7, 0, MUL_VL ) ); dump();
st1b( z7.s,  p7, ptr( x7, 1, MUL_VL ) ); dump();
st1b( z7.s,  p7, ptr( x7, 2, MUL_VL ) ); dump();
st1b( z7.s,  p7, ptr( x7, 4, MUL_VL ) ); dump();
st1b( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_store_scalar_plus_immediate0:6
st1b( z7.d,  p7, ptr( x7 ) ); dump();
st1b( z7.d,  p7, ptr( x7 ) ); dump();
st1b( z0.d,  p7, ptr( x7 ) ); dump();
st1b( z1.d,  p7, ptr( x7 ) ); dump();
st1b( z2.d,  p7, ptr( x7 ) ); dump();
st1b( z4.d,  p7, ptr( x7 ) ); dump();
st1b( z8.d,  p7, ptr( x7 ) ); dump();
st1b( z16.d,  p7, ptr( x7 ) ); dump();
st1b( z31.d,  p7, ptr( x7 ) ); dump();
st1b( z7.d,  p7, ptr( x7 ) ); dump();
st1b( z7.d,  p7, ptr( x7 ) ); dump();
st1b( z7.d,  p0, ptr( x7 ) ); dump();
st1b( z7.d,  p1, ptr( x7 ) ); dump();
st1b( z7.d,  p2, ptr( x7 ) ); dump();
st1b( z7.d,  p4, ptr( x7 ) ); dump();
st1b( z7.d,  p7, ptr( x7 ) ); dump();
st1b( z7.d,  p7, ptr( x7 ) ); dump();
st1b( z7.d,  p7, ptr( x0 ) ); dump();
st1b( z7.d,  p7, ptr( x1 ) ); dump();
st1b( z7.d,  p7, ptr( x2 ) ); dump();
st1b( z7.d,  p7, ptr( x4 ) ); dump();
st1b( z7.d,  p7, ptr( x8 ) ); dump();
st1b( z7.d,  p7, ptr( x16 ) ); dump();
st1b( z7.d,  p7, ptr( x30 ) ); dump();
st1b( z7.d,  p7, ptr( sp ) ); dump();
st1b( z7.d,  p7, ptr( x7 ) ); dump();
//SVE_contiguous_store_scalar_plus_immediate0:7
st1b( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z0.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z1.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z2.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z4.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z8.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z16.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z31.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.d,  p0, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.d,  p1, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.d,  p2, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.d,  p4, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.d,  p7, ptr( x0, 7, MUL_VL ) ); dump();
st1b( z7.d,  p7, ptr( x1, 7, MUL_VL ) ); dump();
st1b( z7.d,  p7, ptr( x2, 7, MUL_VL ) ); dump();
st1b( z7.d,  p7, ptr( x4, 7, MUL_VL ) ); dump();
st1b( z7.d,  p7, ptr( x8, 7, MUL_VL ) ); dump();
st1b( z7.d,  p7, ptr( x16, 7, MUL_VL ) ); dump();
st1b( z7.d,  p7, ptr( x30, 7, MUL_VL ) ); dump();
st1b( z7.d,  p7, ptr( sp, 7, MUL_VL ) ); dump();
st1b( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.d,  p7, ptr( x7, -8, MUL_VL ) ); dump();
st1b( z7.d,  p7, ptr( x7, -4, MUL_VL ) ); dump();
st1b( z7.d,  p7, ptr( x7, -2, MUL_VL ) ); dump();
st1b( z7.d,  p7, ptr( x7, -1, MUL_VL ) ); dump();
st1b( z7.d,  p7, ptr( x7, 0, MUL_VL ) ); dump();
st1b( z7.d,  p7, ptr( x7, 1, MUL_VL ) ); dump();
st1b( z7.d,  p7, ptr( x7, 2, MUL_VL ) ); dump();
st1b( z7.d,  p7, ptr( x7, 4, MUL_VL ) ); dump();
st1b( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1b( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_store_scalar_plus_immediate1:0
st1h( z7.h,  p7, ptr( x7 ) ); dump();
st1h( z7.h,  p7, ptr( x7 ) ); dump();
st1h( z0.h,  p7, ptr( x7 ) ); dump();
st1h( z1.h,  p7, ptr( x7 ) ); dump();
st1h( z2.h,  p7, ptr( x7 ) ); dump();
st1h( z4.h,  p7, ptr( x7 ) ); dump();
st1h( z8.h,  p7, ptr( x7 ) ); dump();
st1h( z16.h,  p7, ptr( x7 ) ); dump();
st1h( z31.h,  p7, ptr( x7 ) ); dump();
st1h( z7.h,  p7, ptr( x7 ) ); dump();
st1h( z7.h,  p7, ptr( x7 ) ); dump();
st1h( z7.h,  p0, ptr( x7 ) ); dump();
st1h( z7.h,  p1, ptr( x7 ) ); dump();
st1h( z7.h,  p2, ptr( x7 ) ); dump();
st1h( z7.h,  p4, ptr( x7 ) ); dump();
st1h( z7.h,  p7, ptr( x7 ) ); dump();
st1h( z7.h,  p7, ptr( x7 ) ); dump();
st1h( z7.h,  p7, ptr( x0 ) ); dump();
st1h( z7.h,  p7, ptr( x1 ) ); dump();
st1h( z7.h,  p7, ptr( x2 ) ); dump();
st1h( z7.h,  p7, ptr( x4 ) ); dump();
st1h( z7.h,  p7, ptr( x8 ) ); dump();
st1h( z7.h,  p7, ptr( x16 ) ); dump();
st1h( z7.h,  p7, ptr( x30 ) ); dump();
st1h( z7.h,  p7, ptr( sp ) ); dump();
st1h( z7.h,  p7, ptr( x7 ) ); dump();
//SVE_contiguous_store_scalar_plus_immediate1:1
st1h( z7.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z0.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z1.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z2.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z4.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z8.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z16.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z31.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.h,  p0, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.h,  p1, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.h,  p2, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.h,  p4, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.h,  p7, ptr( x0, 7, MUL_VL ) ); dump();
st1h( z7.h,  p7, ptr( x1, 7, MUL_VL ) ); dump();
st1h( z7.h,  p7, ptr( x2, 7, MUL_VL ) ); dump();
st1h( z7.h,  p7, ptr( x4, 7, MUL_VL ) ); dump();
st1h( z7.h,  p7, ptr( x8, 7, MUL_VL ) ); dump();
st1h( z7.h,  p7, ptr( x16, 7, MUL_VL ) ); dump();
st1h( z7.h,  p7, ptr( x30, 7, MUL_VL ) ); dump();
st1h( z7.h,  p7, ptr( sp, 7, MUL_VL ) ); dump();
st1h( z7.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.h,  p7, ptr( x7, -8, MUL_VL ) ); dump();
st1h( z7.h,  p7, ptr( x7, -4, MUL_VL ) ); dump();
st1h( z7.h,  p7, ptr( x7, -2, MUL_VL ) ); dump();
st1h( z7.h,  p7, ptr( x7, -1, MUL_VL ) ); dump();
st1h( z7.h,  p7, ptr( x7, 0, MUL_VL ) ); dump();
st1h( z7.h,  p7, ptr( x7, 1, MUL_VL ) ); dump();
st1h( z7.h,  p7, ptr( x7, 2, MUL_VL ) ); dump();
st1h( z7.h,  p7, ptr( x7, 4, MUL_VL ) ); dump();
st1h( z7.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_store_scalar_plus_immediate1:2
st1h( z7.s,  p7, ptr( x7 ) ); dump();
st1h( z7.s,  p7, ptr( x7 ) ); dump();
st1h( z0.s,  p7, ptr( x7 ) ); dump();
st1h( z1.s,  p7, ptr( x7 ) ); dump();
st1h( z2.s,  p7, ptr( x7 ) ); dump();
st1h( z4.s,  p7, ptr( x7 ) ); dump();
st1h( z8.s,  p7, ptr( x7 ) ); dump();
st1h( z16.s,  p7, ptr( x7 ) ); dump();
st1h( z31.s,  p7, ptr( x7 ) ); dump();
st1h( z7.s,  p7, ptr( x7 ) ); dump();
st1h( z7.s,  p7, ptr( x7 ) ); dump();
st1h( z7.s,  p0, ptr( x7 ) ); dump();
st1h( z7.s,  p1, ptr( x7 ) ); dump();
st1h( z7.s,  p2, ptr( x7 ) ); dump();
st1h( z7.s,  p4, ptr( x7 ) ); dump();
st1h( z7.s,  p7, ptr( x7 ) ); dump();
st1h( z7.s,  p7, ptr( x7 ) ); dump();
st1h( z7.s,  p7, ptr( x0 ) ); dump();
st1h( z7.s,  p7, ptr( x1 ) ); dump();
st1h( z7.s,  p7, ptr( x2 ) ); dump();
st1h( z7.s,  p7, ptr( x4 ) ); dump();
st1h( z7.s,  p7, ptr( x8 ) ); dump();
st1h( z7.s,  p7, ptr( x16 ) ); dump();
st1h( z7.s,  p7, ptr( x30 ) ); dump();
st1h( z7.s,  p7, ptr( sp ) ); dump();
st1h( z7.s,  p7, ptr( x7 ) ); dump();
//SVE_contiguous_store_scalar_plus_immediate1:3
st1h( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z0.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z1.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z2.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z4.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z8.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z16.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z31.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.s,  p0, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.s,  p1, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.s,  p2, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.s,  p4, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.s,  p7, ptr( x0, 7, MUL_VL ) ); dump();
st1h( z7.s,  p7, ptr( x1, 7, MUL_VL ) ); dump();
st1h( z7.s,  p7, ptr( x2, 7, MUL_VL ) ); dump();
st1h( z7.s,  p7, ptr( x4, 7, MUL_VL ) ); dump();
st1h( z7.s,  p7, ptr( x8, 7, MUL_VL ) ); dump();
st1h( z7.s,  p7, ptr( x16, 7, MUL_VL ) ); dump();
st1h( z7.s,  p7, ptr( x30, 7, MUL_VL ) ); dump();
st1h( z7.s,  p7, ptr( sp, 7, MUL_VL ) ); dump();
st1h( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.s,  p7, ptr( x7, -8, MUL_VL ) ); dump();
st1h( z7.s,  p7, ptr( x7, -4, MUL_VL ) ); dump();
st1h( z7.s,  p7, ptr( x7, -2, MUL_VL ) ); dump();
st1h( z7.s,  p7, ptr( x7, -1, MUL_VL ) ); dump();
st1h( z7.s,  p7, ptr( x7, 0, MUL_VL ) ); dump();
st1h( z7.s,  p7, ptr( x7, 1, MUL_VL ) ); dump();
st1h( z7.s,  p7, ptr( x7, 2, MUL_VL ) ); dump();
st1h( z7.s,  p7, ptr( x7, 4, MUL_VL ) ); dump();
st1h( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_store_scalar_plus_immediate1:4
st1h( z7.d,  p7, ptr( x7 ) ); dump();
st1h( z7.d,  p7, ptr( x7 ) ); dump();
st1h( z0.d,  p7, ptr( x7 ) ); dump();
st1h( z1.d,  p7, ptr( x7 ) ); dump();
st1h( z2.d,  p7, ptr( x7 ) ); dump();
st1h( z4.d,  p7, ptr( x7 ) ); dump();
st1h( z8.d,  p7, ptr( x7 ) ); dump();
st1h( z16.d,  p7, ptr( x7 ) ); dump();
st1h( z31.d,  p7, ptr( x7 ) ); dump();
st1h( z7.d,  p7, ptr( x7 ) ); dump();
st1h( z7.d,  p7, ptr( x7 ) ); dump();
st1h( z7.d,  p0, ptr( x7 ) ); dump();
st1h( z7.d,  p1, ptr( x7 ) ); dump();
st1h( z7.d,  p2, ptr( x7 ) ); dump();
st1h( z7.d,  p4, ptr( x7 ) ); dump();
st1h( z7.d,  p7, ptr( x7 ) ); dump();
st1h( z7.d,  p7, ptr( x7 ) ); dump();
st1h( z7.d,  p7, ptr( x0 ) ); dump();
st1h( z7.d,  p7, ptr( x1 ) ); dump();
st1h( z7.d,  p7, ptr( x2 ) ); dump();
st1h( z7.d,  p7, ptr( x4 ) ); dump();
st1h( z7.d,  p7, ptr( x8 ) ); dump();
st1h( z7.d,  p7, ptr( x16 ) ); dump();
st1h( z7.d,  p7, ptr( x30 ) ); dump();
st1h( z7.d,  p7, ptr( sp ) ); dump();
st1h( z7.d,  p7, ptr( x7 ) ); dump();
//SVE_contiguous_store_scalar_plus_immediate1:5
st1h( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z0.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z1.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z2.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z4.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z8.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z16.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z31.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.d,  p0, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.d,  p1, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.d,  p2, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.d,  p4, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.d,  p7, ptr( x0, 7, MUL_VL ) ); dump();
st1h( z7.d,  p7, ptr( x1, 7, MUL_VL ) ); dump();
st1h( z7.d,  p7, ptr( x2, 7, MUL_VL ) ); dump();
st1h( z7.d,  p7, ptr( x4, 7, MUL_VL ) ); dump();
st1h( z7.d,  p7, ptr( x8, 7, MUL_VL ) ); dump();
st1h( z7.d,  p7, ptr( x16, 7, MUL_VL ) ); dump();
st1h( z7.d,  p7, ptr( x30, 7, MUL_VL ) ); dump();
st1h( z7.d,  p7, ptr( sp, 7, MUL_VL ) ); dump();
st1h( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.d,  p7, ptr( x7, -8, MUL_VL ) ); dump();
st1h( z7.d,  p7, ptr( x7, -4, MUL_VL ) ); dump();
st1h( z7.d,  p7, ptr( x7, -2, MUL_VL ) ); dump();
st1h( z7.d,  p7, ptr( x7, -1, MUL_VL ) ); dump();
st1h( z7.d,  p7, ptr( x7, 0, MUL_VL ) ); dump();
st1h( z7.d,  p7, ptr( x7, 1, MUL_VL ) ); dump();
st1h( z7.d,  p7, ptr( x7, 2, MUL_VL ) ); dump();
st1h( z7.d,  p7, ptr( x7, 4, MUL_VL ) ); dump();
st1h( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1h( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_store_scalar_plus_immediate2:0
st1w( z7.s,  p7, ptr( x7 ) ); dump();
st1w( z7.s,  p7, ptr( x7 ) ); dump();
st1w( z0.s,  p7, ptr( x7 ) ); dump();
st1w( z1.s,  p7, ptr( x7 ) ); dump();
st1w( z2.s,  p7, ptr( x7 ) ); dump();
st1w( z4.s,  p7, ptr( x7 ) ); dump();
st1w( z8.s,  p7, ptr( x7 ) ); dump();
st1w( z16.s,  p7, ptr( x7 ) ); dump();
st1w( z31.s,  p7, ptr( x7 ) ); dump();
st1w( z7.s,  p7, ptr( x7 ) ); dump();
st1w( z7.s,  p7, ptr( x7 ) ); dump();
st1w( z7.s,  p0, ptr( x7 ) ); dump();
st1w( z7.s,  p1, ptr( x7 ) ); dump();
st1w( z7.s,  p2, ptr( x7 ) ); dump();
st1w( z7.s,  p4, ptr( x7 ) ); dump();
st1w( z7.s,  p7, ptr( x7 ) ); dump();
st1w( z7.s,  p7, ptr( x7 ) ); dump();
st1w( z7.s,  p7, ptr( x0 ) ); dump();
st1w( z7.s,  p7, ptr( x1 ) ); dump();
st1w( z7.s,  p7, ptr( x2 ) ); dump();
st1w( z7.s,  p7, ptr( x4 ) ); dump();
st1w( z7.s,  p7, ptr( x8 ) ); dump();
st1w( z7.s,  p7, ptr( x16 ) ); dump();
st1w( z7.s,  p7, ptr( x30 ) ); dump();
st1w( z7.s,  p7, ptr( sp ) ); dump();
st1w( z7.s,  p7, ptr( x7 ) ); dump();
//SVE_contiguous_store_scalar_plus_immediate2:1
st1w( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z0.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z1.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z2.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z4.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z8.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z16.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z31.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z7.s,  p0, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z7.s,  p1, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z7.s,  p2, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z7.s,  p4, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z7.s,  p7, ptr( x0, 7, MUL_VL ) ); dump();
st1w( z7.s,  p7, ptr( x1, 7, MUL_VL ) ); dump();
st1w( z7.s,  p7, ptr( x2, 7, MUL_VL ) ); dump();
st1w( z7.s,  p7, ptr( x4, 7, MUL_VL ) ); dump();
st1w( z7.s,  p7, ptr( x8, 7, MUL_VL ) ); dump();
st1w( z7.s,  p7, ptr( x16, 7, MUL_VL ) ); dump();
st1w( z7.s,  p7, ptr( x30, 7, MUL_VL ) ); dump();
st1w( z7.s,  p7, ptr( sp, 7, MUL_VL ) ); dump();
st1w( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z7.s,  p7, ptr( x7, -8, MUL_VL ) ); dump();
st1w( z7.s,  p7, ptr( x7, -4, MUL_VL ) ); dump();
st1w( z7.s,  p7, ptr( x7, -2, MUL_VL ) ); dump();
st1w( z7.s,  p7, ptr( x7, -1, MUL_VL ) ); dump();
st1w( z7.s,  p7, ptr( x7, 0, MUL_VL ) ); dump();
st1w( z7.s,  p7, ptr( x7, 1, MUL_VL ) ); dump();
st1w( z7.s,  p7, ptr( x7, 2, MUL_VL ) ); dump();
st1w( z7.s,  p7, ptr( x7, 4, MUL_VL ) ); dump();
st1w( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_store_scalar_plus_immediate2:2
st1w( z7.d,  p7, ptr( x7 ) ); dump();
st1w( z7.d,  p7, ptr( x7 ) ); dump();
st1w( z0.d,  p7, ptr( x7 ) ); dump();
st1w( z1.d,  p7, ptr( x7 ) ); dump();
st1w( z2.d,  p7, ptr( x7 ) ); dump();
st1w( z4.d,  p7, ptr( x7 ) ); dump();
st1w( z8.d,  p7, ptr( x7 ) ); dump();
st1w( z16.d,  p7, ptr( x7 ) ); dump();
st1w( z31.d,  p7, ptr( x7 ) ); dump();
st1w( z7.d,  p7, ptr( x7 ) ); dump();
st1w( z7.d,  p7, ptr( x7 ) ); dump();
st1w( z7.d,  p0, ptr( x7 ) ); dump();
st1w( z7.d,  p1, ptr( x7 ) ); dump();
st1w( z7.d,  p2, ptr( x7 ) ); dump();
st1w( z7.d,  p4, ptr( x7 ) ); dump();
st1w( z7.d,  p7, ptr( x7 ) ); dump();
st1w( z7.d,  p7, ptr( x7 ) ); dump();
st1w( z7.d,  p7, ptr( x0 ) ); dump();
st1w( z7.d,  p7, ptr( x1 ) ); dump();
st1w( z7.d,  p7, ptr( x2 ) ); dump();
st1w( z7.d,  p7, ptr( x4 ) ); dump();
st1w( z7.d,  p7, ptr( x8 ) ); dump();
st1w( z7.d,  p7, ptr( x16 ) ); dump();
st1w( z7.d,  p7, ptr( x30 ) ); dump();
st1w( z7.d,  p7, ptr( sp ) ); dump();
st1w( z7.d,  p7, ptr( x7 ) ); dump();
//SVE_contiguous_store_scalar_plus_immediate2:3
st1w( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z0.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z1.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z2.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z4.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z8.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z16.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z31.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z7.d,  p0, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z7.d,  p1, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z7.d,  p2, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z7.d,  p4, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z7.d,  p7, ptr( x0, 7, MUL_VL ) ); dump();
st1w( z7.d,  p7, ptr( x1, 7, MUL_VL ) ); dump();
st1w( z7.d,  p7, ptr( x2, 7, MUL_VL ) ); dump();
st1w( z7.d,  p7, ptr( x4, 7, MUL_VL ) ); dump();
st1w( z7.d,  p7, ptr( x8, 7, MUL_VL ) ); dump();
st1w( z7.d,  p7, ptr( x16, 7, MUL_VL ) ); dump();
st1w( z7.d,  p7, ptr( x30, 7, MUL_VL ) ); dump();
st1w( z7.d,  p7, ptr( sp, 7, MUL_VL ) ); dump();
st1w( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z7.d,  p7, ptr( x7, -8, MUL_VL ) ); dump();
st1w( z7.d,  p7, ptr( x7, -4, MUL_VL ) ); dump();
st1w( z7.d,  p7, ptr( x7, -2, MUL_VL ) ); dump();
st1w( z7.d,  p7, ptr( x7, -1, MUL_VL ) ); dump();
st1w( z7.d,  p7, ptr( x7, 0, MUL_VL ) ); dump();
st1w( z7.d,  p7, ptr( x7, 1, MUL_VL ) ); dump();
st1w( z7.d,  p7, ptr( x7, 2, MUL_VL ) ); dump();
st1w( z7.d,  p7, ptr( x7, 4, MUL_VL ) ); dump();
st1w( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1w( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_store_scalar_plus_immediate3:0
st1d( z7.d,  p7, ptr( x7 ) ); dump();
st1d( z7.d,  p7, ptr( x7 ) ); dump();
st1d( z0.d,  p7, ptr( x7 ) ); dump();
st1d( z1.d,  p7, ptr( x7 ) ); dump();
st1d( z2.d,  p7, ptr( x7 ) ); dump();
st1d( z4.d,  p7, ptr( x7 ) ); dump();
st1d( z8.d,  p7, ptr( x7 ) ); dump();
st1d( z16.d,  p7, ptr( x7 ) ); dump();
st1d( z31.d,  p7, ptr( x7 ) ); dump();
st1d( z7.d,  p7, ptr( x7 ) ); dump();
st1d( z7.d,  p7, ptr( x7 ) ); dump();
st1d( z7.d,  p0, ptr( x7 ) ); dump();
st1d( z7.d,  p1, ptr( x7 ) ); dump();
st1d( z7.d,  p2, ptr( x7 ) ); dump();
st1d( z7.d,  p4, ptr( x7 ) ); dump();
st1d( z7.d,  p7, ptr( x7 ) ); dump();
st1d( z7.d,  p7, ptr( x7 ) ); dump();
st1d( z7.d,  p7, ptr( x0 ) ); dump();
st1d( z7.d,  p7, ptr( x1 ) ); dump();
st1d( z7.d,  p7, ptr( x2 ) ); dump();
st1d( z7.d,  p7, ptr( x4 ) ); dump();
st1d( z7.d,  p7, ptr( x8 ) ); dump();
st1d( z7.d,  p7, ptr( x16 ) ); dump();
st1d( z7.d,  p7, ptr( x30 ) ); dump();
st1d( z7.d,  p7, ptr( sp ) ); dump();
st1d( z7.d,  p7, ptr( x7 ) ); dump();
//SVE_contiguous_store_scalar_plus_immediate3:1
st1d( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1d( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1d( z0.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1d( z1.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1d( z2.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1d( z4.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1d( z8.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1d( z16.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1d( z31.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1d( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1d( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1d( z7.d,  p0, ptr( x7, 7, MUL_VL ) ); dump();
st1d( z7.d,  p1, ptr( x7, 7, MUL_VL ) ); dump();
st1d( z7.d,  p2, ptr( x7, 7, MUL_VL ) ); dump();
st1d( z7.d,  p4, ptr( x7, 7, MUL_VL ) ); dump();
st1d( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1d( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1d( z7.d,  p7, ptr( x0, 7, MUL_VL ) ); dump();
st1d( z7.d,  p7, ptr( x1, 7, MUL_VL ) ); dump();
st1d( z7.d,  p7, ptr( x2, 7, MUL_VL ) ); dump();
st1d( z7.d,  p7, ptr( x4, 7, MUL_VL ) ); dump();
st1d( z7.d,  p7, ptr( x8, 7, MUL_VL ) ); dump();
st1d( z7.d,  p7, ptr( x16, 7, MUL_VL ) ); dump();
st1d( z7.d,  p7, ptr( x30, 7, MUL_VL ) ); dump();
st1d( z7.d,  p7, ptr( sp, 7, MUL_VL ) ); dump();
st1d( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1d( z7.d,  p7, ptr( x7, -8, MUL_VL ) ); dump();
st1d( z7.d,  p7, ptr( x7, -4, MUL_VL ) ); dump();
st1d( z7.d,  p7, ptr( x7, -2, MUL_VL ) ); dump();
st1d( z7.d,  p7, ptr( x7, -1, MUL_VL ) ); dump();
st1d( z7.d,  p7, ptr( x7, 0, MUL_VL ) ); dump();
st1d( z7.d,  p7, ptr( x7, 1, MUL_VL ) ); dump();
st1d( z7.d,  p7, ptr( x7, 2, MUL_VL ) ); dump();
st1d( z7.d,  p7, ptr( x7, 4, MUL_VL ) ); dump();
st1d( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
st1d( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_non_temporal_store_scalar_plus_scalar0:0
stnt1b( z7.b,  p7, ptr( x7, x0 ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, x0 ) ); dump();
stnt1b( z0.b,  p7, ptr( x7, x0 ) ); dump();
stnt1b( z1.b,  p7, ptr( x7, x0 ) ); dump();
stnt1b( z2.b,  p7, ptr( x7, x0 ) ); dump();
stnt1b( z4.b,  p7, ptr( x7, x0 ) ); dump();
stnt1b( z8.b,  p7, ptr( x7, x0 ) ); dump();
stnt1b( z16.b,  p7, ptr( x7, x0 ) ); dump();
stnt1b( z31.b,  p7, ptr( x7, x0 ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, x0 ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, x0 ) ); dump();
stnt1b( z7.b,  p0, ptr( x7, x0 ) ); dump();
stnt1b( z7.b,  p1, ptr( x7, x0 ) ); dump();
stnt1b( z7.b,  p2, ptr( x7, x0 ) ); dump();
stnt1b( z7.b,  p4, ptr( x7, x0 ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, x0 ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, x0 ) ); dump();
stnt1b( z7.b,  p7, ptr( x0, x0 ) ); dump();
stnt1b( z7.b,  p7, ptr( x1, x0 ) ); dump();
stnt1b( z7.b,  p7, ptr( x2, x0 ) ); dump();
stnt1b( z7.b,  p7, ptr( x4, x0 ) ); dump();
stnt1b( z7.b,  p7, ptr( x8, x0 ) ); dump();
stnt1b( z7.b,  p7, ptr( x16, x0 ) ); dump();
stnt1b( z7.b,  p7, ptr( x30, x0 ) ); dump();
stnt1b( z7.b,  p7, ptr( sp, x0 ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, x0 ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, x1 ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, x2 ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, x4 ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, x8 ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, x16 ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, x30 ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, x0 ) ); dump();
//SVE_contiguous_non_temporal_store_scalar_plus_scalar1:0
stnt1h( z7.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
stnt1h( z0.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
stnt1h( z1.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
stnt1h( z2.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
stnt1h( z4.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
stnt1h( z8.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
stnt1h( z16.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
stnt1h( z31.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
stnt1h( z7.h,  p0, ptr( x7, x0, LSL, 1 ) ); dump();
stnt1h( z7.h,  p1, ptr( x7, x0, LSL, 1 ) ); dump();
stnt1h( z7.h,  p2, ptr( x7, x0, LSL, 1 ) ); dump();
stnt1h( z7.h,  p4, ptr( x7, x0, LSL, 1 ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
stnt1h( z7.h,  p7, ptr( x0, x0, LSL, 1 ) ); dump();
stnt1h( z7.h,  p7, ptr( x1, x0, LSL, 1 ) ); dump();
stnt1h( z7.h,  p7, ptr( x2, x0, LSL, 1 ) ); dump();
stnt1h( z7.h,  p7, ptr( x4, x0, LSL, 1 ) ); dump();
stnt1h( z7.h,  p7, ptr( x8, x0, LSL, 1 ) ); dump();
stnt1h( z7.h,  p7, ptr( x16, x0, LSL, 1 ) ); dump();
stnt1h( z7.h,  p7, ptr( x30, x0, LSL, 1 ) ); dump();
stnt1h( z7.h,  p7, ptr( sp, x0, LSL, 1 ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, x1, LSL, 1 ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, x2, LSL, 1 ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, x4, LSL, 1 ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, x8, LSL, 1 ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, x16, LSL, 1 ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, x30, LSL, 1 ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, x0, LSL, 1 ) ); dump();
//SVE_contiguous_non_temporal_store_scalar_plus_scalar2:0
stnt1w( z7.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
stnt1w( z0.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
stnt1w( z1.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
stnt1w( z2.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
stnt1w( z4.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
stnt1w( z8.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
stnt1w( z16.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
stnt1w( z31.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
stnt1w( z7.s,  p0, ptr( x7, x0, LSL, 2 ) ); dump();
stnt1w( z7.s,  p1, ptr( x7, x0, LSL, 2 ) ); dump();
stnt1w( z7.s,  p2, ptr( x7, x0, LSL, 2 ) ); dump();
stnt1w( z7.s,  p4, ptr( x7, x0, LSL, 2 ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
stnt1w( z7.s,  p7, ptr( x0, x0, LSL, 2 ) ); dump();
stnt1w( z7.s,  p7, ptr( x1, x0, LSL, 2 ) ); dump();
stnt1w( z7.s,  p7, ptr( x2, x0, LSL, 2 ) ); dump();
stnt1w( z7.s,  p7, ptr( x4, x0, LSL, 2 ) ); dump();
stnt1w( z7.s,  p7, ptr( x8, x0, LSL, 2 ) ); dump();
stnt1w( z7.s,  p7, ptr( x16, x0, LSL, 2 ) ); dump();
stnt1w( z7.s,  p7, ptr( x30, x0, LSL, 2 ) ); dump();
stnt1w( z7.s,  p7, ptr( sp, x0, LSL, 2 ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, x1, LSL, 2 ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, x2, LSL, 2 ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, x4, LSL, 2 ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, x8, LSL, 2 ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, x16, LSL, 2 ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, x30, LSL, 2 ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, x0, LSL, 2 ) ); dump();
//SVE_contiguous_non_temporal_store_scalar_plus_scalar3:0
stnt1d( z7.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
stnt1d( z0.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
stnt1d( z1.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
stnt1d( z2.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
stnt1d( z4.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
stnt1d( z8.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
stnt1d( z16.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
stnt1d( z31.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
stnt1d( z7.d,  p0, ptr( x7, x0, LSL, 3 ) ); dump();
stnt1d( z7.d,  p1, ptr( x7, x0, LSL, 3 ) ); dump();
stnt1d( z7.d,  p2, ptr( x7, x0, LSL, 3 ) ); dump();
stnt1d( z7.d,  p4, ptr( x7, x0, LSL, 3 ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
stnt1d( z7.d,  p7, ptr( x0, x0, LSL, 3 ) ); dump();
stnt1d( z7.d,  p7, ptr( x1, x0, LSL, 3 ) ); dump();
stnt1d( z7.d,  p7, ptr( x2, x0, LSL, 3 ) ); dump();
stnt1d( z7.d,  p7, ptr( x4, x0, LSL, 3 ) ); dump();
stnt1d( z7.d,  p7, ptr( x8, x0, LSL, 3 ) ); dump();
stnt1d( z7.d,  p7, ptr( x16, x0, LSL, 3 ) ); dump();
stnt1d( z7.d,  p7, ptr( x30, x0, LSL, 3 ) ); dump();
stnt1d( z7.d,  p7, ptr( sp, x0, LSL, 3 ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, x1, LSL, 3 ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, x2, LSL, 3 ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, x4, LSL, 3 ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, x8, LSL, 3 ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, x16, LSL, 3 ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, x30, LSL, 3 ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, x0, LSL, 3 ) ); dump();
//SVE_64_bit_scatter_store_scalar_plus_unpacked_32_bit_unscaled_offsets0:0
st1b( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1b( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1b( z0.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1b( z1.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1b( z2.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1b( z4.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1b( z8.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1b( z16.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1b( z31.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1b( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1b( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1b( z7.d,  p0, ptr( x7, z7.d, UXT ) ); dump();
st1b( z7.d,  p1, ptr( x7, z7.d, UXT ) ); dump();
st1b( z7.d,  p2, ptr( x7, z7.d, UXT ) ); dump();
st1b( z7.d,  p4, ptr( x7, z7.d, UXT ) ); dump();
st1b( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1b( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1b( z7.d,  p7, ptr( x0, z7.d, UXT ) ); dump();
st1b( z7.d,  p7, ptr( x1, z7.d, UXT ) ); dump();
st1b( z7.d,  p7, ptr( x2, z7.d, UXT ) ); dump();
st1b( z7.d,  p7, ptr( x4, z7.d, UXT ) ); dump();
st1b( z7.d,  p7, ptr( x8, z7.d, UXT ) ); dump();
st1b( z7.d,  p7, ptr( x16, z7.d, UXT ) ); dump();
st1b( z7.d,  p7, ptr( x30, z7.d, UXT ) ); dump();
st1b( z7.d,  p7, ptr( sp, z7.d, UXT ) ); dump();
st1b( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1b( z7.d,  p7, ptr( x7, z0.d, UXT ) ); dump();
st1b( z7.d,  p7, ptr( x7, z1.d, UXT ) ); dump();
st1b( z7.d,  p7, ptr( x7, z2.d, UXT ) ); dump();
st1b( z7.d,  p7, ptr( x7, z4.d, UXT ) ); dump();
st1b( z7.d,  p7, ptr( x7, z8.d, UXT ) ); dump();
st1b( z7.d,  p7, ptr( x7, z16.d, UXT ) ); dump();
st1b( z7.d,  p7, ptr( x7, z31.d, UXT ) ); dump();
st1b( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1b( z7.d,  p7, ptr( x7, z7.d, SXT ) ); dump();
st1b( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1h( z0.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1h( z1.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1h( z2.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1h( z4.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1h( z8.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1h( z16.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1h( z31.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1h( z7.d,  p0, ptr( x7, z7.d, UXT ) ); dump();
st1h( z7.d,  p1, ptr( x7, z7.d, UXT ) ); dump();
st1h( z7.d,  p2, ptr( x7, z7.d, UXT ) ); dump();
st1h( z7.d,  p4, ptr( x7, z7.d, UXT ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1h( z7.d,  p7, ptr( x0, z7.d, UXT ) ); dump();
st1h( z7.d,  p7, ptr( x1, z7.d, UXT ) ); dump();
st1h( z7.d,  p7, ptr( x2, z7.d, UXT ) ); dump();
st1h( z7.d,  p7, ptr( x4, z7.d, UXT ) ); dump();
st1h( z7.d,  p7, ptr( x8, z7.d, UXT ) ); dump();
st1h( z7.d,  p7, ptr( x16, z7.d, UXT ) ); dump();
st1h( z7.d,  p7, ptr( x30, z7.d, UXT ) ); dump();
st1h( z7.d,  p7, ptr( sp, z7.d, UXT ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1h( z7.d,  p7, ptr( x7, z0.d, UXT ) ); dump();
st1h( z7.d,  p7, ptr( x7, z1.d, UXT ) ); dump();
st1h( z7.d,  p7, ptr( x7, z2.d, UXT ) ); dump();
st1h( z7.d,  p7, ptr( x7, z4.d, UXT ) ); dump();
st1h( z7.d,  p7, ptr( x7, z8.d, UXT ) ); dump();
st1h( z7.d,  p7, ptr( x7, z16.d, UXT ) ); dump();
st1h( z7.d,  p7, ptr( x7, z31.d, UXT ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d, SXT ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1w( z0.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1w( z1.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1w( z2.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1w( z4.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1w( z8.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1w( z16.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1w( z31.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1w( z7.d,  p0, ptr( x7, z7.d, UXT ) ); dump();
st1w( z7.d,  p1, ptr( x7, z7.d, UXT ) ); dump();
st1w( z7.d,  p2, ptr( x7, z7.d, UXT ) ); dump();
st1w( z7.d,  p4, ptr( x7, z7.d, UXT ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1w( z7.d,  p7, ptr( x0, z7.d, UXT ) ); dump();
st1w( z7.d,  p7, ptr( x1, z7.d, UXT ) ); dump();
st1w( z7.d,  p7, ptr( x2, z7.d, UXT ) ); dump();
st1w( z7.d,  p7, ptr( x4, z7.d, UXT ) ); dump();
st1w( z7.d,  p7, ptr( x8, z7.d, UXT ) ); dump();
st1w( z7.d,  p7, ptr( x16, z7.d, UXT ) ); dump();
st1w( z7.d,  p7, ptr( x30, z7.d, UXT ) ); dump();
st1w( z7.d,  p7, ptr( sp, z7.d, UXT ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1w( z7.d,  p7, ptr( x7, z0.d, UXT ) ); dump();
st1w( z7.d,  p7, ptr( x7, z1.d, UXT ) ); dump();
st1w( z7.d,  p7, ptr( x7, z2.d, UXT ) ); dump();
st1w( z7.d,  p7, ptr( x7, z4.d, UXT ) ); dump();
st1w( z7.d,  p7, ptr( x7, z8.d, UXT ) ); dump();
st1w( z7.d,  p7, ptr( x7, z16.d, UXT ) ); dump();
st1w( z7.d,  p7, ptr( x7, z31.d, UXT ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d, SXT ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1d( z0.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1d( z1.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1d( z2.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1d( z4.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1d( z8.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1d( z16.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1d( z31.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1d( z7.d,  p0, ptr( x7, z7.d, UXT ) ); dump();
st1d( z7.d,  p1, ptr( x7, z7.d, UXT ) ); dump();
st1d( z7.d,  p2, ptr( x7, z7.d, UXT ) ); dump();
st1d( z7.d,  p4, ptr( x7, z7.d, UXT ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1d( z7.d,  p7, ptr( x0, z7.d, UXT ) ); dump();
st1d( z7.d,  p7, ptr( x1, z7.d, UXT ) ); dump();
st1d( z7.d,  p7, ptr( x2, z7.d, UXT ) ); dump();
st1d( z7.d,  p7, ptr( x4, z7.d, UXT ) ); dump();
st1d( z7.d,  p7, ptr( x8, z7.d, UXT ) ); dump();
st1d( z7.d,  p7, ptr( x16, z7.d, UXT ) ); dump();
st1d( z7.d,  p7, ptr( x30, z7.d, UXT ) ); dump();
st1d( z7.d,  p7, ptr( sp, z7.d, UXT ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1d( z7.d,  p7, ptr( x7, z0.d, UXT ) ); dump();
st1d( z7.d,  p7, ptr( x7, z1.d, UXT ) ); dump();
st1d( z7.d,  p7, ptr( x7, z2.d, UXT ) ); dump();
st1d( z7.d,  p7, ptr( x7, z4.d, UXT ) ); dump();
st1d( z7.d,  p7, ptr( x7, z8.d, UXT ) ); dump();
st1d( z7.d,  p7, ptr( x7, z16.d, UXT ) ); dump();
st1d( z7.d,  p7, ptr( x7, z31.d, UXT ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d, SXT ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d, UXT ) ); dump();
//SVE_64_bit_scatter_store_scalar_plus_64_bit_unscaled_offsets0:0
st1b( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1b( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1b( z0.d,  p7, ptr( x7, z7.d ) ); dump();
st1b( z1.d,  p7, ptr( x7, z7.d ) ); dump();
st1b( z2.d,  p7, ptr( x7, z7.d ) ); dump();
st1b( z4.d,  p7, ptr( x7, z7.d ) ); dump();
st1b( z8.d,  p7, ptr( x7, z7.d ) ); dump();
st1b( z16.d,  p7, ptr( x7, z7.d ) ); dump();
st1b( z31.d,  p7, ptr( x7, z7.d ) ); dump();
st1b( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1b( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1b( z7.d,  p0, ptr( x7, z7.d ) ); dump();
st1b( z7.d,  p1, ptr( x7, z7.d ) ); dump();
st1b( z7.d,  p2, ptr( x7, z7.d ) ); dump();
st1b( z7.d,  p4, ptr( x7, z7.d ) ); dump();
st1b( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1b( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1b( z7.d,  p7, ptr( x0, z7.d ) ); dump();
st1b( z7.d,  p7, ptr( x1, z7.d ) ); dump();
st1b( z7.d,  p7, ptr( x2, z7.d ) ); dump();
st1b( z7.d,  p7, ptr( x4, z7.d ) ); dump();
st1b( z7.d,  p7, ptr( x8, z7.d ) ); dump();
st1b( z7.d,  p7, ptr( x16, z7.d ) ); dump();
st1b( z7.d,  p7, ptr( x30, z7.d ) ); dump();
st1b( z7.d,  p7, ptr( sp, z7.d ) ); dump();
st1b( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1b( z7.d,  p7, ptr( x7, z0.d ) ); dump();
st1b( z7.d,  p7, ptr( x7, z1.d ) ); dump();
st1b( z7.d,  p7, ptr( x7, z2.d ) ); dump();
st1b( z7.d,  p7, ptr( x7, z4.d ) ); dump();
st1b( z7.d,  p7, ptr( x7, z8.d ) ); dump();
st1b( z7.d,  p7, ptr( x7, z16.d ) ); dump();
st1b( z7.d,  p7, ptr( x7, z31.d ) ); dump();
st1b( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1h( z0.d,  p7, ptr( x7, z7.d ) ); dump();
st1h( z1.d,  p7, ptr( x7, z7.d ) ); dump();
st1h( z2.d,  p7, ptr( x7, z7.d ) ); dump();
st1h( z4.d,  p7, ptr( x7, z7.d ) ); dump();
st1h( z8.d,  p7, ptr( x7, z7.d ) ); dump();
st1h( z16.d,  p7, ptr( x7, z7.d ) ); dump();
st1h( z31.d,  p7, ptr( x7, z7.d ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1h( z7.d,  p0, ptr( x7, z7.d ) ); dump();
st1h( z7.d,  p1, ptr( x7, z7.d ) ); dump();
st1h( z7.d,  p2, ptr( x7, z7.d ) ); dump();
st1h( z7.d,  p4, ptr( x7, z7.d ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1h( z7.d,  p7, ptr( x0, z7.d ) ); dump();
st1h( z7.d,  p7, ptr( x1, z7.d ) ); dump();
st1h( z7.d,  p7, ptr( x2, z7.d ) ); dump();
st1h( z7.d,  p7, ptr( x4, z7.d ) ); dump();
st1h( z7.d,  p7, ptr( x8, z7.d ) ); dump();
st1h( z7.d,  p7, ptr( x16, z7.d ) ); dump();
st1h( z7.d,  p7, ptr( x30, z7.d ) ); dump();
st1h( z7.d,  p7, ptr( sp, z7.d ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1h( z7.d,  p7, ptr( x7, z0.d ) ); dump();
st1h( z7.d,  p7, ptr( x7, z1.d ) ); dump();
st1h( z7.d,  p7, ptr( x7, z2.d ) ); dump();
st1h( z7.d,  p7, ptr( x7, z4.d ) ); dump();
st1h( z7.d,  p7, ptr( x7, z8.d ) ); dump();
st1h( z7.d,  p7, ptr( x7, z16.d ) ); dump();
st1h( z7.d,  p7, ptr( x7, z31.d ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1w( z0.d,  p7, ptr( x7, z7.d ) ); dump();
st1w( z1.d,  p7, ptr( x7, z7.d ) ); dump();
st1w( z2.d,  p7, ptr( x7, z7.d ) ); dump();
st1w( z4.d,  p7, ptr( x7, z7.d ) ); dump();
st1w( z8.d,  p7, ptr( x7, z7.d ) ); dump();
st1w( z16.d,  p7, ptr( x7, z7.d ) ); dump();
st1w( z31.d,  p7, ptr( x7, z7.d ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1w( z7.d,  p0, ptr( x7, z7.d ) ); dump();
st1w( z7.d,  p1, ptr( x7, z7.d ) ); dump();
st1w( z7.d,  p2, ptr( x7, z7.d ) ); dump();
st1w( z7.d,  p4, ptr( x7, z7.d ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1w( z7.d,  p7, ptr( x0, z7.d ) ); dump();
st1w( z7.d,  p7, ptr( x1, z7.d ) ); dump();
st1w( z7.d,  p7, ptr( x2, z7.d ) ); dump();
st1w( z7.d,  p7, ptr( x4, z7.d ) ); dump();
st1w( z7.d,  p7, ptr( x8, z7.d ) ); dump();
st1w( z7.d,  p7, ptr( x16, z7.d ) ); dump();
st1w( z7.d,  p7, ptr( x30, z7.d ) ); dump();
st1w( z7.d,  p7, ptr( sp, z7.d ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1w( z7.d,  p7, ptr( x7, z0.d ) ); dump();
st1w( z7.d,  p7, ptr( x7, z1.d ) ); dump();
st1w( z7.d,  p7, ptr( x7, z2.d ) ); dump();
st1w( z7.d,  p7, ptr( x7, z4.d ) ); dump();
st1w( z7.d,  p7, ptr( x7, z8.d ) ); dump();
st1w( z7.d,  p7, ptr( x7, z16.d ) ); dump();
st1w( z7.d,  p7, ptr( x7, z31.d ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1d( z0.d,  p7, ptr( x7, z7.d ) ); dump();
st1d( z1.d,  p7, ptr( x7, z7.d ) ); dump();
st1d( z2.d,  p7, ptr( x7, z7.d ) ); dump();
st1d( z4.d,  p7, ptr( x7, z7.d ) ); dump();
st1d( z8.d,  p7, ptr( x7, z7.d ) ); dump();
st1d( z16.d,  p7, ptr( x7, z7.d ) ); dump();
st1d( z31.d,  p7, ptr( x7, z7.d ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1d( z7.d,  p0, ptr( x7, z7.d ) ); dump();
st1d( z7.d,  p1, ptr( x7, z7.d ) ); dump();
st1d( z7.d,  p2, ptr( x7, z7.d ) ); dump();
st1d( z7.d,  p4, ptr( x7, z7.d ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1d( z7.d,  p7, ptr( x0, z7.d ) ); dump();
st1d( z7.d,  p7, ptr( x1, z7.d ) ); dump();
st1d( z7.d,  p7, ptr( x2, z7.d ) ); dump();
st1d( z7.d,  p7, ptr( x4, z7.d ) ); dump();
st1d( z7.d,  p7, ptr( x8, z7.d ) ); dump();
st1d( z7.d,  p7, ptr( x16, z7.d ) ); dump();
st1d( z7.d,  p7, ptr( x30, z7.d ) ); dump();
st1d( z7.d,  p7, ptr( sp, z7.d ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d ) ); dump();
st1d( z7.d,  p7, ptr( x7, z0.d ) ); dump();
st1d( z7.d,  p7, ptr( x7, z1.d ) ); dump();
st1d( z7.d,  p7, ptr( x7, z2.d ) ); dump();
st1d( z7.d,  p7, ptr( x7, z4.d ) ); dump();
st1d( z7.d,  p7, ptr( x7, z8.d ) ); dump();
st1d( z7.d,  p7, ptr( x7, z16.d ) ); dump();
st1d( z7.d,  p7, ptr( x7, z31.d ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d ) ); dump();
//SVE_contiguous_non_temporal_store_scalar_plus_immeidate0:0
stnt1b( z7.b,  p7, ptr( x7 ) ); dump();
stnt1b( z7.b,  p7, ptr( x7 ) ); dump();
stnt1b( z0.b,  p7, ptr( x7 ) ); dump();
stnt1b( z1.b,  p7, ptr( x7 ) ); dump();
stnt1b( z2.b,  p7, ptr( x7 ) ); dump();
stnt1b( z4.b,  p7, ptr( x7 ) ); dump();
stnt1b( z8.b,  p7, ptr( x7 ) ); dump();
stnt1b( z16.b,  p7, ptr( x7 ) ); dump();
stnt1b( z31.b,  p7, ptr( x7 ) ); dump();
stnt1b( z7.b,  p7, ptr( x7 ) ); dump();
stnt1b( z7.b,  p7, ptr( x7 ) ); dump();
stnt1b( z7.b,  p0, ptr( x7 ) ); dump();
stnt1b( z7.b,  p1, ptr( x7 ) ); dump();
stnt1b( z7.b,  p2, ptr( x7 ) ); dump();
stnt1b( z7.b,  p4, ptr( x7 ) ); dump();
stnt1b( z7.b,  p7, ptr( x7 ) ); dump();
stnt1b( z7.b,  p7, ptr( x7 ) ); dump();
stnt1b( z7.b,  p7, ptr( x0 ) ); dump();
stnt1b( z7.b,  p7, ptr( x1 ) ); dump();
stnt1b( z7.b,  p7, ptr( x2 ) ); dump();
stnt1b( z7.b,  p7, ptr( x4 ) ); dump();
stnt1b( z7.b,  p7, ptr( x8 ) ); dump();
stnt1b( z7.b,  p7, ptr( x16 ) ); dump();
stnt1b( z7.b,  p7, ptr( x30 ) ); dump();
stnt1b( z7.b,  p7, ptr( sp ) ); dump();
stnt1b( z7.b,  p7, ptr( x7 ) ); dump();
//SVE_contiguous_non_temporal_store_scalar_plus_immeidate0:1
stnt1b( z7.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1b( z0.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1b( z1.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1b( z2.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1b( z4.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1b( z8.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1b( z16.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1b( z31.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1b( z7.b,  p0, ptr( x7, 7, MUL_VL ) ); dump();
stnt1b( z7.b,  p1, ptr( x7, 7, MUL_VL ) ); dump();
stnt1b( z7.b,  p2, ptr( x7, 7, MUL_VL ) ); dump();
stnt1b( z7.b,  p4, ptr( x7, 7, MUL_VL ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1b( z7.b,  p7, ptr( x0, 7, MUL_VL ) ); dump();
stnt1b( z7.b,  p7, ptr( x1, 7, MUL_VL ) ); dump();
stnt1b( z7.b,  p7, ptr( x2, 7, MUL_VL ) ); dump();
stnt1b( z7.b,  p7, ptr( x4, 7, MUL_VL ) ); dump();
stnt1b( z7.b,  p7, ptr( x8, 7, MUL_VL ) ); dump();
stnt1b( z7.b,  p7, ptr( x16, 7, MUL_VL ) ); dump();
stnt1b( z7.b,  p7, ptr( x30, 7, MUL_VL ) ); dump();
stnt1b( z7.b,  p7, ptr( sp, 7, MUL_VL ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, -8, MUL_VL ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, -4, MUL_VL ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, -2, MUL_VL ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, -1, MUL_VL ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, 0, MUL_VL ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, 1, MUL_VL ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, 2, MUL_VL ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, 4, MUL_VL ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1b( z7.b,  p7, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_non_temporal_store_scalar_plus_immeidate1:0
stnt1h( z7.h,  p7, ptr( x7 ) ); dump();
stnt1h( z7.h,  p7, ptr( x7 ) ); dump();
stnt1h( z0.h,  p7, ptr( x7 ) ); dump();
stnt1h( z1.h,  p7, ptr( x7 ) ); dump();
stnt1h( z2.h,  p7, ptr( x7 ) ); dump();
stnt1h( z4.h,  p7, ptr( x7 ) ); dump();
stnt1h( z8.h,  p7, ptr( x7 ) ); dump();
stnt1h( z16.h,  p7, ptr( x7 ) ); dump();
stnt1h( z31.h,  p7, ptr( x7 ) ); dump();
stnt1h( z7.h,  p7, ptr( x7 ) ); dump();
stnt1h( z7.h,  p7, ptr( x7 ) ); dump();
stnt1h( z7.h,  p0, ptr( x7 ) ); dump();
stnt1h( z7.h,  p1, ptr( x7 ) ); dump();
stnt1h( z7.h,  p2, ptr( x7 ) ); dump();
stnt1h( z7.h,  p4, ptr( x7 ) ); dump();
stnt1h( z7.h,  p7, ptr( x7 ) ); dump();
stnt1h( z7.h,  p7, ptr( x7 ) ); dump();
stnt1h( z7.h,  p7, ptr( x0 ) ); dump();
stnt1h( z7.h,  p7, ptr( x1 ) ); dump();
stnt1h( z7.h,  p7, ptr( x2 ) ); dump();
stnt1h( z7.h,  p7, ptr( x4 ) ); dump();
stnt1h( z7.h,  p7, ptr( x8 ) ); dump();
stnt1h( z7.h,  p7, ptr( x16 ) ); dump();
stnt1h( z7.h,  p7, ptr( x30 ) ); dump();
stnt1h( z7.h,  p7, ptr( sp ) ); dump();
stnt1h( z7.h,  p7, ptr( x7 ) ); dump();
//SVE_contiguous_non_temporal_store_scalar_plus_immeidate1:1
stnt1h( z7.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1h( z0.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1h( z1.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1h( z2.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1h( z4.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1h( z8.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1h( z16.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1h( z31.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1h( z7.h,  p0, ptr( x7, 7, MUL_VL ) ); dump();
stnt1h( z7.h,  p1, ptr( x7, 7, MUL_VL ) ); dump();
stnt1h( z7.h,  p2, ptr( x7, 7, MUL_VL ) ); dump();
stnt1h( z7.h,  p4, ptr( x7, 7, MUL_VL ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1h( z7.h,  p7, ptr( x0, 7, MUL_VL ) ); dump();
stnt1h( z7.h,  p7, ptr( x1, 7, MUL_VL ) ); dump();
stnt1h( z7.h,  p7, ptr( x2, 7, MUL_VL ) ); dump();
stnt1h( z7.h,  p7, ptr( x4, 7, MUL_VL ) ); dump();
stnt1h( z7.h,  p7, ptr( x8, 7, MUL_VL ) ); dump();
stnt1h( z7.h,  p7, ptr( x16, 7, MUL_VL ) ); dump();
stnt1h( z7.h,  p7, ptr( x30, 7, MUL_VL ) ); dump();
stnt1h( z7.h,  p7, ptr( sp, 7, MUL_VL ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, -8, MUL_VL ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, -4, MUL_VL ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, -2, MUL_VL ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, -1, MUL_VL ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, 0, MUL_VL ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, 1, MUL_VL ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, 2, MUL_VL ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, 4, MUL_VL ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1h( z7.h,  p7, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_non_temporal_store_scalar_plus_immeidate2:0
stnt1w( z7.s,  p7, ptr( x7 ) ); dump();
stnt1w( z7.s,  p7, ptr( x7 ) ); dump();
stnt1w( z0.s,  p7, ptr( x7 ) ); dump();
stnt1w( z1.s,  p7, ptr( x7 ) ); dump();
stnt1w( z2.s,  p7, ptr( x7 ) ); dump();
stnt1w( z4.s,  p7, ptr( x7 ) ); dump();
stnt1w( z8.s,  p7, ptr( x7 ) ); dump();
stnt1w( z16.s,  p7, ptr( x7 ) ); dump();
stnt1w( z31.s,  p7, ptr( x7 ) ); dump();
stnt1w( z7.s,  p7, ptr( x7 ) ); dump();
stnt1w( z7.s,  p7, ptr( x7 ) ); dump();
stnt1w( z7.s,  p0, ptr( x7 ) ); dump();
stnt1w( z7.s,  p1, ptr( x7 ) ); dump();
stnt1w( z7.s,  p2, ptr( x7 ) ); dump();
stnt1w( z7.s,  p4, ptr( x7 ) ); dump();
stnt1w( z7.s,  p7, ptr( x7 ) ); dump();
stnt1w( z7.s,  p7, ptr( x7 ) ); dump();
stnt1w( z7.s,  p7, ptr( x0 ) ); dump();
stnt1w( z7.s,  p7, ptr( x1 ) ); dump();
stnt1w( z7.s,  p7, ptr( x2 ) ); dump();
stnt1w( z7.s,  p7, ptr( x4 ) ); dump();
stnt1w( z7.s,  p7, ptr( x8 ) ); dump();
stnt1w( z7.s,  p7, ptr( x16 ) ); dump();
stnt1w( z7.s,  p7, ptr( x30 ) ); dump();
stnt1w( z7.s,  p7, ptr( sp ) ); dump();
stnt1w( z7.s,  p7, ptr( x7 ) ); dump();
//SVE_contiguous_non_temporal_store_scalar_plus_immeidate2:1
stnt1w( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1w( z0.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1w( z1.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1w( z2.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1w( z4.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1w( z8.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1w( z16.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1w( z31.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1w( z7.s,  p0, ptr( x7, 7, MUL_VL ) ); dump();
stnt1w( z7.s,  p1, ptr( x7, 7, MUL_VL ) ); dump();
stnt1w( z7.s,  p2, ptr( x7, 7, MUL_VL ) ); dump();
stnt1w( z7.s,  p4, ptr( x7, 7, MUL_VL ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1w( z7.s,  p7, ptr( x0, 7, MUL_VL ) ); dump();
stnt1w( z7.s,  p7, ptr( x1, 7, MUL_VL ) ); dump();
stnt1w( z7.s,  p7, ptr( x2, 7, MUL_VL ) ); dump();
stnt1w( z7.s,  p7, ptr( x4, 7, MUL_VL ) ); dump();
stnt1w( z7.s,  p7, ptr( x8, 7, MUL_VL ) ); dump();
stnt1w( z7.s,  p7, ptr( x16, 7, MUL_VL ) ); dump();
stnt1w( z7.s,  p7, ptr( x30, 7, MUL_VL ) ); dump();
stnt1w( z7.s,  p7, ptr( sp, 7, MUL_VL ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, -8, MUL_VL ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, -4, MUL_VL ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, -2, MUL_VL ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, -1, MUL_VL ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, 0, MUL_VL ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, 1, MUL_VL ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, 2, MUL_VL ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, 4, MUL_VL ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1w( z7.s,  p7, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_contiguous_non_temporal_store_scalar_plus_immeidate3:0
stnt1d( z7.d,  p7, ptr( x7 ) ); dump();
stnt1d( z7.d,  p7, ptr( x7 ) ); dump();
stnt1d( z0.d,  p7, ptr( x7 ) ); dump();
stnt1d( z1.d,  p7, ptr( x7 ) ); dump();
stnt1d( z2.d,  p7, ptr( x7 ) ); dump();
stnt1d( z4.d,  p7, ptr( x7 ) ); dump();
stnt1d( z8.d,  p7, ptr( x7 ) ); dump();
stnt1d( z16.d,  p7, ptr( x7 ) ); dump();
stnt1d( z31.d,  p7, ptr( x7 ) ); dump();
stnt1d( z7.d,  p7, ptr( x7 ) ); dump();
stnt1d( z7.d,  p7, ptr( x7 ) ); dump();
stnt1d( z7.d,  p0, ptr( x7 ) ); dump();
stnt1d( z7.d,  p1, ptr( x7 ) ); dump();
stnt1d( z7.d,  p2, ptr( x7 ) ); dump();
stnt1d( z7.d,  p4, ptr( x7 ) ); dump();
stnt1d( z7.d,  p7, ptr( x7 ) ); dump();
stnt1d( z7.d,  p7, ptr( x7 ) ); dump();
stnt1d( z7.d,  p7, ptr( x0 ) ); dump();
stnt1d( z7.d,  p7, ptr( x1 ) ); dump();
stnt1d( z7.d,  p7, ptr( x2 ) ); dump();
stnt1d( z7.d,  p7, ptr( x4 ) ); dump();
stnt1d( z7.d,  p7, ptr( x8 ) ); dump();
stnt1d( z7.d,  p7, ptr( x16 ) ); dump();
stnt1d( z7.d,  p7, ptr( x30 ) ); dump();
stnt1d( z7.d,  p7, ptr( sp ) ); dump();
stnt1d( z7.d,  p7, ptr( x7 ) ); dump();
//SVE_contiguous_non_temporal_store_scalar_plus_immeidate3:1
stnt1d( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1d( z0.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1d( z1.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1d( z2.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1d( z4.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1d( z8.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1d( z16.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1d( z31.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1d( z7.d,  p0, ptr( x7, 7, MUL_VL ) ); dump();
stnt1d( z7.d,  p1, ptr( x7, 7, MUL_VL ) ); dump();
stnt1d( z7.d,  p2, ptr( x7, 7, MUL_VL ) ); dump();
stnt1d( z7.d,  p4, ptr( x7, 7, MUL_VL ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1d( z7.d,  p7, ptr( x0, 7, MUL_VL ) ); dump();
stnt1d( z7.d,  p7, ptr( x1, 7, MUL_VL ) ); dump();
stnt1d( z7.d,  p7, ptr( x2, 7, MUL_VL ) ); dump();
stnt1d( z7.d,  p7, ptr( x4, 7, MUL_VL ) ); dump();
stnt1d( z7.d,  p7, ptr( x8, 7, MUL_VL ) ); dump();
stnt1d( z7.d,  p7, ptr( x16, 7, MUL_VL ) ); dump();
stnt1d( z7.d,  p7, ptr( x30, 7, MUL_VL ) ); dump();
stnt1d( z7.d,  p7, ptr( sp, 7, MUL_VL ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, -8, MUL_VL ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, -4, MUL_VL ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, -2, MUL_VL ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, -1, MUL_VL ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, 0, MUL_VL ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, 1, MUL_VL ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, 2, MUL_VL ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, 4, MUL_VL ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
stnt1d( z7.d,  p7, ptr( x7, 7, MUL_VL ) ); dump();
//SVE_64_bit_scatter_store_scalar_plus_unpacked_32_bit_scaled_offsets0:0
st1h( z7.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z0.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z1.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z2.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z4.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z8.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z16.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z31.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p0, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p1, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p2, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p4, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x0, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x1, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x2, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x4, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x8, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x16, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x30, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( sp, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z0.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z1.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z2.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z4.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z8.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z16.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z31.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d, SXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
//SVE_64_bit_scatter_store_scalar_plus_unpacked_32_bit_scaled_offsets1:0
st1w( z7.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z0.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z1.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z2.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z4.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z8.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z16.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z31.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p0, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p1, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p2, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p4, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x0, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x1, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x2, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x4, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x8, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x16, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x30, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( sp, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z0.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z1.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z2.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z4.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z8.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z16.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z31.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d, SXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
//SVE_64_bit_scatter_store_scalar_plus_unpacked_32_bit_scaled_offsets2:0
st1d( z7.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z0.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z1.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z2.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z4.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z8.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z16.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z31.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p0, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p1, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p2, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p4, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x0, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x1, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x2, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x4, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x8, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x16, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x30, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( sp, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z0.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z1.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z2.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z4.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z8.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z16.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z31.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d, SXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
//SVE_64_bit_scatter_store_scalar_plus_64_bit_scaled_offsets0:0
st1h( z7.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z0.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z1.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z2.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z4.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z8.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z16.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z31.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p0, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p1, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p2, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p4, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x0, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x1, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x2, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x4, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x8, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x16, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x30, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( sp, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z0.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z1.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z2.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z4.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z8.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z16.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z31.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d, SXTW, 1 ) ); dump();
st1h( z7.d,  p7, ptr( x7, z7.d, UXTW, 1 ) ); dump();
//SVE_64_bit_scatter_store_scalar_plus_64_bit_scaled_offsets1:0
st1w( z7.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z0.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z1.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z2.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z4.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z8.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z16.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z31.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p0, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p1, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p2, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p4, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x0, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x1, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x2, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x4, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x8, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x16, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x30, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( sp, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z0.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z1.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z2.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z4.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z8.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z16.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z31.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d, SXTW, 2 ) ); dump();
st1w( z7.d,  p7, ptr( x7, z7.d, UXTW, 2 ) ); dump();
//SVE_64_bit_scatter_store_scalar_plus_64_bit_scaled_offsets2:0
st1d( z7.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z0.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z1.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z2.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z4.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z8.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z16.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z31.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p0, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p1, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p2, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p4, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x0, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x1, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x2, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x4, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x8, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x16, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x30, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( sp, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z0.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z1.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z2.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z4.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z8.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z16.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z31.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d, SXTW, 3 ) ); dump();
st1d( z7.d,  p7, ptr( x7, z7.d, UXTW, 3 ) ); dump();
//SVE_32_bit_scatter_store_scalar_plus_32_bit_unscaled_offsets0:0
st1b( z7.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1b( z7.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1b( z0.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1b( z1.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1b( z2.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1b( z4.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1b( z8.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1b( z16.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1b( z31.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1b( z7.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1b( z7.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1b( z7.s,  p0, ptr( x7, z7.s, UXT ) ); dump();
st1b( z7.s,  p1, ptr( x7, z7.s, UXT ) ); dump();
st1b( z7.s,  p2, ptr( x7, z7.s, UXT ) ); dump();
st1b( z7.s,  p4, ptr( x7, z7.s, UXT ) ); dump();
st1b( z7.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1b( z7.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1b( z7.s,  p7, ptr( x0, z7.s, UXT ) ); dump();
st1b( z7.s,  p7, ptr( x1, z7.s, UXT ) ); dump();
st1b( z7.s,  p7, ptr( x2, z7.s, UXT ) ); dump();
st1b( z7.s,  p7, ptr( x4, z7.s, UXT ) ); dump();
st1b( z7.s,  p7, ptr( x8, z7.s, UXT ) ); dump();
st1b( z7.s,  p7, ptr( x16, z7.s, UXT ) ); dump();
st1b( z7.s,  p7, ptr( x30, z7.s, UXT ) ); dump();
st1b( z7.s,  p7, ptr( sp, z7.s, UXT ) ); dump();
st1b( z7.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1b( z7.s,  p7, ptr( x7, z0.s, UXT ) ); dump();
st1b( z7.s,  p7, ptr( x7, z1.s, UXT ) ); dump();
st1b( z7.s,  p7, ptr( x7, z2.s, UXT ) ); dump();
st1b( z7.s,  p7, ptr( x7, z4.s, UXT ) ); dump();
st1b( z7.s,  p7, ptr( x7, z8.s, UXT ) ); dump();
st1b( z7.s,  p7, ptr( x7, z16.s, UXT ) ); dump();
st1b( z7.s,  p7, ptr( x7, z31.s, UXT ) ); dump();
st1b( z7.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1b( z7.s,  p7, ptr( x7, z7.s, SXT ) ); dump();
st1b( z7.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
//SVE_32_bit_scatter_store_scalar_plus_32_bit_unscaled_offsets1:0
st1h( z7.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1h( z7.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1h( z0.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1h( z1.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1h( z2.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1h( z4.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1h( z8.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1h( z16.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1h( z31.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1h( z7.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1h( z7.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1h( z7.s,  p0, ptr( x7, z7.s, UXT ) ); dump();
st1h( z7.s,  p1, ptr( x7, z7.s, UXT ) ); dump();
st1h( z7.s,  p2, ptr( x7, z7.s, UXT ) ); dump();
st1h( z7.s,  p4, ptr( x7, z7.s, UXT ) ); dump();
st1h( z7.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1h( z7.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1h( z7.s,  p7, ptr( x0, z7.s, UXT ) ); dump();
st1h( z7.s,  p7, ptr( x1, z7.s, UXT ) ); dump();
st1h( z7.s,  p7, ptr( x2, z7.s, UXT ) ); dump();
st1h( z7.s,  p7, ptr( x4, z7.s, UXT ) ); dump();
st1h( z7.s,  p7, ptr( x8, z7.s, UXT ) ); dump();
st1h( z7.s,  p7, ptr( x16, z7.s, UXT ) ); dump();
st1h( z7.s,  p7, ptr( x30, z7.s, UXT ) ); dump();
st1h( z7.s,  p7, ptr( sp, z7.s, UXT ) ); dump();
st1h( z7.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1h( z7.s,  p7, ptr( x7, z0.s, UXT ) ); dump();
st1h( z7.s,  p7, ptr( x7, z1.s, UXT ) ); dump();
st1h( z7.s,  p7, ptr( x7, z2.s, UXT ) ); dump();
st1h( z7.s,  p7, ptr( x7, z4.s, UXT ) ); dump();
st1h( z7.s,  p7, ptr( x7, z8.s, UXT ) ); dump();
st1h( z7.s,  p7, ptr( x7, z16.s, UXT ) ); dump();
st1h( z7.s,  p7, ptr( x7, z31.s, UXT ) ); dump();
st1h( z7.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1h( z7.s,  p7, ptr( x7, z7.s, SXT ) ); dump();
st1h( z7.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
//SVE_32_bit_scatter_store_scalar_plus_32_bit_unscaled_offsets2:0
st1w( z7.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1w( z7.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1w( z0.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1w( z1.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1w( z2.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1w( z4.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1w( z8.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1w( z16.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1w( z31.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1w( z7.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1w( z7.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1w( z7.s,  p0, ptr( x7, z7.s, UXT ) ); dump();
st1w( z7.s,  p1, ptr( x7, z7.s, UXT ) ); dump();
st1w( z7.s,  p2, ptr( x7, z7.s, UXT ) ); dump();
st1w( z7.s,  p4, ptr( x7, z7.s, UXT ) ); dump();
st1w( z7.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1w( z7.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1w( z7.s,  p7, ptr( x0, z7.s, UXT ) ); dump();
st1w( z7.s,  p7, ptr( x1, z7.s, UXT ) ); dump();
st1w( z7.s,  p7, ptr( x2, z7.s, UXT ) ); dump();
st1w( z7.s,  p7, ptr( x4, z7.s, UXT ) ); dump();
st1w( z7.s,  p7, ptr( x8, z7.s, UXT ) ); dump();
st1w( z7.s,  p7, ptr( x16, z7.s, UXT ) ); dump();
st1w( z7.s,  p7, ptr( x30, z7.s, UXT ) ); dump();
st1w( z7.s,  p7, ptr( sp, z7.s, UXT ) ); dump();
st1w( z7.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1w( z7.s,  p7, ptr( x7, z0.s, UXT ) ); dump();
st1w( z7.s,  p7, ptr( x7, z1.s, UXT ) ); dump();
st1w( z7.s,  p7, ptr( x7, z2.s, UXT ) ); dump();
st1w( z7.s,  p7, ptr( x7, z4.s, UXT ) ); dump();
st1w( z7.s,  p7, ptr( x7, z8.s, UXT ) ); dump();
st1w( z7.s,  p7, ptr( x7, z16.s, UXT ) ); dump();
st1w( z7.s,  p7, ptr( x7, z31.s, UXT ) ); dump();
st1w( z7.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
st1w( z7.s,  p7, ptr( x7, z7.s, SXT ) ); dump();
st1w( z7.s,  p7, ptr( x7, z7.s, UXT ) ); dump();
//SVE_64_bit_scatter_store_vector_plus_immediate0:0
st1b( z7.d,  p7, ptr( z7.d ) ); dump();
st1b( z7.d,  p7, ptr( z7.d ) ); dump();
st1b( z0.d,  p7, ptr( z7.d ) ); dump();
st1b( z1.d,  p7, ptr( z7.d ) ); dump();
st1b( z2.d,  p7, ptr( z7.d ) ); dump();
st1b( z4.d,  p7, ptr( z7.d ) ); dump();
st1b( z8.d,  p7, ptr( z7.d ) ); dump();
st1b( z16.d,  p7, ptr( z7.d ) ); dump();
st1b( z31.d,  p7, ptr( z7.d ) ); dump();
st1b( z7.d,  p7, ptr( z7.d ) ); dump();
st1b( z7.d,  p7, ptr( z7.d ) ); dump();
st1b( z7.d,  p0, ptr( z7.d ) ); dump();
st1b( z7.d,  p1, ptr( z7.d ) ); dump();
st1b( z7.d,  p2, ptr( z7.d ) ); dump();
st1b( z7.d,  p4, ptr( z7.d ) ); dump();
st1b( z7.d,  p7, ptr( z7.d ) ); dump();
st1b( z7.d,  p7, ptr( z7.d ) ); dump();
st1b( z7.d,  p7, ptr( z0.d ) ); dump();
st1b( z7.d,  p7, ptr( z1.d ) ); dump();
st1b( z7.d,  p7, ptr( z2.d ) ); dump();
st1b( z7.d,  p7, ptr( z4.d ) ); dump();
st1b( z7.d,  p7, ptr( z8.d ) ); dump();
st1b( z7.d,  p7, ptr( z16.d ) ); dump();
st1b( z7.d,  p7, ptr( z31.d ) ); dump();
st1b( z7.d,  p7, ptr( z7.d ) ); dump();
//SVE_64_bit_scatter_store_vector_plus_immediate0:1
st1b( z7.d,  p7, ptr( z7.d, 0x1e ) ); dump();
st1b( z7.d,  p7, ptr( z7.d, 0x1e ) ); dump();
st1b( z0.d,  p7, ptr( z7.d, 0x1e ) ); dump();
st1b( z1.d,  p7, ptr( z7.d, 0x1e ) ); dump();
st1b( z2.d,  p7, ptr( z7.d, 0x1e ) ); dump();
st1b( z4.d,  p7, ptr( z7.d, 0x1e ) ); dump();
st1b( z8.d,  p7, ptr( z7.d, 0x1e ) ); dump();
st1b( z16.d,  p7, ptr( z7.d, 0x1e ) ); dump();
st1b( z31.d,  p7, ptr( z7.d, 0x1e ) ); dump();
st1b( z7.d,  p7, ptr( z7.d, 0x1e ) ); dump();
st1b( z7.d,  p7, ptr( z7.d, 0x1e ) ); dump();
st1b( z7.d,  p0, ptr( z7.d, 0x1e ) ); dump();
st1b( z7.d,  p1, ptr( z7.d, 0x1e ) ); dump();
st1b( z7.d,  p2, ptr( z7.d, 0x1e ) ); dump();
st1b( z7.d,  p4, ptr( z7.d, 0x1e ) ); dump();
st1b( z7.d,  p7, ptr( z7.d, 0x1e ) ); dump();
st1b( z7.d,  p7, ptr( z7.d, 0x1e ) ); dump();
st1b( z7.d,  p7, ptr( z0.d, 0x1e ) ); dump();
st1b( z7.d,  p7, ptr( z1.d, 0x1e ) ); dump();
st1b( z7.d,  p7, ptr( z2.d, 0x1e ) ); dump();
st1b( z7.d,  p7, ptr( z4.d, 0x1e ) ); dump();
st1b( z7.d,  p7, ptr( z8.d, 0x1e ) ); dump();
st1b( z7.d,  p7, ptr( z16.d, 0x1e ) ); dump();
st1b( z7.d,  p7, ptr( z31.d, 0x1e ) ); dump();
st1b( z7.d,  p7, ptr( z7.d, 0x1e ) ); dump();
st1b( z7.d,  p7, ptr( z7.d, 0 ) ); dump();
st1b( z7.d,  p7, ptr( z7.d, 1 ) ); dump();
st1b( z7.d,  p7, ptr( z7.d, 2 ) ); dump();
st1b( z7.d,  p7, ptr( z7.d, 4 ) ); dump();
st1b( z7.d,  p7, ptr( z7.d, 8 ) ); dump();
st1b( z7.d,  p7, ptr( z7.d, 16 ) ); dump();
st1b( z7.d,  p7, ptr( z7.d, 31 ) ); dump();
st1b( z7.d,  p7, ptr( z7.d, 0x1e ) ); dump();
//SVE_64_bit_scatter_store_vector_plus_immediate1:0
st1h( z7.d,  p7, ptr( z7.d ) ); dump();
st1h( z7.d,  p7, ptr( z7.d ) ); dump();
st1h( z0.d,  p7, ptr( z7.d ) ); dump();
st1h( z1.d,  p7, ptr( z7.d ) ); dump();
st1h( z2.d,  p7, ptr( z7.d ) ); dump();
st1h( z4.d,  p7, ptr( z7.d ) ); dump();
st1h( z8.d,  p7, ptr( z7.d ) ); dump();
st1h( z16.d,  p7, ptr( z7.d ) ); dump();
st1h( z31.d,  p7, ptr( z7.d ) ); dump();
st1h( z7.d,  p7, ptr( z7.d ) ); dump();
st1h( z7.d,  p7, ptr( z7.d ) ); dump();
st1h( z7.d,  p0, ptr( z7.d ) ); dump();
st1h( z7.d,  p1, ptr( z7.d ) ); dump();
st1h( z7.d,  p2, ptr( z7.d ) ); dump();
st1h( z7.d,  p4, ptr( z7.d ) ); dump();
st1h( z7.d,  p7, ptr( z7.d ) ); dump();
st1h( z7.d,  p7, ptr( z7.d ) ); dump();
st1h( z7.d,  p7, ptr( z0.d ) ); dump();
st1h( z7.d,  p7, ptr( z1.d ) ); dump();
st1h( z7.d,  p7, ptr( z2.d ) ); dump();
st1h( z7.d,  p7, ptr( z4.d ) ); dump();
st1h( z7.d,  p7, ptr( z8.d ) ); dump();
st1h( z7.d,  p7, ptr( z16.d ) ); dump();
st1h( z7.d,  p7, ptr( z31.d ) ); dump();
st1h( z7.d,  p7, ptr( z7.d ) ); dump();
//SVE_64_bit_scatter_store_vector_plus_immediate1:1
st1h( z7.d,  p7, ptr( z7.d, 30 ) ); dump();
st1h( z7.d,  p7, ptr( z7.d, 30 ) ); dump();
st1h( z0.d,  p7, ptr( z7.d, 30 ) ); dump();
st1h( z1.d,  p7, ptr( z7.d, 30 ) ); dump();
st1h( z2.d,  p7, ptr( z7.d, 30 ) ); dump();
st1h( z4.d,  p7, ptr( z7.d, 30 ) ); dump();
st1h( z8.d,  p7, ptr( z7.d, 30 ) ); dump();
st1h( z16.d,  p7, ptr( z7.d, 30 ) ); dump();
st1h( z31.d,  p7, ptr( z7.d, 30 ) ); dump();
st1h( z7.d,  p7, ptr( z7.d, 30 ) ); dump();
st1h( z7.d,  p7, ptr( z7.d, 30 ) ); dump();
st1h( z7.d,  p0, ptr( z7.d, 30 ) ); dump();
st1h( z7.d,  p1, ptr( z7.d, 30 ) ); dump();
st1h( z7.d,  p2, ptr( z7.d, 30 ) ); dump();
st1h( z7.d,  p4, ptr( z7.d, 30 ) ); dump();
st1h( z7.d,  p7, ptr( z7.d, 30 ) ); dump();
st1h( z7.d,  p7, ptr( z7.d, 30 ) ); dump();
st1h( z7.d,  p7, ptr( z0.d, 30 ) ); dump();
st1h( z7.d,  p7, ptr( z1.d, 30 ) ); dump();
st1h( z7.d,  p7, ptr( z2.d, 30 ) ); dump();
st1h( z7.d,  p7, ptr( z4.d, 30 ) ); dump();
st1h( z7.d,  p7, ptr( z8.d, 30 ) ); dump();
st1h( z7.d,  p7, ptr( z16.d, 30 ) ); dump();
st1h( z7.d,  p7, ptr( z31.d, 30 ) ); dump();
st1h( z7.d,  p7, ptr( z7.d, 30 ) ); dump();
st1h( z7.d,  p7, ptr( z7.d, 0 ) ); dump();
st1h( z7.d,  p7, ptr( z7.d, 2 ) ); dump();
st1h( z7.d,  p7, ptr( z7.d, 4 ) ); dump();
st1h( z7.d,  p7, ptr( z7.d, 8 ) ); dump();
st1h( z7.d,  p7, ptr( z7.d, 16 ) ); dump();
st1h( z7.d,  p7, ptr( z7.d, 32 ) ); dump();
st1h( z7.d,  p7, ptr( z7.d, 62 ) ); dump();
st1h( z7.d,  p7, ptr( z7.d, 30 ) ); dump();
//SVE_64_bit_scatter_store_vector_plus_immediate2:0
st1w( z7.d,  p7, ptr( z7.d ) ); dump();
st1w( z7.d,  p7, ptr( z7.d ) ); dump();
st1w( z0.d,  p7, ptr( z7.d ) ); dump();
st1w( z1.d,  p7, ptr( z7.d ) ); dump();
st1w( z2.d,  p7, ptr( z7.d ) ); dump();
st1w( z4.d,  p7, ptr( z7.d ) ); dump();
st1w( z8.d,  p7, ptr( z7.d ) ); dump();
st1w( z16.d,  p7, ptr( z7.d ) ); dump();
st1w( z31.d,  p7, ptr( z7.d ) ); dump();
st1w( z7.d,  p7, ptr( z7.d ) ); dump();
st1w( z7.d,  p7, ptr( z7.d ) ); dump();
st1w( z7.d,  p0, ptr( z7.d ) ); dump();
st1w( z7.d,  p1, ptr( z7.d ) ); dump();
st1w( z7.d,  p2, ptr( z7.d ) ); dump();
st1w( z7.d,  p4, ptr( z7.d ) ); dump();
st1w( z7.d,  p7, ptr( z7.d ) ); dump();
st1w( z7.d,  p7, ptr( z7.d ) ); dump();
st1w( z7.d,  p7, ptr( z0.d ) ); dump();
st1w( z7.d,  p7, ptr( z1.d ) ); dump();
st1w( z7.d,  p7, ptr( z2.d ) ); dump();
st1w( z7.d,  p7, ptr( z4.d ) ); dump();
st1w( z7.d,  p7, ptr( z8.d ) ); dump();
st1w( z7.d,  p7, ptr( z16.d ) ); dump();
st1w( z7.d,  p7, ptr( z31.d ) ); dump();
st1w( z7.d,  p7, ptr( z7.d ) ); dump();
//SVE_64_bit_scatter_store_vector_plus_immediate2:1
st1w( z7.d,  p7, ptr( z7.d, 60 ) ); dump();
st1w( z7.d,  p7, ptr( z7.d, 60 ) ); dump();
st1w( z0.d,  p7, ptr( z7.d, 60 ) ); dump();
st1w( z1.d,  p7, ptr( z7.d, 60 ) ); dump();
st1w( z2.d,  p7, ptr( z7.d, 60 ) ); dump();
st1w( z4.d,  p7, ptr( z7.d, 60 ) ); dump();
st1w( z8.d,  p7, ptr( z7.d, 60 ) ); dump();
st1w( z16.d,  p7, ptr( z7.d, 60 ) ); dump();
st1w( z31.d,  p7, ptr( z7.d, 60 ) ); dump();
st1w( z7.d,  p7, ptr( z7.d, 60 ) ); dump();
st1w( z7.d,  p7, ptr( z7.d, 60 ) ); dump();
st1w( z7.d,  p0, ptr( z7.d, 60 ) ); dump();
st1w( z7.d,  p1, ptr( z7.d, 60 ) ); dump();
st1w( z7.d,  p2, ptr( z7.d, 60 ) ); dump();
st1w( z7.d,  p4, ptr( z7.d, 60 ) ); dump();
st1w( z7.d,  p7, ptr( z7.d, 60 ) ); dump();
st1w( z7.d,  p7, ptr( z7.d, 60 ) ); dump();
st1w( z7.d,  p7, ptr( z0.d, 60 ) ); dump();
st1w( z7.d,  p7, ptr( z1.d, 60 ) ); dump();
st1w( z7.d,  p7, ptr( z2.d, 60 ) ); dump();
st1w( z7.d,  p7, ptr( z4.d, 60 ) ); dump();
st1w( z7.d,  p7, ptr( z8.d, 60 ) ); dump();
st1w( z7.d,  p7, ptr( z16.d, 60 ) ); dump();
st1w( z7.d,  p7, ptr( z31.d, 60 ) ); dump();
st1w( z7.d,  p7, ptr( z7.d, 60 ) ); dump();
st1w( z7.d,  p7, ptr( z7.d, 0 ) ); dump();
st1w( z7.d,  p7, ptr( z7.d, 4 ) ); dump();
st1w( z7.d,  p7, ptr( z7.d, 8 ) ); dump();
st1w( z7.d,  p7, ptr( z7.d, 16 ) ); dump();
st1w( z7.d,  p7, ptr( z7.d, 32 ) ); dump();
st1w( z7.d,  p7, ptr( z7.d, 64 ) ); dump();
st1w( z7.d,  p7, ptr( z7.d, 124 ) ); dump();
st1w( z7.d,  p7, ptr( z7.d, 60 ) ); dump();
//SVE_64_bit_scatter_store_vector_plus_immediate3:0
st1d( z7.d,  p7, ptr( z7.d ) ); dump();
st1d( z7.d,  p7, ptr( z7.d ) ); dump();
st1d( z0.d,  p7, ptr( z7.d ) ); dump();
st1d( z1.d,  p7, ptr( z7.d ) ); dump();
st1d( z2.d,  p7, ptr( z7.d ) ); dump();
st1d( z4.d,  p7, ptr( z7.d ) ); dump();
st1d( z8.d,  p7, ptr( z7.d ) ); dump();
st1d( z16.d,  p7, ptr( z7.d ) ); dump();
st1d( z31.d,  p7, ptr( z7.d ) ); dump();
st1d( z7.d,  p7, ptr( z7.d ) ); dump();
st1d( z7.d,  p7, ptr( z7.d ) ); dump();
st1d( z7.d,  p0, ptr( z7.d ) ); dump();
st1d( z7.d,  p1, ptr( z7.d ) ); dump();
st1d( z7.d,  p2, ptr( z7.d ) ); dump();
st1d( z7.d,  p4, ptr( z7.d ) ); dump();
st1d( z7.d,  p7, ptr( z7.d ) ); dump();
st1d( z7.d,  p7, ptr( z7.d ) ); dump();
st1d( z7.d,  p7, ptr( z0.d ) ); dump();
st1d( z7.d,  p7, ptr( z1.d ) ); dump();
st1d( z7.d,  p7, ptr( z2.d ) ); dump();
st1d( z7.d,  p7, ptr( z4.d ) ); dump();
st1d( z7.d,  p7, ptr( z8.d ) ); dump();
st1d( z7.d,  p7, ptr( z16.d ) ); dump();
st1d( z7.d,  p7, ptr( z31.d ) ); dump();
st1d( z7.d,  p7, ptr( z7.d ) ); dump();
//SVE_64_bit_scatter_store_vector_plus_immediate3:1
st1d( z7.d,  p7, ptr( z7.d, 120 ) ); dump();
st1d( z7.d,  p7, ptr( z7.d, 120 ) ); dump();
st1d( z0.d,  p7, ptr( z7.d, 120 ) ); dump();
st1d( z1.d,  p7, ptr( z7.d, 120 ) ); dump();
st1d( z2.d,  p7, ptr( z7.d, 120 ) ); dump();
st1d( z4.d,  p7, ptr( z7.d, 120 ) ); dump();
st1d( z8.d,  p7, ptr( z7.d, 120 ) ); dump();
st1d( z16.d,  p7, ptr( z7.d, 120 ) ); dump();
st1d( z31.d,  p7, ptr( z7.d, 120 ) ); dump();
st1d( z7.d,  p7, ptr( z7.d, 120 ) ); dump();
st1d( z7.d,  p7, ptr( z7.d, 120 ) ); dump();
st1d( z7.d,  p0, ptr( z7.d, 120 ) ); dump();
st1d( z7.d,  p1, ptr( z7.d, 120 ) ); dump();
st1d( z7.d,  p2, ptr( z7.d, 120 ) ); dump();
st1d( z7.d,  p4, ptr( z7.d, 120 ) ); dump();
st1d( z7.d,  p7, ptr( z7.d, 120 ) ); dump();
st1d( z7.d,  p7, ptr( z7.d, 120 ) ); dump();
st1d( z7.d,  p7, ptr( z0.d, 120 ) ); dump();
st1d( z7.d,  p7, ptr( z1.d, 120 ) ); dump();
st1d( z7.d,  p7, ptr( z2.d, 120 ) ); dump();
st1d( z7.d,  p7, ptr( z4.d, 120 ) ); dump();
st1d( z7.d,  p7, ptr( z8.d, 120 ) ); dump();
st1d( z7.d,  p7, ptr( z16.d, 120 ) ); dump();
st1d( z7.d,  p7, ptr( z31.d, 120 ) ); dump();
st1d( z7.d,  p7, ptr( z7.d, 120 ) ); dump();
st1d( z7.d,  p7, ptr( z7.d, 0 ) ); dump();
st1d( z7.d,  p7, ptr( z7.d, 8 ) ); dump();
st1d( z7.d,  p7, ptr( z7.d, 16 ) ); dump();
st1d( z7.d,  p7, ptr( z7.d, 32 ) ); dump();
st1d( z7.d,  p7, ptr( z7.d, 64 ) ); dump();
st1d( z7.d,  p7, ptr( z7.d, 128 ) ); dump();
st1d( z7.d,  p7, ptr( z7.d, 248 ) ); dump();
st1d( z7.d,  p7, ptr( z7.d, 120 ) ); dump();
//SVE_32_bit_scatter_store_scalar_plus_32_bit_scaled_offsets0:0
st1h( z7.s,  p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
st1h( z0.s,  p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
st1h( z1.s,  p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
st1h( z2.s,  p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
st1h( z4.s,  p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
st1h( z8.s,  p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
st1h( z16.s,  p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
st1h( z31.s,  p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
st1h( z7.s,  p0, ptr( x7, z7.s, UXTW, 1 ) ); dump();
st1h( z7.s,  p1, ptr( x7, z7.s, UXTW, 1 ) ); dump();
st1h( z7.s,  p2, ptr( x7, z7.s, UXTW, 1 ) ); dump();
st1h( z7.s,  p4, ptr( x7, z7.s, UXTW, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x0, z7.s, UXTW, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x1, z7.s, UXTW, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x2, z7.s, UXTW, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x4, z7.s, UXTW, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x8, z7.s, UXTW, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x16, z7.s, UXTW, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x30, z7.s, UXTW, 1 ) ); dump();
st1h( z7.s,  p7, ptr( sp, z7.s, UXTW, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, z0.s, UXTW, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, z1.s, UXTW, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, z2.s, UXTW, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, z4.s, UXTW, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, z8.s, UXTW, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, z16.s, UXTW, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, z31.s, UXTW, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, z7.s, SXTW, 1 ) ); dump();
st1h( z7.s,  p7, ptr( x7, z7.s, UXTW, 1 ) ); dump();
//SVE_32_bit_scatter_store_scalar_plus_32_bit_scaled_offsets1:0
st1w( z7.s,  p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
st1w( z0.s,  p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
st1w( z1.s,  p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
st1w( z2.s,  p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
st1w( z4.s,  p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
st1w( z8.s,  p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
st1w( z16.s,  p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
st1w( z31.s,  p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
st1w( z7.s,  p0, ptr( x7, z7.s, UXTW, 2 ) ); dump();
st1w( z7.s,  p1, ptr( x7, z7.s, UXTW, 2 ) ); dump();
st1w( z7.s,  p2, ptr( x7, z7.s, UXTW, 2 ) ); dump();
st1w( z7.s,  p4, ptr( x7, z7.s, UXTW, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x0, z7.s, UXTW, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x1, z7.s, UXTW, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x2, z7.s, UXTW, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x4, z7.s, UXTW, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x8, z7.s, UXTW, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x16, z7.s, UXTW, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x30, z7.s, UXTW, 2 ) ); dump();
st1w( z7.s,  p7, ptr( sp, z7.s, UXTW, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, z0.s, UXTW, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, z1.s, UXTW, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, z2.s, UXTW, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, z4.s, UXTW, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, z8.s, UXTW, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, z16.s, UXTW, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, z31.s, UXTW, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, z7.s, SXTW, 2 ) ); dump();
st1w( z7.s,  p7, ptr( x7, z7.s, UXTW, 2 ) ); dump();
//SVE_32_bit_scatter_store_vector_plus_immediate0:0
st1b( z7.s,  p7, ptr( z7.s ) ); dump();
st1b( z7.s,  p7, ptr( z7.s ) ); dump();
st1b( z0.s,  p7, ptr( z7.s ) ); dump();
st1b( z1.s,  p7, ptr( z7.s ) ); dump();
st1b( z2.s,  p7, ptr( z7.s ) ); dump();
st1b( z4.s,  p7, ptr( z7.s ) ); dump();
st1b( z8.s,  p7, ptr( z7.s ) ); dump();
st1b( z16.s,  p7, ptr( z7.s ) ); dump();
st1b( z31.s,  p7, ptr( z7.s ) ); dump();
st1b( z7.s,  p7, ptr( z7.s ) ); dump();
st1b( z7.s,  p7, ptr( z7.s ) ); dump();
st1b( z7.s,  p0, ptr( z7.s ) ); dump();
st1b( z7.s,  p1, ptr( z7.s ) ); dump();
st1b( z7.s,  p2, ptr( z7.s ) ); dump();
st1b( z7.s,  p4, ptr( z7.s ) ); dump();
st1b( z7.s,  p7, ptr( z7.s ) ); dump();
st1b( z7.s,  p7, ptr( z7.s ) ); dump();
st1b( z7.s,  p7, ptr( z0.s ) ); dump();
st1b( z7.s,  p7, ptr( z1.s ) ); dump();
st1b( z7.s,  p7, ptr( z2.s ) ); dump();
st1b( z7.s,  p7, ptr( z4.s ) ); dump();
st1b( z7.s,  p7, ptr( z8.s ) ); dump();
st1b( z7.s,  p7, ptr( z16.s ) ); dump();
st1b( z7.s,  p7, ptr( z31.s ) ); dump();
st1b( z7.s,  p7, ptr( z7.s ) ); dump();
//SVE_32_bit_scatter_store_vector_plus_immediate0:1
st1b( z7.s,  p7, ptr( z7.s, 0x1e ) ); dump();
st1b( z7.s,  p7, ptr( z7.s, 0x1e ) ); dump();
st1b( z0.s,  p7, ptr( z7.s, 0x1e ) ); dump();
st1b( z1.s,  p7, ptr( z7.s, 0x1e ) ); dump();
st1b( z2.s,  p7, ptr( z7.s, 0x1e ) ); dump();
st1b( z4.s,  p7, ptr( z7.s, 0x1e ) ); dump();
st1b( z8.s,  p7, ptr( z7.s, 0x1e ) ); dump();
st1b( z16.s,  p7, ptr( z7.s, 0x1e ) ); dump();
st1b( z31.s,  p7, ptr( z7.s, 0x1e ) ); dump();
st1b( z7.s,  p7, ptr( z7.s, 0x1e ) ); dump();
st1b( z7.s,  p7, ptr( z7.s, 0x1e ) ); dump();
st1b( z7.s,  p0, ptr( z7.s, 0x1e ) ); dump();
st1b( z7.s,  p1, ptr( z7.s, 0x1e ) ); dump();
st1b( z7.s,  p2, ptr( z7.s, 0x1e ) ); dump();
st1b( z7.s,  p4, ptr( z7.s, 0x1e ) ); dump();
st1b( z7.s,  p7, ptr( z7.s, 0x1e ) ); dump();
st1b( z7.s,  p7, ptr( z7.s, 0x1e ) ); dump();
st1b( z7.s,  p7, ptr( z0.s, 0x1e ) ); dump();
st1b( z7.s,  p7, ptr( z1.s, 0x1e ) ); dump();
st1b( z7.s,  p7, ptr( z2.s, 0x1e ) ); dump();
st1b( z7.s,  p7, ptr( z4.s, 0x1e ) ); dump();
st1b( z7.s,  p7, ptr( z8.s, 0x1e ) ); dump();
st1b( z7.s,  p7, ptr( z16.s, 0x1e ) ); dump();
st1b( z7.s,  p7, ptr( z31.s, 0x1e ) ); dump();
st1b( z7.s,  p7, ptr( z7.s, 0x1e ) ); dump();
st1b( z7.s,  p7, ptr( z7.s, 0 ) ); dump();
st1b( z7.s,  p7, ptr( z7.s, 1 ) ); dump();
st1b( z7.s,  p7, ptr( z7.s, 2 ) ); dump();
st1b( z7.s,  p7, ptr( z7.s, 4 ) ); dump();
st1b( z7.s,  p7, ptr( z7.s, 8 ) ); dump();
st1b( z7.s,  p7, ptr( z7.s, 16 ) ); dump();
st1b( z7.s,  p7, ptr( z7.s, 31 ) ); dump();
st1b( z7.s,  p7, ptr( z7.s, 0x1e ) ); dump();
//SVE_store_predicate_register0:0
str(p7, ptr( x7 ) ); dump();
str(p0, ptr( x7 ) ); dump();
str(p1, ptr( x7 ) ); dump();
str(p2, ptr( x7 ) ); dump();
str(p4, ptr( x7 ) ); dump();
str(p7, ptr( x7 ) ); dump();
str(p7, ptr( x7 ) ); dump();
str(p7, ptr( x0 ) ); dump();
str(p7, ptr( x1 ) ); dump();
str(p7, ptr( x2 ) ); dump();
str(p7, ptr( x4 ) ); dump();
str(p7, ptr( x8 ) ); dump();
str(p7, ptr( x16 ) ); dump();
str(p7, ptr( x30 ) ); dump();
str(p7, ptr( sp ) ); dump();
str(p7, ptr( x7 ) ); dump();
//SVE_store_predicate_register0:1
str(p7, ptr( x7, 127, MUL_VL ) ); dump();
str(p0, ptr( x7, 127, MUL_VL ) ); dump();
str(p1, ptr( x7, 127, MUL_VL ) ); dump();
str(p2, ptr( x7, 127, MUL_VL ) ); dump();
str(p4, ptr( x7, 127, MUL_VL ) ); dump();
str(p7, ptr( x7, 127, MUL_VL ) ); dump();
str(p7, ptr( x7, 127, MUL_VL ) ); dump();
str(p7, ptr( x0, 127, MUL_VL ) ); dump();
str(p7, ptr( x1, 127, MUL_VL ) ); dump();
str(p7, ptr( x2, 127, MUL_VL ) ); dump();
str(p7, ptr( x4, 127, MUL_VL ) ); dump();
str(p7, ptr( x8, 127, MUL_VL ) ); dump();
str(p7, ptr( x16, 127, MUL_VL ) ); dump();
str(p7, ptr( x30, 127, MUL_VL ) ); dump();
str(p7, ptr( sp, 127, MUL_VL ) ); dump();
str(p7, ptr( x7, 127, MUL_VL ) ); dump();
str(p7, ptr( x7, -256, MUL_VL ) ); dump();
str(p7, ptr( x7, -128, MUL_VL ) ); dump();
str(p7, ptr( x7, -64, MUL_VL ) ); dump();
str(p7, ptr( x7, -32, MUL_VL ) ); dump();
str(p7, ptr( x7, -16, MUL_VL ) ); dump();
str(p7, ptr( x7, -8, MUL_VL ) ); dump();
str(p7, ptr( x7, -4, MUL_VL ) ); dump();
str(p7, ptr( x7, -2, MUL_VL ) ); dump();
str(p7, ptr( x7, -1, MUL_VL ) ); dump();
str(p7, ptr( x7, 0, MUL_VL ) ); dump();
str(p7, ptr( x7, 1, MUL_VL ) ); dump();
str(p7, ptr( x7, 2, MUL_VL ) ); dump();
str(p7, ptr( x7, 4, MUL_VL ) ); dump();
str(p7, ptr( x7, 8, MUL_VL ) ); dump();
str(p7, ptr( x7, 16, MUL_VL ) ); dump();
str(p7, ptr( x7, 32, MUL_VL ) ); dump();
str(p7, ptr( x7, 64, MUL_VL ) ); dump();
str(p7, ptr( x7, 128, MUL_VL ) ); dump();
str(p7, ptr( x7, 255, MUL_VL ) ); dump();
str(p7, ptr( x7, 127, MUL_VL ) ); dump();
str(p7, ptr( x7, 127, MUL_VL ) ); dump();
//SVE_store_vector_register0:0
str(z7, ptr( x7 ) ); dump();
str(z0, ptr( x7 ) ); dump();
str(z1, ptr( x7 ) ); dump();
str(z2, ptr( x7 ) ); dump();
str(z4, ptr( x7 ) ); dump();
str(z8, ptr( x7 ) ); dump();
str(z16, ptr( x7 ) ); dump();
str(z31, ptr( x7 ) ); dump();
str(z7, ptr( x7 ) ); dump();
str(z7, ptr( x7 ) ); dump();
str(z7, ptr( x0 ) ); dump();
str(z7, ptr( x1 ) ); dump();
str(z7, ptr( x2 ) ); dump();
str(z7, ptr( x4 ) ); dump();
str(z7, ptr( x8 ) ); dump();
str(z7, ptr( x16 ) ); dump();
str(z7, ptr( x30 ) ); dump();
str(z7, ptr( sp ) ); dump();
str(z7, ptr( x7 ) ); dump();
//SVE_store_vector_register0:1
str(z7, ptr( x7, 127, MUL_VL ) ); dump();
str(z0, ptr( x7, 127, MUL_VL ) ); dump();
str(z1, ptr( x7, 127, MUL_VL ) ); dump();
str(z2, ptr( x7, 127, MUL_VL ) ); dump();
str(z4, ptr( x7, 127, MUL_VL ) ); dump();
str(z8, ptr( x7, 127, MUL_VL ) ); dump();
str(z16, ptr( x7, 127, MUL_VL ) ); dump();
str(z31, ptr( x7, 127, MUL_VL ) ); dump();
str(z7, ptr( x7, 127, MUL_VL ) ); dump();
str(z7, ptr( x7, 127, MUL_VL ) ); dump();
str(z7, ptr( x0, 127, MUL_VL ) ); dump();
str(z7, ptr( x1, 127, MUL_VL ) ); dump();
str(z7, ptr( x2, 127, MUL_VL ) ); dump();
str(z7, ptr( x4, 127, MUL_VL ) ); dump();
str(z7, ptr( x8, 127, MUL_VL ) ); dump();
str(z7, ptr( x16, 127, MUL_VL ) ); dump();
str(z7, ptr( x30, 127, MUL_VL ) ); dump();
str(z7, ptr( sp, 127, MUL_VL ) ); dump();
str(z7, ptr( x7, 127, MUL_VL ) ); dump();
str(z7, ptr( x7, -256, MUL_VL ) ); dump();
str(z7, ptr( x7, -128, MUL_VL ) ); dump();
str(z7, ptr( x7, -64, MUL_VL ) ); dump();
str(z7, ptr( x7, -32, MUL_VL ) ); dump();
str(z7, ptr( x7, -16, MUL_VL ) ); dump();
str(z7, ptr( x7, -8, MUL_VL ) ); dump();
str(z7, ptr( x7, -4, MUL_VL ) ); dump();
str(z7, ptr( x7, -2, MUL_VL ) ); dump();
str(z7, ptr( x7, -1, MUL_VL ) ); dump();
str(z7, ptr( x7, 0, MUL_VL ) ); dump();
str(z7, ptr( x7, 1, MUL_VL ) ); dump();
str(z7, ptr( x7, 2, MUL_VL ) ); dump();
str(z7, ptr( x7, 4, MUL_VL ) ); dump();
str(z7, ptr( x7, 8, MUL_VL ) ); dump();
str(z7, ptr( x7, 16, MUL_VL ) ); dump();
str(z7, ptr( x7, 32, MUL_VL ) ); dump();
str(z7, ptr( x7, 64, MUL_VL ) ); dump();
str(z7, ptr( x7, 128, MUL_VL ) ); dump();
str(z7, ptr( x7, 255, MUL_VL ) ); dump();
str(z7, ptr( x7, 127, MUL_VL ) ); dump();
str(z7, ptr( x7, 127, MUL_VL ) ); dump();
//SVE_store_multiple_structures_scalar_plus_scalar0:0
st2b(z15.b, p7, ptr( x7, x0 ) ); dump();
st2b(z0.b, p7, ptr( x7, x0 ) ); dump();
st2b(z1.b, p7, ptr( x7, x0 ) ); dump();
st2b(z2.b, p7, ptr( x7, x0 ) ); dump();
st2b(z4.b, p7, ptr( x7, x0 ) ); dump();
st2b(z8.b, p7, ptr( x7, x0 ) ); dump();
st2b(z16.b, p7, ptr( x7, x0 ) ); dump();
st2b(z31.b, p7, ptr( x7, x0 ) ); dump();
st2b(z15.b, p7, ptr( x7, x0 ) ); dump();
st2b(z15.b, p0, ptr( x7, x0 ) ); dump();
st2b(z15.b, p1, ptr( x7, x0 ) ); dump();
st2b(z15.b, p2, ptr( x7, x0 ) ); dump();
st2b(z15.b, p4, ptr( x7, x0 ) ); dump();
st2b(z15.b, p7, ptr( x7, x0 ) ); dump();
st2b(z15.b, p7, ptr( x7, x0 ) ); dump();
st2b(z15.b, p7, ptr( x0, x0 ) ); dump();
st2b(z15.b, p7, ptr( x1, x0 ) ); dump();
st2b(z15.b, p7, ptr( x2, x0 ) ); dump();
st2b(z15.b, p7, ptr( x4, x0 ) ); dump();
st2b(z15.b, p7, ptr( x8, x0 ) ); dump();
st2b(z15.b, p7, ptr( x16, x0 ) ); dump();
st2b(z15.b, p7, ptr( x30, x0 ) ); dump();
st2b(z15.b, p7, ptr( sp, x0 ) ); dump();
st2b(z15.b, p7, ptr( x7, x0 ) ); dump();
st2b(z15.b, p7, ptr( x7, x1 ) ); dump();
st2b(z15.b, p7, ptr( x7, x2 ) ); dump();
st2b(z15.b, p7, ptr( x7, x4 ) ); dump();
st2b(z15.b, p7, ptr( x7, x8 ) ); dump();
st2b(z15.b, p7, ptr( x7, x16 ) ); dump();
st2b(z15.b, p7, ptr( x7, x30 ) ); dump();
st2b(z15.b, p7, ptr( x7, x0 ) ); dump();
//SVE_store_multiple_structures_scalar_plus_scalar1:0
st3b(z15.b, p7, ptr( x7, x0 ) ); dump();
st3b(z0.b, p7, ptr( x7, x0 ) ); dump();
st3b(z1.b, p7, ptr( x7, x0 ) ); dump();
st3b(z2.b, p7, ptr( x7, x0 ) ); dump();
st3b(z4.b, p7, ptr( x7, x0 ) ); dump();
st3b(z8.b, p7, ptr( x7, x0 ) ); dump();
st3b(z16.b, p7, ptr( x7, x0 ) ); dump();
st3b(z31.b, p7, ptr( x7, x0 ) ); dump();
st3b(z15.b, p7, ptr( x7, x0 ) ); dump();
st3b(z15.b, p0, ptr( x7, x0 ) ); dump();
st3b(z15.b, p1, ptr( x7, x0 ) ); dump();
st3b(z15.b, p2, ptr( x7, x0 ) ); dump();
st3b(z15.b, p4, ptr( x7, x0 ) ); dump();
st3b(z15.b, p7, ptr( x7, x0 ) ); dump();
st3b(z15.b, p7, ptr( x7, x0 ) ); dump();
st3b(z15.b, p7, ptr( x0, x0 ) ); dump();
st3b(z15.b, p7, ptr( x1, x0 ) ); dump();
st3b(z15.b, p7, ptr( x2, x0 ) ); dump();
st3b(z15.b, p7, ptr( x4, x0 ) ); dump();
st3b(z15.b, p7, ptr( x8, x0 ) ); dump();
st3b(z15.b, p7, ptr( x16, x0 ) ); dump();
st3b(z15.b, p7, ptr( x30, x0 ) ); dump();
st3b(z15.b, p7, ptr( sp, x0 ) ); dump();
st3b(z15.b, p7, ptr( x7, x0 ) ); dump();
st3b(z15.b, p7, ptr( x7, x1 ) ); dump();
st3b(z15.b, p7, ptr( x7, x2 ) ); dump();
st3b(z15.b, p7, ptr( x7, x4 ) ); dump();
st3b(z15.b, p7, ptr( x7, x8 ) ); dump();
st3b(z15.b, p7, ptr( x7, x16 ) ); dump();
st3b(z15.b, p7, ptr( x7, x30 ) ); dump();
st3b(z15.b, p7, ptr( x7, x0 ) ); dump();
//SVE_store_multiple_structures_scalar_plus_scalar2:0
st4b(z15.b, p7, ptr( x7, x0 ) ); dump();
st4b(z0.b, p7, ptr( x7, x0 ) ); dump();
st4b(z1.b, p7, ptr( x7, x0 ) ); dump();
st4b(z2.b, p7, ptr( x7, x0 ) ); dump();
st4b(z4.b, p7, ptr( x7, x0 ) ); dump();
st4b(z8.b, p7, ptr( x7, x0 ) ); dump();
st4b(z16.b, p7, ptr( x7, x0 ) ); dump();
st4b(z31.b, p7, ptr( x7, x0 ) ); dump();
st4b(z15.b, p7, ptr( x7, x0 ) ); dump();
st4b(z15.b, p0, ptr( x7, x0 ) ); dump();
st4b(z15.b, p1, ptr( x7, x0 ) ); dump();
st4b(z15.b, p2, ptr( x7, x0 ) ); dump();
st4b(z15.b, p4, ptr( x7, x0 ) ); dump();
st4b(z15.b, p7, ptr( x7, x0 ) ); dump();
st4b(z15.b, p7, ptr( x7, x0 ) ); dump();
st4b(z15.b, p7, ptr( x0, x0 ) ); dump();
st4b(z15.b, p7, ptr( x1, x0 ) ); dump();
st4b(z15.b, p7, ptr( x2, x0 ) ); dump();
st4b(z15.b, p7, ptr( x4, x0 ) ); dump();
st4b(z15.b, p7, ptr( x8, x0 ) ); dump();
st4b(z15.b, p7, ptr( x16, x0 ) ); dump();
st4b(z15.b, p7, ptr( x30, x0 ) ); dump();
st4b(z15.b, p7, ptr( sp, x0 ) ); dump();
st4b(z15.b, p7, ptr( x7, x0 ) ); dump();
st4b(z15.b, p7, ptr( x7, x1 ) ); dump();
st4b(z15.b, p7, ptr( x7, x2 ) ); dump();
st4b(z15.b, p7, ptr( x7, x4 ) ); dump();
st4b(z15.b, p7, ptr( x7, x8 ) ); dump();
st4b(z15.b, p7, ptr( x7, x16 ) ); dump();
st4b(z15.b, p7, ptr( x7, x30 ) ); dump();
st4b(z15.b, p7, ptr( x7, x0 ) ); dump();
//SVE_store_multiple_structures_scalar_plus_scalar3:0
st2h(z15.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st2h(z0.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st2h(z1.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st2h(z2.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st2h(z4.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st2h(z8.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st2h(z16.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st2h(z31.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st2h(z15.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st2h(z15.h, p0, ptr( x7, x0, LSL, 1 ) ); dump();
st2h(z15.h, p1, ptr( x7, x0, LSL, 1 ) ); dump();
st2h(z15.h, p2, ptr( x7, x0, LSL, 1 ) ); dump();
st2h(z15.h, p4, ptr( x7, x0, LSL, 1 ) ); dump();
st2h(z15.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st2h(z15.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st2h(z15.h, p7, ptr( x0, x0, LSL, 1 ) ); dump();
st2h(z15.h, p7, ptr( x1, x0, LSL, 1 ) ); dump();
st2h(z15.h, p7, ptr( x2, x0, LSL, 1 ) ); dump();
st2h(z15.h, p7, ptr( x4, x0, LSL, 1 ) ); dump();
st2h(z15.h, p7, ptr( x8, x0, LSL, 1 ) ); dump();
st2h(z15.h, p7, ptr( x16, x0, LSL, 1 ) ); dump();
st2h(z15.h, p7, ptr( x30, x0, LSL, 1 ) ); dump();
st2h(z15.h, p7, ptr( sp, x0, LSL, 1 ) ); dump();
st2h(z15.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st2h(z15.h, p7, ptr( x7, x1, LSL, 1 ) ); dump();
st2h(z15.h, p7, ptr( x7, x2, LSL, 1 ) ); dump();
st2h(z15.h, p7, ptr( x7, x4, LSL, 1 ) ); dump();
st2h(z15.h, p7, ptr( x7, x8, LSL, 1 ) ); dump();
st2h(z15.h, p7, ptr( x7, x16, LSL, 1 ) ); dump();
st2h(z15.h, p7, ptr( x7, x30, LSL, 1 ) ); dump();
st2h(z15.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st2h(z15.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
//SVE_store_multiple_structures_scalar_plus_scalar4:0
st3h(z15.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st3h(z0.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st3h(z1.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st3h(z2.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st3h(z4.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st3h(z8.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st3h(z16.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st3h(z31.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st3h(z15.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st3h(z15.h, p0, ptr( x7, x0, LSL, 1 ) ); dump();
st3h(z15.h, p1, ptr( x7, x0, LSL, 1 ) ); dump();
st3h(z15.h, p2, ptr( x7, x0, LSL, 1 ) ); dump();
st3h(z15.h, p4, ptr( x7, x0, LSL, 1 ) ); dump();
st3h(z15.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st3h(z15.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st3h(z15.h, p7, ptr( x0, x0, LSL, 1 ) ); dump();
st3h(z15.h, p7, ptr( x1, x0, LSL, 1 ) ); dump();
st3h(z15.h, p7, ptr( x2, x0, LSL, 1 ) ); dump();
st3h(z15.h, p7, ptr( x4, x0, LSL, 1 ) ); dump();
st3h(z15.h, p7, ptr( x8, x0, LSL, 1 ) ); dump();
st3h(z15.h, p7, ptr( x16, x0, LSL, 1 ) ); dump();
st3h(z15.h, p7, ptr( x30, x0, LSL, 1 ) ); dump();
st3h(z15.h, p7, ptr( sp, x0, LSL, 1 ) ); dump();
st3h(z15.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st3h(z15.h, p7, ptr( x7, x1, LSL, 1 ) ); dump();
st3h(z15.h, p7, ptr( x7, x2, LSL, 1 ) ); dump();
st3h(z15.h, p7, ptr( x7, x4, LSL, 1 ) ); dump();
st3h(z15.h, p7, ptr( x7, x8, LSL, 1 ) ); dump();
st3h(z15.h, p7, ptr( x7, x16, LSL, 1 ) ); dump();
st3h(z15.h, p7, ptr( x7, x30, LSL, 1 ) ); dump();
st3h(z15.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st3h(z15.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
//SVE_store_multiple_structures_scalar_plus_scalar5:0
st4h(z15.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st4h(z0.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st4h(z1.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st4h(z2.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st4h(z4.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st4h(z8.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st4h(z16.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st4h(z31.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st4h(z15.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st4h(z15.h, p0, ptr( x7, x0, LSL, 1 ) ); dump();
st4h(z15.h, p1, ptr( x7, x0, LSL, 1 ) ); dump();
st4h(z15.h, p2, ptr( x7, x0, LSL, 1 ) ); dump();
st4h(z15.h, p4, ptr( x7, x0, LSL, 1 ) ); dump();
st4h(z15.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st4h(z15.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st4h(z15.h, p7, ptr( x0, x0, LSL, 1 ) ); dump();
st4h(z15.h, p7, ptr( x1, x0, LSL, 1 ) ); dump();
st4h(z15.h, p7, ptr( x2, x0, LSL, 1 ) ); dump();
st4h(z15.h, p7, ptr( x4, x0, LSL, 1 ) ); dump();
st4h(z15.h, p7, ptr( x8, x0, LSL, 1 ) ); dump();
st4h(z15.h, p7, ptr( x16, x0, LSL, 1 ) ); dump();
st4h(z15.h, p7, ptr( x30, x0, LSL, 1 ) ); dump();
st4h(z15.h, p7, ptr( sp, x0, LSL, 1 ) ); dump();
st4h(z15.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st4h(z15.h, p7, ptr( x7, x1, LSL, 1 ) ); dump();
st4h(z15.h, p7, ptr( x7, x2, LSL, 1 ) ); dump();
st4h(z15.h, p7, ptr( x7, x4, LSL, 1 ) ); dump();
st4h(z15.h, p7, ptr( x7, x8, LSL, 1 ) ); dump();
st4h(z15.h, p7, ptr( x7, x16, LSL, 1 ) ); dump();
st4h(z15.h, p7, ptr( x7, x30, LSL, 1 ) ); dump();
st4h(z15.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
st4h(z15.h, p7, ptr( x7, x0, LSL, 1 ) ); dump();
//SVE_store_multiple_structures_scalar_plus_scalar6:0
st2w(z15.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st2w(z0.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st2w(z1.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st2w(z2.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st2w(z4.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st2w(z8.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st2w(z16.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st2w(z31.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st2w(z15.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st2w(z15.s, p0, ptr( x7, x0, LSL, 2 ) ); dump();
st2w(z15.s, p1, ptr( x7, x0, LSL, 2 ) ); dump();
st2w(z15.s, p2, ptr( x7, x0, LSL, 2 ) ); dump();
st2w(z15.s, p4, ptr( x7, x0, LSL, 2 ) ); dump();
st2w(z15.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st2w(z15.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st2w(z15.s, p7, ptr( x0, x0, LSL, 2 ) ); dump();
st2w(z15.s, p7, ptr( x1, x0, LSL, 2 ) ); dump();
st2w(z15.s, p7, ptr( x2, x0, LSL, 2 ) ); dump();
st2w(z15.s, p7, ptr( x4, x0, LSL, 2 ) ); dump();
st2w(z15.s, p7, ptr( x8, x0, LSL, 2 ) ); dump();
st2w(z15.s, p7, ptr( x16, x0, LSL, 2 ) ); dump();
st2w(z15.s, p7, ptr( x30, x0, LSL, 2 ) ); dump();
st2w(z15.s, p7, ptr( sp, x0, LSL, 2 ) ); dump();
st2w(z15.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st2w(z15.s, p7, ptr( x7, x1, LSL, 2 ) ); dump();
st2w(z15.s, p7, ptr( x7, x2, LSL, 2 ) ); dump();
st2w(z15.s, p7, ptr( x7, x4, LSL, 2 ) ); dump();
st2w(z15.s, p7, ptr( x7, x8, LSL, 2 ) ); dump();
st2w(z15.s, p7, ptr( x7, x16, LSL, 2 ) ); dump();
st2w(z15.s, p7, ptr( x7, x30, LSL, 2 ) ); dump();
st2w(z15.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st2w(z15.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
//SVE_store_multiple_structures_scalar_plus_scalar7:0
st3w(z15.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st3w(z0.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st3w(z1.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st3w(z2.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st3w(z4.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st3w(z8.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st3w(z16.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st3w(z31.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st3w(z15.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st3w(z15.s, p0, ptr( x7, x0, LSL, 2 ) ); dump();
st3w(z15.s, p1, ptr( x7, x0, LSL, 2 ) ); dump();
st3w(z15.s, p2, ptr( x7, x0, LSL, 2 ) ); dump();
st3w(z15.s, p4, ptr( x7, x0, LSL, 2 ) ); dump();
st3w(z15.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st3w(z15.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st3w(z15.s, p7, ptr( x0, x0, LSL, 2 ) ); dump();
st3w(z15.s, p7, ptr( x1, x0, LSL, 2 ) ); dump();
st3w(z15.s, p7, ptr( x2, x0, LSL, 2 ) ); dump();
st3w(z15.s, p7, ptr( x4, x0, LSL, 2 ) ); dump();
st3w(z15.s, p7, ptr( x8, x0, LSL, 2 ) ); dump();
st3w(z15.s, p7, ptr( x16, x0, LSL, 2 ) ); dump();
st3w(z15.s, p7, ptr( x30, x0, LSL, 2 ) ); dump();
st3w(z15.s, p7, ptr( sp, x0, LSL, 2 ) ); dump();
st3w(z15.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st3w(z15.s, p7, ptr( x7, x1, LSL, 2 ) ); dump();
st3w(z15.s, p7, ptr( x7, x2, LSL, 2 ) ); dump();
st3w(z15.s, p7, ptr( x7, x4, LSL, 2 ) ); dump();
st3w(z15.s, p7, ptr( x7, x8, LSL, 2 ) ); dump();
st3w(z15.s, p7, ptr( x7, x16, LSL, 2 ) ); dump();
st3w(z15.s, p7, ptr( x7, x30, LSL, 2 ) ); dump();
st3w(z15.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st3w(z15.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
//SVE_store_multiple_structures_scalar_plus_scalar8:0
st4w(z15.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st4w(z0.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st4w(z1.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st4w(z2.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st4w(z4.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st4w(z8.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st4w(z16.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st4w(z31.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st4w(z15.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st4w(z15.s, p0, ptr( x7, x0, LSL, 2 ) ); dump();
st4w(z15.s, p1, ptr( x7, x0, LSL, 2 ) ); dump();
st4w(z15.s, p2, ptr( x7, x0, LSL, 2 ) ); dump();
st4w(z15.s, p4, ptr( x7, x0, LSL, 2 ) ); dump();
st4w(z15.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st4w(z15.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st4w(z15.s, p7, ptr( x0, x0, LSL, 2 ) ); dump();
st4w(z15.s, p7, ptr( x1, x0, LSL, 2 ) ); dump();
st4w(z15.s, p7, ptr( x2, x0, LSL, 2 ) ); dump();
st4w(z15.s, p7, ptr( x4, x0, LSL, 2 ) ); dump();
st4w(z15.s, p7, ptr( x8, x0, LSL, 2 ) ); dump();
st4w(z15.s, p7, ptr( x16, x0, LSL, 2 ) ); dump();
st4w(z15.s, p7, ptr( x30, x0, LSL, 2 ) ); dump();
st4w(z15.s, p7, ptr( sp, x0, LSL, 2 ) ); dump();
st4w(z15.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st4w(z15.s, p7, ptr( x7, x1, LSL, 2 ) ); dump();
st4w(z15.s, p7, ptr( x7, x2, LSL, 2 ) ); dump();
st4w(z15.s, p7, ptr( x7, x4, LSL, 2 ) ); dump();
st4w(z15.s, p7, ptr( x7, x8, LSL, 2 ) ); dump();
st4w(z15.s, p7, ptr( x7, x16, LSL, 2 ) ); dump();
st4w(z15.s, p7, ptr( x7, x30, LSL, 2 ) ); dump();
st4w(z15.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
st4w(z15.s, p7, ptr( x7, x0, LSL, 2 ) ); dump();
//SVE_store_multiple_structures_scalar_plus_scalar9:0
st2d(z15.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st2d(z0.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st2d(z1.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st2d(z2.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st2d(z4.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st2d(z8.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st2d(z16.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st2d(z31.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st2d(z15.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st2d(z15.d, p0, ptr( x7, x0, LSL, 3 ) ); dump();
st2d(z15.d, p1, ptr( x7, x0, LSL, 3 ) ); dump();
st2d(z15.d, p2, ptr( x7, x0, LSL, 3 ) ); dump();
st2d(z15.d, p4, ptr( x7, x0, LSL, 3 ) ); dump();
st2d(z15.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st2d(z15.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st2d(z15.d, p7, ptr( x0, x0, LSL, 3 ) ); dump();
st2d(z15.d, p7, ptr( x1, x0, LSL, 3 ) ); dump();
st2d(z15.d, p7, ptr( x2, x0, LSL, 3 ) ); dump();
st2d(z15.d, p7, ptr( x4, x0, LSL, 3 ) ); dump();
st2d(z15.d, p7, ptr( x8, x0, LSL, 3 ) ); dump();
st2d(z15.d, p7, ptr( x16, x0, LSL, 3 ) ); dump();
st2d(z15.d, p7, ptr( x30, x0, LSL, 3 ) ); dump();
st2d(z15.d, p7, ptr( sp, x0, LSL, 3 ) ); dump();
st2d(z15.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st2d(z15.d, p7, ptr( x7, x1, LSL, 3 ) ); dump();
st2d(z15.d, p7, ptr( x7, x2, LSL, 3 ) ); dump();
st2d(z15.d, p7, ptr( x7, x4, LSL, 3 ) ); dump();
st2d(z15.d, p7, ptr( x7, x8, LSL, 3 ) ); dump();
st2d(z15.d, p7, ptr( x7, x16, LSL, 3 ) ); dump();
st2d(z15.d, p7, ptr( x7, x30, LSL, 3 ) ); dump();
st2d(z15.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st2d(z15.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
//SVE_store_multiple_structures_scalar_plus_scalar10:0
st3d(z15.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st3d(z0.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st3d(z1.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st3d(z2.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st3d(z4.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st3d(z8.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st3d(z16.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st3d(z31.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st3d(z15.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st3d(z15.d, p0, ptr( x7, x0, LSL, 3 ) ); dump();
st3d(z15.d, p1, ptr( x7, x0, LSL, 3 ) ); dump();
st3d(z15.d, p2, ptr( x7, x0, LSL, 3 ) ); dump();
st3d(z15.d, p4, ptr( x7, x0, LSL, 3 ) ); dump();
st3d(z15.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st3d(z15.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st3d(z15.d, p7, ptr( x0, x0, LSL, 3 ) ); dump();
st3d(z15.d, p7, ptr( x1, x0, LSL, 3 ) ); dump();
st3d(z15.d, p7, ptr( x2, x0, LSL, 3 ) ); dump();
st3d(z15.d, p7, ptr( x4, x0, LSL, 3 ) ); dump();
st3d(z15.d, p7, ptr( x8, x0, LSL, 3 ) ); dump();
st3d(z15.d, p7, ptr( x16, x0, LSL, 3 ) ); dump();
st3d(z15.d, p7, ptr( x30, x0, LSL, 3 ) ); dump();
st3d(z15.d, p7, ptr( sp, x0, LSL, 3 ) ); dump();
st3d(z15.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st3d(z15.d, p7, ptr( x7, x1, LSL, 3 ) ); dump();
st3d(z15.d, p7, ptr( x7, x2, LSL, 3 ) ); dump();
st3d(z15.d, p7, ptr( x7, x4, LSL, 3 ) ); dump();
st3d(z15.d, p7, ptr( x7, x8, LSL, 3 ) ); dump();
st3d(z15.d, p7, ptr( x7, x16, LSL, 3 ) ); dump();
st3d(z15.d, p7, ptr( x7, x30, LSL, 3 ) ); dump();
st3d(z15.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st3d(z15.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
//SVE_store_multiple_structures_scalar_plus_scalar11:0
st4d(z15.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st4d(z0.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st4d(z1.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st4d(z2.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st4d(z4.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st4d(z8.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st4d(z16.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st4d(z31.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st4d(z15.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st4d(z15.d, p0, ptr( x7, x0, LSL, 3 ) ); dump();
st4d(z15.d, p1, ptr( x7, x0, LSL, 3 ) ); dump();
st4d(z15.d, p2, ptr( x7, x0, LSL, 3 ) ); dump();
st4d(z15.d, p4, ptr( x7, x0, LSL, 3 ) ); dump();
st4d(z15.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st4d(z15.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st4d(z15.d, p7, ptr( x0, x0, LSL, 3 ) ); dump();
st4d(z15.d, p7, ptr( x1, x0, LSL, 3 ) ); dump();
st4d(z15.d, p7, ptr( x2, x0, LSL, 3 ) ); dump();
st4d(z15.d, p7, ptr( x4, x0, LSL, 3 ) ); dump();
st4d(z15.d, p7, ptr( x8, x0, LSL, 3 ) ); dump();
st4d(z15.d, p7, ptr( x16, x0, LSL, 3 ) ); dump();
st4d(z15.d, p7, ptr( x30, x0, LSL, 3 ) ); dump();
st4d(z15.d, p7, ptr( sp, x0, LSL, 3 ) ); dump();
st4d(z15.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st4d(z15.d, p7, ptr( x7, x1, LSL, 3 ) ); dump();
st4d(z15.d, p7, ptr( x7, x2, LSL, 3 ) ); dump();
st4d(z15.d, p7, ptr( x7, x4, LSL, 3 ) ); dump();
st4d(z15.d, p7, ptr( x7, x8, LSL, 3 ) ); dump();
st4d(z15.d, p7, ptr( x7, x16, LSL, 3 ) ); dump();
st4d(z15.d, p7, ptr( x7, x30, LSL, 3 ) ); dump();
st4d(z15.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
st4d(z15.d, p7, ptr( x7, x0, LSL, 3 ) ); dump();
//SVE_store_multiple_structures_scalar_plus_immediate0:0
st2b(z15.b, p7, ptr( x7 ) ); dump();
st2b(z0.b, p7, ptr( x7 ) ); dump();
st2b(z1.b, p7, ptr( x7 ) ); dump();
st2b(z2.b, p7, ptr( x7 ) ); dump();
st2b(z4.b, p7, ptr( x7 ) ); dump();
st2b(z8.b, p7, ptr( x7 ) ); dump();
st2b(z16.b, p7, ptr( x7 ) ); dump();
st2b(z31.b, p7, ptr( x7 ) ); dump();
st2b(z15.b, p7, ptr( x7 ) ); dump();
st2b(z15.b, p0, ptr( x7 ) ); dump();
st2b(z15.b, p1, ptr( x7 ) ); dump();
st2b(z15.b, p2, ptr( x7 ) ); dump();
st2b(z15.b, p4, ptr( x7 ) ); dump();
st2b(z15.b, p7, ptr( x7 ) ); dump();
st2b(z15.b, p7, ptr( x7 ) ); dump();
st2b(z15.b, p7, ptr( x0 ) ); dump();
st2b(z15.b, p7, ptr( x1 ) ); dump();
st2b(z15.b, p7, ptr( x2 ) ); dump();
st2b(z15.b, p7, ptr( x4 ) ); dump();
st2b(z15.b, p7, ptr( x8 ) ); dump();
st2b(z15.b, p7, ptr( x16 ) ); dump();
st2b(z15.b, p7, ptr( x30 ) ); dump();
st2b(z15.b, p7, ptr( sp ) ); dump();
st2b(z15.b, p7, ptr( x7 ) ); dump();
//SVE_store_multiple_structures_scalar_plus_immediate0:1
st2b(z15.b, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2b(z0.b, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2b(z1.b, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2b(z2.b, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2b(z4.b, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2b(z8.b, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2b(z16.b, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2b(z31.b, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2b(z15.b, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2b(z15.b, p0, ptr( x7, 14, MUL_VL ) ); dump();
st2b(z15.b, p1, ptr( x7, 14, MUL_VL ) ); dump();
st2b(z15.b, p2, ptr( x7, 14, MUL_VL ) ); dump();
st2b(z15.b, p4, ptr( x7, 14, MUL_VL ) ); dump();
st2b(z15.b, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2b(z15.b, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2b(z15.b, p7, ptr( x0, 14, MUL_VL ) ); dump();
st2b(z15.b, p7, ptr( x1, 14, MUL_VL ) ); dump();
st2b(z15.b, p7, ptr( x2, 14, MUL_VL ) ); dump();
st2b(z15.b, p7, ptr( x4, 14, MUL_VL ) ); dump();
st2b(z15.b, p7, ptr( x8, 14, MUL_VL ) ); dump();
st2b(z15.b, p7, ptr( x16, 14, MUL_VL ) ); dump();
st2b(z15.b, p7, ptr( x30, 14, MUL_VL ) ); dump();
st2b(z15.b, p7, ptr( sp, 14, MUL_VL ) ); dump();
st2b(z15.b, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2b(z15.b, p7, ptr( x7, -16, MUL_VL ) ); dump();
st2b(z15.b, p7, ptr( x7, -8, MUL_VL ) ); dump();
st2b(z15.b, p7, ptr( x7, -4, MUL_VL ) ); dump();
st2b(z15.b, p7, ptr( x7, -2, MUL_VL ) ); dump();
st2b(z15.b, p7, ptr( x7, 0, MUL_VL ) ); dump();
st2b(z15.b, p7, ptr( x7, 2, MUL_VL ) ); dump();
st2b(z15.b, p7, ptr( x7, 4, MUL_VL ) ); dump();
st2b(z15.b, p7, ptr( x7, 8, MUL_VL ) ); dump();
st2b(z15.b, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2b(z15.b, p7, ptr( x7, 14, MUL_VL ) ); dump();
//SVE_store_multiple_structures_scalar_plus_immediate1:0
st3b(z15.b, p7, ptr( x7 ) ); dump();
st3b(z0.b, p7, ptr( x7 ) ); dump();
st3b(z1.b, p7, ptr( x7 ) ); dump();
st3b(z2.b, p7, ptr( x7 ) ); dump();
st3b(z4.b, p7, ptr( x7 ) ); dump();
st3b(z8.b, p7, ptr( x7 ) ); dump();
st3b(z16.b, p7, ptr( x7 ) ); dump();
st3b(z31.b, p7, ptr( x7 ) ); dump();
st3b(z15.b, p7, ptr( x7 ) ); dump();
st3b(z15.b, p0, ptr( x7 ) ); dump();
st3b(z15.b, p1, ptr( x7 ) ); dump();
st3b(z15.b, p2, ptr( x7 ) ); dump();
st3b(z15.b, p4, ptr( x7 ) ); dump();
st3b(z15.b, p7, ptr( x7 ) ); dump();
st3b(z15.b, p7, ptr( x7 ) ); dump();
st3b(z15.b, p7, ptr( x0 ) ); dump();
st3b(z15.b, p7, ptr( x1 ) ); dump();
st3b(z15.b, p7, ptr( x2 ) ); dump();
st3b(z15.b, p7, ptr( x4 ) ); dump();
st3b(z15.b, p7, ptr( x8 ) ); dump();
st3b(z15.b, p7, ptr( x16 ) ); dump();
st3b(z15.b, p7, ptr( x30 ) ); dump();
st3b(z15.b, p7, ptr( sp ) ); dump();
st3b(z15.b, p7, ptr( x7 ) ); dump();
//SVE_store_multiple_structures_scalar_plus_immediate1:1
st3b(z15.b, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3b(z0.b, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3b(z1.b, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3b(z2.b, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3b(z4.b, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3b(z8.b, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3b(z16.b, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3b(z31.b, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3b(z15.b, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3b(z15.b, p0, ptr( x7, 21, MUL_VL ) ); dump();
st3b(z15.b, p1, ptr( x7, 21, MUL_VL ) ); dump();
st3b(z15.b, p2, ptr( x7, 21, MUL_VL ) ); dump();
st3b(z15.b, p4, ptr( x7, 21, MUL_VL ) ); dump();
st3b(z15.b, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3b(z15.b, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3b(z15.b, p7, ptr( x0, 21, MUL_VL ) ); dump();
st3b(z15.b, p7, ptr( x1, 21, MUL_VL ) ); dump();
st3b(z15.b, p7, ptr( x2, 21, MUL_VL ) ); dump();
st3b(z15.b, p7, ptr( x4, 21, MUL_VL ) ); dump();
st3b(z15.b, p7, ptr( x8, 21, MUL_VL ) ); dump();
st3b(z15.b, p7, ptr( x16, 21, MUL_VL ) ); dump();
st3b(z15.b, p7, ptr( x30, 21, MUL_VL ) ); dump();
st3b(z15.b, p7, ptr( sp, 21, MUL_VL ) ); dump();
st3b(z15.b, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3b(z15.b, p7, ptr( x7, -24, MUL_VL ) ); dump();
st3b(z15.b, p7, ptr( x7, -12, MUL_VL ) ); dump();
st3b(z15.b, p7, ptr( x7, -6, MUL_VL ) ); dump();
st3b(z15.b, p7, ptr( x7, -3, MUL_VL ) ); dump();
st3b(z15.b, p7, ptr( x7, 0, MUL_VL ) ); dump();
st3b(z15.b, p7, ptr( x7, 3, MUL_VL ) ); dump();
st3b(z15.b, p7, ptr( x7, 6, MUL_VL ) ); dump();
st3b(z15.b, p7, ptr( x7, 12, MUL_VL ) ); dump();
st3b(z15.b, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3b(z15.b, p7, ptr( x7, 21, MUL_VL ) ); dump();
//SVE_store_multiple_structures_scalar_plus_immediate2:0
st4b(z15.b, p7, ptr( x7 ) ); dump();
st4b(z0.b, p7, ptr( x7 ) ); dump();
st4b(z1.b, p7, ptr( x7 ) ); dump();
st4b(z2.b, p7, ptr( x7 ) ); dump();
st4b(z4.b, p7, ptr( x7 ) ); dump();
st4b(z8.b, p7, ptr( x7 ) ); dump();
st4b(z16.b, p7, ptr( x7 ) ); dump();
st4b(z31.b, p7, ptr( x7 ) ); dump();
st4b(z15.b, p7, ptr( x7 ) ); dump();
st4b(z15.b, p0, ptr( x7 ) ); dump();
st4b(z15.b, p1, ptr( x7 ) ); dump();
st4b(z15.b, p2, ptr( x7 ) ); dump();
st4b(z15.b, p4, ptr( x7 ) ); dump();
st4b(z15.b, p7, ptr( x7 ) ); dump();
st4b(z15.b, p7, ptr( x7 ) ); dump();
st4b(z15.b, p7, ptr( x0 ) ); dump();
st4b(z15.b, p7, ptr( x1 ) ); dump();
st4b(z15.b, p7, ptr( x2 ) ); dump();
st4b(z15.b, p7, ptr( x4 ) ); dump();
st4b(z15.b, p7, ptr( x8 ) ); dump();
st4b(z15.b, p7, ptr( x16 ) ); dump();
st4b(z15.b, p7, ptr( x30 ) ); dump();
st4b(z15.b, p7, ptr( sp ) ); dump();
st4b(z15.b, p7, ptr( x7 ) ); dump();
//SVE_store_multiple_structures_scalar_plus_immediate2:1
st4b(z15.b, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4b(z0.b, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4b(z1.b, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4b(z2.b, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4b(z4.b, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4b(z8.b, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4b(z16.b, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4b(z31.b, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4b(z15.b, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4b(z15.b, p0, ptr( x7, 28, MUL_VL ) ); dump();
st4b(z15.b, p1, ptr( x7, 28, MUL_VL ) ); dump();
st4b(z15.b, p2, ptr( x7, 28, MUL_VL ) ); dump();
st4b(z15.b, p4, ptr( x7, 28, MUL_VL ) ); dump();
st4b(z15.b, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4b(z15.b, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4b(z15.b, p7, ptr( x0, 28, MUL_VL ) ); dump();
st4b(z15.b, p7, ptr( x1, 28, MUL_VL ) ); dump();
st4b(z15.b, p7, ptr( x2, 28, MUL_VL ) ); dump();
st4b(z15.b, p7, ptr( x4, 28, MUL_VL ) ); dump();
st4b(z15.b, p7, ptr( x8, 28, MUL_VL ) ); dump();
st4b(z15.b, p7, ptr( x16, 28, MUL_VL ) ); dump();
st4b(z15.b, p7, ptr( x30, 28, MUL_VL ) ); dump();
st4b(z15.b, p7, ptr( sp, 28, MUL_VL ) ); dump();
st4b(z15.b, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4b(z15.b, p7, ptr( x7, -32, MUL_VL ) ); dump();
st4b(z15.b, p7, ptr( x7, -16, MUL_VL ) ); dump();
st4b(z15.b, p7, ptr( x7, -8, MUL_VL ) ); dump();
st4b(z15.b, p7, ptr( x7, -4, MUL_VL ) ); dump();
st4b(z15.b, p7, ptr( x7, 0, MUL_VL ) ); dump();
st4b(z15.b, p7, ptr( x7, 4, MUL_VL ) ); dump();
st4b(z15.b, p7, ptr( x7, 8, MUL_VL ) ); dump();
st4b(z15.b, p7, ptr( x7, 16, MUL_VL ) ); dump();
st4b(z15.b, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4b(z15.b, p7, ptr( x7, 28, MUL_VL ) ); dump();
//SVE_store_multiple_structures_scalar_plus_immediate3:0
st2h(z15.h, p7, ptr( x7 ) ); dump();
st2h(z0.h, p7, ptr( x7 ) ); dump();
st2h(z1.h, p7, ptr( x7 ) ); dump();
st2h(z2.h, p7, ptr( x7 ) ); dump();
st2h(z4.h, p7, ptr( x7 ) ); dump();
st2h(z8.h, p7, ptr( x7 ) ); dump();
st2h(z16.h, p7, ptr( x7 ) ); dump();
st2h(z31.h, p7, ptr( x7 ) ); dump();
st2h(z15.h, p7, ptr( x7 ) ); dump();
st2h(z15.h, p0, ptr( x7 ) ); dump();
st2h(z15.h, p1, ptr( x7 ) ); dump();
st2h(z15.h, p2, ptr( x7 ) ); dump();
st2h(z15.h, p4, ptr( x7 ) ); dump();
st2h(z15.h, p7, ptr( x7 ) ); dump();
st2h(z15.h, p7, ptr( x7 ) ); dump();
st2h(z15.h, p7, ptr( x0 ) ); dump();
st2h(z15.h, p7, ptr( x1 ) ); dump();
st2h(z15.h, p7, ptr( x2 ) ); dump();
st2h(z15.h, p7, ptr( x4 ) ); dump();
st2h(z15.h, p7, ptr( x8 ) ); dump();
st2h(z15.h, p7, ptr( x16 ) ); dump();
st2h(z15.h, p7, ptr( x30 ) ); dump();
st2h(z15.h, p7, ptr( sp ) ); dump();
st2h(z15.h, p7, ptr( x7 ) ); dump();
//SVE_store_multiple_structures_scalar_plus_immediate3:1
st2h(z15.h, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2h(z0.h, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2h(z1.h, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2h(z2.h, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2h(z4.h, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2h(z8.h, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2h(z16.h, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2h(z31.h, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2h(z15.h, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2h(z15.h, p0, ptr( x7, 14, MUL_VL ) ); dump();
st2h(z15.h, p1, ptr( x7, 14, MUL_VL ) ); dump();
st2h(z15.h, p2, ptr( x7, 14, MUL_VL ) ); dump();
st2h(z15.h, p4, ptr( x7, 14, MUL_VL ) ); dump();
st2h(z15.h, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2h(z15.h, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2h(z15.h, p7, ptr( x0, 14, MUL_VL ) ); dump();
st2h(z15.h, p7, ptr( x1, 14, MUL_VL ) ); dump();
st2h(z15.h, p7, ptr( x2, 14, MUL_VL ) ); dump();
st2h(z15.h, p7, ptr( x4, 14, MUL_VL ) ); dump();
st2h(z15.h, p7, ptr( x8, 14, MUL_VL ) ); dump();
st2h(z15.h, p7, ptr( x16, 14, MUL_VL ) ); dump();
st2h(z15.h, p7, ptr( x30, 14, MUL_VL ) ); dump();
st2h(z15.h, p7, ptr( sp, 14, MUL_VL ) ); dump();
st2h(z15.h, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2h(z15.h, p7, ptr( x7, -16, MUL_VL ) ); dump();
st2h(z15.h, p7, ptr( x7, -8, MUL_VL ) ); dump();
st2h(z15.h, p7, ptr( x7, -4, MUL_VL ) ); dump();
st2h(z15.h, p7, ptr( x7, -2, MUL_VL ) ); dump();
st2h(z15.h, p7, ptr( x7, 0, MUL_VL ) ); dump();
st2h(z15.h, p7, ptr( x7, 2, MUL_VL ) ); dump();
st2h(z15.h, p7, ptr( x7, 4, MUL_VL ) ); dump();
st2h(z15.h, p7, ptr( x7, 8, MUL_VL ) ); dump();
st2h(z15.h, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2h(z15.h, p7, ptr( x7, 14, MUL_VL ) ); dump();
//SVE_store_multiple_structures_scalar_plus_immediate4:0
st3h(z15.h, p7, ptr( x7 ) ); dump();
st3h(z0.h, p7, ptr( x7 ) ); dump();
st3h(z1.h, p7, ptr( x7 ) ); dump();
st3h(z2.h, p7, ptr( x7 ) ); dump();
st3h(z4.h, p7, ptr( x7 ) ); dump();
st3h(z8.h, p7, ptr( x7 ) ); dump();
st3h(z16.h, p7, ptr( x7 ) ); dump();
st3h(z31.h, p7, ptr( x7 ) ); dump();
st3h(z15.h, p7, ptr( x7 ) ); dump();
st3h(z15.h, p0, ptr( x7 ) ); dump();
st3h(z15.h, p1, ptr( x7 ) ); dump();
st3h(z15.h, p2, ptr( x7 ) ); dump();
st3h(z15.h, p4, ptr( x7 ) ); dump();
st3h(z15.h, p7, ptr( x7 ) ); dump();
st3h(z15.h, p7, ptr( x7 ) ); dump();
st3h(z15.h, p7, ptr( x0 ) ); dump();
st3h(z15.h, p7, ptr( x1 ) ); dump();
st3h(z15.h, p7, ptr( x2 ) ); dump();
st3h(z15.h, p7, ptr( x4 ) ); dump();
st3h(z15.h, p7, ptr( x8 ) ); dump();
st3h(z15.h, p7, ptr( x16 ) ); dump();
st3h(z15.h, p7, ptr( x30 ) ); dump();
st3h(z15.h, p7, ptr( sp ) ); dump();
st3h(z15.h, p7, ptr( x7 ) ); dump();
//SVE_store_multiple_structures_scalar_plus_immediate4:1
st3h(z15.h, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3h(z0.h, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3h(z1.h, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3h(z2.h, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3h(z4.h, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3h(z8.h, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3h(z16.h, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3h(z31.h, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3h(z15.h, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3h(z15.h, p0, ptr( x7, 21, MUL_VL ) ); dump();
st3h(z15.h, p1, ptr( x7, 21, MUL_VL ) ); dump();
st3h(z15.h, p2, ptr( x7, 21, MUL_VL ) ); dump();
st3h(z15.h, p4, ptr( x7, 21, MUL_VL ) ); dump();
st3h(z15.h, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3h(z15.h, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3h(z15.h, p7, ptr( x0, 21, MUL_VL ) ); dump();
st3h(z15.h, p7, ptr( x1, 21, MUL_VL ) ); dump();
st3h(z15.h, p7, ptr( x2, 21, MUL_VL ) ); dump();
st3h(z15.h, p7, ptr( x4, 21, MUL_VL ) ); dump();
st3h(z15.h, p7, ptr( x8, 21, MUL_VL ) ); dump();
st3h(z15.h, p7, ptr( x16, 21, MUL_VL ) ); dump();
st3h(z15.h, p7, ptr( x30, 21, MUL_VL ) ); dump();
st3h(z15.h, p7, ptr( sp, 21, MUL_VL ) ); dump();
st3h(z15.h, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3h(z15.h, p7, ptr( x7, -24, MUL_VL ) ); dump();
st3h(z15.h, p7, ptr( x7, -12, MUL_VL ) ); dump();
st3h(z15.h, p7, ptr( x7, -6, MUL_VL ) ); dump();
st3h(z15.h, p7, ptr( x7, -3, MUL_VL ) ); dump();
st3h(z15.h, p7, ptr( x7, 0, MUL_VL ) ); dump();
st3h(z15.h, p7, ptr( x7, 3, MUL_VL ) ); dump();
st3h(z15.h, p7, ptr( x7, 6, MUL_VL ) ); dump();
st3h(z15.h, p7, ptr( x7, 12, MUL_VL ) ); dump();
st3h(z15.h, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3h(z15.h, p7, ptr( x7, 21, MUL_VL ) ); dump();
//SVE_store_multiple_structures_scalar_plus_immediate5:0
st4h(z15.h, p7, ptr( x7 ) ); dump();
st4h(z0.h, p7, ptr( x7 ) ); dump();
st4h(z1.h, p7, ptr( x7 ) ); dump();
st4h(z2.h, p7, ptr( x7 ) ); dump();
st4h(z4.h, p7, ptr( x7 ) ); dump();
st4h(z8.h, p7, ptr( x7 ) ); dump();
st4h(z16.h, p7, ptr( x7 ) ); dump();
st4h(z31.h, p7, ptr( x7 ) ); dump();
st4h(z15.h, p7, ptr( x7 ) ); dump();
st4h(z15.h, p0, ptr( x7 ) ); dump();
st4h(z15.h, p1, ptr( x7 ) ); dump();
st4h(z15.h, p2, ptr( x7 ) ); dump();
st4h(z15.h, p4, ptr( x7 ) ); dump();
st4h(z15.h, p7, ptr( x7 ) ); dump();
st4h(z15.h, p7, ptr( x7 ) ); dump();
st4h(z15.h, p7, ptr( x0 ) ); dump();
st4h(z15.h, p7, ptr( x1 ) ); dump();
st4h(z15.h, p7, ptr( x2 ) ); dump();
st4h(z15.h, p7, ptr( x4 ) ); dump();
st4h(z15.h, p7, ptr( x8 ) ); dump();
st4h(z15.h, p7, ptr( x16 ) ); dump();
st4h(z15.h, p7, ptr( x30 ) ); dump();
st4h(z15.h, p7, ptr( sp ) ); dump();
st4h(z15.h, p7, ptr( x7 ) ); dump();
//SVE_store_multiple_structures_scalar_plus_immediate5:1
st4h(z15.h, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4h(z0.h, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4h(z1.h, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4h(z2.h, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4h(z4.h, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4h(z8.h, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4h(z16.h, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4h(z31.h, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4h(z15.h, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4h(z15.h, p0, ptr( x7, 28, MUL_VL ) ); dump();
st4h(z15.h, p1, ptr( x7, 28, MUL_VL ) ); dump();
st4h(z15.h, p2, ptr( x7, 28, MUL_VL ) ); dump();
st4h(z15.h, p4, ptr( x7, 28, MUL_VL ) ); dump();
st4h(z15.h, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4h(z15.h, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4h(z15.h, p7, ptr( x0, 28, MUL_VL ) ); dump();
st4h(z15.h, p7, ptr( x1, 28, MUL_VL ) ); dump();
st4h(z15.h, p7, ptr( x2, 28, MUL_VL ) ); dump();
st4h(z15.h, p7, ptr( x4, 28, MUL_VL ) ); dump();
st4h(z15.h, p7, ptr( x8, 28, MUL_VL ) ); dump();
st4h(z15.h, p7, ptr( x16, 28, MUL_VL ) ); dump();
st4h(z15.h, p7, ptr( x30, 28, MUL_VL ) ); dump();
st4h(z15.h, p7, ptr( sp, 28, MUL_VL ) ); dump();
st4h(z15.h, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4h(z15.h, p7, ptr( x7, -32, MUL_VL ) ); dump();
st4h(z15.h, p7, ptr( x7, -16, MUL_VL ) ); dump();
st4h(z15.h, p7, ptr( x7, -8, MUL_VL ) ); dump();
st4h(z15.h, p7, ptr( x7, -4, MUL_VL ) ); dump();
st4h(z15.h, p7, ptr( x7, 0, MUL_VL ) ); dump();
st4h(z15.h, p7, ptr( x7, 4, MUL_VL ) ); dump();
st4h(z15.h, p7, ptr( x7, 8, MUL_VL ) ); dump();
st4h(z15.h, p7, ptr( x7, 16, MUL_VL ) ); dump();
st4h(z15.h, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4h(z15.h, p7, ptr( x7, 28, MUL_VL ) ); dump();
//SVE_store_multiple_structures_scalar_plus_immediate6:0
st2w(z15.s, p7, ptr( x7 ) ); dump();
st2w(z0.s, p7, ptr( x7 ) ); dump();
st2w(z1.s, p7, ptr( x7 ) ); dump();
st2w(z2.s, p7, ptr( x7 ) ); dump();
st2w(z4.s, p7, ptr( x7 ) ); dump();
st2w(z8.s, p7, ptr( x7 ) ); dump();
st2w(z16.s, p7, ptr( x7 ) ); dump();
st2w(z31.s, p7, ptr( x7 ) ); dump();
st2w(z15.s, p7, ptr( x7 ) ); dump();
st2w(z15.s, p0, ptr( x7 ) ); dump();
st2w(z15.s, p1, ptr( x7 ) ); dump();
st2w(z15.s, p2, ptr( x7 ) ); dump();
st2w(z15.s, p4, ptr( x7 ) ); dump();
st2w(z15.s, p7, ptr( x7 ) ); dump();
st2w(z15.s, p7, ptr( x7 ) ); dump();
st2w(z15.s, p7, ptr( x0 ) ); dump();
st2w(z15.s, p7, ptr( x1 ) ); dump();
st2w(z15.s, p7, ptr( x2 ) ); dump();
st2w(z15.s, p7, ptr( x4 ) ); dump();
st2w(z15.s, p7, ptr( x8 ) ); dump();
st2w(z15.s, p7, ptr( x16 ) ); dump();
st2w(z15.s, p7, ptr( x30 ) ); dump();
st2w(z15.s, p7, ptr( sp ) ); dump();
st2w(z15.s, p7, ptr( x7 ) ); dump();
//SVE_store_multiple_structures_scalar_plus_immediate6:1
st2w(z15.s, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2w(z0.s, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2w(z1.s, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2w(z2.s, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2w(z4.s, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2w(z8.s, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2w(z16.s, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2w(z31.s, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2w(z15.s, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2w(z15.s, p0, ptr( x7, 14, MUL_VL ) ); dump();
st2w(z15.s, p1, ptr( x7, 14, MUL_VL ) ); dump();
st2w(z15.s, p2, ptr( x7, 14, MUL_VL ) ); dump();
st2w(z15.s, p4, ptr( x7, 14, MUL_VL ) ); dump();
st2w(z15.s, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2w(z15.s, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2w(z15.s, p7, ptr( x0, 14, MUL_VL ) ); dump();
st2w(z15.s, p7, ptr( x1, 14, MUL_VL ) ); dump();
st2w(z15.s, p7, ptr( x2, 14, MUL_VL ) ); dump();
st2w(z15.s, p7, ptr( x4, 14, MUL_VL ) ); dump();
st2w(z15.s, p7, ptr( x8, 14, MUL_VL ) ); dump();
st2w(z15.s, p7, ptr( x16, 14, MUL_VL ) ); dump();
st2w(z15.s, p7, ptr( x30, 14, MUL_VL ) ); dump();
st2w(z15.s, p7, ptr( sp, 14, MUL_VL ) ); dump();
st2w(z15.s, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2w(z15.s, p7, ptr( x7, -16, MUL_VL ) ); dump();
st2w(z15.s, p7, ptr( x7, -8, MUL_VL ) ); dump();
st2w(z15.s, p7, ptr( x7, -4, MUL_VL ) ); dump();
st2w(z15.s, p7, ptr( x7, -2, MUL_VL ) ); dump();
st2w(z15.s, p7, ptr( x7, 0, MUL_VL ) ); dump();
st2w(z15.s, p7, ptr( x7, 2, MUL_VL ) ); dump();
st2w(z15.s, p7, ptr( x7, 4, MUL_VL ) ); dump();
st2w(z15.s, p7, ptr( x7, 8, MUL_VL ) ); dump();
st2w(z15.s, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2w(z15.s, p7, ptr( x7, 14, MUL_VL ) ); dump();
//SVE_store_multiple_structures_scalar_plus_immediate7:0
st3w(z15.s, p7, ptr( x7 ) ); dump();
st3w(z0.s, p7, ptr( x7 ) ); dump();
st3w(z1.s, p7, ptr( x7 ) ); dump();
st3w(z2.s, p7, ptr( x7 ) ); dump();
st3w(z4.s, p7, ptr( x7 ) ); dump();
st3w(z8.s, p7, ptr( x7 ) ); dump();
st3w(z16.s, p7, ptr( x7 ) ); dump();
st3w(z31.s, p7, ptr( x7 ) ); dump();
st3w(z15.s, p7, ptr( x7 ) ); dump();
st3w(z15.s, p0, ptr( x7 ) ); dump();
st3w(z15.s, p1, ptr( x7 ) ); dump();
st3w(z15.s, p2, ptr( x7 ) ); dump();
st3w(z15.s, p4, ptr( x7 ) ); dump();
st3w(z15.s, p7, ptr( x7 ) ); dump();
st3w(z15.s, p7, ptr( x7 ) ); dump();
st3w(z15.s, p7, ptr( x0 ) ); dump();
st3w(z15.s, p7, ptr( x1 ) ); dump();
st3w(z15.s, p7, ptr( x2 ) ); dump();
st3w(z15.s, p7, ptr( x4 ) ); dump();
st3w(z15.s, p7, ptr( x8 ) ); dump();
st3w(z15.s, p7, ptr( x16 ) ); dump();
st3w(z15.s, p7, ptr( x30 ) ); dump();
st3w(z15.s, p7, ptr( sp ) ); dump();
st3w(z15.s, p7, ptr( x7 ) ); dump();
//SVE_store_multiple_structures_scalar_plus_immediate7:1
st3w(z15.s, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3w(z0.s, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3w(z1.s, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3w(z2.s, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3w(z4.s, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3w(z8.s, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3w(z16.s, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3w(z31.s, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3w(z15.s, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3w(z15.s, p0, ptr( x7, 21, MUL_VL ) ); dump();
st3w(z15.s, p1, ptr( x7, 21, MUL_VL ) ); dump();
st3w(z15.s, p2, ptr( x7, 21, MUL_VL ) ); dump();
st3w(z15.s, p4, ptr( x7, 21, MUL_VL ) ); dump();
st3w(z15.s, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3w(z15.s, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3w(z15.s, p7, ptr( x0, 21, MUL_VL ) ); dump();
st3w(z15.s, p7, ptr( x1, 21, MUL_VL ) ); dump();
st3w(z15.s, p7, ptr( x2, 21, MUL_VL ) ); dump();
st3w(z15.s, p7, ptr( x4, 21, MUL_VL ) ); dump();
st3w(z15.s, p7, ptr( x8, 21, MUL_VL ) ); dump();
st3w(z15.s, p7, ptr( x16, 21, MUL_VL ) ); dump();
st3w(z15.s, p7, ptr( x30, 21, MUL_VL ) ); dump();
st3w(z15.s, p7, ptr( sp, 21, MUL_VL ) ); dump();
st3w(z15.s, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3w(z15.s, p7, ptr( x7, -24, MUL_VL ) ); dump();
st3w(z15.s, p7, ptr( x7, -12, MUL_VL ) ); dump();
st3w(z15.s, p7, ptr( x7, -6, MUL_VL ) ); dump();
st3w(z15.s, p7, ptr( x7, -3, MUL_VL ) ); dump();
st3w(z15.s, p7, ptr( x7, 0, MUL_VL ) ); dump();
st3w(z15.s, p7, ptr( x7, 3, MUL_VL ) ); dump();
st3w(z15.s, p7, ptr( x7, 6, MUL_VL ) ); dump();
st3w(z15.s, p7, ptr( x7, 12, MUL_VL ) ); dump();
st3w(z15.s, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3w(z15.s, p7, ptr( x7, 21, MUL_VL ) ); dump();
//SVE_store_multiple_structures_scalar_plus_immediate8:0
st4w(z15.s, p7, ptr( x7 ) ); dump();
st4w(z0.s, p7, ptr( x7 ) ); dump();
st4w(z1.s, p7, ptr( x7 ) ); dump();
st4w(z2.s, p7, ptr( x7 ) ); dump();
st4w(z4.s, p7, ptr( x7 ) ); dump();
st4w(z8.s, p7, ptr( x7 ) ); dump();
st4w(z16.s, p7, ptr( x7 ) ); dump();
st4w(z31.s, p7, ptr( x7 ) ); dump();
st4w(z15.s, p7, ptr( x7 ) ); dump();
st4w(z15.s, p0, ptr( x7 ) ); dump();
st4w(z15.s, p1, ptr( x7 ) ); dump();
st4w(z15.s, p2, ptr( x7 ) ); dump();
st4w(z15.s, p4, ptr( x7 ) ); dump();
st4w(z15.s, p7, ptr( x7 ) ); dump();
st4w(z15.s, p7, ptr( x7 ) ); dump();
st4w(z15.s, p7, ptr( x0 ) ); dump();
st4w(z15.s, p7, ptr( x1 ) ); dump();
st4w(z15.s, p7, ptr( x2 ) ); dump();
st4w(z15.s, p7, ptr( x4 ) ); dump();
st4w(z15.s, p7, ptr( x8 ) ); dump();
st4w(z15.s, p7, ptr( x16 ) ); dump();
st4w(z15.s, p7, ptr( x30 ) ); dump();
st4w(z15.s, p7, ptr( sp ) ); dump();
st4w(z15.s, p7, ptr( x7 ) ); dump();
//SVE_store_multiple_structures_scalar_plus_immediate8:1
st4w(z15.s, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4w(z0.s, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4w(z1.s, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4w(z2.s, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4w(z4.s, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4w(z8.s, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4w(z16.s, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4w(z31.s, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4w(z15.s, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4w(z15.s, p0, ptr( x7, 28, MUL_VL ) ); dump();
st4w(z15.s, p1, ptr( x7, 28, MUL_VL ) ); dump();
st4w(z15.s, p2, ptr( x7, 28, MUL_VL ) ); dump();
st4w(z15.s, p4, ptr( x7, 28, MUL_VL ) ); dump();
st4w(z15.s, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4w(z15.s, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4w(z15.s, p7, ptr( x0, 28, MUL_VL ) ); dump();
st4w(z15.s, p7, ptr( x1, 28, MUL_VL ) ); dump();
st4w(z15.s, p7, ptr( x2, 28, MUL_VL ) ); dump();
st4w(z15.s, p7, ptr( x4, 28, MUL_VL ) ); dump();
st4w(z15.s, p7, ptr( x8, 28, MUL_VL ) ); dump();
st4w(z15.s, p7, ptr( x16, 28, MUL_VL ) ); dump();
st4w(z15.s, p7, ptr( x30, 28, MUL_VL ) ); dump();
st4w(z15.s, p7, ptr( sp, 28, MUL_VL ) ); dump();
st4w(z15.s, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4w(z15.s, p7, ptr( x7, -32, MUL_VL ) ); dump();
st4w(z15.s, p7, ptr( x7, -16, MUL_VL ) ); dump();
st4w(z15.s, p7, ptr( x7, -8, MUL_VL ) ); dump();
st4w(z15.s, p7, ptr( x7, -4, MUL_VL ) ); dump();
st4w(z15.s, p7, ptr( x7, 0, MUL_VL ) ); dump();
st4w(z15.s, p7, ptr( x7, 4, MUL_VL ) ); dump();
st4w(z15.s, p7, ptr( x7, 8, MUL_VL ) ); dump();
st4w(z15.s, p7, ptr( x7, 16, MUL_VL ) ); dump();
st4w(z15.s, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4w(z15.s, p7, ptr( x7, 28, MUL_VL ) ); dump();
//SVE_store_multiple_structures_scalar_plus_immediate9:0
st2d(z15.d, p7, ptr( x7 ) ); dump();
st2d(z0.d, p7, ptr( x7 ) ); dump();
st2d(z1.d, p7, ptr( x7 ) ); dump();
st2d(z2.d, p7, ptr( x7 ) ); dump();
st2d(z4.d, p7, ptr( x7 ) ); dump();
st2d(z8.d, p7, ptr( x7 ) ); dump();
st2d(z16.d, p7, ptr( x7 ) ); dump();
st2d(z31.d, p7, ptr( x7 ) ); dump();
st2d(z15.d, p7, ptr( x7 ) ); dump();
st2d(z15.d, p0, ptr( x7 ) ); dump();
st2d(z15.d, p1, ptr( x7 ) ); dump();
st2d(z15.d, p2, ptr( x7 ) ); dump();
st2d(z15.d, p4, ptr( x7 ) ); dump();
st2d(z15.d, p7, ptr( x7 ) ); dump();
st2d(z15.d, p7, ptr( x7 ) ); dump();
st2d(z15.d, p7, ptr( x0 ) ); dump();
st2d(z15.d, p7, ptr( x1 ) ); dump();
st2d(z15.d, p7, ptr( x2 ) ); dump();
st2d(z15.d, p7, ptr( x4 ) ); dump();
st2d(z15.d, p7, ptr( x8 ) ); dump();
st2d(z15.d, p7, ptr( x16 ) ); dump();
st2d(z15.d, p7, ptr( x30 ) ); dump();
st2d(z15.d, p7, ptr( sp ) ); dump();
st2d(z15.d, p7, ptr( x7 ) ); dump();
//SVE_store_multiple_structures_scalar_plus_immediate9:1
st2d(z15.d, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2d(z0.d, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2d(z1.d, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2d(z2.d, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2d(z4.d, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2d(z8.d, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2d(z16.d, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2d(z31.d, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2d(z15.d, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2d(z15.d, p0, ptr( x7, 14, MUL_VL ) ); dump();
st2d(z15.d, p1, ptr( x7, 14, MUL_VL ) ); dump();
st2d(z15.d, p2, ptr( x7, 14, MUL_VL ) ); dump();
st2d(z15.d, p4, ptr( x7, 14, MUL_VL ) ); dump();
st2d(z15.d, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2d(z15.d, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2d(z15.d, p7, ptr( x0, 14, MUL_VL ) ); dump();
st2d(z15.d, p7, ptr( x1, 14, MUL_VL ) ); dump();
st2d(z15.d, p7, ptr( x2, 14, MUL_VL ) ); dump();
st2d(z15.d, p7, ptr( x4, 14, MUL_VL ) ); dump();
st2d(z15.d, p7, ptr( x8, 14, MUL_VL ) ); dump();
st2d(z15.d, p7, ptr( x16, 14, MUL_VL ) ); dump();
st2d(z15.d, p7, ptr( x30, 14, MUL_VL ) ); dump();
st2d(z15.d, p7, ptr( sp, 14, MUL_VL ) ); dump();
st2d(z15.d, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2d(z15.d, p7, ptr( x7, -16, MUL_VL ) ); dump();
st2d(z15.d, p7, ptr( x7, -8, MUL_VL ) ); dump();
st2d(z15.d, p7, ptr( x7, -4, MUL_VL ) ); dump();
st2d(z15.d, p7, ptr( x7, -2, MUL_VL ) ); dump();
st2d(z15.d, p7, ptr( x7, 0, MUL_VL ) ); dump();
st2d(z15.d, p7, ptr( x7, 2, MUL_VL ) ); dump();
st2d(z15.d, p7, ptr( x7, 4, MUL_VL ) ); dump();
st2d(z15.d, p7, ptr( x7, 8, MUL_VL ) ); dump();
st2d(z15.d, p7, ptr( x7, 14, MUL_VL ) ); dump();
st2d(z15.d, p7, ptr( x7, 14, MUL_VL ) ); dump();
//SVE_store_multiple_structures_scalar_plus_immediate10:0
st3d(z15.d, p7, ptr( x7 ) ); dump();
st3d(z0.d, p7, ptr( x7 ) ); dump();
st3d(z1.d, p7, ptr( x7 ) ); dump();
st3d(z2.d, p7, ptr( x7 ) ); dump();
st3d(z4.d, p7, ptr( x7 ) ); dump();
st3d(z8.d, p7, ptr( x7 ) ); dump();
st3d(z16.d, p7, ptr( x7 ) ); dump();
st3d(z31.d, p7, ptr( x7 ) ); dump();
st3d(z15.d, p7, ptr( x7 ) ); dump();
st3d(z15.d, p0, ptr( x7 ) ); dump();
st3d(z15.d, p1, ptr( x7 ) ); dump();
st3d(z15.d, p2, ptr( x7 ) ); dump();
st3d(z15.d, p4, ptr( x7 ) ); dump();
st3d(z15.d, p7, ptr( x7 ) ); dump();
st3d(z15.d, p7, ptr( x7 ) ); dump();
st3d(z15.d, p7, ptr( x0 ) ); dump();
st3d(z15.d, p7, ptr( x1 ) ); dump();
st3d(z15.d, p7, ptr( x2 ) ); dump();
st3d(z15.d, p7, ptr( x4 ) ); dump();
st3d(z15.d, p7, ptr( x8 ) ); dump();
st3d(z15.d, p7, ptr( x16 ) ); dump();
st3d(z15.d, p7, ptr( x30 ) ); dump();
st3d(z15.d, p7, ptr( sp ) ); dump();
st3d(z15.d, p7, ptr( x7 ) ); dump();
//SVE_store_multiple_structures_scalar_plus_immediate10:1
st3d(z15.d, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3d(z0.d, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3d(z1.d, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3d(z2.d, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3d(z4.d, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3d(z8.d, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3d(z16.d, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3d(z31.d, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3d(z15.d, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3d(z15.d, p0, ptr( x7, 21, MUL_VL ) ); dump();
st3d(z15.d, p1, ptr( x7, 21, MUL_VL ) ); dump();
st3d(z15.d, p2, ptr( x7, 21, MUL_VL ) ); dump();
st3d(z15.d, p4, ptr( x7, 21, MUL_VL ) ); dump();
st3d(z15.d, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3d(z15.d, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3d(z15.d, p7, ptr( x0, 21, MUL_VL ) ); dump();
st3d(z15.d, p7, ptr( x1, 21, MUL_VL ) ); dump();
st3d(z15.d, p7, ptr( x2, 21, MUL_VL ) ); dump();
st3d(z15.d, p7, ptr( x4, 21, MUL_VL ) ); dump();
st3d(z15.d, p7, ptr( x8, 21, MUL_VL ) ); dump();
st3d(z15.d, p7, ptr( x16, 21, MUL_VL ) ); dump();
st3d(z15.d, p7, ptr( x30, 21, MUL_VL ) ); dump();
st3d(z15.d, p7, ptr( sp, 21, MUL_VL ) ); dump();
st3d(z15.d, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3d(z15.d, p7, ptr( x7, -24, MUL_VL ) ); dump();
st3d(z15.d, p7, ptr( x7, -12, MUL_VL ) ); dump();
st3d(z15.d, p7, ptr( x7, -6, MUL_VL ) ); dump();
st3d(z15.d, p7, ptr( x7, -3, MUL_VL ) ); dump();
st3d(z15.d, p7, ptr( x7, 0, MUL_VL ) ); dump();
st3d(z15.d, p7, ptr( x7, 3, MUL_VL ) ); dump();
st3d(z15.d, p7, ptr( x7, 6, MUL_VL ) ); dump();
st3d(z15.d, p7, ptr( x7, 12, MUL_VL ) ); dump();
st3d(z15.d, p7, ptr( x7, 21, MUL_VL ) ); dump();
st3d(z15.d, p7, ptr( x7, 21, MUL_VL ) ); dump();
//SVE_store_multiple_structures_scalar_plus_immediate11:0
st4d(z15.d, p7, ptr( x7 ) ); dump();
st4d(z0.d, p7, ptr( x7 ) ); dump();
st4d(z1.d, p7, ptr( x7 ) ); dump();
st4d(z2.d, p7, ptr( x7 ) ); dump();
st4d(z4.d, p7, ptr( x7 ) ); dump();
st4d(z8.d, p7, ptr( x7 ) ); dump();
st4d(z16.d, p7, ptr( x7 ) ); dump();
st4d(z31.d, p7, ptr( x7 ) ); dump();
st4d(z15.d, p7, ptr( x7 ) ); dump();
st4d(z15.d, p0, ptr( x7 ) ); dump();
st4d(z15.d, p1, ptr( x7 ) ); dump();
st4d(z15.d, p2, ptr( x7 ) ); dump();
st4d(z15.d, p4, ptr( x7 ) ); dump();
st4d(z15.d, p7, ptr( x7 ) ); dump();
st4d(z15.d, p7, ptr( x7 ) ); dump();
st4d(z15.d, p7, ptr( x0 ) ); dump();
st4d(z15.d, p7, ptr( x1 ) ); dump();
st4d(z15.d, p7, ptr( x2 ) ); dump();
st4d(z15.d, p7, ptr( x4 ) ); dump();
st4d(z15.d, p7, ptr( x8 ) ); dump();
st4d(z15.d, p7, ptr( x16 ) ); dump();
st4d(z15.d, p7, ptr( x30 ) ); dump();
st4d(z15.d, p7, ptr( sp ) ); dump();
st4d(z15.d, p7, ptr( x7 ) ); dump();
//SVE_store_multiple_structures_scalar_plus_immediate11:1
st4d(z15.d, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4d(z0.d, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4d(z1.d, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4d(z2.d, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4d(z4.d, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4d(z8.d, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4d(z16.d, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4d(z31.d, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4d(z15.d, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4d(z15.d, p0, ptr( x7, 28, MUL_VL ) ); dump();
st4d(z15.d, p1, ptr( x7, 28, MUL_VL ) ); dump();
st4d(z15.d, p2, ptr( x7, 28, MUL_VL ) ); dump();
st4d(z15.d, p4, ptr( x7, 28, MUL_VL ) ); dump();
st4d(z15.d, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4d(z15.d, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4d(z15.d, p7, ptr( x0, 28, MUL_VL ) ); dump();
st4d(z15.d, p7, ptr( x1, 28, MUL_VL ) ); dump();
st4d(z15.d, p7, ptr( x2, 28, MUL_VL ) ); dump();
st4d(z15.d, p7, ptr( x4, 28, MUL_VL ) ); dump();
st4d(z15.d, p7, ptr( x8, 28, MUL_VL ) ); dump();
st4d(z15.d, p7, ptr( x16, 28, MUL_VL ) ); dump();
st4d(z15.d, p7, ptr( x30, 28, MUL_VL ) ); dump();
st4d(z15.d, p7, ptr( sp, 28, MUL_VL ) ); dump();
st4d(z15.d, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4d(z15.d, p7, ptr( x7, -32, MUL_VL ) ); dump();
st4d(z15.d, p7, ptr( x7, -16, MUL_VL ) ); dump();
st4d(z15.d, p7, ptr( x7, -8, MUL_VL ) ); dump();
st4d(z15.d, p7, ptr( x7, -4, MUL_VL ) ); dump();
st4d(z15.d, p7, ptr( x7, 0, MUL_VL ) ); dump();
st4d(z15.d, p7, ptr( x7, 4, MUL_VL ) ); dump();
st4d(z15.d, p7, ptr( x7, 8, MUL_VL ) ); dump();
st4d(z15.d, p7, ptr( x7, 16, MUL_VL ) ); dump();
st4d(z15.d, p7, ptr( x7, 28, MUL_VL ) ); dump();
st4d(z15.d, p7, ptr( x7, 28, MUL_VL ) ); dump();
    }
    void gen()
    {
        gen0();
    }
